---
name: Pony
slug: pony
text_format: markdown
generator: src:devdocs
generator_command: src:devdocs
version: null
copyright: |-
  © 2016-2020, The Pony Developers
  © 2014-2015, Causality Ltd.
  Licensed under the BSD 2-Clause License.
  https://stdlib.ponylang.io/
homepage: https://www.ponylang.io/

---
- name: 1. assert
  id: assert--index
  summary: Contains runtime assertions
  description: "# Assert package\n\nContains runtime assertions. If you are looking for assertion that only run when your code was compiled with the `debug` flag, check out `Assert`. For assertions that are always enabled, check out `Fact`.\n\n## Public Types\n\n- [primitive Assert](assert-assert)\n- [primitive Fact](assert-fact)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/assert--index](https://stdlib.ponylang.io/assert--index)"
- name: 1. backpressure
  id: backpressure--index
  summary: The Backpressure package allows Pony programmers to participate in Pony's runtime backpressure system
  description: "# Backpressure Package\n\nThe Backpressure package allows Pony programmers to participate in Pony's runtime backpressure system. The goal of the backpressure system is to prevent an actor's mailbox from growing at an unbounded rate.\n\nAt a high level, the runtime backpressure system works by adjusting the scheduling of actors. When an actor becomes overloaded, the Pony runtime will deprioritize scheduling the actors that are sending to it. This change in scheduling allows the overloaded actor to catch up.\n\nThe Pony runtime can detect overloading based on message queue size. However, the overloading of some types of actors is harder to detect. Let's take the case of actors like `TCPConnection`.\n\n`TCPConnection` manages a socket for sending data to and receiving data from another process. TCP connections can experience backpressure from outside our Pony program that prevents them from sending. There's no way for the Pony runtime to detect this, so intervention by the programmer is needed.\n\n`TCPConnection` is a single example. This Backpressure package exists to allow a programmer to indicate to the runtime that a given actor is experiencing pressure and sending messages to it should be adjusted accordingly.\n\nAny actor that needs to be able to tell the runtime to \"send me messages slower\" due to external conditions can do so via this package. Additionally, actors that maintain their own internal queues of any sort, say for buffering, are also prime candidates for using this package. If an actor's internal queue grows too large, it can call `Backpressure.apply` to let the runtime know it is under pressure.\n\n## Example program\n\n``` pony\n// Here we have a TCPConnectionNotify that upon construction\n// is given a BackpressureAuth token. This allows the notifier\n// to inform the Pony runtime when to apply and release backpressure\n// as the connection experiences it.\n// Note the calls to\n//\n// Backpressure.apply(_auth)\n// Backpressure.release(_auth)\n//\n// that apply and release backpressure as needed\n\nuse \"backpressure\"\nuse \"collections\"\nuse \"net\"\n\nclass SlowDown is TCPConnectionNotify\n  let _auth: BackpressureAuth\n  let _out: StdStream\n\n  new iso create(auth: BackpressureAuth, out: StdStream) =>\n    _auth = auth\n    _out = out\n\n  fun ref throttled(connection: TCPConnection ref) =>\n    _out.print(\"Experiencing backpressure!\")\n    Backpressure.apply(_auth)\n\n  fun ref unthrottled(connection: TCPConnection ref) =>\n    _out.print(\"Releasing backpressure!\")\n    Backpressure.release(_auth)\n\n  fun ref connect_failed(conn: TCPConnection ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      let auth = env.root as AmbientAuth\n      let socket = TCPConnection(auth, recover SlowDown(auth, env.out) end,\n        \"\", \"7669\")\n    end\n```\n\n## Caveat\n\nThe runtime backpressure is a powerful system. By intervening, programmers can create deadlocks. Any call to `Backpressure.apply` should be matched by a corresponding call to `Backpressure.release`. Authorization via the `ApplyReleaseBackpressureAuth` capability is required to apply or release backpressure. By requiring that the caller have a token to apply or release a backpressure, rouge 3rd party library code can't run wild and unknowingly interfere with the runtime.\n\n## Public Types\n\n- [type BackpressureAuth](backpressure-backpressureauth)\n- [primitive Backpressure](backpressure-backpressure)\n- [primitive ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure--index](https://stdlib.ponylang.io/backpressure--index)"
- name: 1. buffered
  id: buffered--index
  summary: The Buffered package provides two classes, Writer and Reader, for writing and reading messages using common encodings
  description: "# Buffered Package\n\nThe Buffered package provides two classes, `Writer` and `Reader`, for writing and reading messages using common encodings. These classes are useful when dealing with things like network data and binary file formats.\n\n## Example program\n\n``` pony\nuse \"buffered\"\n\nactor Main\n  new create(env: Env) =>\n    let reader = Reader\n    let writer = Writer\n\n    writer.u32_be(42)\n    writer.f32_be(3.14)\n\n    let b = recover iso Array[U8] end\n\n    for chunk in writer.done().values() do\n      b.append(chunk)\n    end\n\n    reader.append(consume b)\n\n    try\n      env.out.print(reader.u32_be()?.string()) // prints 42\n      env.out.print(reader.f32_be()?.string()) // prints 3.14\n    end\n```\n\n## Public Types\n\n- [class Writer](buffered-writer)\n- [class Reader](buffered-reader)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/buffered--index](https://stdlib.ponylang.io/buffered--index)"
- name: 1. builtin
  id: builtin--index
  summary: The public types that are defined in this package will always be in scope for every Pony source file
  description: "# Builtin package\n\nThe builtin package is home to the following standard library members:\n\n1.  Types the compiler needs to know exist, such as None.\n2.  Types with \"magic\" internal workings that must be supplied directly by the compiler, such as U32.\n3.  Any types needed by others in builtin.\n\nThe public types that are defined in this package will always be in scope for every Pony source file. For details on specific packages, see their individual entity entries.\n\n## Public Types\n\n- [primitive U8](builtin-u8)\n- [primitive U16](builtin-u16)\n- [primitive U32](builtin-u32)\n- [primitive U64](builtin-u64)\n- [primitive ULong](builtin-ulong)\n- [primitive USize](builtin-usize)\n- [primitive U128](builtin-u128)\n- [type Unsigned](builtin-unsigned)\n- [interface Stringable](builtin-stringable)\n- [class String](builtin-string)\n- [class StringBytes](builtin-stringbytes)\n- [class StringRunes](builtin-stringrunes)\n- [interface InputNotify](builtin-inputnotify)\n- [interface InputStream](builtin-inputstream)\n- [actor Stdin](builtin-stdin)\n- [type ByteSeq](builtin-byteseq)\n- [interface ByteSeqIter](builtin-byteseqiter)\n- [interface OutStream](builtin-outstream)\n- [actor StdStream](builtin-stdstream)\n- [interface SourceLoc](builtin-sourceloc)\n- [primitive I8](builtin-i8)\n- [primitive I16](builtin-i16)\n- [primitive I32](builtin-i32)\n- [primitive I64](builtin-i64)\n- [primitive ILong](builtin-ilong)\n- [primitive ISize](builtin-isize)\n- [primitive I128](builtin-i128)\n- [type Signed](builtin-signed)\n- [interface Seq](builtin-seq)\n- [struct RuntimeOptions](builtin-runtimeoptions)\n- [trait Real](builtin-real)\n- [trait Integer](builtin-integer)\n- [trait SignedInteger](builtin-signedinteger)\n- [trait UnsignedInteger](builtin-unsignedinteger)\n- [trait FloatingPoint](builtin-floatingpoint)\n- [type Number](builtin-number)\n- [type Int](builtin-int)\n- [interface ReadSeq](builtin-readseq)\n- [interface ReadElement](builtin-readelement)\n- [struct Pointer](builtin-pointer)\n- [primitive Platform](builtin-platform)\n- [struct NullablePointer](builtin-nullablepointer)\n- [primitive None](builtin-none)\n- [interface Iterator](builtin-iterator)\n- [primitive F32](builtin-f32)\n- [primitive F64](builtin-f64)\n- [type Float](builtin-float)\n- [class Env](builtin-env)\n- [primitive DoNotOptimise](builtin-donotoptimise)\n- [interface DisposableActor](builtin-disposableactor)\n- [primitive Less](builtin-less)\n- [primitive Equal](builtin-equal)\n- [primitive Greater](builtin-greater)\n- [type Compare](builtin-compare)\n- [interface HasEq](builtin-haseq)\n- [interface Equatable](builtin-equatable)\n- [interface Comparable](builtin-comparable)\n- [primitive Bool](builtin-bool)\n- [type AsioEventID](builtin-asioeventid)\n- [interface AsioEventNotify](builtin-asioeventnotify)\n- [primitive AsioEvent](builtin-asioevent)\n- [class Array](builtin-array)\n- [class ArrayKeys](builtin-arraykeys)\n- [class ArrayValues](builtin-arrayvalues)\n- [class ArrayPairs](builtin-arraypairs)\n- [interface Any](builtin-any)\n- [primitive AmbientAuth](builtin-ambientauth)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin--index](https://stdlib.ponylang.io/builtin--index)"
- name: 1. bureaucracy
  id: bureaucracy--index
  summary: It happens to almost every program
  description: "# Bureaucracy package\n\nIt happens to almost every program. It starts small, tiny if you will, like a village where every actor knows every other actor and shutdown is easy. One day you realize your program is no longer a cute seaside hamlet, its a bustling metropolis and you are doing way too much work to keep track of everything. What do you do? Call for a little bureaucracy.\n\nThe bureaucracy contains objects designed to ease your bookkeeping burdens. Need to shutdown a number of actors together? Check out `Custodian`. Need to keep track of a lot of stuff and be able to look it up by name? Check out `Registrar`.\n\nPut bureaucracy to use today and before long, your sprawling metropolis of a code base will be manageable again in no time.\n\n## Public Types\n\n- [actor Registrar](bureaucracy-registrar)\n- [actor Custodian](bureaucracy-custodian)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/bureaucracy--index](https://stdlib.ponylang.io/bureaucracy--index)"
- name: 1. capsicum
  id: capsicum--index
  summary: No package doc string provided for capsicum
  description: "# Package\n\nNo package doc string provided for capsicum.\n\n## Public Types\n\n- [type CapRights](capsicum-caprights)\n- [class CapRights0](capsicum-caprights0)\n- [primitive Cap](capsicum-cap)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum--index](https://stdlib.ponylang.io/capsicum--index)"
- name: 1. cli
  id: cli--index
  summary: The CLI package provides enhanced Posix+GNU command line parsing with the feature of commands that can be specified in a hierarchy
  description: "# CLI Package\n\nThe CLI package provides enhanced Posix+GNU command line parsing with the feature of commands that can be specified in a hierarchy.\n\nSee [RFC-0038](https://github.com/ponylang/rfcs/blob/master/text/0038-cli-format.md) for more background.\n\nThe general EBNF of a command line is:\n\n``` pony\n  command_line ::= root_command (option | command)* (option | arg)*\n  command ::= alphanum_word\n  alphanum_word ::= alphachar(alphachar | numchar | '_' | '-')*\n  option ::= longoption | shortoptionset\n  longoption ::= '--'alphanum_word['='arg | ' 'arg]\n  shortoptionset := '-'alphachar[alphachar]...['='arg | ' 'arg]\n  arg := boolarg | intarg | floatarg | stringarg\n  boolarg := 'true' | 'false'\n  intarg> := ['-'] numchar...\n  floatarg ::= ['-'] numchar... ['.' numchar...]\n  stringarg ::= anychar\n```\n\nSome examples:\n\n``` pony\n  usage: ls [<options>] [<args> ...]\n  usage: make [<options>] <command> [<options>] [<args> ...]\n  usage: chat [<options>] <command>  <subcommand> [<options>] [<args> ...]\n```\n\n## Usage\n\nThe types in the cli package are broken down into three groups:\n\n### Specs\n\nPony programs use constructors to create the spec objects to specify their command line syntax. Many aspects of the spec are checked for correctness at compile time, and the result represents everything the parser needs to know when parsing a command line or forming syntax help messages.\n\n#### Option and Arg value types\n\nOptions and Args parse values from the command line as one of four Pony types: `Bool`, `String`, `I64` and `F64`. Values of each of these types can then be retrieved using the corresponding accessor funtions.\n\nIn addition, there is a string_seq type that accepts string values from the command line and collects them into a sequence which can then be retrieved as a `ReadSeq[String]` using the `string_seq()` accessor function.\n\nSome specific details:\n\n- bool Options: have a default value of 'true' if no value is given. That is, `-f` is equivalent to `-f=true`.\n\n- string_seq Options: the option prefix has to be used each time, like: `--file=f1 --file=f2 --file=f3` with the results being collected into a single sequence.\n\n- string_seq Args: there is no way to indicate termination, so a string_seq Arg should be the last arg for a command, and will consume all remaining command line arguments.\n\n### Parser\n\nPrograms then use the CommandSpec they've built to instantiate a parser to parse any given command line. This is often env.args(), but could also be commands from files or other input sources. The result of a parse is either a parsed command, a command help, or a syntax error object.\n\n### Commands\n\nPrograms then match the object returned by the parser to determine what kind it is. Errors and help requests typically print messages and exit. For commands, the fullname can be matched and the effective values for the command's options and arguments can be retrieved.\n\n# Example program\n\nThis program echos its command line arguments with the option of uppercasing them.\n\n``` pony\nuse \"cli\"\n\nactor Main\n  new create(env: Env) =>\n    let cs =\n      try\n        CommandSpec.leaf(\"echo\", \"A sample echo program\", [\n          OptionSpec.bool(\"upper\", \"Uppercase words\"\n            where short' = 'U', default' = false)\n        ], [\n          ArgSpec.string_seq(\"words\", \"The words to echo\")\n        ])? .> add_help()?\n      else\n        env.exitcode(-1)  // some kind of coding error\n        return\n      end\n\n    let cmd =\n      match CommandParser(cs).parse(env.args, env.vars)\n      | let c: Command => c\n      | let ch: CommandHelp =>\n          ch.print_help(env.out)\n          env.exitcode(0)\n          return\n      | let se: SyntaxError =>\n          env.out.print(se.string())\n          env.exitcode(1)\n          return\n      end\n\n    let upper = cmd.option(\"upper\").bool()\n    let words = cmd.arg(\"words\").string_seq()\n    for word in words.values() do\n      env.out.write(if upper then word.upper() else word end + \" \")\n    end\n    env.out.print(\"\")\n```\n\n## Public Types\n\n- [primitive EnvVars](cli-envvars)\n- [class CommandSpec](cli-commandspec)\n- [class OptionSpec](cli-optionspec)\n- [class ArgSpec](cli-argspec)\n- [class CommandParser](cli-commandparser)\n- [primitive Help](cli-help)\n- [class CommandHelp](cli-commandhelp)\n- [class Command](cli-command)\n- [class Option](cli-option)\n- [class Arg](cli-arg)\n- [class SyntaxError](cli-syntaxerror)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli--index](https://stdlib.ponylang.io/cli--index)"
- name: 1. collections
  id: collections--index
  summary: No package doc string provided for collections
  description: "# Package\n\nNo package doc string provided for collections.\n\n## Public Types\n\n- [primitive Sort](collections-sort)\n- [type Set](collections-set)\n- [type SetIs](collections-setis)\n- [class HashSet](collections-hashset)\n- [class SetValues](collections-setvalues)\n- [class RingBuffer](collections-ringbuffer)\n- [class Reverse](collections-reverse)\n- [class Range](collections-range)\n- [type Map](collections-map)\n- [type MapIs](collections-mapis)\n- [class HashMap](collections-hashmap)\n- [class MapKeys](collections-mapkeys)\n- [class MapValues](collections-mapvalues)\n- [class MapPairs](collections-mappairs)\n- [class ListNode](collections-listnode)\n- [class List](collections-list)\n- [class ListNodes](collections-listnodes)\n- [class ListValues](collections-listvalues)\n- [type MinHeap](collections-minheap)\n- [type MaxHeap](collections-maxheap)\n- [class BinaryHeap](collections-binaryheap)\n- [type BinaryHeapPriority](collections-binaryheappriority)\n- [primitive MinHeapPriority](collections-minheappriority)\n- [primitive MaxHeapPriority](collections-maxheappriority)\n- [interface Hashable](collections-hashable)\n- [interface Hashable64](collections-hashable64)\n- [interface HashFunction](collections-hashfunction)\n- [interface HashFunction64](collections-hashfunction64)\n- [primitive HashEq](collections-hasheq)\n- [primitive HashEq64](collections-hasheq64)\n- [primitive HashIs](collections-hashis)\n- [primitive HashByteSeq](collections-hashbyteseq)\n- [interface Flag](collections-flag)\n- [class Flags](collections-flags)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections--index](https://stdlib.ponylang.io/collections--index)"
- name: 1. collections/persistent
  id: collections-persistent--index
  summary: List - A persistent list with functional transformations
  description: "# Persistent Collections Package\n\nList - A persistent list with functional transformations.\n\nMap - A persistent map based on the Compressed Hash Array Mapped Prefix-tree from 'Optimizing Hash-Array Mapped Tries for Fast and Lean Immutable JVM Collections' by Michael J. Steindorfer and Jurgen J. Vinju.\n\nSet - A persistent set implemented as a persistent map of an alias of a type to itself.\n\nVec - A persistent vector based on the Hash Array Mapped Trie from 'Ideal Hash Trees' by Phil Bagwell.\n\n## Public Types\n\n- [class Vec](collections-persistent-vec)\n- [class VecKeys](collections-persistent-veckeys)\n- [class VecValues](collections-persistent-vecvalues)\n- [class VecPairs](collections-persistent-vecpairs)\n- [type Set](collections-persistent-set)\n- [type SetIs](collections-persistent-setis)\n- [class HashSet](collections-persistent-hashset)\n- [type Map](collections-persistent-map)\n- [type MapIs](collections-persistent-mapis)\n- [class HashMap](collections-persistent-hashmap)\n- [class MapKeys](collections-persistent-mapkeys)\n- [class MapValues](collections-persistent-mapvalues)\n- [class MapPairs](collections-persistent-mappairs)\n- [type List](collections-persistent-list)\n- [primitive Lists](collections-persistent-lists)\n- [primitive Nil](collections-persistent-nil)\n- [class Cons](collections-persistent-cons)\n- [primitive CollisionHash](collections-persistent-collisionhash)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent--index](https://stdlib.ponylang.io/collections-persistent--index)"
- name: 1. debug
  id: debug--index
  summary: Provides facilities to create output to either STDOUT or STDERR that will only appear when the platform is debug configured
  description: "# Debug package\n\nProvides facilities to create output to either `STDOUT` or `STDERR` that will only appear when the platform is debug configured. To create a binary with debug configured, pass the `-d` flag to `ponyc` when compiling e.g.:\n\n`ponyc -d`\n\n## Example code\n\n``` pony\nactor Main\n  new create(env: Env) =>\n    Debug.out(\"This will only be seen when configured for debug info\")\n    env.out.print(\"This will always be seen\")\n```\n\n## Public Types\n\n- [primitive DebugOut](debug-debugout)\n- [primitive DebugErr](debug-debugerr)\n- [type DebugStream](debug-debugstream)\n- [primitive Debug](debug-debug)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug--index](https://stdlib.ponylang.io/debug--index)"
- name: 1. encode/base64
  id: encode-base64--index
  summary: The Base64 package contains support for doing Base64 binary-to-text encodings
  description: "# Base64 package\n\nThe Base64 package contains support for doing Base64 binary-to-text encodings. We currently have support 3 encodings: PEM, MIME and URL.\n\nTo learn more about Base64, we suggest you check out the [wikipedia entry](https://en.wikipedia.org/wiki/Base64).\n\n## Example code\n\n``` pony\nuse \"encode/base64\"\n\nactor Main\n  new create(env: Env) =>\n    env.out.print(Base64.encode(\"foobar\"))\n    try\n      env.out.print(Base64.decode[String iso](\"Zm9vYmFy\")?)\n    end\n```\n\n## Public Types\n\n- [primitive Base64](encode-base64-base64)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/encode-base64--index](https://stdlib.ponylang.io/encode-base64--index)"
- name: 1. files
  id: files--index
  summary: The Files package provides classes for working with files and directories
  description: "# Files package\n\nThe Files package provides classes for working with files and directories.\n\nFiles are identified by `FilePath` objects, which represent both the path to the file and the capabilites for accessing the file at that path. `FilePath` objects can be used with the `CreateFile` and `OpenFile` primitives and the `File` class to get a reference to a file that can be used to write to and/or read from the file. It can also be used with the `Directory` object to get a reference to a directory object that can be used for directory operations.\n\nThe `FileLines` class allows a file to be accessed one line at a time.\n\nThe `FileStream` actor provides the ability to asynchronously write to a file.\n\nThe `Path` primitive can be used to do path-related operations on strings and characters.\n\n# Example program\n\nThis program opens the files that are given as command line arguments and prints their contents.\n\n``` pony\nuse \"files\"\n\nactor Main\n  new create(env: Env) =>\n    try\n      for file_name in env.args.slice(1).values() do\n        let path = FilePath(env.root as AmbientAuth, file_name)?\n        match OpenFile(path)\n        | let file: File =>\n          while file.errno() is FileOK do\n            env.out.write(file.read(1024))\n          end\n        else\n          env.err.print(\"Error opening file '\" + file_name + \"'\")\n        end\n      end\n    end\n```\n\n## Public Types\n\n- [primitive Path](files-path)\n- [actor FileStream](files-filestream)\n- [interface WalkHandler](files-walkhandler)\n- [class FilePath](files-filepath)\n- [class FileMode](files-filemode)\n- [class FileLines](files-filelines)\n- [class FileInfo](files-fileinfo)\n- [primitive FileCreate](files-filecreate)\n- [primitive FileChmod](files-filechmod)\n- [primitive FileChown](files-filechown)\n- [primitive FileLink](files-filelink)\n- [primitive FileLookup](files-filelookup)\n- [primitive FileMkdir](files-filemkdir)\n- [primitive FileRead](files-fileread)\n- [primitive FileRemove](files-fileremove)\n- [primitive FileRename](files-filerename)\n- [primitive FileSeek](files-fileseek)\n- [primitive FileStat](files-filestat)\n- [primitive FileSync](files-filesync)\n- [primitive FileTime](files-filetime)\n- [primitive FileTruncate](files-filetruncate)\n- [primitive FileWrite](files-filewrite)\n- [primitive FileExec](files-fileexec)\n- [type FileCaps](files-filecaps)\n- [primitive FileOK](files-fileok)\n- [primitive FileError](files-fileerror)\n- [primitive FileEOF](files-fileeof)\n- [primitive FileBadFileNumber](files-filebadfilenumber)\n- [primitive FileExists](files-fileexists)\n- [primitive FilePermissionDenied](files-filepermissiondenied)\n- [type FileErrNo](files-fileerrno)\n- [primitive CreateFile](files-createfile)\n- [primitive OpenFile](files-openfile)\n- [class File](files-file)\n- [class Directory](files-directory)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files--index](https://stdlib.ponylang.io/files--index)"
- name: 1. format
  id: format--index
  summary: The Format package provides support for formatting strings
  description: "# Format package\n\nThe Format package provides support for formatting strings. It can be used to set things like width, padding and alignment, as well as controlling the way numbers are displayed (decimal, octal, hexadecimal).\n\n# Example program\n\n``` pony\nuse \"format\"\n\nactor Main\n  fun disp(desc: String, v: I32, fmt: FormatInt = FormatDefault): String =>\n    Format(desc where width = 10)\n      + \":\"\n      + Format.int[I32](v where width = 10, align = AlignRight, fmt = fmt)\n\n  new create(env: Env) =>\n    try\n      (let x, let y) = (env.args(1)?.i32()?, env.args(2)?.i32()?)\n      env.out.print(disp(\"x\", x))\n      env.out.print(disp(\"y\", y))\n      env.out.print(disp(\"hex(x)\", x, FormatHex))\n      env.out.print(disp(\"hex(y)\", y, FormatHex))\n      env.out.print(disp(\"x * y\", x * y))\n    else\n      let exe = try env.args(0)? else \"fmt_example\" end\n      env.err.print(\"Usage: \" + exe + \" NUMBER1 NUMBER2\")\n    end\n```\n\n## Public Types\n\n- [trait PrefixSpec](format-prefixspec)\n- [primitive PrefixDefault](format-prefixdefault)\n- [primitive PrefixSpace](format-prefixspace)\n- [primitive PrefixSign](format-prefixsign)\n- [type PrefixNumber](format-prefixnumber)\n- [trait FormatSpec](format-formatspec)\n- [primitive FormatDefault](format-formatdefault)\n- [primitive FormatUTF32](format-formatutf32)\n- [primitive FormatBinary](format-formatbinary)\n- [primitive FormatBinaryBare](format-formatbinarybare)\n- [primitive FormatOctal](format-formatoctal)\n- [primitive FormatOctalBare](format-formatoctalbare)\n- [primitive FormatHex](format-formathex)\n- [primitive FormatHexBare](format-formathexbare)\n- [primitive FormatHexSmall](format-formathexsmall)\n- [primitive FormatHexSmallBare](format-formathexsmallbare)\n- [type FormatInt](format-formatint)\n- [primitive FormatExp](format-formatexp)\n- [primitive FormatExpLarge](format-formatexplarge)\n- [primitive FormatFix](format-formatfix)\n- [primitive FormatFixLarge](format-formatfixlarge)\n- [primitive FormatGeneral](format-formatgeneral)\n- [primitive FormatGeneralLarge](format-formatgenerallarge)\n- [type FormatFloat](format-formatfloat)\n- [primitive Format](format-format)\n- [primitive AlignLeft](format-alignleft)\n- [primitive AlignRight](format-alignright)\n- [primitive AlignCenter](format-aligncenter)\n- [type Align](format-align)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format--index](https://stdlib.ponylang.io/format--index)"
- name: 1. ini
  id: ini--index
  summary: The Ini package provides support for parsing INI file formatted text
  description: "# Ini package\n\nThe Ini package provides support for parsing [INI file](https://en.wikipedia.org/wiki/INI_file) formatted text.\n\n- Currently *does not* support multi-line entries.\n- Any keys not in a section will be placed in the section \"\"\n\n# Example code\n\n``` pony\n// Parses the file 'example.ini' in the current working directory\n// Output all the content\nuse \"ini\"\nuse \"files\"\n\nactor Main\n  new create(env:Env) =>\n    try\n      let ini_file = File(FilePath(env.root as AmbientAuth, \"example.ini\")?)\n      let sections = IniParse(ini_file.lines())?\n      for section in sections.keys() do\n        env.out.print(\"Section name is: \" + section)\n        for key in sections(section)?.keys() do\n          env.out.print(key + \" = \" + sections(section)?(key)?)\n        end\n      end\n    end\n```\n\n## Public Types\n\n- [type IniMap](ini-inimap)\n- [primitive IniParse](ini-iniparse)\n- [primitive IniIncompleteSection](ini-iniincompletesection)\n- [primitive IniNoDelimiter](ini-ininodelimiter)\n- [type IniError](ini-inierror)\n- [interface IniNotify](ini-ininotify)\n- [primitive Ini](ini-ini)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini--index](https://stdlib.ponylang.io/ini--index)"
- name: 1. itertools
  id: itertools--index
  summary: The itertools package provides the Iter class for doing useful things with iterators
  description: "# Itertools Package\n\nThe itertools package provides the `Iter` class for doing useful things with iterators. It is Inspired by Python's itertools library, Rust's Iterator, and Elixir's Enum and Stream.\n\n## Iter\n\nThe Iter class wraps iterators so that additional methods may be applied to it. Some methods, such as fold and collect, run through the underlying iterator in order to return a result. Others, such as map and filter, are lazy. This means that they return another Iter so that the resulting values are computed one by one as needed. Lazy methods return Iter types.\n\nFor example, the following code creates an Iter from the values of an array containing the numbers 1 through 5, increments each number by one, filters out any odd numbers, and prints the rest.\n\n``` pony\nlet xs = Iter[I64]([1; 2; 3; 4; 5].values())\n  .map[I64]({(x) => x + 1 })\n  .filter({(x) => (x % 2) == 0 })\n  .map[None]({(x) => env.out.print(x.string()) })\n```\n\nThis will result in an iterator that prints the numbers 2, 4, and 6. However, due to the lazy nature of the map and filter, no iteration has actually occurred and nothing will be printed. One solution to this would be to loop over the resulting Iter as so:\n\n``` pony\nfor x in xs do\n  None\nend\n```\n\nThis will trigger the iteration and print out the values 2, 4, and 6. This is where the `run` method comes in handy by doing the iteration without the need for a loop. So the final code would be as follows:\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5].values())\n  .map[I64]({(x) => x + 1 })\n  .filter({(x) => (x % 2) == 0 })\n  .map[None]({(x) => env.out.print(x.string()) })\n  .run()\n```\n\nOutput:\n\n``` pony\n2\n4\n6\n```\n\n## Public Types\n\n- [class Iter](itertools-iter)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/itertools--index](https://stdlib.ponylang.io/itertools--index)"
- name: 1. json
  id: json--index
  summary: The json package provides the JsonDoc class both as a container for a JSON document and as means of parsing from and writing to String
  description: "# JSON Package\n\nThe `json` package provides the [JsonDoc](json-jsondoc) class both as a container for a JSON document and as means of parsing from and writing to [String](builtin-string).\n\n## JSON Representation\n\nJSON is represented in Pony as the following types:\n\n- object - [JsonObject](json-jsonobject)\n- array - [JsonArray](json-jsonarray)\n- string - [String](builtin-string)\n- integer - [I64](builtin-i64)\n- float - [F64](builtin-f64)\n- boolean - [Bool](builtin-bool)\n- null - [None](builtin-none)\n\nThe collection types JsonObject and JsonArray can contain any other JSON structures arbitrarily nested.\n\n[JsonType](json-jsontype) is used to subsume all possible JSON types. It can also be used to describe everything that can be serialized using this package.\n\n## Parsing JSON\n\nFor getting JSON from a String into proper Pony data structures, [JsonDoc.parse](json-jsondoc#parse) needs to be used. This will populate the public field `JsonDoc.data`, which is [None](builtin-none), if [parse](json-jsondoc#parse) has not been called yet.\n\nEvery call to [parse](json-jsondoc#parse) overwrites the `data` field, so one JsonDoc instance can be used to parse multiple JSON Strings one by one.\n\n``` pony\nlet doc = JsonDoc\n// parsing\ndoc.parse(\"{\\\"key\\\":\\\"value\\\", \\\"property\\\": true, \\\"array\\\":[1, 2.5, false]}\")?\n\n// extracting values from a JSON structure\nlet json: JsonObject  = doc.data as JsonObject\nlet key: String       = json.data(\"key\")? as String\nlet property: Bool    = json.data(\"property\")? as Bool\nlet array: JsonArray  = json.data(\"array\")? as JsonArray\nlet first: I64        = array.data(0)? as I64\nlet second: F64       = array.data(1)? as F64\nlet last: Bool        = array.data(2)? as Bool\n```\n\n### Sending JSON\n\n[JsonDoc](json-jsondoc) has the `ref` reference capability, which means it is not sendable by default. If you need to send it to another actor you need to recover it to a sendable reference capability (either `val` or `iso`). For the sake of simplicity it is recommended to do the parsing already in the recover block:\n\n``` pony\n// sending an iso doc\nlet json_string = \"{\\\"array\\\":[1, true, null]}\"\nlet sendable_doc: JsonDoc iso = recover iso JsonDoc.>parse(json_string)? end\nsome_actor.send(consume sendable_doc)\n\n// sending a val doc\nlet val_doc: JsonDoc val = recover val JsonDoc.>parse(json_string)? end\nsome_actor.send_val(val_doc)\n```\n\nWhen sending an `iso` JsonDoc it is important to recover it to a `ref` on the receiving side in order to be able to properly access the json structures in `data`.\n\n## Writing JSON\n\nJSON is written using the [JsonDoc.string](json-jsondoc#string) method. This will serialize the contents of the `data` field to [String](builtin-string).\n\n``` pony\n// building up the JSON data structure\nlet doc = JsonDoc\nlet obj = JsonObject\nobj.data(\"key\") = \"value\"\nobj.data(\"property\") = true\nobj.data(\"array\") = JsonArray.from_array([ as JsonType: I64(1); F64(2.5); false])\ndoc.data = obj\n\n// writing to String\nenv.out.print(\n  doc.string(where indent=\"  \", pretty_print=true)\n)\n```\n\n## Public Types\n\n- [type JsonType](json-jsontype)\n- [class JsonArray](json-jsonarray)\n- [class JsonObject](json-jsonobject)\n- [class JsonDoc](json-jsondoc)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json--index](https://stdlib.ponylang.io/json--index)"
- name: 1. logger
  id: logger--index
  summary: Provides basic logging facilities
  description: "# Logger package\n\nProvides basic logging facilities. For most use cases, the `StringLogger` class will be used. On construction, it takes 2 parameters and a 3rd optional parameter:\n\n- LogLevel below which no output will be logged\n- OutStream to log to\n- Optional LogFormatter\n\nIf you need to log arbitrary objects, take a look at `ObjectLogger[A]` which can log arbitrary objects so long as you provide it a lambda to covert from A to String.\n\n## API Philosophy\n\nThe API for using Logger is an attempt to abide by the Pony philosophy of first, be correct and secondly, aim for performance. One of the ways that logging can slow your system down is by having to evaluate expressions to be logged whether they will be logged or not (based on the level of logging). For example:\n\n`logger.log(Warn, name + \": \" + reason)`\n\nwill construct a new String regardless of whether we will end up logging the message or not.\n\nThe Logger API uses boolean short circuiting to avoid this.\n\n`logger(Warn) and logger.log(name + \": \" + reason)`\n\nwill not evaluate the expression to be logged unless the log level Warn is at or above the overall log level for our logging. This is as close as we can get to zero cost for items that aren't going to end up being logged.\n\n## Example programs\n\n### String Logger\n\nThe following program will output 'my warn message' and 'my error message' to STDOUT in the standard default log format.\n\n``` pony\nuse \"logger\"\n\nactor Main\n  new create(env: Env) =>\n    let logger = StringLogger(\n      Warn,\n      env.out)\n\n    logger(Fine) and logger.log(\"my fine message\")\n    logger(Info) and logger.log(\"my info message\")\n    logger(Warn) and logger.log(\"my warn message\")\n    logger(Error) and logger.log(\"my error message\")\n```\n\n### Logger\\[A\\]\n\nThe following program will output '42' to STDOUT in the standard default log format.\n\n``` pony\nuse \"logger\"\n\nactor Main\n  new create(env: Env) =>\n    let logger = Logger[U64](Fine, env.out, {(a) => a.string() })\n\n    logger(Error) and logger.log(U64(42))\n```\n\n## Custom formatting your logs\n\nThe Logger package provides an interface for formatting logs. If you wish to override the standard formatting, you can create an object that implements:\n\n``` pony\ninterface val LogFormatter\n  fun apply(\n    msg: String,\n    file_name: String,\n    file_linenum: String,\n    file_linepos: String): String\n```\n\nThis can either be a class or because the interface only has a single apply method, can also be a lambda.\n\n## Public Types\n\n- [type LogLevel](logger-loglevel)\n- [primitive Fine](logger-fine)\n- [primitive Info](logger-info)\n- [primitive Warn](logger-warn)\n- [primitive Error](logger-error)\n- [class Logger](logger-logger)\n- [primitive StringLogger](logger-stringlogger)\n- [interface LogFormatter](logger-logformatter)\n- [primitive DefaultLogFormatter](logger-defaultlogformatter)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger--index](https://stdlib.ponylang.io/logger--index)"
- name: 1. math
  id: math--index
  summary: Given the name Math for this package, you'd expect it have a broad and grand scope
  description: "# Math package\n\nGiven the name `Math` for this package, you'd expect it have a broad and grand scope. Surprise! Not currently. However, we do have the most useful of all programming language math constructs: fibonacci!\n\nPeople like to make fun of fibonacci but let's face it, no fibonacci, no benchmarks. We hear from some of our engineer friends that math is very important to programming, we call upon that particular class of engineer friends to help us fill out this package with more maths than you can shake a stick at. Btw, in case you are wondering, yes we can shake a stick at a lot of maths.\n\n## Public Types\n\n- [class Fibonacci](math-fibonacci)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/math--index](https://stdlib.ponylang.io/math--index)"
- name: 1. net
  id: net--index
  summary: The Net package provides support for creating UDP and TCP clients and servers, reading and writing network data, and establishing UDP and TCP connections
  description: "# Net package\n\nThe Net package provides support for creating UDP and TCP clients and servers, reading and writing network data, and establishing UDP and TCP connections.\n\n## Public Types\n\n- [type UDPSocketAuth](net-udpsocketauth)\n- [actor UDPSocket](net-udpsocket)\n- [interface UDPNotify](net-udpnotify)\n- [type TCPListenerAuth](net-tcplistenerauth)\n- [actor TCPListener](net-tcplistener)\n- [interface TCPListenNotify](net-tcplistennotify)\n- [interface TCPConnectionNotify](net-tcpconnectionnotify)\n- [type TCPConnectionAuth](net-tcpconnectionauth)\n- [actor TCPConnection](net-tcpconnection)\n- [interface Proxy](net-proxy)\n- [class NoProxy](net-noproxy)\n- [primitive OSSockOpt](net-ossockopt)\n- [class NetAddress](net-netaddress)\n- [type DNSLookupAuth](net-dnslookupauth)\n- [primitive DNS](net-dns)\n- [primitive NetAuth](net-netauth)\n- [primitive DNSAuth](net-dnsauth)\n- [primitive UDPAuth](net-udpauth)\n- [primitive TCPAuth](net-tcpauth)\n- [primitive TCPListenAuth](net-tcplistenauth)\n- [primitive TCPConnectAuth](net-tcpconnectauth)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net--index](https://stdlib.ponylang.io/net--index)"
- name: 1. options
  id: options--index
  summary: The Options package provides support for parsing command line arguments
  description: "# Options package\n\nThe Options package provides support for parsing command line arguments.\n\n## Deprectation warning\n\nThis package is deprecated and will be removed in a future release. Use the [cli](cli--index) package instead.\n\n## Example program\n\n``` pony\nuse \"options\"\n\nactor Main\n  let _env: Env\n  // Some values we can set via command line options\n  var _a_string: String = \"default\"\n  var _a_number: USize = 0\n  var _a_unumber: USize = 0\n  var _a_float: Float = F64(0.0)\n\n  new create(env: Env) =>\n    _env = env\n    try\n      arguments()?\n    end\n\n    _env.out.print(\"The String is \" + _a_string)\n    _env.out.print(\"The Number is \" + _a_number.string())\n    _env.out.print(\"The UNumber is \" + _a_unumber.string())\n    _env.out.print(\"The Float is \" + _a_float.string())\n\n  fun ref arguments() ? =>\n    var options = Options(_env.args)\n\n    options\n      .add(\"string\", \"t\", StringArgument)\n      .add(\"number\", \"i\", I64Argument)\n      .add(\"unumber\", \"u\", U64Argument)\n      .add(\"float\", \"c\", F64Argument)\n\n    for option in options do\n      match option\n      | (\"string\", let arg: String) => _a_string = arg\n      | (\"number\", let arg: I64) => _a_number = arg.usize()\n      | (\"unumber\", let arg: U64) => _a_unumber = arg.usize()\n      | (\"float\", let arg: F64) => _a_float = arg\n      | let err: ParseError => err.report(_env.out) ; usage() ; error\n      end\n    end\n\n  fun ref usage() =>\n    // this exists inside a doc-string to create the docs you are reading\n    // in real code, we would use a single string literal for this but\n    // docstrings are themselves string literals and you can't put a\n    // string literal in a string literal. That would lead to total\n    // protonic reversal. In your own code, use a string literal instead\n    // of string concatenation for this.\n    _env.out.print(\n      \"program [OPTIONS]\\n\" +\n      \"  --string      N   a string argument. Defaults to 'default'.\\n\" +\n      \"  --number      N   a number argument. Defaults to 0.\\n\" +\n      \"  --unumber     N   a unsigned number argument. Defaults to 0.\\n\" +\n      \"  --float       N   a floating point argument. Defaults to 0.0.\\n\"\n      )\n```\n\n## Public Types\n\n- [primitive StringArgument](options-stringargument)\n- [primitive I64Argument](options-i64argument)\n- [primitive U64Argument](options-u64argument)\n- [primitive F64Argument](options-f64argument)\n- [primitive Required](options-required)\n- [primitive Optional](options-optional)\n- [primitive UnrecognisedOption](options-unrecognisedoption)\n- [primitive AmbiguousMatch](options-ambiguousmatch)\n- [primitive MissingArgument](options-missingargument)\n- [primitive InvalidArgument](options-invalidargument)\n- [type ArgumentType](options-argumenttype)\n- [type ErrorReason](options-errorreason)\n- [type ParsedOption](options-parsedoption)\n- [interface ParseError](options-parseerror)\n- [class Options](options-options)\n- [primitive EnvVars](options-envvars)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options--index](https://stdlib.ponylang.io/options--index)"
- name: 1. ponybench
  id: ponybench--index
  summary: PonyBench provides a microbenchmarking framework
  description: "# Package\n\nPonyBench provides a microbenchmarking framework. It is designed to measure the runtime of synchronous and asynchronous operations.\n\n## Example Program\n\nThe following is a complete program with multiple trivial benchmarks followed by their output.\n\n``` pony\nuse \"time\"\n\nactor Main is BenchmarkList\n  new create(env: Env) =>\n    PonyBench(env, this)\n\n  fun tag benchmarks(bench: PonyBench) =>\n    bench(_Nothing)\n    bench(_Fib(5))\n    bench(_Fib(10))\n    bench(_Fib(20))\n    bench(_Timer(10_000))\n\nclass iso _Nothing is MicroBenchmark\n  // Benchmark absolutely nothing.\n  fun name(): String => \"Nothing\"\n\n  fun apply() =>\n    // prevent compiler from optimizing out this operation\n    DoNotOptimise[None](None)\n    DoNotOptimise.observe()\n\nclass iso _Fib is MicroBenchmark\n  // Benchmark non-tail-recursive fibonacci\n  let _n: U64\n\n  new iso create(n: U64) =>\n    _n = n\n\n  fun name(): String =>\n    \"_Fib(\" + _n.string() + \")\"\n\n  fun apply() =>\n    DoNotOptimise[U64](_fib(_n))\n    DoNotOptimise.observe()\n\n  fun _fib(n: U64): U64 =>\n    if n < 2 then 1\n    else _fib(n - 1) + _fib(n - 2)\n    end\n\nclass iso _Timer is AsyncMicroBenchmark\n  // Asynchronous benchmark of timer.\n  let _ts: Timers = Timers\n  let _ns: U64\n\n  new iso create(ns: U64) =>\n    _ns = ns\n\n  fun name(): String =>\n    \"_Timer (\" + _ns.string() + \" ns)\"\n\n  fun apply(c: AsyncBenchContinue) =>\n    _ts(Timer(\n      object iso is TimerNotify\n        fun apply(timer: Timer, count: U64 = 0): Bool =>\n          // signal completion of async benchmark iteration when timer fires\n          c.complete()\n          false\n      end,\n      _ns))\n```\n\nBy default, the results are printed to stdout like so:\n\n``` pony\nBenchmark results will have their mean and median adjusted for overhead.\nYou may disable this with --noadjust.\n\nBenchmark                                   mean            median   deviation  iterations\nNothing                                     1 ns              1 ns      ±0.87%     3000000\n_Fib(5)                                    12 ns             12 ns      ±1.02%     2000000\n_Fib(10)                                  185 ns            184 ns      ±1.03%     1000000\n_Fib(20)                                23943 ns          23898 ns      ±1.11%       10000\n_Timer (10000ns)                        10360 ns          10238 ns      ±3.25%       10000\n```\n\nThe `--noadjust` option outputs results of the overhead measured prior to each benchmark run followed by the unadjusted benchmark result. An example of the output of this program with `--noadjust` is as follows:\n\n``` pony\nBenchmark                                   mean            median   deviation  iterations\nBenchmark Overhead                        604 ns            603 ns      ±0.58%      300000\nNothing                                   553 ns            553 ns      ±0.30%      300000\nBenchmark Overhead                        555 ns            555 ns      ±0.51%      300000\n_Fib(5)                                   574 ns            574 ns      ±0.43%      300000\nBenchmark Overhead                        554 ns            556 ns      ±0.48%      300000\n_Fib(10)                                  822 ns            821 ns      ±0.39%      200000\nBenchmark Overhead                        554 ns            553 ns      ±0.65%      300000\n_Fib(20)                                30470 ns          30304 ns      ±1.55%        5000\nBenchmark Overhead                        552 ns            552 ns      ±0.39%      300000\n_Timer (10000 ns)                       10780 ns          10800 ns      ±3.60%       10000\n```\n\nIt is recommended that a PonyBench program is compiled with the `--runtimebc` option, if possible, and run with the `--ponynoyield` option.\n\n## Public Types\n\n- [actor PonyBench](ponybench-ponybench)\n- [type Benchmark](ponybench-benchmark)\n- [trait MicroBenchmark](ponybench-microbenchmark)\n- [trait AsyncMicroBenchmark](ponybench-asyncmicrobenchmark)\n- [interface BenchmarkList](ponybench-benchmarklist)\n- [class BenchConfig](ponybench-benchconfig)\n- [class OverheadBenchmark](ponybench-overheadbenchmark)\n- [class AsyncOverheadBenchmark](ponybench-asyncoverheadbenchmark)\n- [class AsyncBenchContinue](ponybench-asyncbenchcontinue)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench--index](https://stdlib.ponylang.io/ponybench--index)"
- name: 1. ponytest
  id: ponytest--index
  summary: The PonyTest package provides a unit testing framework
  description: "# PonyTest package\n\nThe PonyTest package provides a unit testing framework. It is designed to be as simple as possible to use, both for the unit test writer and the user running the tests.\n\nTo help simplify test writing and distribution this package depends on as few other packages as possible. Currently the required packages are:\n\n- builtin\n- time\n- collections\n\nEach unit test is a class, with a single test function. By default all tests run concurrently.\n\nEach test run is provided with a helper object. This provides logging and assertion functions. By default log messages are only shown for tests that fail.\n\nWhen any assertion function fails the test is counted as a fail. However, tests can also indicate failure by raising an error in the test function.\n\n## Example program\n\nTo use PonyTest simply write a class for each test and a TestList type that tells the PonyTest object about the tests. Typically the TestList will be Main for the package.\n\nThe following is a complete program with 2 trivial tests.\n\n``` pony\nuse \"ponytest\"\n\nactor Main is TestList\n  new create(env: Env) =>\n    PonyTest(env, this)\n\n  new make() =>\n    None\n\n  fun tag tests(test: PonyTest) =>\n    test(_TestAdd)\n    test(_TestSub)\n\nclass iso _TestAdd is UnitTest\n  fun name():String => \"addition\"\n\n  fun apply(h: TestHelper) =>\n    h.assert_eq[U32](4, 2 + 2)\n\nclass iso _TestSub is UnitTest\n  fun name():String => \"subtraction\"\n\n  fun apply(h: TestHelper) =>\n    h.assert_eq[U32](2, 4 - 2)\n```\n\nThe make() constructor is not needed for this example. However, it allows for easy aggregation of tests (see below) so it is recommended that all test Mains provide it.\n\nMain.create() is called only for program invocations on the current package. Main.make() is called during aggregation. If so desired extra code can be added to either of these constructors to perform additional tasks.\n\n## Test names\n\nTests are identified by names, which are used when printing test results and on the command line to select which tests to run. These names are independent of the names of the test classes in the Pony source code.\n\nArbitrary strings can be used for these names, but for large projects it is strongly recommended to use a hierarchical naming scheme to make it easier to select groups of tests.\n\nYou can skip any tests whose names start with a given string by using the `--exclude=[prefix]` command line option.\n\nYou can run only tests whose names start with a given string by using the `--only=[prefix]` command line option.\n\n## Aggregation\n\nOften it is desirable to run a collection of unit tests from multiple different source files. For example, if several packages within a bundle each have their own unit tests it may be useful to run all tests for the bundle together.\n\nThis can be achieved by writing an aggregate test list class, which calls the list function for each package. The following is an example that aggregates the tests from packages `foo` and `bar`.\n\n``` pony\nuse \"ponytest\"\nuse foo = \"foo\"\nuse bar = \"bar\"\n\nactor Main is TestList\n  new create(env: Env) =>\n    PonyTest(env, this)\n\n  new make() =>\n    None\n\n  fun tag tests(test: PonyTest) =>\n    foo.Main.make().tests(test)\n    bar.Main.make().tests(test)\n```\n\nAggregate test classes may themselves be aggregated. Every test list class may contain any combination of its own tests and aggregated lists.\n\n## Long tests\n\nSimple tests run within a single function. When that function exits, either returning or raising an error, the test is complete. This is not viable for tests that need to use actors.\n\nLong tests allow for delayed completion. Any test can call long_test() on its TestHelper to indicate that it needs to keep running. When the test is finally complete it calls complete() on its TestHelper.\n\nThe complete() function takes a Bool parameter to specify whether the test was a success. If any asserts fail then the test will be considered a failure regardless of the value of this parameter. However, complete() must still be called.\n\nSince failing tests may hang, a timeout must be specified for each long test. When the test function exits a timer is started with the specified timeout. If this timer fires before complete() is called the test is marked as a failure and the timeout is reported.\n\nOn a timeout the timed_out() function is called on the unit test object. This should perform whatever test specific tidy up is required to allow the program to exit. There is no need to call complete() if a timeout occurs, although it is not an error to do so.\n\nNote that the timeout is only relevant when a test hangs and would otherwise prevent the test program from completing. Setting a very long timeout on tests that should not be able to hang is perfectly acceptable and will not make the test take any longer if successful.\n\nTimeouts should not be used as the standard method of detecting if a test has failed.\n\n## Exclusion groups\n\nBy default all tests are run concurrently. This may be a problem for some tests, eg if they manipulate an external file or use a system resource. To fix this issue any number of tests may be put into an exclusion group.\n\nNo tests that are in the same exclusion group will be run concurrently.\n\nExclusion groups are identified by name, arbitrary strings may be used. Multiple exclusion groups may be used and tests in different groups may run concurrently. Tests that do not specify an exclusion group may be run concurrently with any other tests.\n\nThe command line option \"--sequential\" prevents any tests from running concurrently, regardless of exclusion groups. This is intended for debugging rather than standard use.\n\n## Labels\n\nTest can have label. Labels are used to filter which tests are run, by setting command line argument `--label=[some custom label]`. It can be used to separate unit tests from integration tests.\n\nBy default label is empty. You can set it up by overriding `label(): String` method in unit test.\n\n``` pony\nuse \"ponytest\"\n\nclass iso _I8AddTest is UnitTest\n  fun name(): String => \"_I8AddTest\"\n  fun label(): String => \"simple\"\n  fun apply(h: TestHelper) =>\n    h.assert_eq[I8](1, 1)\n```\n\n## Setting up and tearing down a test environment\n\n### Set Up\n\nAny kind of fixture or environment necessary for executing a [UnitTest](ponytest-unittest) can be set up either in the tests constructor or in a function called [set_up()](ponytest-unittest#set_up).\n\n[set_up()](ponytest-unittest#set_up) is called before the test is executed. It is partial, if it errors, the test is not executed but reported as failing during set up. The test's [TestHelper](ponytest-testhelper) is handed to [set_up()](ponytest-unittest#set_up) in order to log messages or access the tests [Env](builtin-env) via [TestHelper.env](ponytest-testhelper#let-env-env-val).\n\n### Tear Down\n\nEach unit test object may define a [tear_down()](ponytest-unittest#tear_down) function. This is called after the test has finished to allow tearing down of any complex environment that had to be set up for the test.\n\nThe [tear_down()](ponytest-unittest#tear_down) function is called for each test regardless of whether it passed or failed. If a test times out [tear_down()](ponytest-unittest#tear_down) will be called after timed_out() returns.\n\nWhen a test is in an exclusion group, the [tear_down()](ponytest-unittest#tear_down) call is considered part of the tests run. The next test in the exclusion group will not start until after [tear_down()](ponytest-unittest#tear_down) returns on the current test.\n\nThe test's [TestHelper](ponytest-testhelper) is handed to [tear_down()](ponytest-unittest#tear_down) and it is permitted to log messages and call assert functions during tear down.\n\n### Example\n\nThe following example creates a temporary directory in the [set_up()](ponytest-unittest#set_up) function and removes it in the [tear_down()](ponytest-unittest#tear_down) function, thus simplifying the test function itself:\n\n``` pony\nuse \"ponytest\"\nuse \"files\"\n\nclass iso TempDirTest\n  var tmp_dir: (FilePath | None) = None\n\n  fun name(): String => \"temp-dir\"\n\n  fun ref set_up(h: TestHelper)? =>\n    tmp_dir = FilePath.mkdtemp(h.env.root as AmbientAuth, \"temp-dir\")?\n\n  fun ref tear_down(h: TestHelper) =>\n    try\n      (tmp_dir as FilePath).remove()\n    end\n\n  fun apply(h: TestHelper)? =>\n    let dir = tmp_dir as FilePath\n    // do something inside the temporary directory\n```\n\n## Public Types\n\n- [trait UnitTest](ponytest-unittest)\n- [trait TestList](ponytest-testlist)\n- [interface ITest](ponytest-itest)\n- [class TestHelper](ponytest-testhelper)\n- [actor PonyTest](ponytest-ponytest)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest--index](https://stdlib.ponylang.io/ponytest--index)"
- name: 1. process
  id: process--index
  summary: The Process package provides support for handling Unix style processes
  description: "# Process package\n\nThe Process package provides support for handling Unix style processes. For each external process that you want to handle, you need to create a `ProcessMonitor` and a corresponding `ProcessNotify` object. Each ProcessMonitor runs as it own actor and upon receiving data will call its corresponding `ProcessNotify`'s method.\n\n## Example program\n\nThe following program will spawn an external program and write to it's STDIN. Output received on STDOUT of the child process is forwarded to the ProcessNotify client and printed.\n\n``` pony\nuse \"process\"\nuse \"files\"\n\nactor Main\n  new create(env: Env) =>\n    // create a notifier\n    let client = ProcessClient(env)\n    let notifier: ProcessNotify iso = consume client\n    // define the binary to run\n    try\n      let path = FilePath(env.root as AmbientAuth, \"/bin/cat\")?\n      // define the arguments; first arg is always the binary name\n      let args: Array[String] val = [\"cat\"]\n      // define the environment variable for the execution\n      let vars: Array[String] val = [\"HOME=/\"; \"PATH=/bin\"]\n      // create a ProcessMonitor and spawn the child process\n      let auth = env.root as AmbientAuth\n      let pm: ProcessMonitor = ProcessMonitor(auth, auth, consume notifier,\n      path, args, vars)\n      // write to STDIN of the child process\n      pm.write(\"one, two, three\")\n      pm.done_writing() // closing stdin allows cat to terminate\n    else\n      env.out.print(\"Could not create FilePath!\")\n    end\n\n// define a client that implements the ProcessNotify interface\nclass ProcessClient is ProcessNotify\n  let _env: Env\n\n  new iso create(env: Env) =>\n    _env = env\n\n  fun ref stdout(process: ProcessMonitor ref, data: Array[U8] iso) =>\n    let out = String.from_array(consume data)\n    _env.out.print(\"STDOUT: \" + out)\n\n  fun ref stderr(process: ProcessMonitor ref, data: Array[U8] iso) =>\n    let err = String.from_array(consume data)\n    _env.out.print(\"STDERR: \" + err)\n\n  fun ref failed(process: ProcessMonitor ref, err: ProcessError) =>\n    _env.out.print(err.string())\n\n  fun ref dispose(process: ProcessMonitor ref, child_exit_status: ProcessExitStatus) =>\n    let code: I32 = consume child_exit_code\n    match child_exit_status\n    | let exited: Exited =>\n      _env.out.print(\"Child exit code: \" + exited.exit_code().string())\n    | let signaled: Signaled =>\n      _env.out.print(\"Child terminated by signal: \" + signaled.signal().string())\n    end\n```\n\n## Process portability\n\nThe ProcessMonitor supports spawning processes on Linux, FreeBSD, OSX and Windows.\n\n## Shutting down ProcessMonitor and external process\n\nWhen a process is spawned using ProcessMonitor, and it is not necessary to communicate to it any further using `stdin` and `stdout` or `stderr`, calling [done_writing()](process-processmonitor#done_writing) will close stdin to the child process. Processes expecting input will be notified of an `EOF` on their `stdin` and can terminate.\n\nIf a running program needs to be canceled and the [ProcessMonitor](process-processmonitor) should be shut down, calling [dispose](process-processmonitor#dispose) will terminate the child process and clean up all resources.\n\nOnce the child process is detected to be closed, the process exit status is retrieved and [ProcessNotify.dispose](process-processnotify#dispose) is called.\n\nThe process exit status can be either an instance of [Exited](process-exited) containing the process exit code in case the program exited on its own, or (only on posix systems like linux, osx or bsd) an instance of [Signaled](process-signaled) containing the signal number that terminated the process.\n\n## Public Types\n\n- [interface ProcessNotify](process-processnotify)\n- [type ProcessMonitorAuth](process-processmonitorauth)\n- [actor ProcessMonitor](process-processmonitor)\n- [class ProcessError](process-processerror)\n- [type ProcessErrorType](process-processerrortype)\n- [primitive ExecveError](process-execveerror)\n- [primitive PipeError](process-pipeerror)\n- [primitive ForkError](process-forkerror)\n- [primitive WaitpidError](process-waitpiderror)\n- [primitive WriteError](process-writeerror)\n- [primitive KillError](process-killerror)\n- [primitive CapError](process-caperror)\n- [primitive ChdirError](process-chdirerror)\n- [primitive UnknownError](process-unknownerror)\n- [primitive StartProcessAuth](process-startprocessauth)\n- [class Exited](process-exited)\n- [class Signaled](process-signaled)\n- [type ProcessExitStatus](process-processexitstatus)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process--index](https://stdlib.ponylang.io/process--index)"
- name: 1. promises
  id: promises--index
  summary: A Promise represents a value that will be available at a later time
  description: "# Promises Package\n\nA `Promise` represents a value that will be available at a later time. `Promise`s can either be fulfilled with a value or rejected. Any number of function handlers can be added to the `Promise`, to be called when the `Promise` is fulfilled or rejected. These handlers themselves are also wrapped in `Promise`s so that they can be chained together in order for the fulfilled value of one `Promise` to be used to compute a value which will be used to fulfill the next `Promise` in the chain, or so that if the `Promise` is rejected then the subsequent reject functions will also be called. The input and output types of a fulfill handler do not have to be the same, so a chain of fulfill handlers can transform the original value into something new.\n\nFulfill and reject handlers can either be specified as classes that implment the `Fulfill` and `Reject` interfaces, or as functions with the same signatures as the `apply` methods in `Fulfill` and `Reject`.\n\nIn the following code, the fulfillment of the `Promise` causes the execution of several fulfillment functions. The output is:\n\n``` pony\nfulfilled + foo\nfulfilled + bar\nfulfilled + baz\n```\n\n``` pony\nuse \"promises\"\n\nclass PrintFulfill is Fulfill[String, String]\n  let _env: Env\n  let _msg: String\n  new create(env: Env, msg: String) =>\n    _env = env\n    _msg = msg\n  fun apply(s: String): String =>\n    _env.out.print(\" + \".join([s; _msg].values()))\n    s\n\nactor Main\n  new create(env: Env) =>\n     let promise = Promise[String]\n     promise.next[String](recover PrintFulfill(env, \"foo\") end)\n     promise.next[String](recover PrintFulfill(env, \"bar\") end)\n     promise.next[String](recover PrintFulfill(env, \"baz\") end)\n     promise(\"fulfilled\")\n```\n\nIn the following code, the fulfill functions are chained together so that the fulfilled value of the first one is used to generate a value which fulfills the second one, which in turn is used to compute a value which fulfills the third one, which in turn is used to compute a value which fulfills the fourth one. The output is the average length of the words passed on the command line or `0` if there are no command line arguments.\n\n``` pony\nuse \"promises\"\n\nprimitive Computation\n  fun tag string_to_strings(s: String): Array[String] val =>\n    recover s.split() end\n  fun tag strings_to_sizes(sa: Array[String] val): Array[USize] val =>\n    recover\n      let len = Array[USize]\n      for s in sa.values() do\n        len.push(s.size())\n      end\n      len\n    end\n  fun tag sizes_to_avg(sza: Array[USize] val): USize =>\n    var acc = USize(0)\n    for sz in sza.values() do\n      acc = acc + sz\n    end\n    acc / sza.size()\n  fun tag output(env: Env, sz: USize): None =>\n    env.out.print(sz.string())\n\nactor Main\n  new create(env: Env) =>\n     let promise = Promise[String]\n     promise.next[Array[String] val](recover Computation~string_to_strings() end)\n            .next[Array[USize] val](recover Computation~strings_to_sizes() end)\n            .next[USize](recover Computation~sizes_to_avg() end)\n            .next[None](recover Computation~output(env) end)\n     promise(\" \".join(env.args.slice(1).values()))\n```\n\n## Public Types\n\n- [actor Promise](promises-promise)\n- [primitive Promises](promises-promises)\n- [interface Fulfill](promises-fulfill)\n- [interface Reject](promises-reject)\n- [class FulfillIdentity](promises-fulfillidentity)\n- [class RejectAlways](promises-rejectalways)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises--index](https://stdlib.ponylang.io/promises--index)"
- name: 1. random
  id: random--index
  summary: The Random package provides support generating random numbers
  description: "# Random package\n\nThe Random package provides support generating random numbers. The package provides random number generators you can use in your code, a dice roller and a trait for implementing your own random number generator.\n\nIf your application does not require a specific generator, use Rand.\n\nSeed values can contain up to 128 bits of randomness in the form of two U64s. A common non-cryptographically secure way to seed a generator is with `Time.now`.\n\n``` pony\nlet rand = Rand\nlet n = rand.next()\n```\n\n## Public Types\n\n- [class XorShift128Plus](random-xorshift128plus)\n- [class XorOshiro128Plus](random-xoroshiro128plus)\n- [class XorOshiro128StarStar](random-xoroshiro128starstar)\n- [class SplitMix64](random-splitmix64)\n- [type Rand](random-rand)\n- [trait Random](random-random)\n- [class MT](random-mt)\n- [class Dice](random-dice)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random--index](https://stdlib.ponylang.io/random--index)"
- name: 1. serialise
  id: serialise--index
  summary: This package provides support for serialising and deserialising arbitrary data structures
  description: "# Serialise package\n\nThis package provides support for serialising and deserialising arbitrary data structures.\n\nThe API is designed to require capability tokens, as otherwise serialising would leak the bit patterns of all private information in a type (since the resulting Array\\[U8\\] could be examined.\n\nDeserialisation is fundamentally unsafe currently: there isn't yet a verification pass to check that the resulting object graph maintains a well-formed heap or that individual objects maintain any expected local invariants. However, if only \"trusted\" data (i.e. data produced by Pony serialisation from the same binary) is deserialised, it will always maintain a well-formed heap and all object invariants.\n\nNote that serialised data is not usable between different Pony binaries. This is due to the use of type identifiers rather than a heavy-weight self-describing serialisation schema. This also means it isn't safe to deserialise something serialised by the same program compiled for a different platform.\n\nThe Serialise.signature method is provided for the purposes of comparing communicating Pony binaries to determine if they are the same. Confirming this before deserialising data can help mitigate the risk of accidental serialisation across different Pony binaries, but does not on its own address the security issues of accepting data from untrusted sources.\n\n## Public Types\n\n- [primitive Serialise](serialise-serialise)\n- [primitive SerialiseAuth](serialise-serialiseauth)\n- [primitive DeserialiseAuth](serialise-deserialiseauth)\n- [primitive OutputSerialisedAuth](serialise-outputserialisedauth)\n- [primitive InputSerialisedAuth](serialise-inputserialisedauth)\n- [class Serialised](serialise-serialised)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise--index](https://stdlib.ponylang.io/serialise--index)"
- name: 1. signals
  id: signals--index
  summary: The Signals package provides support for handling Unix style signals
  description: "# Signals package\n\nThe Signals package provides support for handling Unix style signals. For each signal that you want to handle, you need to create a `SignalHandler` and a corresponding `SignalNotify` object. Each SignalHandler runs as it own actor and upon receiving the signal will call its corresponding `SignalNotify`'s apply method.\n\n## Example program\n\nThe following program will listen for the TERM signal and output a message to standard out if it is received.\n\n``` pony\nuse \"signals\"\n\nactor Main\n  new create(env: Env) =>\n    // Create a TERM handler\n    let signal = SignalHandler(TermHandler(env), Sig.term())\n    // Raise TERM signal\n    signal.raise()\n\nclass TermHandler is SignalNotify\n  let _env: Env\n\n  new iso create(env: Env) =>\n    _env = env\n\n  fun ref apply(count: U32): Bool =>\n    _env.out.print(\"TERM signal received\")\n    true\n```\n\n## Signal portability\n\nThe `Sig` primitive provides support for portable signal handling across Linux, FreeBSD and OSX. Signals are not supported on Windows and attempting to use them will cause a compilation error.\n\n## Shutting down handlers\n\nUnlike a `TCPConnection` and other forms of input receiving, creating a `SignalHandler` will not keep your program running. As such, you are not required to call `dispose` on your signal handlers in order to shutdown your program.\n\n## Public Types\n\n- [interface SignalNotify](signals-signalnotify)\n- [primitive SignalRaise](signals-signalraise)\n- [actor SignalHandler](signals-signalhandler)\n- [primitive Sig](signals-sig)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals--index](https://stdlib.ponylang.io/signals--index)"
- name: 1. strings
  id: strings--index
  summary: No package doc string provided for strings
  description: "# Package\n\nNo package doc string provided for strings.\n\n## Public Types\n\n- [primitive CommonPrefix](strings-commonprefix)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/strings--index](https://stdlib.ponylang.io/strings--index)"
- name: 1. term
  id: term--index
  summary: No package doc string provided for term
  description: "# Package\n\nNo package doc string provided for term.\n\n## Public Types\n\n- [interface ReadlineNotify](term-readlinenotify)\n- [class Readline](term-readline)\n- [actor ANSITerm](term-ansiterm)\n- [interface ANSINotify](term-ansinotify)\n- [primitive ANSI](term-ansi)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term--index](https://stdlib.ponylang.io/term--index)"
- name: 1. time
  id: time--index
  summary: The Time Package provides classes and methods for timing operations, dealing with dates and times, and scheduling tasks
  description: "# Time Package\n\nThe Time Package provides classes and methods for timing operations, dealing with dates and times, and scheduling tasks.\n\n## Public Types\n\n- [actor Timers](time-timers)\n- [interface TimerNotify](time-timernotify)\n- [class Timer](time-timer)\n- [primitive Time](time-time)\n- [class PosixDate](time-posixdate)\n- [primitive Nanos](time-nanos)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time--index](https://stdlib.ponylang.io/time--index)"
- name: Align
  id: format-align
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Align\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L5)\n\n``` pony\ntype Align is\n  (AlignLeft val | AlignRight val | AlignCenter val)\n```\n\n#### Type Alias For\n\n- ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-Align](https://stdlib.ponylang.io/format-Align)"
- name: AlignCenter
  id: format-aligncenter
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AlignCenter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L3)\n\n``` pony\nprimitive val AlignCenter\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L3)\n\n``` pony\nnew val create()\n: AlignCenter val^\n```\n\n#### Returns\n\n- [AlignCenter](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L5)\n\n``` pony\nfun box eq(\n  that: AlignCenter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignCenter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L5)\n\n``` pony\nfun box ne(\n  that: AlignCenter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignCenter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignCenter](https://stdlib.ponylang.io/format-AlignCenter)"
- name: AlignCenter.create()
  id: format-aligncenter#create
  summary: null
  belongs_to: AlignCenter
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L3)

    ``` pony
    new val create()
    : AlignCenter val^
    ```

    #### Returns

    - [AlignCenter](index) val^

    ## Public Functions
- name: AlignCenter.eq()
  id: format-aligncenter#eq
  summary: null
  belongs_to: AlignCenter
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L5)

    ``` pony
    fun box eq(
      that: AlignCenter val)
    : Bool val
    ```

    #### Parameters

    - that: [AlignCenter](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: AlignCenter.ne()
  id: format-aligncenter#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AlignCenter
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L5)\n\n``` pony\nfun box ne(\n  that: AlignCenter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignCenter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignCenter](https://stdlib.ponylang.io/format-AlignCenter)"
- name: AlignLeft
  id: format-alignleft
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AlignLeft\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L1)\n\n``` pony\nprimitive val AlignLeft\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L1)\n\n``` pony\nnew val create()\n: AlignLeft val^\n```\n\n#### Returns\n\n- [AlignLeft](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L2)\n\n``` pony\nfun box eq(\n  that: AlignLeft val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignLeft](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L2)\n\n``` pony\nfun box ne(\n  that: AlignLeft val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignLeft](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignLeft](https://stdlib.ponylang.io/format-AlignLeft)"
- name: AlignLeft.create()
  id: format-alignleft#create
  summary: null
  belongs_to: AlignLeft
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L1)

    ``` pony
    new val create()
    : AlignLeft val^
    ```

    #### Returns

    - [AlignLeft](index) val^

    ## Public Functions
- name: AlignLeft.eq()
  id: format-alignleft#eq
  summary: null
  belongs_to: AlignLeft
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L2)

    ``` pony
    fun box eq(
      that: AlignLeft val)
    : Bool val
    ```

    #### Parameters

    - that: [AlignLeft](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: AlignLeft.ne()
  id: format-alignleft#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AlignLeft
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L2)\n\n``` pony\nfun box ne(\n  that: AlignLeft val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignLeft](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignLeft](https://stdlib.ponylang.io/format-AlignLeft)"
- name: AlignRight
  id: format-alignright
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AlignRight\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L2)\n\n``` pony\nprimitive val AlignRight\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L2)\n\n``` pony\nnew val create()\n: AlignRight val^\n```\n\n#### Returns\n\n- [AlignRight](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L3)\n\n``` pony\nfun box eq(\n  that: AlignRight val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignRight](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L3)\n\n``` pony\nfun box ne(\n  that: AlignRight val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignRight](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignRight](https://stdlib.ponylang.io/format-AlignRight)"
- name: AlignRight.create()
  id: format-alignright#create
  summary: null
  belongs_to: AlignRight
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L2)

    ``` pony
    new val create()
    : AlignRight val^
    ```

    #### Returns

    - [AlignRight](index) val^

    ## Public Functions
- name: AlignRight.eq()
  id: format-alignright#eq
  summary: null
  belongs_to: AlignRight
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/align/#L3)

    ``` pony
    fun box eq(
      that: AlignRight val)
    : Bool val
    ```

    #### Parameters

    - that: [AlignRight](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: AlignRight.ne()
  id: format-alignright#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AlignRight
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/align/#L3)\n\n``` pony\nfun box ne(\n  that: AlignRight val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AlignRight](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-AlignRight](https://stdlib.ponylang.io/format-AlignRight)"
- name: AmbientAuth
  id: builtin-ambientauth
  summary: This type represents the root capability
  description: "# AmbientAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/ambient_auth/#L1)\n\nThis type represents the root capability. When a Pony program starts, the Env passed to the Main actor contains an instance of the root capability.\n\nAmbient access to the root capability is denied outside of the builtin package. Inside the builtin package, only Env creates a Root.\n\nThe root capability can be used by any package that wants to establish a principle of least authority. A typical usage is to have a parameter on a constructor for some resource that expects a limiting capability specific to the package, but will also accept the root capability as representing unlimited access.\n\n``` pony\nprimitive val AmbientAuth\n```\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/ambient_auth/#L15)\n\n``` pony\nfun box eq(\n  that: AmbientAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbientAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/ambient_auth/#L15)\n\n``` pony\nfun box ne(\n  that: AmbientAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbientAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AmbientAuth](https://stdlib.ponylang.io/builtin-AmbientAuth)"
- name: AmbientAuth.eq()
  id: builtin-ambientauth#eq
  summary: null
  belongs_to: AmbientAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/ambient_auth/#L15)

    ``` pony
    fun box eq(
      that: AmbientAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [AmbientAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: AmbientAuth.ne()
  id: builtin-ambientauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AmbientAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/ambient_auth/#L15)\n\n``` pony\nfun box ne(\n  that: AmbientAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbientAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AmbientAuth](https://stdlib.ponylang.io/builtin-AmbientAuth)"
- name: AmbiguousMatch
  id: options-ambiguousmatch
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AmbiguousMatch\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L77)\n\n``` pony\nprimitive val AmbiguousMatch\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L77)\n\n``` pony\nnew val create()\n: AmbiguousMatch val^\n```\n\n#### Returns\n\n- [AmbiguousMatch](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L78)\n\n``` pony\nfun box eq(\n  that: AmbiguousMatch val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbiguousMatch](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L78)\n\n``` pony\nfun box ne(\n  that: AmbiguousMatch val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbiguousMatch](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-AmbiguousMatch](https://stdlib.ponylang.io/options-AmbiguousMatch)"
- name: AmbiguousMatch.create()
  id: options-ambiguousmatch#create
  summary: null
  belongs_to: AmbiguousMatch
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L77)

    ``` pony
    new val create()
    : AmbiguousMatch val^
    ```

    #### Returns

    - [AmbiguousMatch](index) val^

    ## Public Functions
- name: AmbiguousMatch.eq()
  id: options-ambiguousmatch#eq
  summary: null
  belongs_to: AmbiguousMatch
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L78)

    ``` pony
    fun box eq(
      that: AmbiguousMatch val)
    : Bool val
    ```

    #### Parameters

    - that: [AmbiguousMatch](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: AmbiguousMatch.ne()
  id: options-ambiguousmatch#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AmbiguousMatch
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L78)\n\n``` pony\nfun box ne(\n  that: AmbiguousMatch val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AmbiguousMatch](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-AmbiguousMatch](https://stdlib.ponylang.io/options-AmbiguousMatch)"
- name: ANSI
  id: term-ansi
  summary: These strings can be embedded in text when writing to a StdStream to create a text-based UI
  description: "# ANSI\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L1)\n\nThese strings can be embedded in text when writing to a StdStream to create a text-based UI.\n\n``` pony\nprimitive val ANSI\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L1)\n\n``` pony\nnew val create()\n: ANSI val^\n```\n\n#### Returns\n\n- [ANSI](index) val^\n\n## Public Functions\n\n### up\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L6)\n\nMove the cursor up n lines. 0 is the same as 1.\n\n``` pony\nfun box up(\n  n: U32 val = 0)\n: String val\n```\n\n#### Parameters\n\n- n: [U32](builtin-u32) val = 0\n\n#### Returns\n\n- [String](builtin-string) val\n\n### down\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L16)\n\nMove the cursor down n lines. 0 is the same as 1.\n\n``` pony\nfun box down(\n  n: U32 val = 0)\n: String val\n```\n\n#### Parameters\n\n- n: [U32](builtin-u32) val = 0\n\n#### Returns\n\n- [String](builtin-string) val\n\n### right\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L26)\n\nMove the cursor right n columns. 0 is the same as 1.\n\n``` pony\nfun box right(\n  n: U32 val = 0)\n: String val\n```\n\n#### Parameters\n\n- n: [U32](builtin-u32) val = 0\n\n#### Returns\n\n- [String](builtin-string) val\n\n### left\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L36)\n\nMove the cursor left n columns. 0 is the same as 1.\n\n``` pony\nfun box left(\n  n: U32 val = 0)\n: String val\n```\n\n#### Parameters\n\n- n: [U32](builtin-u32) val = 0\n\n#### Returns\n\n- [String](builtin-string) val\n\n### cursor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L46)\n\nMove the cursor to line y, column x. 0 is the same as 1. This indexes from the top left corner of the screen.\n\n``` pony\nfun box cursor(\n  x: U32 val = 0,\n  y: U32 val = 0)\n: String val\n```\n\n#### Parameters\n\n- x: [U32](builtin-u32) val = 0\n- y: [U32](builtin-u32) val = 0\n\n#### Returns\n\n- [String](builtin-string) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L57)\n\nClear the screen and move the cursor to the top left corner.\n\n``` pony\nfun box clear()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### erase\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L63)\n\nErases everything to the left of the cursor on the line the cursor is on.\n\n``` pony\nfun box erase()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### reset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L69)\n\nResets all colours and text styles to the default.\n\n``` pony\nfun box reset()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bold\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L75)\n\nBold text. Does nothing on Windows.\n\n``` pony\nfun box bold(\n  state: Bool val = true)\n: String val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [String](builtin-string) val\n\n### underline\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L81)\n\nUnderlined text. Does nothing on Windows.\n\n``` pony\nfun box underline(\n  state: Bool val = true)\n: String val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [String](builtin-string) val\n\n### blink\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L87)\n\nBlinking text. Does nothing on Windows.\n\n``` pony\nfun box blink(\n  state: Bool val = true)\n: String val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [String](builtin-string) val\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L93)\n\nSwap foreground and background colour.\n\n``` pony\nfun box reverse(\n  state: Bool val = true)\n: String val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [String](builtin-string) val\n\n### black\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L99)\n\nBlack text.\n\n``` pony\nfun box black()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### red\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L105)\n\nRed text.\n\n``` pony\nfun box red()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### green\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L111)\n\nGreen text.\n\n``` pony\nfun box green()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### yellow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L117)\n\nYellow text.\n\n``` pony\nfun box yellow()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### blue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L123)\n\nBlue text.\n\n``` pony\nfun box blue()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### magenta\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L129)\n\nMagenta text.\n\n``` pony\nfun box magenta()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### cyan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L135)\n\nCyan text.\n\n``` pony\nfun box cyan()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### grey\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L141)\n\nGrey text.\n\n``` pony\nfun box grey()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### white\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L147)\n\nWhite text.\n\n``` pony\nfun box white()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_red\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L153)\n\nBright red text.\n\n``` pony\nfun box bright_red()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_green\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L159)\n\nBright green text.\n\n``` pony\nfun box bright_green()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_yellow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L165)\n\nBright yellow text.\n\n``` pony\nfun box bright_yellow()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_blue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L171)\n\nBright blue text.\n\n``` pony\nfun box bright_blue()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_magenta\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L177)\n\nBright magenta text.\n\n``` pony\nfun box bright_magenta()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_cyan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L183)\n\nBright cyan text.\n\n``` pony\nfun box bright_cyan()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_grey\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L189)\n\nBright grey text.\n\n``` pony\nfun box bright_grey()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### black_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L195)\n\nBlack background.\n\n``` pony\nfun box black_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### red_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L201)\n\nRed background.\n\n``` pony\nfun box red_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### green_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L207)\n\nGreen background.\n\n``` pony\nfun box green_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### yellow_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L213)\n\nYellow background.\n\n``` pony\nfun box yellow_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### blue_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L219)\n\nBlue background.\n\n``` pony\nfun box blue_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### magenta_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L225)\n\nMagenta background.\n\n``` pony\nfun box magenta_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### cyan_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L231)\n\nCyan background.\n\n``` pony\nfun box cyan_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### grey_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L237)\n\nGrey background.\n\n``` pony\nfun box grey_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### white_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L243)\n\nWhite background.\n\n``` pony\nfun box white_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_red_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L249)\n\nBright red background.\n\n``` pony\nfun box bright_red_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_green_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L255)\n\nBright green background.\n\n``` pony\nfun box bright_green_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_yellow_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L261)\n\nBright yellow background.\n\n``` pony\nfun box bright_yellow_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_blue_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L267)\n\nBright blue background.\n\n``` pony\nfun box bright_blue_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_magenta_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L273)\n\nBright magenta background.\n\n``` pony\nfun box bright_magenta_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_cyan_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L279)\n\nBright cyan background.\n\n``` pony\nfun box bright_cyan_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### bright_grey_bg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L285)\n\nBright grey background.\n\n``` pony\nfun box bright_grey_bg()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L6)\n\n``` pony\nfun box eq(\n  that: ANSI val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ANSI](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L6)\n\n``` pony\nfun box ne(\n  that: ANSI val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ANSI](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSI](https://stdlib.ponylang.io/term-ANSI)"
- name: ANSI.black()
  id: term-ansi#black
  summary: Black text
  belongs_to: ANSI
  description: |-
    ### black

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L99)

    Black text.

    ``` pony
    fun box black()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.black_bg()
  id: term-ansi#black_bg
  summary: Black background
  belongs_to: ANSI
  description: |-
    ### black_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L195)

    Black background.

    ``` pony
    fun box black_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.blink()
  id: term-ansi#blink
  summary: Blinking text
  belongs_to: ANSI
  description: |-
    ### blink

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L87)

    Blinking text. Does nothing on Windows.

    ``` pony
    fun box blink(
      state: Bool val = true)
    : String val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val = true

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.blue()
  id: term-ansi#blue
  summary: Blue text
  belongs_to: ANSI
  description: |-
    ### blue

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L123)

    Blue text.

    ``` pony
    fun box blue()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.blue_bg()
  id: term-ansi#blue_bg
  summary: Blue background
  belongs_to: ANSI
  description: |-
    ### blue_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L219)

    Blue background.

    ``` pony
    fun box blue_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bold()
  id: term-ansi#bold
  summary: Bold text
  belongs_to: ANSI
  description: |-
    ### bold

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L75)

    Bold text. Does nothing on Windows.

    ``` pony
    fun box bold(
      state: Bool val = true)
    : String val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val = true

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_blue()
  id: term-ansi#bright_blue
  summary: Bright blue text
  belongs_to: ANSI
  description: |-
    ### bright_blue

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L171)

    Bright blue text.

    ``` pony
    fun box bright_blue()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_blue_bg()
  id: term-ansi#bright_blue_bg
  summary: Bright blue background
  belongs_to: ANSI
  description: |-
    ### bright_blue_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L267)

    Bright blue background.

    ``` pony
    fun box bright_blue_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_cyan()
  id: term-ansi#bright_cyan
  summary: Bright cyan text
  belongs_to: ANSI
  description: |-
    ### bright_cyan

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L183)

    Bright cyan text.

    ``` pony
    fun box bright_cyan()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_cyan_bg()
  id: term-ansi#bright_cyan_bg
  summary: Bright cyan background
  belongs_to: ANSI
  description: |-
    ### bright_cyan_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L279)

    Bright cyan background.

    ``` pony
    fun box bright_cyan_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_green()
  id: term-ansi#bright_green
  summary: Bright green text
  belongs_to: ANSI
  description: |-
    ### bright_green

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L159)

    Bright green text.

    ``` pony
    fun box bright_green()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_green_bg()
  id: term-ansi#bright_green_bg
  summary: Bright green background
  belongs_to: ANSI
  description: |-
    ### bright_green_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L255)

    Bright green background.

    ``` pony
    fun box bright_green_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_grey()
  id: term-ansi#bright_grey
  summary: Bright grey text
  belongs_to: ANSI
  description: |-
    ### bright_grey

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L189)

    Bright grey text.

    ``` pony
    fun box bright_grey()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_grey_bg()
  id: term-ansi#bright_grey_bg
  summary: Bright grey background
  belongs_to: ANSI
  description: |-
    ### bright_grey_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L285)

    Bright grey background.

    ``` pony
    fun box bright_grey_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_magenta()
  id: term-ansi#bright_magenta
  summary: Bright magenta text
  belongs_to: ANSI
  description: |-
    ### bright_magenta

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L177)

    Bright magenta text.

    ``` pony
    fun box bright_magenta()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_magenta_bg()
  id: term-ansi#bright_magenta_bg
  summary: Bright magenta background
  belongs_to: ANSI
  description: |-
    ### bright_magenta_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L273)

    Bright magenta background.

    ``` pony
    fun box bright_magenta_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_red()
  id: term-ansi#bright_red
  summary: Bright red text
  belongs_to: ANSI
  description: |-
    ### bright_red

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L153)

    Bright red text.

    ``` pony
    fun box bright_red()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_red_bg()
  id: term-ansi#bright_red_bg
  summary: Bright red background
  belongs_to: ANSI
  description: |-
    ### bright_red_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L249)

    Bright red background.

    ``` pony
    fun box bright_red_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_yellow()
  id: term-ansi#bright_yellow
  summary: Bright yellow text
  belongs_to: ANSI
  description: |-
    ### bright_yellow

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L165)

    Bright yellow text.

    ``` pony
    fun box bright_yellow()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.bright_yellow_bg()
  id: term-ansi#bright_yellow_bg
  summary: Bright yellow background
  belongs_to: ANSI
  description: |-
    ### bright_yellow_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L261)

    Bright yellow background.

    ``` pony
    fun box bright_yellow_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.clear()
  id: term-ansi#clear
  summary: Clear the screen and move the cursor to the top left corner
  belongs_to: ANSI
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L57)

    Clear the screen and move the cursor to the top left corner.

    ``` pony
    fun box clear()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.create()
  id: term-ansi#create
  summary: null
  belongs_to: ANSI
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L1)

    ``` pony
    new val create()
    : ANSI val^
    ```

    #### Returns

    - [ANSI](index) val^

    ## Public Functions
- name: ANSI.cursor()
  id: term-ansi#cursor
  summary: Move the cursor to line y, column x
  belongs_to: ANSI
  description: |-
    ### cursor

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L46)

    Move the cursor to line y, column x. 0 is the same as 1. This indexes from the top left corner of the screen.

    ``` pony
    fun box cursor(
      x: U32 val = 0,
      y: U32 val = 0)
    : String val
    ```

    #### Parameters

    - x: [U32](builtin-u32) val = 0
    - y: [U32](builtin-u32) val = 0

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.cyan()
  id: term-ansi#cyan
  summary: Cyan text
  belongs_to: ANSI
  description: |-
    ### cyan

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L135)

    Cyan text.

    ``` pony
    fun box cyan()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.cyan_bg()
  id: term-ansi#cyan_bg
  summary: Cyan background
  belongs_to: ANSI
  description: |-
    ### cyan_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L231)

    Cyan background.

    ``` pony
    fun box cyan_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.down()
  id: term-ansi#down
  summary: Move the cursor down n lines
  belongs_to: ANSI
  description: |-
    ### down

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L16)

    Move the cursor down n lines. 0 is the same as 1.

    ``` pony
    fun box down(
      n: U32 val = 0)
    : String val
    ```

    #### Parameters

    - n: [U32](builtin-u32) val = 0

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.eq()
  id: term-ansi#eq
  summary: null
  belongs_to: ANSI
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L6)

    ``` pony
    fun box eq(
      that: ANSI val)
    : Bool val
    ```

    #### Parameters

    - that: [ANSI](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ANSI.erase()
  id: term-ansi#erase
  summary: Erases everything to the left of the cursor on the line the cursor is on
  belongs_to: ANSI
  description: |-
    ### erase

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L63)

    Erases everything to the left of the cursor on the line the cursor is on.

    ``` pony
    fun box erase()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.green()
  id: term-ansi#green
  summary: Green text
  belongs_to: ANSI
  description: |-
    ### green

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L111)

    Green text.

    ``` pony
    fun box green()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.green_bg()
  id: term-ansi#green_bg
  summary: Green background
  belongs_to: ANSI
  description: |-
    ### green_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L207)

    Green background.

    ``` pony
    fun box green_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.grey()
  id: term-ansi#grey
  summary: Grey text
  belongs_to: ANSI
  description: |-
    ### grey

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L141)

    Grey text.

    ``` pony
    fun box grey()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.grey_bg()
  id: term-ansi#grey_bg
  summary: Grey background
  belongs_to: ANSI
  description: |-
    ### grey_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L237)

    Grey background.

    ``` pony
    fun box grey_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.left()
  id: term-ansi#left
  summary: Move the cursor left n columns
  belongs_to: ANSI
  description: |-
    ### left

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L36)

    Move the cursor left n columns. 0 is the same as 1.

    ``` pony
    fun box left(
      n: U32 val = 0)
    : String val
    ```

    #### Parameters

    - n: [U32](builtin-u32) val = 0

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.magenta()
  id: term-ansi#magenta
  summary: Magenta text
  belongs_to: ANSI
  description: |-
    ### magenta

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L129)

    Magenta text.

    ``` pony
    fun box magenta()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.magenta_bg()
  id: term-ansi#magenta_bg
  summary: Magenta background
  belongs_to: ANSI
  description: |-
    ### magenta_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L225)

    Magenta background.

    ``` pony
    fun box magenta_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.ne()
  id: term-ansi#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ANSI
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi/#L6)\n\n``` pony\nfun box ne(\n  that: ANSI val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ANSI](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSI](https://stdlib.ponylang.io/term-ANSI)"
- name: ANSI.red()
  id: term-ansi#red
  summary: Red text
  belongs_to: ANSI
  description: |-
    ### red

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L105)

    Red text.

    ``` pony
    fun box red()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.red_bg()
  id: term-ansi#red_bg
  summary: Red background
  belongs_to: ANSI
  description: |-
    ### red_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L201)

    Red background.

    ``` pony
    fun box red_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.reset()
  id: term-ansi#reset
  summary: Resets all colours and text styles to the default
  belongs_to: ANSI
  description: |-
    ### reset

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L69)

    Resets all colours and text styles to the default.

    ``` pony
    fun box reset()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.reverse()
  id: term-ansi#reverse
  summary: Swap foreground and background colour
  belongs_to: ANSI
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L93)

    Swap foreground and background colour.

    ``` pony
    fun box reverse(
      state: Bool val = true)
    : String val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val = true

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.right()
  id: term-ansi#right
  summary: Move the cursor right n columns
  belongs_to: ANSI
  description: |-
    ### right

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L26)

    Move the cursor right n columns. 0 is the same as 1.

    ``` pony
    fun box right(
      n: U32 val = 0)
    : String val
    ```

    #### Parameters

    - n: [U32](builtin-u32) val = 0

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.underline()
  id: term-ansi#underline
  summary: Underlined text
  belongs_to: ANSI
  description: |-
    ### underline

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L81)

    Underlined text. Does nothing on Windows.

    ``` pony
    fun box underline(
      state: Bool val = true)
    : String val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val = true

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.up()
  id: term-ansi#up
  summary: Move the cursor up n lines
  belongs_to: ANSI
  description: |-
    ### up

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L6)

    Move the cursor up n lines. 0 is the same as 1.

    ``` pony
    fun box up(
      n: U32 val = 0)
    : String val
    ```

    #### Parameters

    - n: [U32](builtin-u32) val = 0

    #### Returns

    - [String](builtin-string) val
- name: ANSI.white()
  id: term-ansi#white
  summary: White text
  belongs_to: ANSI
  description: |-
    ### white

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L147)

    White text.

    ``` pony
    fun box white()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.white_bg()
  id: term-ansi#white_bg
  summary: White background
  belongs_to: ANSI
  description: |-
    ### white_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L243)

    White background.

    ``` pony
    fun box white_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.yellow()
  id: term-ansi#yellow
  summary: Yellow text
  belongs_to: ANSI
  description: |-
    ### yellow

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L117)

    Yellow text.

    ``` pony
    fun box yellow()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSI.yellow_bg()
  id: term-ansi#yellow_bg
  summary: Yellow background
  belongs_to: ANSI
  description: |-
    ### yellow_bg

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi/#L213)

    Yellow background.

    ``` pony
    fun box yellow_bg()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ANSINotify
  id: term-ansinotify
  summary: Receive input from an ANSITerm
  description: "# ANSINotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L1)\n\nReceive input from an ANSITerm.\n\n``` pony\ninterface ref ANSINotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L5)\n\n``` pony\nfun ref apply(\n  term: ANSITerm ref,\n  input: U8 val)\n: None val\n```\n\n#### Parameters\n\n- term: [ANSITerm](term-ansiterm) ref\n- input: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### up\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L8)\n\n``` pony\nfun ref up(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### down\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L11)\n\n``` pony\nfun ref down(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### left\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L14)\n\n``` pony\nfun ref left(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### right\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L17)\n\n``` pony\nfun ref right(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L20)\n\n``` pony\nfun ref delete(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### insert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L23)\n\n``` pony\nfun ref insert(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### home\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L26)\n\n``` pony\nfun ref home(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### end_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L29)\n\n``` pony\nfun ref end_key(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### page_up\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L32)\n\n``` pony\nfun ref page_up(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### page_down\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L35)\n\n``` pony\nfun ref page_down(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### fn_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L38)\n\n``` pony\nfun ref fn_key(\n  i: U8 val,\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- i: [U8](builtin-u8) val\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### prompt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L41)\n\n``` pony\nfun ref prompt(\n  term: ANSITerm ref,\n  value: String val)\n: None val\n```\n\n#### Parameters\n\n- term: [ANSITerm](term-ansiterm) ref\n- value: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L44)\n\n``` pony\nfun ref size(\n  rows: U16 val,\n  cols: U16 val)\n: None val\n```\n\n#### Parameters\n\n- rows: [U16](builtin-u16) val\n- cols: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L47)\n\n``` pony\nfun ref closed()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSINotify](https://stdlib.ponylang.io/term-ANSINotify)"
- name: ANSINotify.apply()
  id: term-ansinotify#apply
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L5)

    ``` pony
    fun ref apply(
      term: ANSITerm ref,
      input: U8 val)
    : None val
    ```

    #### Parameters

    - term: [ANSITerm](term-ansiterm) ref
    - input: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val
- name: ANSINotify.closed()
  id: term-ansinotify#closed
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ANSINotify
  description: "### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L47)\n\n``` pony\nfun ref closed()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSINotify](https://stdlib.ponylang.io/term-ANSINotify)"
- name: ANSINotify.delete()
  id: term-ansinotify#delete
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### delete

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L20)

    ``` pony
    fun ref delete(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.down()
  id: term-ansinotify#down
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### down

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L11)

    ``` pony
    fun ref down(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.end_key()
  id: term-ansinotify#end_key
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### end_key

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L29)

    ``` pony
    fun ref end_key(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.fn_key()
  id: term-ansinotify#fn_key
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### fn_key

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L38)

    ``` pony
    fun ref fn_key(
      i: U8 val,
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - i: [U8](builtin-u8) val
    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.home()
  id: term-ansinotify#home
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### home

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L26)

    ``` pony
    fun ref home(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.insert()
  id: term-ansinotify#insert
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### insert

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L23)

    ``` pony
    fun ref insert(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.left()
  id: term-ansinotify#left
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### left

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L14)

    ``` pony
    fun ref left(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.page_down()
  id: term-ansinotify#page_down
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### page_down

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L35)

    ``` pony
    fun ref page_down(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.page_up()
  id: term-ansinotify#page_up
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### page_up

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L32)

    ``` pony
    fun ref page_up(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.prompt()
  id: term-ansinotify#prompt
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### prompt

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L41)

    ``` pony
    fun ref prompt(
      term: ANSITerm ref,
      value: String val)
    : None val
    ```

    #### Parameters

    - term: [ANSITerm](term-ansiterm) ref
    - value: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.right()
  id: term-ansinotify#right
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### right

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L17)

    ``` pony
    fun ref right(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.size()
  id: term-ansinotify#size
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L44)

    ``` pony
    fun ref size(
      rows: U16 val,
      cols: U16 val)
    : None val
    ```

    #### Parameters

    - rows: [U16](builtin-u16) val
    - cols: [U16](builtin-u16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSINotify.up()
  id: term-ansinotify#up
  summary: null
  belongs_to: ANSINotify
  description: |-
    ### up

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_notify/#L8)

    ``` pony
    fun ref up(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ANSITerm
  id: term-ansiterm
  summary: Handles ANSI escape codes from stdin
  description: "# ANSITerm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L45)\n\nHandles ANSI escape codes from stdin.\n\n``` pony\nactor tag ANSITerm\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L59)\n\nCreate a new ANSI term.\n\n``` pony\nnew tag create(\n  notify: ANSINotify iso,\n  source: DisposableActor tag,\n  timers: Timers tag = reference)\n: ANSITerm tag^\n```\n\n#### Parameters\n\n- notify: [ANSINotify](term-ansinotify) iso\n- source: [DisposableActor](builtin-disposableactor) tag\n- timers: [Timers](time-timers) tag = reference\n\n#### Returns\n\n- [ANSITerm](index) tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L77)\n\nReceives input from stdin.\n\n``` pony\nbe apply(\n  data: Array[U8 val] iso)\n```\n\n#### Parameters\n\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n\n### prompt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L187)\n\nPass a prompt along to the notifier.\n\n``` pony\nbe prompt(\n  value: String val)\n```\n\n#### Parameters\n\n- value: [String](builtin-string) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L193)\n\n``` pony\nbe size()\n```\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L206)\n\nStop accepting input, inform the notifier we have closed, and dispose of our source.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSITerm](https://stdlib.ponylang.io/term-ANSITerm)"
- name: ANSITerm.apply()
  id: term-ansiterm#apply
  summary: Receives input from stdin
  belongs_to: ANSITerm
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_term/#L77)

    Receives input from stdin.

    ``` pony
    be apply(
      data: Array[U8 val] iso)
    ```

    #### Parameters

    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso
- name: ANSITerm.create()
  id: term-ansiterm#create
  summary: Create a new ANSI term
  belongs_to: ANSITerm
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_term/#L59)

    Create a new ANSI term.

    ``` pony
    new tag create(
      notify: ANSINotify iso,
      source: DisposableActor tag,
      timers: Timers tag = reference)
    : ANSITerm tag^
    ```

    #### Parameters

    - notify: [ANSINotify](term-ansinotify) iso
    - source: [DisposableActor](builtin-disposableactor) tag
    - timers: [Timers](time-timers) tag = reference

    #### Returns

    - [ANSITerm](index) tag^

    ## Public Behaviours
- name: ANSITerm.dispose()
  id: term-ansiterm#dispose
  summary: Stop accepting input, inform the notifier we have closed, and dispose of our source
  belongs_to: ANSITerm
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/ansi_term/#L206)\n\nStop accepting input, inform the notifier we have closed, and dispose of our source.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ANSITerm](https://stdlib.ponylang.io/term-ANSITerm)"
- name: ANSITerm.prompt()
  id: term-ansiterm#prompt
  summary: Pass a prompt along to the notifier
  belongs_to: ANSITerm
  description: |-
    ### prompt

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_term/#L187)

    Pass a prompt along to the notifier.

    ``` pony
    be prompt(
      value: String val)
    ```

    #### Parameters

    - value: [String](builtin-string) val

    &nbsp;
- name: ANSITerm.size()
  id: term-ansiterm#size
  summary: null
  belongs_to: ANSITerm
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/term/ansi_term/#L193)

    ``` pony
    be size()
    ```
- name: Any
  id: builtin-any
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Any\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/any/#L1)\n\n``` pony\ninterface tag Any\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Any](https://stdlib.ponylang.io/builtin-Any)"
- name: ApplyReleaseBackpressureAuth
  id: backpressure-applyreleasebackpressureauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ApplyReleaseBackpressureAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/auth/#L1)\n\n``` pony\nprimitive val ApplyReleaseBackpressureAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)\n\n``` pony\nnew val create(\n  from: AmbientAuth val)\n: ApplyReleaseBackpressureAuth val^\n```\n\n#### Parameters\n\n- from: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [ApplyReleaseBackpressureAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)\n\n``` pony\nfun box eq(\n  that: ApplyReleaseBackpressureAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ApplyReleaseBackpressureAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)\n\n``` pony\nfun box ne(\n  that: ApplyReleaseBackpressureAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ApplyReleaseBackpressureAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure-ApplyReleaseBackpressureAuth](https://stdlib.ponylang.io/backpressure-ApplyReleaseBackpressureAuth)"
- name: ApplyReleaseBackpressureAuth.create()
  id: backpressure-applyreleasebackpressureauth#create
  summary: null
  belongs_to: ApplyReleaseBackpressureAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)

    ``` pony
    new val create(
      from: AmbientAuth val)
    : ApplyReleaseBackpressureAuth val^
    ```

    #### Parameters

    - from: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [ApplyReleaseBackpressureAuth](index) val^

    ## Public Functions
- name: ApplyReleaseBackpressureAuth.eq()
  id: backpressure-applyreleasebackpressureauth#eq
  summary: null
  belongs_to: ApplyReleaseBackpressureAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)

    ``` pony
    fun box eq(
      that: ApplyReleaseBackpressureAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [ApplyReleaseBackpressureAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: ApplyReleaseBackpressureAuth.ne()
  id: backpressure-applyreleasebackpressureauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ApplyReleaseBackpressureAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/auth/#L2)\n\n``` pony\nfun box ne(\n  that: ApplyReleaseBackpressureAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ApplyReleaseBackpressureAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure-ApplyReleaseBackpressureAuth](https://stdlib.ponylang.io/backpressure-ApplyReleaseBackpressureAuth)"
- name: Arg
  id: cli-arg
  summary: Arg contains a spec and an effective value for a given arg
  description: "# Arg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L122)\n\nArg contains a spec and an effective value for a given arg.\n\n``` pony\nclass val Arg\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L129)\n\n``` pony\nnew val create(\n  spec': ArgSpec val,\n  value': (Bool val | String val | I64 val | \n    U64 val | F64 val | _StringSeq val))\n: Arg val^\n```\n\n#### Parameters\n\n- spec': [ArgSpec](cli-argspec) val\n- value': ([Bool](builtin-bool) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val \\| \\_StringSeq val)\n\n#### Returns\n\n- [Arg](index) val^\n\n## Public Functions\n\n### spec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L136)\n\n``` pony\nfun box spec()\n: ArgSpec val\n```\n\n#### Returns\n\n- [ArgSpec](cli-argspec) val\n\n### bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L138)\n\nReturns the arg value as a Bool, defaulting to false.\n\n``` pony\nfun box bool()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L144)\n\nReturns the arg value as a String, defaulting to empty.\n\n``` pony\nfun box string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L150)\n\nReturns the arg value as an I64, defaulting to 0.\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L156)\n\nReturns the arg value as an U64, defaulting to 0.\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L162)\n\nReturns the arg value as an F64, defaulting to 0.0.\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### string_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L168)\n\nReturns the arg value as a ReadSeq\\[String\\], defaulting to empty.\n\n``` pony\nfun box string_seq()\n: ReadSeq[String val] val\n```\n\n#### Returns\n\n- [ReadSeq](builtin-readseq)\\[[String](builtin-string) val\\] val\n\n### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L178)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Arg](https://stdlib.ponylang.io/cli-Arg)"
- name: Arg.bool()
  id: cli-arg#bool
  summary: Returns the arg value as a Bool, defaulting to false
  belongs_to: Arg
  description: |-
    ### bool

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L138)

    Returns the arg value as a Bool, defaulting to false.

    ``` pony
    fun box bool()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Arg.create()
  id: cli-arg#create
  summary: null
  belongs_to: Arg
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L129)\n\n``` pony\nnew val create(\n  spec': ArgSpec val,\n  value': (Bool val | String val | I64 val | \n    U64 val | F64 val | _StringSeq val))\n: Arg val^\n```\n\n#### Parameters\n\n- spec': [ArgSpec](cli-argspec) val\n- value': ([Bool](builtin-bool) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val \\| \\_StringSeq val)\n\n#### Returns\n\n- [Arg](index) val^\n\n## Public Functions"
- name: Arg.deb_string()
  id: cli-arg#deb_string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Arg
  description: "### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L178)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Arg](https://stdlib.ponylang.io/cli-Arg)"
- name: Arg.f64()
  id: cli-arg#f64
  summary: Returns the arg value as an F64, defaulting to 0.0
  belongs_to: Arg
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L162)

    Returns the arg value as an F64, defaulting to 0.0.

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Arg.i64()
  id: cli-arg#i64
  summary: Returns the arg value as an I64, defaulting to 0
  belongs_to: Arg
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L150)

    Returns the arg value as an I64, defaulting to 0.

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Arg.spec()
  id: cli-arg#spec
  summary: null
  belongs_to: Arg
  description: |-
    ### spec

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L136)

    ``` pony
    fun box spec()
    : ArgSpec val
    ```

    #### Returns

    - [ArgSpec](cli-argspec) val
- name: Arg.string()
  id: cli-arg#string
  summary: Returns the arg value as a String, defaulting to empty
  belongs_to: Arg
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L144)

    Returns the arg value as a String, defaulting to empty.

    ``` pony
    fun box string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Arg.string_seq()
  id: cli-arg#string_seq
  summary: Returns the arg value as a ReadSeq[String], defaulting to empty
  belongs_to: Arg
  description: |-
    ### string_seq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L168)

    Returns the arg value as a ReadSeq\[String\], defaulting to empty.

    ``` pony
    fun box string_seq()
    : ReadSeq[String val] val
    ```

    #### Returns

    - [ReadSeq](builtin-readseq)\[[String](builtin-string) val\] val

    &nbsp;
- name: Arg.u64()
  id: cli-arg#u64
  summary: Returns the arg value as an U64, defaulting to 0
  belongs_to: Arg
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L156)

    Returns the arg value as an U64, defaulting to 0.

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ArgSpec
  id: cli-argspec
  summary: ArgSpec describes the specification of a positional Arg(ument)
  description: "# ArgSpec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L343)\n\nArgSpec describes the specification of a positional Arg(ument). They have a name, descr(iption), a typ(e), and a default value when they are not required.\n\nArgs always come after a leaf command, and are assigned in their positional order.\n\n``` pony\nclass val ArgSpec\n```\n\n## Constructors\n\n### bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L366)\n\nCreates an Arg with a Bool typed value that can be used like `<cmd> true` to yield an arg value like `cmd.arg(\"opt\").bool() == true`.\n\n``` pony\nnew val bool(\n  name': String val,\n  descr': String val = \"\",\n  default': (Bool val | None val) = reference)\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- default': ([Bool](builtin-bool) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L381)\n\nCreates an Arg with a String typed value that can be used like `<cmd> filename` to yield an arg value `cmd.arg(\"file\").string() == \"filename\"`.\n\n``` pony\nnew val string(\n  name': String val,\n  descr': String val = \"\",\n  default': (String val | None val) = reference)\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- default': ([String](builtin-string) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L396)\n\nCreates an Arg with an I64 typed value that can be used like `<cmd> 42` to yield an arg value like `cmd.arg(\"count\").i64() == I64(42)`.\n\n``` pony\nnew val i64(\n  name': String val,\n  descr': String val = \"\",\n  default': (I64 val | None val) = reference)\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- default': ([I64](builtin-i64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L410)\n\nCreates an Arg with an U64 typed value that can be used like `<cmd> 47` to yield an arg value like `cmd.arg(\"count\").u64() == U64(47)`.\n\n``` pony\nnew val u64(\n  name': String val,\n  descr': String val = \"\",\n  default': (U64 val | None val) = reference)\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- default': ([U64](builtin-u64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L424)\n\nCreates an Arg with a F64 typed value that can be used like `<cmd> 1.039` to yield an arg value like `cmd.arg(\"ratio\").f64() == F64(1.039)`.\n\n``` pony\nnew val f64(\n  name': String val,\n  descr': String val = \"\",\n  default': (F64 val | None val) = reference)\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- default': ([F64](builtin-f64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n### string_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L438)\n\nCreates an Arg with a ReadSeq\\[String\\] typed value that can be used like `<cmd> file1 file2 file3` to yield a sequence of three strings equivalent to `cmd.arg(\"file\").string_seq() (equiv) [\"file1\"; \"file2\"; \"file3\"]`.\n\n``` pony\nnew val string_seq(\n  name': String val,\n  descr': String val = \"\")\n: ArgSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n\n#### Returns\n\n- [ArgSpec](index) val^\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L452)\n\nReturns the name of this arg.\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### descr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L458)\n\nReturns the description for this arg.\n\n``` pony\nfun box descr()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### required\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L468)\n\nReturns true iff this arg is required to be present in the command line.\n\n``` pony\nfun box required()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### help_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L474)\n\nReturns a formated help string for this arg.\n\n``` pony\nfun box help_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L480)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-ArgSpec](https://stdlib.ponylang.io/cli-ArgSpec)"
- name: ArgSpec.bool()
  id: cli-argspec#bool
  summary: Creates an Arg with a Bool typed value that can be used like <cmd> true to yield an arg value like cmd.arg("opt").bool() == true
  belongs_to: ArgSpec
  description: |-
    ### bool

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L366)

    Creates an Arg with a Bool typed value that can be used like `<cmd> true` to yield an arg value like `cmd.arg("opt").bool() == true`.

    ``` pony
    new val bool(
      name': String val,
      descr': String val = "",
      default': (Bool val | None val) = reference)
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - default': ([Bool](builtin-bool) val \| [None](builtin-none) val) = reference

    #### Returns

    - [ArgSpec](index) val^
- name: ArgSpec.deb_string()
  id: cli-argspec#deb_string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ArgSpec
  description: "### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L480)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-ArgSpec](https://stdlib.ponylang.io/cli-ArgSpec)"
- name: ArgSpec.descr()
  id: cli-argspec#descr
  summary: Returns the description for this arg
  belongs_to: ArgSpec
  description: |-
    ### descr

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L458)

    Returns the description for this arg.

    ``` pony
    fun box descr()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ArgSpec.f64()
  id: cli-argspec#f64
  summary: Creates an Arg with a F64 typed value that can be used like <cmd> 1.039 to yield an arg value like cmd.arg("ratio").f64() == F64(1.039)
  belongs_to: ArgSpec
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L424)

    Creates an Arg with a F64 typed value that can be used like `<cmd> 1.039` to yield an arg value like `cmd.arg("ratio").f64() == F64(1.039)`.

    ``` pony
    new val f64(
      name': String val,
      descr': String val = "",
      default': (F64 val | None val) = reference)
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - default': ([F64](builtin-f64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [ArgSpec](index) val^

    &nbsp;
- name: ArgSpec.help_string()
  id: cli-argspec#help_string
  summary: Returns a formated help string for this arg
  belongs_to: ArgSpec
  description: |-
    ### help_string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L474)

    Returns a formated help string for this arg.

    ``` pony
    fun box help_string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ArgSpec.i64()
  id: cli-argspec#i64
  summary: Creates an Arg with an I64 typed value that can be used like <cmd> 42 to yield an arg value like cmd.arg("count").i64() == I64(42)
  belongs_to: ArgSpec
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L396)

    Creates an Arg with an I64 typed value that can be used like `<cmd> 42` to yield an arg value like `cmd.arg("count").i64() == I64(42)`.

    ``` pony
    new val i64(
      name': String val,
      descr': String val = "",
      default': (I64 val | None val) = reference)
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - default': ([I64](builtin-i64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [ArgSpec](index) val^

    &nbsp;
- name: ArgSpec.name()
  id: cli-argspec#name
  summary: Returns the name of this arg
  belongs_to: ArgSpec
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L452)

    Returns the name of this arg.

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: ArgSpec.required()
  id: cli-argspec#required
  summary: Returns true iff this arg is required to be present in the command line
  belongs_to: ArgSpec
  description: |-
    ### required

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L468)

    Returns true iff this arg is required to be present in the command line.

    ``` pony
    fun box required()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ArgSpec.string()
  id: cli-argspec#string
  summary: null
  belongs_to: ArgSpec
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L381)

    Creates an Arg with a String typed value that can be used like `<cmd> filename` to yield an arg value `cmd.arg("file").string() == "filename"`.

    ``` pony
    new val string(
      name': String val,
      descr': String val = "",
      default': (String val | None val) = reference)
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - default': ([String](builtin-string) val \| [None](builtin-none) val) = reference

    #### Returns

    - [ArgSpec](index) val^

    &nbsp;
- name: ArgSpec.string_seq()
  id: cli-argspec#string_seq
  summary: Creates an Arg with a ReadSeq[String] typed value that can be used like <cmd> file1 file2 file3 to yield a sequence of three strings equivalent to cmd.arg("file").string_seq() (equiv) ["file1"; "file2"; "file3"]
  belongs_to: ArgSpec
  description: |-
    ### string_seq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L438)

    Creates an Arg with a ReadSeq\[String\] typed value that can be used like `<cmd> file1 file2 file3` to yield a sequence of three strings equivalent to `cmd.arg("file").string_seq() (equiv) ["file1"; "file2"; "file3"]`.

    ``` pony
    new val string_seq(
      name': String val,
      descr': String val = "")
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""

    #### Returns

    - [ArgSpec](index) val^

    ## Public Functions
- name: ArgSpec.u64()
  id: cli-argspec#u64
  summary: Creates an Arg with an U64 typed value that can be used like <cmd> 47 to yield an arg value like cmd.arg("count").u64() == U64(47)
  belongs_to: ArgSpec
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L410)

    Creates an Arg with an U64 typed value that can be used like `<cmd> 47` to yield an arg value like `cmd.arg("count").u64() == U64(47)`.

    ``` pony
    new val u64(
      name': String val,
      descr': String val = "",
      default': (U64 val | None val) = reference)
    : ArgSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - default': ([U64](builtin-u64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [ArgSpec](index) val^

    &nbsp;
- name: ArgumentType
  id: options-argumenttype
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ArgumentType\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L81)\n\n``` pony\ntype ArgumentType is\n  (None val | StringArgument val | I64Argument val | U64Argument val | F64Argument val)\n```\n\n#### Type Alias For\n\n- ([None](builtin-none) val \\| [StringArgument](options-stringargument) val \\| [I64Argument](options-i64argument) val \\| [U64Argument](options-u64argument) val \\| [F64Argument](options-f64argument) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-ArgumentType](https://stdlib.ponylang.io/options-ArgumentType)"
- name: Array
  id: builtin-array
  summary: Contiguous, resizable memory to store elements of type A
  description: "# Array\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L1)\n\nContiguous, resizable memory to store elements of type A.\n\n## Usage\n\nCreating an Array of String:\n\n``` pony\n  let array: Array[String] = [\"dog\"; \"cat\"; \"wombat\"]\n  // array.size() == 3\n  // array.space() >= 3\n```\n\nCreating an empty Array of String, which may hold at least 10 elements before requesting more space:\n\n``` pony\n  let array = Array[String](10)\n  // array.size() == 0\n  // array.space() >= 10\n```\n\nAccessing elements can be done via the `apply(i: USize): this->A ?` method. The provided index might be out of bounds so `apply` is partial and has to be called within a try-catch block or inside another partial method:\n\n``` pony\n  let array: Array[String] = [\"dog\"; \"cat\"; \"wombat\"]\n  let is_second_element_wobat = try\n    // indexes start from 0, so 1 is the second element\n    array(1)? == \"wombat\"\n  else\n    false\n  end\n```\n\nAdding and removing elements to and from the end of the Array can be done via `push` and `pop` methods. You could treat the array as a LIFO stack using those methods:\n\n``` pony\n  while (array.size() > 0) do\n    let elem = array.pop()?\n    // do something with element\n  end\n```\n\nModifying the Array can be done via `update`, `insert` and `delete` methods which alter the Array at an arbitrary index, moving elements left (when deleting) or right (when inserting) as necessary.\n\nIterating over the elements of an Array can be done using the `values` method:\n\n``` pony\n  for element in array.values() do\n      // do something with element\n  end\n```\n\n## Memory allocation\n\nArray allocates contiguous memory. It always allocates at least enough memory space to hold all of its elements. Space is the number of elements the Array can hold without allocating more memory. The `space()` method returns the number of elements an Array can hold. The `size()` method returns the number of elements the Array holds.\n\nDifferent data types require different amounts of memory. Array\\[U64\\] with size of 6 will take more memory than an Array\\[U8\\] of the same size.\n\nWhen creating an Array or adding more elements will calculate the next power of 2 of the requested number of elements and allocate that much space, with a lower bound of space for 8 elements.\n\nHere's a few examples of the space allocated when initialising an Array with various number of elements:\n\n| size | space |\n|------|-------|\n| 0    | 0     |\n| 1    | 8     |\n| 8    | 8     |\n| 9    | 16    |\n| 16   | 16    |\n| 17   | 32    |\n\nCall the `compact()` method to ask the GC to reclaim unused space. There are no guarantees that the GC will actually reclaim any space.\n\n``` pony\nclass ref Array[A: A] is\n  Seq[A] ref\n```\n\n#### Implements\n\n- [Seq](builtin-seq)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L89)\n\nCreate an array with zero elements, but space for len elements.\n\n``` pony\nnew ref create(\n  len: USize val = 0)\n: Array[A] ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Array](index)\\[A\\] ref^\n\n### init\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L103)\n\nCreate an array of len elements, all initialised to the given value.\n\n``` pony\nnew ref init(\n  from: A^,\n  len: USize val)\n: Array[A] ref^\n```\n\n#### Parameters\n\n- from: A^\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [Array](index)\\[A\\] ref^\n\n### from_cpointer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L124)\n\nCreate an array from a C-style pointer and length. The contents are not copied.\n\n``` pony\nnew ref from_cpointer(\n  ptr: Pointer[A] ref,\n  len: USize val,\n  alloc: USize val = 0)\n: Array[A] ref^\n```\n\n#### Parameters\n\n- ptr: [Pointer](builtin-pointer)\\[A\\] ref\n- len: [USize](builtin-usize) val\n- alloc: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Array](index)\\[A\\] ref^\n\n## Public Functions\n\n### cpointer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L150)\n\nReturn the underlying C-style pointer.\n\n``` pony\nfun box cpointer(\n  offset: USize val = 0)\n: Pointer[A] tag\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Pointer](builtin-pointer)\\[A\\] tag\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L156)\n\nThe number of elements in the array.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### space\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L162)\n\nThe available space in the array.\n\n``` pony\nfun box space()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### reserve\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L168)\n\nReserve space for len elements, including whatever elements are already in the array. Array space grows geometrically.\n\n``` pony\nfun ref reserve(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### compact\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L184)\n\nTry to remove unused space, making it available for garbage collection. The request may be ignored.\n\n``` pony\nfun ref compact()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### undefined\\[optional B: (A & [Real](builtin-real)\\[B\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L201)\n\nResize to len elements, populating previously empty elements with random memory. This is only allowed for an array of numbers.\n\n``` pony\nfun ref undefined[optional B: (A & Real[B] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))](\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### read_u8\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L209)\n\nReads a U8 from offset. This is only allowed for an array of U8s.\n\n``` pony\nfun box read_u8[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val)\n: U8 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### read_u16\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L219)\n\nReads a U16 from offset. This is only allowed for an array of U8s.\n\n``` pony\nfun box read_u16[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val)\n: U16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### read_u32\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L230)\n\nReads a U32 from offset. This is only allowed for an array of U8s.\n\n``` pony\nfun box read_u32[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val)\n: U32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### read_u64\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L241)\n\nReads a U64 from offset. This is only allowed for an array of U8s.\n\n``` pony\nfun box read_u64[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val)\n: U64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### read_u128\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L252)\n\nReads a U128 from offset. This is only allowed for an array of U8s.\n\n``` pony\nfun box read_u128[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val)\n: U128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L263)\n\nGet the i-th element, raising an error if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>A ?\n\n### update_u8\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L273)\n\nWrite a U8 at offset. This is only allowed for an array of U8s.\n\n``` pony\nfun ref update_u8[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val,\n  value: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### update_u16\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L283)\n\nWrite a U16 at offset. This is only allowed for an array of U8s.\n\n``` pony\nfun ref update_u16[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val,\n  value: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n- value: [U16](builtin-u16) val\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### update_u32\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L294)\n\nWrite a U32 at offset. This is only allowed for an array of U8s.\n\n``` pony\nfun ref update_u32[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val,\n  value: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n- value: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### update_u64\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L305)\n\nWrite a U64 at offset. This is only allowed for an array of U8s.\n\n``` pony\nfun ref update_u64[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val,\n  value: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n- value: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### update_u128\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L316)\n\nWrite a U128 at offset. This is only allowed for an array of U8s.\n\n``` pony\nfun ref update_u128[optional B: (A & Real[B] val & U8 val)](\n  offset: USize val,\n  value: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n- value: [U128](builtin-u128) val\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L327)\n\nChange the i-th element, raising an error if the index is out of bounds.\n\n``` pony\nfun ref update(\n  i: USize val,\n  value: A)\n: A^ ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: A\n\n#### Returns\n\n- A^ ?\n\n### insert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L337)\n\nInsert an element into the array. Elements after this are moved up by one index, extending the array.\n\nWhen inserting right beyond the last element, at index `this.size()`, the element will be appended, similar to `push()`, an insert at index `0` prepends the value to the array. An insert into an index beyond `this.size()` raises an error.\n\n``` pony\nlet array = Array[U8](4)              // []\narray.insert(0, 0xDE)?                // prepend: [0xDE]\narray.insert(array.size(), 0xBE)?     // append:  [0xDE; 0xBE]\narray.insert(1, 0xAD)?                // insert:  [0xDE; 0xAD; 0xBE]\narray.insert(array.size() + 1, 0xEF)? // error\n```\n\n``` pony\nfun ref insert(\n  i: USize val,\n  value: A)\n: None val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L364)\n\nDelete an element from the array. Elements after this are moved down by one index, compacting the array. An out of bounds index raises an error. The deleted element is returned.\n\n``` pony\nfun ref delete(\n  i: USize val)\n: A^ ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- A^ ?\n\n### truncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L378)\n\nTruncate an array to the given length, discarding excess elements. If the array is already smaller than len, do nothing.\n\n``` pony\nfun ref truncate(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### trim_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L385)\n\nTrim the array to a portion of itself, covering `from` until `to`. Unlike slice, the operation does not allocate a new array nor copy elements.\n\n``` pony\nfun ref trim_in_place(\n  from: USize val = 0,\n  to: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### trim\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L412)\n\nReturn a shared portion of this array, covering `from` until `to`. Both the original and the new array are immutable, as they share memory. The operation does not allocate a new array pointer nor copy elements.\n\n``` pony\nfun val trim(\n  from: USize val = 0,\n  to: USize val = call)\n: Array[A] val\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [Array](index)\\[A\\] val\n\n### chop\\[optional B: (A & [Any](builtin-any) \\#send)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L436)\n\nChops the array in half at the split point requested and returns both the left and right portions. The original array is trimmed in place and returned as the left portion. If the split point is larger than the array, the left portion is the original array and the right portion is a new empty array. The operation does not allocate a new array pointer nor copy elements.\n\nThe entry type must be sendable so that the two halves can be isolated. Otherwise, two entries may have shared references to mutable data, or even to each other, such as in the code below:\n\n``` pony\n  class Example\n     var other: (Example | None) = None\n\n  let arr: Array[Example] iso = recover\n     let obj1 = Example\n     let obj2 = Example\n     obj1.other = obj2\n     obj2.other = obj1\n     [obj1; obj2]\n  end\n```\n\n``` pony\nfun iso chop[optional B: (A & Any #send)](\n  split_point: USize val)\n: (Array[A] iso^ , Array[A] iso^)\n```\n\n#### Parameters\n\n- split_point: [USize](builtin-usize) val\n\n#### Returns\n\n- ([Array](index)\\[A\\] iso^ , [Array](index)\\[A\\] iso^)\n\n### unchop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L479)\n\nUnchops two iso arrays to return the original array they were chopped from. Both input arrays are isolated and mutable and were originally chopped from a single array. This function checks that they are indeed two arrays chopped from the same original array and can be unchopped before doing the unchopping and returning the unchopped array. If the two arrays cannot be unchopped it returns both arrays without modifying them. The operation does not allocate a new array pointer nor copy elements.\n\n``` pony\nfun iso unchop(\n  b: Array[A] iso)\n: ((Array[A] iso^ , Array[A] iso^) | Array[A] iso^)\n```\n\n#### Parameters\n\n- b: [Array](index)\\[A\\] iso\n\n#### Returns\n\n- (([Array](index)\\[A\\] iso^ , [Array](index)\\[A\\] iso^) \\| [Array](index)\\[A\\] iso^)\n\n### copy_from\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L523)\n\nCopy len elements from src(src_idx) to this(dst_idx). Only works for Array\\[U8\\].\n\n``` pony\nfun ref copy_from[optional B: (A & Real[B] val & U8 val)](\n  src: Array[U8 val] box,\n  src_idx: USize val,\n  dst_idx: USize val,\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- src: [Array](index)\\[[U8](builtin-u8) val\\] box\n- src_idx: [USize](builtin-usize) val\n- dst_idx: [USize](builtin-usize) val\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### copy_to\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L540)\n\nCopy len elements from this(src_idx) to dst(dst_idx).\n\n``` pony\nfun box copy_to(\n  dst: Array[this->A!] ref,\n  src_idx: USize val,\n  dst_idx: USize val,\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- dst: [Array](index)\\[this-\\>A!\\] ref\n- src_idx: [USize](builtin-usize) val\n- dst_idx: [USize](builtin-usize) val\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L556)\n\nRemove n elements from the array, beginning at index i.\n\n``` pony\nfun ref remove(\n  i: USize val,\n  n: USize val)\n: None val\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L566)\n\nRemove all elements from the array.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push_u8\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L572)\n\nAdd a U8 to the end of the array. This is only allowed for an array of U8s.\n\n``` pony\nfun ref push_u8[optional B: (A & Real[B] val & U8 val)](\n  value: U8 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push_u16\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L581)\n\nAdd a U16 to the end of the array. This is only allowed for an array of U8s.\n\n``` pony\nfun ref push_u16[optional B: (A & Real[B] val & U8 val)](\n  value: U16 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push_u32\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L590)\n\nAdd a U32 to the end of the array. This is only allowed for an array of U8s.\n\n``` pony\nfun ref push_u32[optional B: (A & Real[B] val & U8 val)](\n  value: U32 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push_u64\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L599)\n\nAdd a U64 to the end of the array. This is only allowed for an array of U8s.\n\n``` pony\nfun ref push_u64[optional B: (A & Real[B] val & U8 val)](\n  value: U64 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push_u128\\[optional B: (A & [Real](builtin-real)\\[B\\] val & [U8](builtin-u8) val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L608)\n\nAdd a U128 to the end of the array. This is only allowed for an array of U8s.\n\n``` pony\nfun ref push_u128[optional B: (A & Real[B] val & U8 val)](\n  value: U128 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U128](builtin-u128) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L617)\n\nAdd an element to the end of the array.\n\n``` pony\nfun ref push(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L625)\n\nRemove an element from the end of the array. The removed element is returned.\n\n``` pony\nfun ref pop()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### unshift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L632)\n\nAdd an element to the beginning of the array.\n\n``` pony\nfun ref unshift(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### shift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L640)\n\nRemove an element from the beginning of the array. The removed element is returned.\n\n``` pony\nfun ref shift()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L647)\n\nAppend the elements from a sequence, starting from the given offset.\n\n``` pony\nfun ref append(\n  seq: (ReadSeq[A] box & ReadElement[A^] box),\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- seq: ([ReadSeq](builtin-readseq)\\[A\\] box & [ReadElement](builtin-readelement)\\[A^\\] box)\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L674)\n\nAdd len iterated elements to the end of the array, starting from the given offset.\n\n``` pony\nfun ref concat(\n  iter: Iterator[A^] ref,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[A^\\] ref\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### find\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L730)\n\nFind the `nth` appearance of `value` from the beginning of the array, starting at `offset` and examining higher indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.\n\nBy default, the search starts at the first element of the array, returns the first instance of `value` found, and uses object identity for comparison.\n\n``` pony\nfun box find(\n  value: A!,\n  offset: USize val = 0,\n  nth: USize val = 0,\n  predicate: {(box->A!, box->A!): Bool}[A] val = lambda)\n: USize val ?\n```\n\n#### Parameters\n\n- value: A!\n- offset: [USize](builtin-usize) val = 0\n- nth: [USize](builtin-usize) val = 0\n- predicate: {(box-\\>A!, box-\\>A!): Bool}\\[A\\] val = lambda\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L764)\n\nReturns true if the array contains `value`, false otherwise.\n\nThe default predicate checks for matches by identity. To search for matches by structural equality, pass an object literal such as `{(l, r) => l == r}`.\n\n``` pony\nfun box contains(\n  value: A!,\n  predicate: {(box->A!, box->A!): Bool}[A] val = lambda)\n: Bool val\n```\n\n#### Parameters\n\n- value: A!\n- predicate: {(box-\\>A!, box-\\>A!): Bool}\\[A\\] val = lambda\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### rfind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L787)\n\nFind the `nth` appearance of `value` from the end of the array, starting at `offset` and examining lower indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.\n\nBy default, the search starts at the last element of the array, returns the first instance of `value` found, and uses object identity for comparison.\n\n``` pony\nfun box rfind(\n  value: A!,\n  offset: USize val = call,\n  nth: USize val = 0,\n  predicate: {(box->A!, box->A!): Bool}[A] val = lambda)\n: USize val ?\n```\n\n#### Parameters\n\n- value: A!\n- offset: [USize](builtin-usize) val = call\n- nth: [USize](builtin-usize) val = 0\n- predicate: {(box-\\>A!, box-\\>A!): Bool}\\[A\\] val = lambda\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### clone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L822)\n\nClone the array. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.\n\n``` pony\nfun box clone()\n: Array[this->A!] ref^\n```\n\n#### Returns\n\n- [Array](index)\\[this-\\>A!\\] ref^\n\n### slice\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L833)\n\nCreate a new array that is a clone of a portion of this array. The range is exclusive and saturated. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.\n\n``` pony\nfun box slice(\n  from: USize val = 0,\n  to: USize val = call,\n  step: USize val = 1)\n: Array[this->A!] ref^\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n- step: [USize](builtin-usize) val = 1\n\n#### Returns\n\n- [Array](index)\\[this-\\>A!\\] ref^\n\n### permute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L868)\n\nCreate a new array with the elements permuted. Permute to an arbitrary order that may include duplicates. An out of bounds index raises an error. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.\n\n``` pony\nfun box permute(\n  indices: Iterator[USize val] ref)\n: Array[this->A!] ref^ ?\n```\n\n#### Parameters\n\n- indices: [Iterator](builtin-iterator)\\[[USize](builtin-usize) val\\] ref\n\n#### Returns\n\n- [Array](index)\\[this-\\>A!\\] ref^ ?\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L882)\n\nCreate a new array with the elements in reverse order. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.\n\n``` pony\nfun box reverse()\n: Array[this->A!] ref^\n```\n\n#### Returns\n\n- [Array](index)\\[this-\\>A!\\] ref^\n\n### reverse_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L890)\n\nReverse the array in place.\n\n``` pony\nfun ref reverse_in_place()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### swap_elements\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L907)\n\nSwap the element at index i with the element at index j. If either i or j are out of bounds, an error is raised.\n\n``` pony\nfun ref swap_elements(\n  i: USize val,\n  j: USize val)\n: None val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- j: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### keys\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L918)\n\nReturn an iterator over the indices in the array.\n\n``` pony\nfun box keys()\n: ArrayKeys[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayKeys](builtin-arraykeys)\\[A, this-\\>[Array](index)\\[A\\] ref\\] ref^\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L924)\n\nReturn an iterator over the values in the array.\n\n``` pony\nfun box values()\n: ArrayValues[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayValues](builtin-arrayvalues)\\[A, this-\\>[Array](index)\\[A\\] ref\\] ref^\n\n### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L930)\n\nReturn an iterator over the (index, value) pairs in the array.\n\n``` pony\nfun box pairs()\n: ArrayPairs[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayPairs](builtin-arraypairs)\\[A, this-\\>[Array](index)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Array](https://stdlib.ponylang.io/builtin-Array)"
- name: Array.append()
  id: builtin-array#append
  summary: Append the elements from a sequence, starting from the given offset
  belongs_to: Array
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L647)

    Append the elements from a sequence, starting from the given offset.

    ``` pony
    fun ref append(
      seq: (ReadSeq[A] box & ReadElement[A^] box),
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - seq: ([ReadSeq](builtin-readseq)\[A\] box & [ReadElement](builtin-readelement)\[A^\] box)
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.apply()
  id: builtin-array#apply
  summary: Get the i-th element, raising an error if the index is out of bounds
  belongs_to: Array
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L263)

    Get the i-th element, raising an error if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>A ?

    &nbsp;
- name: Array.chop()
  id: builtin-array#chopoptional-b-a-any-send
  summary: Chops the array in half at the split point requested and returns both the left and right portions
  belongs_to: Array
  description: |-
    ### chop\[optional B: (A & [Any](builtin-any) \#send)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L436)

    Chops the array in half at the split point requested and returns both the left and right portions. The original array is trimmed in place and returned as the left portion. If the split point is larger than the array, the left portion is the original array and the right portion is a new empty array. The operation does not allocate a new array pointer nor copy elements.

    The entry type must be sendable so that the two halves can be isolated. Otherwise, two entries may have shared references to mutable data, or even to each other, such as in the code below:

    ``` pony
      class Example
         var other: (Example | None) = None

      let arr: Array[Example] iso = recover
         let obj1 = Example
         let obj2 = Example
         obj1.other = obj2
         obj2.other = obj1
         [obj1; obj2]
      end
    ```

    ``` pony
    fun iso chop[optional B: (A & Any #send)](
      split_point: USize val)
    : (Array[A] iso^ , Array[A] iso^)
    ```

    #### Parameters

    - split_point: [USize](builtin-usize) val

    #### Returns

    - ([Array](index)\[A\] iso^ , [Array](index)\[A\] iso^)

    &nbsp;
- name: Array.clear()
  id: builtin-array#clear
  summary: Remove all elements from the array
  belongs_to: Array
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L566)

    Remove all elements from the array.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.clone()
  id: builtin-array#clone
  summary: Clone the array
  belongs_to: Array
  description: |-
    ### clone

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L822)

    Clone the array. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.

    ``` pony
    fun box clone()
    : Array[this->A!] ref^
    ```

    #### Returns

    - [Array](index)\[this-\>A!\] ref^

    &nbsp;
- name: Array.compact()
  id: builtin-array#compact
  summary: Try to remove unused space, making it available for garbage collection
  belongs_to: Array
  description: |-
    ### compact

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L184)

    Try to remove unused space, making it available for garbage collection. The request may be ignored.

    ``` pony
    fun ref compact()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.concat()
  id: builtin-array#concat
  summary: Add len iterated elements to the end of the array, starting from the given offset
  belongs_to: Array
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L674)

    Add len iterated elements to the end of the array, starting from the given offset.

    ``` pony
    fun ref concat(
      iter: Iterator[A^] ref,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[A^\] ref
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.contains()
  id: builtin-array#contains
  summary: Returns true if the array contains value, false otherwise
  belongs_to: Array
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L764)

    Returns true if the array contains `value`, false otherwise.

    The default predicate checks for matches by identity. To search for matches by structural equality, pass an object literal such as `{(l, r) => l == r}`.

    ``` pony
    fun box contains(
      value: A!,
      predicate: {(box->A!, box->A!): Bool}[A] val = lambda)
    : Bool val
    ```

    #### Parameters

    - value: A!
    - predicate: {(box-\>A!, box-\>A!): Bool}\[A\] val = lambda

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Array.copy_from()
  id: builtin-array#copy_fromoptional-b-a-realb-val-u8-val
  summary: Copy len elements from src(src_idx) to this(dst_idx)
  belongs_to: Array
  description: |-
    ### copy_from\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L523)

    Copy len elements from src(src_idx) to this(dst_idx). Only works for Array\[U8\].

    ``` pony
    fun ref copy_from[optional B: (A & Real[B] val & U8 val)](
      src: Array[U8 val] box,
      src_idx: USize val,
      dst_idx: USize val,
      len: USize val)
    : None val
    ```

    #### Parameters

    - src: [Array](index)\[[U8](builtin-u8) val\] box
    - src_idx: [USize](builtin-usize) val
    - dst_idx: [USize](builtin-usize) val
    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.copy_to()
  id: builtin-array#copy_to
  summary: Copy len elements from this(src_idx) to dst(dst_idx)
  belongs_to: Array
  description: |-
    ### copy_to

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L540)

    Copy len elements from this(src_idx) to dst(dst_idx).

    ``` pony
    fun box copy_to(
      dst: Array[this->A!] ref,
      src_idx: USize val,
      dst_idx: USize val,
      len: USize val)
    : None val
    ```

    #### Parameters

    - dst: [Array](index)\[this-\>A!\] ref
    - src_idx: [USize](builtin-usize) val
    - dst_idx: [USize](builtin-usize) val
    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.cpointer()
  id: builtin-array#cpointer
  summary: Return the underlying C-style pointer
  belongs_to: Array
  description: |-
    ### cpointer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L150)

    Return the underlying C-style pointer.

    ``` pony
    fun box cpointer(
      offset: USize val = 0)
    : Pointer[A] tag
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [Pointer](builtin-pointer)\[A\] tag

    &nbsp;
- name: Array.create()
  id: builtin-array#create
  summary: Create an array with zero elements, but space for len elements
  belongs_to: Array
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L89)

    Create an array with zero elements, but space for len elements.

    ``` pony
    new ref create(
      len: USize val = 0)
    : Array[A] ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 0

    #### Returns

    - [Array](index)\[A\] ref^
- name: Array.delete()
  id: builtin-array#delete
  summary: Delete an element from the array
  belongs_to: Array
  description: |-
    ### delete

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L364)

    Delete an element from the array. Elements after this are moved down by one index, compacting the array. An out of bounds index raises an error. The deleted element is returned.

    ``` pony
    fun ref delete(
      i: USize val)
    : A^ ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - A^ ?

    &nbsp;
- name: Array.find()
  id: builtin-array#find
  summary: Find the nth appearance of value from the beginning of the array, starting at offset and examining higher indices, and using the supplied predicate for comparisons
  belongs_to: Array
  description: |-
    ### find

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L730)

    Find the `nth` appearance of `value` from the beginning of the array, starting at `offset` and examining higher indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.

    By default, the search starts at the first element of the array, returns the first instance of `value` found, and uses object identity for comparison.

    ``` pony
    fun box find(
      value: A!,
      offset: USize val = 0,
      nth: USize val = 0,
      predicate: {(box->A!, box->A!): Bool}[A] val = lambda)
    : USize val ?
    ```

    #### Parameters

    - value: A!
    - offset: [USize](builtin-usize) val = 0
    - nth: [USize](builtin-usize) val = 0
    - predicate: {(box-\>A!, box-\>A!): Bool}\[A\] val = lambda

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: Array.from_cpointer()
  id: builtin-array#from_cpointer
  summary: Create an array from a C-style pointer and length
  belongs_to: Array
  description: |-
    ### from_cpointer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L124)

    Create an array from a C-style pointer and length. The contents are not copied.

    ``` pony
    new ref from_cpointer(
      ptr: Pointer[A] ref,
      len: USize val,
      alloc: USize val = 0)
    : Array[A] ref^
    ```

    #### Parameters

    - ptr: [Pointer](builtin-pointer)\[A\] ref
    - len: [USize](builtin-usize) val
    - alloc: [USize](builtin-usize) val = 0

    #### Returns

    - [Array](index)\[A\] ref^

    ## Public Functions
- name: Array.init()
  id: builtin-array#init
  summary: Create an array of len elements, all initialised to the given value
  belongs_to: Array
  description: |-
    ### init

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L103)

    Create an array of len elements, all initialised to the given value.

    ``` pony
    new ref init(
      from: A^,
      len: USize val)
    : Array[A] ref^
    ```

    #### Parameters

    - from: A^
    - len: [USize](builtin-usize) val

    #### Returns

    - [Array](index)\[A\] ref^

    &nbsp;
- name: Array.insert()
  id: builtin-array#insert
  summary: Insert an element into the array
  belongs_to: Array
  description: |-
    ### insert

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L337)

    Insert an element into the array. Elements after this are moved up by one index, extending the array.

    When inserting right beyond the last element, at index `this.size()`, the element will be appended, similar to `push()`, an insert at index `0` prepends the value to the array. An insert into an index beyond `this.size()` raises an error.

    ``` pony
    let array = Array[U8](4)              // []
    array.insert(0, 0xDE)?                // prepend: [0xDE]
    array.insert(array.size(), 0xBE)?     // append:  [0xDE; 0xBE]
    array.insert(1, 0xAD)?                // insert:  [0xDE; 0xAD; 0xBE]
    array.insert(array.size() + 1, 0xEF)? // error
    ```

    ``` pony
    fun ref insert(
      i: USize val,
      value: A)
    : None val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: A

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: Array.keys()
  id: builtin-array#keys
  summary: Return an iterator over the indices in the array
  belongs_to: Array
  description: |-
    ### keys

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L918)

    Return an iterator over the indices in the array.

    ``` pony
    fun box keys()
    : ArrayKeys[A, this->Array[A] ref] ref^
    ```

    #### Returns

    - [ArrayKeys](builtin-arraykeys)\[A, this-\>[Array](index)\[A\] ref\] ref^

    &nbsp;
- name: Array.pairs()
  id: builtin-array#pairs
  summary: Return an iterator over the (index, value) pairs in the array
  belongs_to: Array
  description: "### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L930)\n\nReturn an iterator over the (index, value) pairs in the array.\n\n``` pony\nfun box pairs()\n: ArrayPairs[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayPairs](builtin-arraypairs)\\[A, this-\\>[Array](index)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Array](https://stdlib.ponylang.io/builtin-Array)"
- name: Array.permute()
  id: builtin-array#permute
  summary: Create a new array with the elements permuted
  belongs_to: Array
  description: |-
    ### permute

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L868)

    Create a new array with the elements permuted. Permute to an arbitrary order that may include duplicates. An out of bounds index raises an error. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.

    ``` pony
    fun box permute(
      indices: Iterator[USize val] ref)
    : Array[this->A!] ref^ ?
    ```

    #### Parameters

    - indices: [Iterator](builtin-iterator)\[[USize](builtin-usize) val\] ref

    #### Returns

    - [Array](index)\[this-\>A!\] ref^ ?

    &nbsp;
- name: Array.pop()
  id: builtin-array#pop
  summary: Remove an element from the end of the array
  belongs_to: Array
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L625)

    Remove an element from the end of the array. The removed element is returned.

    ``` pony
    fun ref pop()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: Array.push()
  id: builtin-array#push
  summary: Add an element to the end of the array
  belongs_to: Array
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L617)

    Add an element to the end of the array.

    ``` pony
    fun ref push(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.push_u128()
  id: builtin-array#push_u128optional-b-a-realb-val-u8-val
  summary: Add a U128 to the end of the array
  belongs_to: Array
  description: |-
    ### push_u128\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L608)

    Add a U128 to the end of the array. This is only allowed for an array of U8s.

    ``` pony
    fun ref push_u128[optional B: (A & Real[B] val & U8 val)](
      value: U128 val)
    : None val
    ```

    #### Parameters

    - value: [U128](builtin-u128) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.push_u16()
  id: builtin-array#push_u16optional-b-a-realb-val-u8-val
  summary: Add a U16 to the end of the array
  belongs_to: Array
  description: |-
    ### push_u16\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L581)

    Add a U16 to the end of the array. This is only allowed for an array of U8s.

    ``` pony
    fun ref push_u16[optional B: (A & Real[B] val & U8 val)](
      value: U16 val)
    : None val
    ```

    #### Parameters

    - value: [U16](builtin-u16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.push_u32()
  id: builtin-array#push_u32optional-b-a-realb-val-u8-val
  summary: Add a U32 to the end of the array
  belongs_to: Array
  description: |-
    ### push_u32\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L590)

    Add a U32 to the end of the array. This is only allowed for an array of U8s.

    ``` pony
    fun ref push_u32[optional B: (A & Real[B] val & U8 val)](
      value: U32 val)
    : None val
    ```

    #### Parameters

    - value: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.push_u64()
  id: builtin-array#push_u64optional-b-a-realb-val-u8-val
  summary: Add a U64 to the end of the array
  belongs_to: Array
  description: |-
    ### push_u64\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L599)

    Add a U64 to the end of the array. This is only allowed for an array of U8s.

    ``` pony
    fun ref push_u64[optional B: (A & Real[B] val & U8 val)](
      value: U64 val)
    : None val
    ```

    #### Parameters

    - value: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.push_u8()
  id: builtin-array#push_u8optional-b-a-realb-val-u8-val
  summary: Add a U8 to the end of the array
  belongs_to: Array
  description: |-
    ### push_u8\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L572)

    Add a U8 to the end of the array. This is only allowed for an array of U8s.

    ``` pony
    fun ref push_u8[optional B: (A & Real[B] val & U8 val)](
      value: U8 val)
    : None val
    ```

    #### Parameters

    - value: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.read_u128()
  id: builtin-array#read_u128optional-b-a-realb-val-u8-val
  summary: Reads a U128 from offset
  belongs_to: Array
  description: |-
    ### read_u128\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L252)

    Reads a U128 from offset. This is only allowed for an array of U8s.

    ``` pony
    fun box read_u128[optional B: (A & Real[B] val & U8 val)](
      offset: USize val)
    : U128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Array.read_u16()
  id: builtin-array#read_u16optional-b-a-realb-val-u8-val
  summary: Reads a U16 from offset
  belongs_to: Array
  description: |-
    ### read_u16\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L219)

    Reads a U16 from offset. This is only allowed for an array of U8s.

    ``` pony
    fun box read_u16[optional B: (A & Real[B] val & U8 val)](
      offset: USize val)
    : U16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Array.read_u32()
  id: builtin-array#read_u32optional-b-a-realb-val-u8-val
  summary: Reads a U32 from offset
  belongs_to: Array
  description: |-
    ### read_u32\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L230)

    Reads a U32 from offset. This is only allowed for an array of U8s.

    ``` pony
    fun box read_u32[optional B: (A & Real[B] val & U8 val)](
      offset: USize val)
    : U32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Array.read_u64()
  id: builtin-array#read_u64optional-b-a-realb-val-u8-val
  summary: Reads a U64 from offset
  belongs_to: Array
  description: |-
    ### read_u64\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L241)

    Reads a U64 from offset. This is only allowed for an array of U8s.

    ``` pony
    fun box read_u64[optional B: (A & Real[B] val & U8 val)](
      offset: USize val)
    : U64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Array.read_u8()
  id: builtin-array#read_u8optional-b-a-realb-val-u8-val
  summary: Reads a U8 from offset
  belongs_to: Array
  description: |-
    ### read_u8\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L209)

    Reads a U8 from offset. This is only allowed for an array of U8s.

    ``` pony
    fun box read_u8[optional B: (A & Real[B] val & U8 val)](
      offset: USize val)
    : U8 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: Array.remove()
  id: builtin-array#remove
  summary: Remove n elements from the array, beginning at index i
  belongs_to: Array
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L556)

    Remove n elements from the array, beginning at index i.

    ``` pony
    fun ref remove(
      i: USize val,
      n: USize val)
    : None val
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - n: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.reserve()
  id: builtin-array#reserve
  summary: Reserve space for len elements, including whatever elements are already in the array
  belongs_to: Array
  description: |-
    ### reserve

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L168)

    Reserve space for len elements, including whatever elements are already in the array. Array space grows geometrically.

    ``` pony
    fun ref reserve(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.reverse()
  id: builtin-array#reverse
  summary: Create a new array with the elements in reverse order
  belongs_to: Array
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L882)

    Create a new array with the elements in reverse order. The new array contains references to the same elements that the old array contains, the elements themselves are not copied.

    ``` pony
    fun box reverse()
    : Array[this->A!] ref^
    ```

    #### Returns

    - [Array](index)\[this-\>A!\] ref^

    &nbsp;
- name: Array.reverse_in_place()
  id: builtin-array#reverse_in_place
  summary: Reverse the array in place
  belongs_to: Array
  description: |-
    ### reverse_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L890)

    Reverse the array in place.

    ``` pony
    fun ref reverse_in_place()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.rfind()
  id: builtin-array#rfind
  summary: Find the nth appearance of value from the end of the array, starting at offset and examining lower indices, and using the supplied predicate for comparisons
  belongs_to: Array
  description: |-
    ### rfind

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L787)

    Find the `nth` appearance of `value` from the end of the array, starting at `offset` and examining lower indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.

    By default, the search starts at the last element of the array, returns the first instance of `value` found, and uses object identity for comparison.

    ``` pony
    fun box rfind(
      value: A!,
      offset: USize val = call,
      nth: USize val = 0,
      predicate: {(box->A!, box->A!): Bool}[A] val = lambda)
    : USize val ?
    ```

    #### Parameters

    - value: A!
    - offset: [USize](builtin-usize) val = call
    - nth: [USize](builtin-usize) val = 0
    - predicate: {(box-\>A!, box-\>A!): Bool}\[A\] val = lambda

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: Array.shift()
  id: builtin-array#shift
  summary: Remove an element from the beginning of the array
  belongs_to: Array
  description: |-
    ### shift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L640)

    Remove an element from the beginning of the array. The removed element is returned.

    ``` pony
    fun ref shift()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: Array.size()
  id: builtin-array#size
  summary: The number of elements in the array
  belongs_to: Array
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L156)

    The number of elements in the array.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Array.slice()
  id: builtin-array#slice
  summary: Create a new array that is a clone of a portion of this array
  belongs_to: Array
  description: |-
    ### slice

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L833)

    Create a new array that is a clone of a portion of this array. The range is exclusive and saturated. The new array contains references to the same elements that the old array contains, the elements themselves are not cloned.

    ``` pony
    fun box slice(
      from: USize val = 0,
      to: USize val = call,
      step: USize val = 1)
    : Array[this->A!] ref^
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call
    - step: [USize](builtin-usize) val = 1

    #### Returns

    - [Array](index)\[this-\>A!\] ref^

    &nbsp;
- name: Array.space()
  id: builtin-array#space
  summary: The available space in the array
  belongs_to: Array
  description: |-
    ### space

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L162)

    The available space in the array.

    ``` pony
    fun box space()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Array.swap_elements()
  id: builtin-array#swap_elements
  summary: Swap the element at index i with the element at index j
  belongs_to: Array
  description: |-
    ### swap_elements

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L907)

    Swap the element at index i with the element at index j. If either i or j are out of bounds, an error is raised.

    ``` pony
    fun ref swap_elements(
      i: USize val,
      j: USize val)
    : None val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - j: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: Array.trim()
  id: builtin-array#trim
  summary: Return a shared portion of this array, covering from until to
  belongs_to: Array
  description: |-
    ### trim

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L412)

    Return a shared portion of this array, covering `from` until `to`. Both the original and the new array are immutable, as they share memory. The operation does not allocate a new array pointer nor copy elements.

    ``` pony
    fun val trim(
      from: USize val = 0,
      to: USize val = call)
    : Array[A] val
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call

    #### Returns

    - [Array](index)\[A\] val

    &nbsp;
- name: Array.trim_in_place()
  id: builtin-array#trim_in_place
  summary: Trim the array to a portion of itself, covering from until to
  belongs_to: Array
  description: |-
    ### trim_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L385)

    Trim the array to a portion of itself, covering `from` until `to`. Unlike slice, the operation does not allocate a new array nor copy elements.

    ``` pony
    fun ref trim_in_place(
      from: USize val = 0,
      to: USize val = call)
    : None val
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.truncate()
  id: builtin-array#truncate
  summary: Truncate an array to the given length, discarding excess elements
  belongs_to: Array
  description: |-
    ### truncate

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L378)

    Truncate an array to the given length, discarding excess elements. If the array is already smaller than len, do nothing.

    ``` pony
    fun ref truncate(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.unchop()
  id: builtin-array#unchop
  summary: Unchops two iso arrays to return the original array they were chopped from
  belongs_to: Array
  description: |-
    ### unchop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L479)

    Unchops two iso arrays to return the original array they were chopped from. Both input arrays are isolated and mutable and were originally chopped from a single array. This function checks that they are indeed two arrays chopped from the same original array and can be unchopped before doing the unchopping and returning the unchopped array. If the two arrays cannot be unchopped it returns both arrays without modifying them. The operation does not allocate a new array pointer nor copy elements.

    ``` pony
    fun iso unchop(
      b: Array[A] iso)
    : ((Array[A] iso^ , Array[A] iso^) | Array[A] iso^)
    ```

    #### Parameters

    - b: [Array](index)\[A\] iso

    #### Returns

    - (([Array](index)\[A\] iso^ , [Array](index)\[A\] iso^) \| [Array](index)\[A\] iso^)

    &nbsp;
- name: Array.undefined()
  id: builtin-array#undefinedoptional-b-a-realb-val-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val
  summary: Resize to len elements, populating previously empty elements with random memory
  belongs_to: Array
  description: "### undefined\\[optional B: (A & [Real](builtin-real)\\[B\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L201)\n\nResize to len elements, populating previously empty elements with random memory. This is only allowed for an array of numbers.\n\n``` pony\nfun ref undefined[optional B: (A & Real[B] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))](\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n&nbsp;"
- name: Array.unshift()
  id: builtin-array#unshift
  summary: Add an element to the beginning of the array
  belongs_to: Array
  description: |-
    ### unshift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L632)

    Add an element to the beginning of the array.

    ``` pony
    fun ref unshift(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Array.update()
  id: builtin-array#update
  summary: Change the i-th element, raising an error if the index is out of bounds
  belongs_to: Array
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L327)

    Change the i-th element, raising an error if the index is out of bounds.

    ``` pony
    fun ref update(
      i: USize val,
      value: A)
    : A^ ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: A

    #### Returns

    - A^ ?

    &nbsp;
- name: Array.update_u128()
  id: builtin-array#update_u128optional-b-a-realb-val-u8-val
  summary: Write a U128 at offset
  belongs_to: Array
  description: |-
    ### update_u128\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L316)

    Write a U128 at offset. This is only allowed for an array of U8s.

    ``` pony
    fun ref update_u128[optional B: (A & Real[B] val & U8 val)](
      offset: USize val,
      value: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val
    - value: [U128](builtin-u128) val

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Array.update_u16()
  id: builtin-array#update_u16optional-b-a-realb-val-u8-val
  summary: Write a U16 at offset
  belongs_to: Array
  description: |-
    ### update_u16\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L283)

    Write a U16 at offset. This is only allowed for an array of U8s.

    ``` pony
    fun ref update_u16[optional B: (A & Real[B] val & U8 val)](
      offset: USize val,
      value: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val
    - value: [U16](builtin-u16) val

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Array.update_u32()
  id: builtin-array#update_u32optional-b-a-realb-val-u8-val
  summary: Write a U32 at offset
  belongs_to: Array
  description: |-
    ### update_u32\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L294)

    Write a U32 at offset. This is only allowed for an array of U8s.

    ``` pony
    fun ref update_u32[optional B: (A & Real[B] val & U8 val)](
      offset: USize val,
      value: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val
    - value: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Array.update_u64()
  id: builtin-array#update_u64optional-b-a-realb-val-u8-val
  summary: Write a U64 at offset
  belongs_to: Array
  description: |-
    ### update_u64\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L305)

    Write a U64 at offset. This is only allowed for an array of U8s.

    ``` pony
    fun ref update_u64[optional B: (A & Real[B] val & U8 val)](
      offset: USize val,
      value: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val
    - value: [U64](builtin-u64) val

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Array.update_u8()
  id: builtin-array#update_u8optional-b-a-realb-val-u8-val
  summary: Write a U8 at offset
  belongs_to: Array
  description: |-
    ### update_u8\[optional B: (A & [Real](builtin-real)\[B\] val & [U8](builtin-u8) val)\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L273)

    Write a U8 at offset. This is only allowed for an array of U8s.

    ``` pony
    fun ref update_u8[optional B: (A & Real[B] val & U8 val)](
      offset: USize val,
      value: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val
    - value: [U8](builtin-u8) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: Array.values()
  id: builtin-array#values
  summary: Return an iterator over the values in the array
  belongs_to: Array
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L924)

    Return an iterator over the values in the array.

    ``` pony
    fun box values()
    : ArrayValues[A, this->Array[A] ref] ref^
    ```

    #### Returns

    - [ArrayValues](builtin-arrayvalues)\[A, this-\>[Array](index)\[A\] ref\] ref^

    &nbsp;
- name: ArrayKeys
  id: builtin-arraykeys
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ArrayKeys\\[A: A, B: [Array](builtin-array)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L936)\n\n``` pony\nclass ref ArrayKeys[A: A, B: Array[A] #read] is\n  Iterator[USize val] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[[USize](builtin-usize) val\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L940)\n\n``` pony\nnew ref create(\n  array: B)\n: ArrayKeys[A, B] ref^\n```\n\n#### Parameters\n\n- array: B\n\n#### Returns\n\n- [ArrayKeys](index)\\[A, B\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L944)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L947)\n\n``` pony\nfun ref next()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayKeys](https://stdlib.ponylang.io/builtin-ArrayKeys)"
- name: ArrayKeys.create()
  id: builtin-arraykeys#create
  summary: null
  belongs_to: ArrayKeys
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L940)

    ``` pony
    new ref create(
      array: B)
    : ArrayKeys[A, B] ref^
    ```

    #### Parameters

    - array: B

    #### Returns

    - [ArrayKeys](index)\[A, B\] ref^

    ## Public Functions
- name: ArrayKeys.has_next()
  id: builtin-arraykeys#has_next
  summary: null
  belongs_to: ArrayKeys
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L944)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: ArrayKeys.next()
  id: builtin-arraykeys#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ArrayKeys
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L947)\n\n``` pony\nfun ref next()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayKeys](https://stdlib.ponylang.io/builtin-ArrayKeys)"
- name: ArrayPairs
  id: builtin-arraypairs
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ArrayPairs\\[A: A, B: [Array](builtin-array)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L972)\n\n``` pony\nclass ref ArrayPairs[A: A, B: Array[A] #read] is\n  Iterator[(USize val , B->A)] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[([USize](builtin-usize) val , B-\\>A)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L976)\n\n``` pony\nnew ref create(\n  array: B)\n: ArrayPairs[A, B] ref^\n```\n\n#### Parameters\n\n- array: B\n\n#### Returns\n\n- [ArrayPairs](index)\\[A, B\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L980)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L983)\n\n``` pony\nfun ref next()\n: (USize val , B->A) ?\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , B-\\>A) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayPairs](https://stdlib.ponylang.io/builtin-ArrayPairs)"
- name: ArrayPairs.create()
  id: builtin-arraypairs#create
  summary: null
  belongs_to: ArrayPairs
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L976)

    ``` pony
    new ref create(
      array: B)
    : ArrayPairs[A, B] ref^
    ```

    #### Parameters

    - array: B

    #### Returns

    - [ArrayPairs](index)\[A, B\] ref^

    ## Public Functions
- name: ArrayPairs.has_next()
  id: builtin-arraypairs#has_next
  summary: null
  belongs_to: ArrayPairs
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L980)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: ArrayPairs.next()
  id: builtin-arraypairs#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ArrayPairs
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L983)\n\n``` pony\nfun ref next()\n: (USize val , B->A) ?\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , B-\\>A) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayPairs](https://stdlib.ponylang.io/builtin-ArrayPairs)"
- name: ArrayValues
  id: builtin-arrayvalues
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ArrayValues\\[A: A, B: [Array](builtin-array)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L954)\n\n``` pony\nclass ref ArrayValues[A: A, B: Array[A] #read] is\n  Iterator[B->A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[B-\\>A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L958)\n\n``` pony\nnew ref create(\n  array: B)\n: ArrayValues[A, B] ref^\n```\n\n#### Parameters\n\n- array: B\n\n#### Returns\n\n- [ArrayValues](index)\\[A, B\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L962)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L965)\n\n``` pony\nfun ref next()\n: B->A ?\n```\n\n#### Returns\n\n- B-\\>A ?\n\n### rewind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L968)\n\n``` pony\nfun ref rewind()\n: ArrayValues[A, B] ref\n```\n\n#### Returns\n\n- [ArrayValues](index)\\[A, B\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayValues](https://stdlib.ponylang.io/builtin-ArrayValues)"
- name: ArrayValues.create()
  id: builtin-arrayvalues#create
  summary: null
  belongs_to: ArrayValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L958)

    ``` pony
    new ref create(
      array: B)
    : ArrayValues[A, B] ref^
    ```

    #### Parameters

    - array: B

    #### Returns

    - [ArrayValues](index)\[A, B\] ref^

    ## Public Functions
- name: ArrayValues.has_next()
  id: builtin-arrayvalues#has_next
  summary: null
  belongs_to: ArrayValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L962)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: ArrayValues.next()
  id: builtin-arrayvalues#next
  summary: null
  belongs_to: ArrayValues
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/array/#L965)

    ``` pony
    fun ref next()
    : B->A ?
    ```

    #### Returns

    - B-\>A ?

    &nbsp;
- name: ArrayValues.rewind()
  id: builtin-arrayvalues#rewind
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ArrayValues
  description: "### rewind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/array/#L968)\n\n``` pony\nfun ref rewind()\n: ArrayValues[A, B] ref\n```\n\n#### Returns\n\n- [ArrayValues](index)\\[A, B\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ArrayValues](https://stdlib.ponylang.io/builtin-ArrayValues)"
- name: AsioEvent
  id: builtin-asioevent
  summary: Functions for asynchronous event notification
  description: "# AsioEvent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L6)\n\nFunctions for asynchronous event notification.\n\n``` pony\nprimitive val AsioEvent\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L6)\n\n``` pony\nnew val create()\n: AsioEvent val^\n```\n\n#### Returns\n\n- [AsioEvent](index) val^\n\n## Public Functions\n\n### none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)\n\nAn empty event.\n\n``` pony\nfun box none()\n: Pointer[AsioEvent val] tag\n```\n\n#### Returns\n\n- [Pointer](builtin-pointer)\\[[AsioEvent](index) val\\] tag\n\n### readable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L16)\n\nReturns true if the flags contain the readable flag.\n\n``` pony\nfun box readable(\n  flags: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- flags: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### writeable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L22)\n\nReturns true if the flags contain the writeable flag.\n\n``` pony\nfun box writeable(\n  flags: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- flags: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### disposable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L28)\n\nReturns true if the event should be disposed of.\n\n``` pony\nfun box disposable(\n  flags: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- flags: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### oneshotable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L34)\n\nReturns true if the flags contain the oneshot flag.\n\n``` pony\nfun box oneshotable(\n  flags: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- flags: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L40)\n\n``` pony\nfun box dispose()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### read\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L42)\n\n``` pony\nfun box read()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L44)\n\n``` pony\nfun box write()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### timer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L46)\n\n``` pony\nfun box timer()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### signal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L48)\n\n``` pony\nfun box signal()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### read_write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L50)\n\n``` pony\nfun box read_write()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### oneshot\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L52)\n\n``` pony\nfun box oneshot()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### read_write_oneshot\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L54)\n\n``` pony\nfun box read_write_oneshot()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)\n\n``` pony\nfun box eq(\n  that: AsioEvent val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AsioEvent](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)\n\n``` pony\nfun box ne(\n  that: AsioEvent val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AsioEvent](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AsioEvent](https://stdlib.ponylang.io/builtin-AsioEvent)"
- name: AsioEvent.create()
  id: builtin-asioevent#create
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L6)

    ``` pony
    new val create()
    : AsioEvent val^
    ```

    #### Returns

    - [AsioEvent](index) val^

    ## Public Functions
- name: AsioEvent.disposable()
  id: builtin-asioevent#disposable
  summary: Returns true if the event should be disposed of
  belongs_to: AsioEvent
  description: |-
    ### disposable

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L28)

    Returns true if the event should be disposed of.

    ``` pony
    fun box disposable(
      flags: U32 val)
    : Bool val
    ```

    #### Parameters

    - flags: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: AsioEvent.dispose()
  id: builtin-asioevent#dispose
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### dispose

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L40)

    ``` pony
    fun box dispose()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.eq()
  id: builtin-asioevent#eq
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)

    ``` pony
    fun box eq(
      that: AsioEvent val)
    : Bool val
    ```

    #### Parameters

    - that: [AsioEvent](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: AsioEvent.ne()
  id: builtin-asioevent#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AsioEvent
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)\n\n``` pony\nfun box ne(\n  that: AsioEvent val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [AsioEvent](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AsioEvent](https://stdlib.ponylang.io/builtin-AsioEvent)"
- name: AsioEvent.none()
  id: builtin-asioevent#none
  summary: An empty event
  belongs_to: AsioEvent
  description: |-
    ### none

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L10)

    An empty event.

    ``` pony
    fun box none()
    : Pointer[AsioEvent val] tag
    ```

    #### Returns

    - [Pointer](builtin-pointer)\[[AsioEvent](index) val\] tag
- name: AsioEvent.oneshot()
  id: builtin-asioevent#oneshot
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### oneshot

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L52)

    ``` pony
    fun box oneshot()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.oneshotable()
  id: builtin-asioevent#oneshotable
  summary: Returns true if the flags contain the oneshot flag
  belongs_to: AsioEvent
  description: |-
    ### oneshotable

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L34)

    Returns true if the flags contain the oneshot flag.

    ``` pony
    fun box oneshotable(
      flags: U32 val)
    : Bool val
    ```

    #### Parameters

    - flags: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: AsioEvent.read()
  id: builtin-asioevent#read
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### read

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L42)

    ``` pony
    fun box read()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.read_write()
  id: builtin-asioevent#read_write
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### read_write

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L50)

    ``` pony
    fun box read_write()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.read_write_oneshot()
  id: builtin-asioevent#read_write_oneshot
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### read_write_oneshot

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L54)

    ``` pony
    fun box read_write_oneshot()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.readable()
  id: builtin-asioevent#readable
  summary: Returns true if the flags contain the readable flag
  belongs_to: AsioEvent
  description: |-
    ### readable

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L16)

    Returns true if the flags contain the readable flag.

    ``` pony
    fun box readable(
      flags: U32 val)
    : Bool val
    ```

    #### Parameters

    - flags: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: AsioEvent.signal()
  id: builtin-asioevent#signal
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### signal

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L48)

    ``` pony
    fun box signal()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.timer()
  id: builtin-asioevent#timer
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### timer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L46)

    ``` pony
    fun box timer()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.write()
  id: builtin-asioevent#write
  summary: null
  belongs_to: AsioEvent
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L44)

    ``` pony
    fun box write()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: AsioEvent.writeable()
  id: builtin-asioevent#writeable
  summary: Returns true if the flags contain the writeable flag
  belongs_to: AsioEvent
  description: |-
    ### writeable

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L22)

    Returns true if the flags contain the writeable flag.

    ``` pony
    fun box writeable(
      flags: U32 val)
    : Bool val
    ```

    #### Parameters

    - flags: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: AsioEventID
  id: builtin-asioeventid
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AsioEventID\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L1)\n\n``` pony\ntype AsioEventID is\n  Pointer[AsioEvent val] tag\n```\n\n#### Type Alias For\n\n- [Pointer](builtin-pointer)\\[[AsioEvent](builtin-asioevent) val\\] tag\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AsioEventID](https://stdlib.ponylang.io/builtin-AsioEventID)"
- name: AsioEventNotify
  id: builtin-asioeventnotify
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AsioEventNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/asio_event/#L3)\n\n``` pony\ninterface tag AsioEventNotify\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-AsioEventNotify](https://stdlib.ponylang.io/builtin-AsioEventNotify)"
- name: Assert
  id: assert-assert
  summary: This is a debug only assertion
  description: "# Assert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L9)\n\nThis is a debug only assertion. If the test is false, it will print any supplied error message to stderr and raise an error.\n\n``` pony\nprimitive val Assert\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L9)\n\n``` pony\nnew val create()\n: Assert val^\n```\n\n#### Returns\n\n- [Assert](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L14)\n\n``` pony\nfun box apply(\n  test: Bool val,\n  msg: String val = \"\")\n: None val ?\n```\n\n#### Parameters\n\n- test: [Bool](builtin-bool) val\n- msg: [String](builtin-string) val = \"\"\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L14)\n\n``` pony\nfun box eq(\n  that: Assert val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Assert](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L14)\n\n``` pony\nfun box ne(\n  that: Assert val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Assert](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/assert-Assert](https://stdlib.ponylang.io/assert-Assert)"
- name: Assert.apply()
  id: assert-assert#apply
  summary: null
  belongs_to: Assert
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L14)

    ``` pony
    fun box apply(
      test: Bool val,
      msg: String val = "")
    : None val ?
    ```

    #### Parameters

    - test: [Bool](builtin-bool) val
    - msg: [String](builtin-string) val = ""

    #### Returns

    - [None](builtin-none) val ?
- name: Assert.create()
  id: assert-assert#create
  summary: null
  belongs_to: Assert
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L9)

    ``` pony
    new val create()
    : Assert val^
    ```

    #### Returns

    - [Assert](index) val^

    ## Public Functions
- name: Assert.eq()
  id: assert-assert#eq
  summary: null
  belongs_to: Assert
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L14)

    ``` pony
    fun box eq(
      that: Assert val)
    : Bool val
    ```

    #### Parameters

    - that: [Assert](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Assert.ne()
  id: assert-assert#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Assert
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L14)\n\n``` pony\nfun box ne(\n  that: Assert val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Assert](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/assert-Assert](https://stdlib.ponylang.io/assert-Assert)"
- name: AsyncBenchContinue
  id: ponybench-asyncbenchcontinue
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# AsyncBenchContinue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/_runner/#L145)\n\n``` pony\nclass val AsyncBenchContinue\n```\n\n## Public Functions\n\n### complete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/_runner/#L153)\n\n``` pony\nfun box complete()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### fail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/_runner/#L157)\n\n``` pony\nfun box fail()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncBenchContinue](https://stdlib.ponylang.io/ponybench-AsyncBenchContinue)"
- name: AsyncBenchContinue.complete()
  id: ponybench-asyncbenchcontinue#complete
  summary: null
  belongs_to: AsyncBenchContinue
  description: |-
    ### complete

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/_runner/#L153)

    ``` pony
    fun box complete()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val
- name: AsyncBenchContinue.fail()
  id: ponybench-asyncbenchcontinue#fail
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AsyncBenchContinue
  description: "### fail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/_runner/#L157)\n\n``` pony\nfun box fail()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncBenchContinue](https://stdlib.ponylang.io/ponybench-AsyncBenchContinue)"
- name: AsyncMicroBenchmark
  id: ponybench-asyncmicrobenchmark
  summary: Asynchronous benchmarks must provide this trait
  description: "# AsyncMicroBenchmark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L28)\n\nAsynchronous benchmarks must provide this trait. The `apply` method defines a single iteration in a sample. Each phase of the sample completes when the given `AsyncBenchContinue` has its `complete` method invoked. Setup and Teardown are defined by the `before` and `after` methods respectively. The `before` method runs before a sample of benchmarks and `after` runs after the all iterations in the sample have completed. If your benchmark requires setup and/or teardown to occur beween each iteration of the benchmark, then you can use `before_iteration` and `after_iteration` methods respectively that run before/after each iteration.\n\n``` pony\ntrait iso AsyncMicroBenchmark\n```\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L40)\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L41)\n\n``` pony\nfun box config()\n: BenchConfig val\n```\n\n#### Returns\n\n- [BenchConfig](ponybench-benchconfig) val\n\n### overhead\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L42)\n\n``` pony\nfun box overhead()\n: AsyncMicroBenchmark iso^\n```\n\n#### Returns\n\n- [AsyncMicroBenchmark](index) iso^\n\n### before\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L43)\n\n``` pony\nfun ref before(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### before_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L44)\n\n``` pony\nfun ref before_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L45)\n\n``` pony\nfun ref apply(\n  c: AsyncBenchContinue val)\n: None val ?\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### after\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L46)\n\n``` pony\nfun ref after(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L47)\n\n``` pony\nfun ref after_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncMicroBenchmark](https://stdlib.ponylang.io/ponybench-AsyncMicroBenchmark)"
- name: AsyncMicroBenchmark.after()
  id: ponybench-asyncmicrobenchmark#after
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### after

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L46)

    ``` pony
    fun ref after(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncMicroBenchmark.after_iteration()
  id: ponybench-asyncmicrobenchmark#after_iteration
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AsyncMicroBenchmark
  description: "### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L47)\n\n``` pony\nfun ref after_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncMicroBenchmark](https://stdlib.ponylang.io/ponybench-AsyncMicroBenchmark)"
- name: AsyncMicroBenchmark.apply()
  id: ponybench-asyncmicrobenchmark#apply
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L45)

    ``` pony
    fun ref apply(
      c: AsyncBenchContinue val)
    : None val ?
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: AsyncMicroBenchmark.before()
  id: ponybench-asyncmicrobenchmark#before
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### before

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L43)

    ``` pony
    fun ref before(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncMicroBenchmark.before_iteration()
  id: ponybench-asyncmicrobenchmark#before_iteration
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### before_iteration

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L44)

    ``` pony
    fun ref before_iteration(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncMicroBenchmark.config()
  id: ponybench-asyncmicrobenchmark#config
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### config

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L41)

    ``` pony
    fun box config()
    : BenchConfig val
    ```

    #### Returns

    - [BenchConfig](ponybench-benchconfig) val

    &nbsp;
- name: AsyncMicroBenchmark.name()
  id: ponybench-asyncmicrobenchmark#name
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L40)

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: AsyncMicroBenchmark.overhead()
  id: ponybench-asyncmicrobenchmark#overhead
  summary: null
  belongs_to: AsyncMicroBenchmark
  description: |-
    ### overhead

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L42)

    ``` pony
    fun box overhead()
    : AsyncMicroBenchmark iso^
    ```

    #### Returns

    - [AsyncMicroBenchmark](index) iso^

    &nbsp;
- name: AsyncOverheadBenchmark
  id: ponybench-asyncoverheadbenchmark
  summary: Default benchmark for measuring asynchronous overhead
  description: "# AsyncOverheadBenchmark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L90)\n\nDefault benchmark for measuring asynchronous overhead.\n\n``` pony\nclass iso AsyncOverheadBenchmark is\n  AsyncMicroBenchmark iso\n```\n\n#### Implements\n\n- [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L90)\n\n``` pony\nnew iso create()\n: AsyncOverheadBenchmark iso^\n```\n\n#### Returns\n\n- [AsyncOverheadBenchmark](index) iso^\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L94)\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L97)\n\n``` pony\nfun ref apply(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L41)\n\n``` pony\nfun box config()\n: BenchConfig val\n```\n\n#### Returns\n\n- [BenchConfig](ponybench-benchconfig) val\n\n### overhead\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L42)\n\n``` pony\nfun box overhead()\n: AsyncMicroBenchmark iso^\n```\n\n#### Returns\n\n- [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso^\n\n### before\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L43)\n\n``` pony\nfun ref before(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### before_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L44)\n\n``` pony\nfun ref before_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### after\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L46)\n\n``` pony\nfun ref after(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L47)\n\n``` pony\nfun ref after_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncOverheadBenchmark](https://stdlib.ponylang.io/ponybench-AsyncOverheadBenchmark)"
- name: AsyncOverheadBenchmark.after()
  id: ponybench-asyncoverheadbenchmark#after
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### after

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L46)

    ``` pony
    fun ref after(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncOverheadBenchmark.after_iteration()
  id: ponybench-asyncoverheadbenchmark#after_iteration
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: AsyncOverheadBenchmark
  description: "### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L47)\n\n``` pony\nfun ref after_iteration(\n  c: AsyncBenchContinue val)\n: None val\n```\n\n#### Parameters\n\n- c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-AsyncOverheadBenchmark](https://stdlib.ponylang.io/ponybench-AsyncOverheadBenchmark)"
- name: AsyncOverheadBenchmark.apply()
  id: ponybench-asyncoverheadbenchmark#apply
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L97)

    ``` pony
    fun ref apply(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncOverheadBenchmark.before()
  id: ponybench-asyncoverheadbenchmark#before
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### before

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L43)

    ``` pony
    fun ref before(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncOverheadBenchmark.before_iteration()
  id: ponybench-asyncoverheadbenchmark#before_iteration
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### before_iteration

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L44)

    ``` pony
    fun ref before_iteration(
      c: AsyncBenchContinue val)
    : None val
    ```

    #### Parameters

    - c: [AsyncBenchContinue](ponybench-asyncbenchcontinue) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: AsyncOverheadBenchmark.config()
  id: ponybench-asyncoverheadbenchmark#config
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### config

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L41)

    ``` pony
    fun box config()
    : BenchConfig val
    ```

    #### Returns

    - [BenchConfig](ponybench-benchconfig) val

    &nbsp;
- name: AsyncOverheadBenchmark.create()
  id: ponybench-asyncoverheadbenchmark#create
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L90)

    ``` pony
    new iso create()
    : AsyncOverheadBenchmark iso^
    ```

    #### Returns

    - [AsyncOverheadBenchmark](index) iso^

    ## Public Functions
- name: AsyncOverheadBenchmark.name()
  id: ponybench-asyncoverheadbenchmark#name
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L94)

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: AsyncOverheadBenchmark.overhead()
  id: ponybench-asyncoverheadbenchmark#overhead
  summary: null
  belongs_to: AsyncOverheadBenchmark
  description: |-
    ### overhead

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L42)

    ``` pony
    fun box overhead()
    : AsyncMicroBenchmark iso^
    ```

    #### Returns

    - [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso^

    &nbsp;
- name: Backpressure
  id: backpressure-backpressure
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Backpressure\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L95)\n\n``` pony\nprimitive val Backpressure\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L95)\n\n``` pony\nnew val create()\n: Backpressure val^\n```\n\n#### Returns\n\n- [Backpressure](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)\n\n``` pony\nfun box apply(\n  auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val))\n: None val\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### release\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L99)\n\n``` pony\nfun box release(\n  auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val))\n: None val\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)\n\n``` pony\nfun box eq(\n  that: Backpressure val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Backpressure](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)\n\n``` pony\nfun box ne(\n  that: Backpressure val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Backpressure](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure-Backpressure](https://stdlib.ponylang.io/backpressure-Backpressure)"
- name: Backpressure.apply()
  id: backpressure-backpressure#apply
  summary: null
  belongs_to: Backpressure
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)

    ``` pony
    fun box apply(
      auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val))
    : None val
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)

    #### Returns

    - [None](builtin-none) val
- name: Backpressure.create()
  id: backpressure-backpressure#create
  summary: null
  belongs_to: Backpressure
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L95)

    ``` pony
    new val create()
    : Backpressure val^
    ```

    #### Returns

    - [Backpressure](index) val^

    ## Public Functions
- name: Backpressure.eq()
  id: backpressure-backpressure#eq
  summary: null
  belongs_to: Backpressure
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)

    ``` pony
    fun box eq(
      that: Backpressure val)
    : Bool val
    ```

    #### Parameters

    - that: [Backpressure](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Backpressure.ne()
  id: backpressure-backpressure#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Backpressure
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L96)\n\n``` pony\nfun box ne(\n  that: Backpressure val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Backpressure](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure-Backpressure](https://stdlib.ponylang.io/backpressure-Backpressure)"
- name: Backpressure.release()
  id: backpressure-backpressure#release
  summary: null
  belongs_to: Backpressure
  description: |-
    ### release

    [\[Source\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L99)

    ``` pony
    fun box release(
      auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val))
    : None val
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: BackpressureAuth
  id: backpressure-backpressureauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# BackpressureAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/backpressure/backpressure/#L93)\n\n``` pony\ntype BackpressureAuth is\n  (AmbientAuth val | ApplyReleaseBackpressureAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/backpressure-BackpressureAuth](https://stdlib.ponylang.io/backpressure-BackpressureAuth)"
- name: Base64
  id: encode-base64-base64
  summary: Encode for PEM (RFC 1421)
  description: "# Base64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L26)\n\n``` pony\nprimitive val Base64\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L26)\n\n``` pony\nnew val create()\n: Base64 val^\n```\n\n#### Returns\n\n- [Base64](index) val^\n\n## Public Functions\n\n### encode_pem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)\n\nEncode for PEM (RFC 1421).\n\n``` pony\nfun box encode_pem(\n  data: ReadSeq[U8 val] box)\n: String iso^\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### encode_mime\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L33)\n\nEncode for MIME (RFC 2045).\n\n``` pony\nfun box encode_mime(\n  data: ReadSeq[U8 val] box)\n: String iso^\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### encode_url\\[optional A: [Seq](builtin-seq)\\[[U8](builtin-u8) val\\] iso\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L39)\n\nEncode for URLs (RFC 4648). Padding characters are stripped by default.\n\n``` pony\nfun box encode_url[optional A: Seq[U8 val] iso](\n  data: ReadSeq[U8 val] box,\n  pad: Bool val = false)\n: A^\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n- pad: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- A^\n\n### encode\\[optional A: [Seq](builtin-seq)\\[[U8](builtin-u8) val\\] iso\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L50)\n\nConfigurable encoding. The defaults are for RFC 4648.\n\n``` pony\nfun box encode[optional A: Seq[U8 val] iso](\n  data: ReadSeq[U8 val] box,\n  at62: U8 val = 43,\n  at63: U8 val = 47,\n  pad: U8 val = 61,\n  linelen: USize val = 0,\n  linesep: String val = \"\n\")\n: A^\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n- at62: [U8](builtin-u8) val = 43\n- at63: [U8](builtin-u8) val = 47\n- pad: [U8](builtin-u8) val = 61\n- linelen: [USize](builtin-usize) val = 0\n- linesep: [String](builtin-string) val = \" \"\n\n#### Returns\n\n- A^\n\n### decode_url\\[optional A: [Seq](builtin-seq)\\[[U8](builtin-u8) val\\] iso\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L125)\n\nDecode for URLs (RFC 4648).\n\n``` pony\nfun box decode_url[optional A: Seq[U8 val] iso](\n  data: ReadSeq[U8 val] box)\n: A^ ?\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n\n#### Returns\n\n- A^ ?\n\n### decode\\[optional A: [Seq](builtin-seq)\\[[U8](builtin-u8) val\\] iso\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L131)\n\nConfigurable decoding. The defaults are for RFC 4648. Missing padding is not an error. Non-base64 data, other than whitespace (which can appear at any time), is an error.\n\n``` pony\nfun box decode[optional A: Seq[U8 val] iso](\n  data: ReadSeq[U8 val] box,\n  at62: U8 val = 43,\n  at63: U8 val = 47,\n  pad: U8 val = 61)\n: A^ ?\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n- at62: [U8](builtin-u8) val = 43\n- at63: [U8](builtin-u8) val = 47\n- pad: [U8](builtin-u8) val = 61\n\n#### Returns\n\n- A^ ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)\n\n``` pony\nfun box eq(\n  that: Base64 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Base64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)\n\n``` pony\nfun box ne(\n  that: Base64 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Base64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/encode-base64-Base64](https://stdlib.ponylang.io/encode-base64-Base64)"
- name: Base64.create()
  id: encode-base64-base64#create
  summary: null
  belongs_to: Base64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L26)

    ``` pony
    new val create()
    : Base64 val^
    ```

    #### Returns

    - [Base64](index) val^

    ## Public Functions
- name: Base64.decode()
  id: encode-base64-base64#decodeoptional-a-sequ8-val-iso
  summary: Configurable decoding
  belongs_to: Base64
  description: |-
    ### decode\[optional A: [Seq](builtin-seq)\[[U8](builtin-u8) val\] iso\]

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L131)

    Configurable decoding. The defaults are for RFC 4648. Missing padding is not an error. Non-base64 data, other than whitespace (which can appear at any time), is an error.

    ``` pony
    fun box decode[optional A: Seq[U8 val] iso](
      data: ReadSeq[U8 val] box,
      at62: U8 val = 43,
      at63: U8 val = 47,
      pad: U8 val = 61)
    : A^ ?
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box
    - at62: [U8](builtin-u8) val = 43
    - at63: [U8](builtin-u8) val = 47
    - pad: [U8](builtin-u8) val = 61

    #### Returns

    - A^ ?

    &nbsp;
- name: Base64.decode_url()
  id: encode-base64-base64#decode_urloptional-a-sequ8-val-iso
  summary: Decode for URLs (RFC 4648)
  belongs_to: Base64
  description: |-
    ### decode_url\[optional A: [Seq](builtin-seq)\[[U8](builtin-u8) val\] iso\]

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L125)

    Decode for URLs (RFC 4648).

    ``` pony
    fun box decode_url[optional A: Seq[U8 val] iso](
      data: ReadSeq[U8 val] box)
    : A^ ?
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box

    #### Returns

    - A^ ?

    &nbsp;
- name: Base64.encode()
  id: encode-base64-base64#encodeoptional-a-sequ8-val-iso
  summary: Configurable encoding
  belongs_to: Base64
  description: |-
    ### encode\[optional A: [Seq](builtin-seq)\[[U8](builtin-u8) val\] iso\]

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L50)

    Configurable encoding. The defaults are for RFC 4648.

    ``` pony
    fun box encode[optional A: Seq[U8 val] iso](
      data: ReadSeq[U8 val] box,
      at62: U8 val = 43,
      at63: U8 val = 47,
      pad: U8 val = 61,
      linelen: USize val = 0,
      linesep: String val = "
    ")
    : A^
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box
    - at62: [U8](builtin-u8) val = 43
    - at63: [U8](builtin-u8) val = 47
    - pad: [U8](builtin-u8) val = 61
    - linelen: [USize](builtin-usize) val = 0
    - linesep: [String](builtin-string) val = " "

    #### Returns

    - A^

    &nbsp;
- name: Base64.encode_mime()
  id: encode-base64-base64#encode_mime
  summary: Encode for MIME (RFC 2045)
  belongs_to: Base64
  description: |-
    ### encode_mime

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L33)

    Encode for MIME (RFC 2045).

    ``` pony
    fun box encode_mime(
      data: ReadSeq[U8 val] box)
    : String iso^
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: Base64.encode_pem()
  id: encode-base64-base64#encode_pem
  summary: Encode for PEM (RFC 1421)
  belongs_to: Base64
  description: |-
    ### encode_pem

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)

    Encode for PEM (RFC 1421).

    ``` pony
    fun box encode_pem(
      data: ReadSeq[U8 val] box)
    : String iso^
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box

    #### Returns

    - [String](builtin-string) iso^
- name: Base64.encode_url()
  id: encode-base64-base64#encode_urloptional-a-sequ8-val-iso
  summary: Encode for URLs (RFC 4648)
  belongs_to: Base64
  description: |-
    ### encode_url\[optional A: [Seq](builtin-seq)\[[U8](builtin-u8) val\] iso\]

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L39)

    Encode for URLs (RFC 4648). Padding characters are stripped by default.

    ``` pony
    fun box encode_url[optional A: Seq[U8 val] iso](
      data: ReadSeq[U8 val] box,
      pad: Bool val = false)
    : A^
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box
    - pad: [Bool](builtin-bool) val = false

    #### Returns

    - A^

    &nbsp;
- name: Base64.eq()
  id: encode-base64-base64#eq
  summary: null
  belongs_to: Base64
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)

    ``` pony
    fun box eq(
      that: Base64 val)
    : Bool val
    ```

    #### Parameters

    - that: [Base64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Base64.ne()
  id: encode-base64-base64#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Base64
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/encode-base64/base64/#L27)\n\n``` pony\nfun box ne(\n  that: Base64 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Base64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/encode-base64-Base64](https://stdlib.ponylang.io/encode-base64-Base64)"
- name: BenchConfig
  id: ponybench-benchconfig
  summary: Configuration of a benchmark
  description: "# BenchConfig\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L53)\n\nConfiguration of a benchmark.\n\n``` pony\nclass val BenchConfig\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L70)\n\n``` pony\nnew val create(\n  samples': USize val = 20,\n  max_iterations': U64 val = 1000000000,\n  max_sample_time': U64 val = 100000000)\n: BenchConfig val^\n```\n\n#### Parameters\n\n- samples': [USize](builtin-usize) val = 20\n- max_iterations': [U64](builtin-u64) val = 1000000000\n- max_sample_time': [U64](builtin-u64) val = 100000000\n\n#### Returns\n\n- [BenchConfig](index) val^\n\n## Public fields\n\n### let samples: [USize](builtin-usize) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L57)\n\nTotal number of samples to be measured. (Default: 20)\n\n### let max_iterations: [U64](builtin-u64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L61)\n\nMaximum number of iterations to execute per sample. (Default: 1_000_000_000)\n\n### let max_sample_time: [U64](builtin-u64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L65)\n\nMaximum time to execute a sample in Nanoseconds. (Default: 100_000_000)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-BenchConfig](https://stdlib.ponylang.io/ponybench-BenchConfig)"
- name: BenchConfig.create()
  id: ponybench-benchconfig#create
  summary: null
  belongs_to: BenchConfig
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L70)

    ``` pony
    new val create(
      samples': USize val = 20,
      max_iterations': U64 val = 1000000000,
      max_sample_time': U64 val = 100000000)
    : BenchConfig val^
    ```

    #### Parameters

    - samples': [USize](builtin-usize) val = 20
    - max_iterations': [U64](builtin-u64) val = 1000000000
    - max_sample_time': [U64](builtin-u64) val = 100000000

    #### Returns

    - [BenchConfig](index) val^

    ## Public fields
- name: BenchConfig.max_iterations
  id: ponybench-benchconfig#let-max_iterations-u64-val
  summary: Maximum number of iterations to execute per sample
  belongs_to: BenchConfig
  description: |-
    ### let max_iterations: [U64](builtin-u64) val

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L61)

    Maximum number of iterations to execute per sample. (Default: 1_000_000_000)
- name: BenchConfig.max_sample_time
  id: ponybench-benchconfig#let-max_sample_time-u64-val
  summary: Maximum time to execute a sample in Nanoseconds
  belongs_to: BenchConfig
  description: "### let max_sample_time: [U64](builtin-u64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L65)\n\nMaximum time to execute a sample in Nanoseconds. (Default: 100_000_000)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-BenchConfig](https://stdlib.ponylang.io/ponybench-BenchConfig)"
- name: BenchConfig.samples
  id: ponybench-benchconfig#let-samples-usize-val
  summary: Total number of samples to be measured
  belongs_to: BenchConfig
  description: |-
    ### let samples: [USize](builtin-usize) val

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L57)

    Total number of samples to be measured. (Default: 20)
- name: Benchmark
  id: ponybench-benchmark
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Benchmark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L2)\n\n``` pony\ntype Benchmark is\n  (MicroBenchmark iso | AsyncMicroBenchmark iso)\n```\n\n#### Type Alias For\n\n- ([MicroBenchmark](ponybench-microbenchmark) iso \\| [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-Benchmark](https://stdlib.ponylang.io/ponybench-Benchmark)"
- name: BenchmarkList
  id: ponybench-benchmarklist
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# BenchmarkList\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L49)\n\n``` pony\ninterface tag BenchmarkList\n```\n\n## Public Functions\n\n### benchmarks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L50)\n\n``` pony\nfun tag benchmarks(\n  bench: PonyBench tag)\n: None val\n```\n\n#### Parameters\n\n- bench: [PonyBench](ponybench-ponybench) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-BenchmarkList](https://stdlib.ponylang.io/ponybench-BenchmarkList)"
- name: BenchmarkList.benchmarks()
  id: ponybench-benchmarklist#benchmarks
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: BenchmarkList
  description: "### benchmarks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L50)\n\n``` pony\nfun tag benchmarks(\n  bench: PonyBench tag)\n: None val\n```\n\n#### Parameters\n\n- bench: [PonyBench](ponybench-ponybench) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-BenchmarkList](https://stdlib.ponylang.io/ponybench-BenchmarkList)"
- name: BinaryHeap
  id: collections-binaryheap
  summary: A priority queue implemented as a binary heap
  description: "# BinaryHeap\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read, P: (\\_BinaryHeapPriority\\[A\\] val & ([MinHeapPriority](collections-minheappriority)\\[A\\] val \\| [MaxHeapPriority](collections-maxheappriority)\\[A\\] val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L5)\n\nA priority queue implemented as a binary heap. The `BinaryHeapPriority` type parameter determines whether this is max-heap or a min-heap.\n\n``` pony\nclass ref BinaryHeap[A: Comparable[A] #read, P: (_BinaryHeapPriority[A] val & (MinHeapPriority[A] val | MaxHeapPriority[A] val))]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L12)\n\nCreate an empty heap with space for `len` elements.\n\n``` pony\nnew ref create(\n  len: USize val)\n: BinaryHeap[A, P] ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [BinaryHeap](index)\\[A, P\\] ref^\n\n## Public Functions\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L18)\n\nRemove all elements from the heap.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L24)\n\nReturn the number of elements in the heap.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### peek\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L30)\n\nReturn the highest priority item in the heap. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.\n\n``` pony\nfun box peek()\n: this->A ?\n```\n\n#### Returns\n\n- this-\\>A ?\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L37)\n\nPush an item into the heap.\n\nThe time complexity of this operation is O(log(n)) with respect to the size of the heap.\n\n``` pony\nfun ref push(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L47)\n\nRemove the highest priority value from the heap and return it. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.\n\nThe time complexity of this operation is O(log(n)) with respect to the size of the heap.\n\n``` pony\nfun ref pop()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L61)\n\nAppend len elements from a sequence, starting from the given offset.\n\n``` pony\nfun ref append(\n  seq: (ReadSeq[A] box & ReadElement[A^] box),\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- seq: ([ReadSeq](builtin-readseq)\\[A\\] box & [ReadElement](builtin-readelement)\\[A^\\] box)\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L72)\n\nAdd len iterated elements, starting from the given offset.\n\n``` pony\nfun ref concat(\n  iter: Iterator[A^] ref,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[A^\\] ref\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L79)\n\nReturn an iterator for the elements in the heap. The order of elements is arbitrary.\n\n``` pony\nfun box values()\n: ArrayValues[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayValues](builtin-arrayvalues)\\[A, this-\\>[Array](builtin-array)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-BinaryHeap](https://stdlib.ponylang.io/collections-BinaryHeap)"
- name: BinaryHeap.append()
  id: collections-binaryheap#append
  summary: Append len elements from a sequence, starting from the given offset
  belongs_to: BinaryHeap
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L61)

    Append len elements from a sequence, starting from the given offset.

    ``` pony
    fun ref append(
      seq: (ReadSeq[A] box & ReadElement[A^] box),
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - seq: ([ReadSeq](builtin-readseq)\[A\] box & [ReadElement](builtin-readelement)\[A^\] box)
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: BinaryHeap.clear()
  id: collections-binaryheap#clear
  summary: Remove all elements from the heap
  belongs_to: BinaryHeap
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L18)

    Remove all elements from the heap.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val
- name: BinaryHeap.concat()
  id: collections-binaryheap#concat
  summary: Add len iterated elements, starting from the given offset
  belongs_to: BinaryHeap
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L72)

    Add len iterated elements, starting from the given offset.

    ``` pony
    fun ref concat(
      iter: Iterator[A^] ref,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[A^\] ref
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: BinaryHeap.create()
  id: collections-binaryheap#create
  summary: Create an empty heap with space for len elements
  belongs_to: BinaryHeap
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L12)

    Create an empty heap with space for `len` elements.

    ``` pony
    new ref create(
      len: USize val)
    : BinaryHeap[A, P] ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [BinaryHeap](index)\[A, P\] ref^

    ## Public Functions
- name: BinaryHeap.peek()
  id: collections-binaryheap#peek
  summary: Return the highest priority item in the heap
  belongs_to: BinaryHeap
  description: |-
    ### peek

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L30)

    Return the highest priority item in the heap. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.

    ``` pony
    fun box peek()
    : this->A ?
    ```

    #### Returns

    - this-\>A ?

    &nbsp;
- name: BinaryHeap.pop()
  id: collections-binaryheap#pop
  summary: Remove the highest priority value from the heap and return it
  belongs_to: BinaryHeap
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L47)

    Remove the highest priority value from the heap and return it. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.

    The time complexity of this operation is O(log(n)) with respect to the size of the heap.

    ``` pony
    fun ref pop()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: BinaryHeap.push()
  id: collections-binaryheap#push
  summary: Push an item into the heap
  belongs_to: BinaryHeap
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L37)

    Push an item into the heap.

    The time complexity of this operation is O(log(n)) with respect to the size of the heap.

    ``` pony
    fun ref push(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: BinaryHeap.size()
  id: collections-binaryheap#size
  summary: Return the number of elements in the heap
  belongs_to: BinaryHeap
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L24)

    Return the number of elements in the heap.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: BinaryHeap.values()
  id: collections-binaryheap#values
  summary: Return an iterator for the elements in the heap
  belongs_to: BinaryHeap
  description: "### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L79)\n\nReturn an iterator for the elements in the heap. The order of elements is arbitrary.\n\n``` pony\nfun box values()\n: ArrayValues[A, this->Array[A] ref] ref^\n```\n\n#### Returns\n\n- [ArrayValues](builtin-arrayvalues)\\[A, this-\\>[Array](builtin-array)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-BinaryHeap](https://stdlib.ponylang.io/collections-BinaryHeap)"
- name: BinaryHeapPriority
  id: collections-binaryheappriority
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# BinaryHeapPriority\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L131)\n\n``` pony\ntype BinaryHeapPriority[A: Comparable[A] #read] is\n  (_BinaryHeapPriority[A] val & (MinHeapPriority[A] val | MaxHeapPriority[A] val))\n```\n\n#### Type Alias For\n\n- (\\_BinaryHeapPriority\\[A\\] val & ([MinHeapPriority](collections-minheappriority)\\[A\\] val \\| [MaxHeapPriority](collections-maxheappriority)\\[A\\] val))\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-BinaryHeapPriority](https://stdlib.ponylang.io/collections-BinaryHeapPriority)"
- name: Bool
  id: builtin-bool
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L1)\n\n``` pony\nprimitive val Bool is\n  Stringable box\n```\n\n#### Implements\n\n- [Stringable](builtin-stringable) box\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L2)\n\n``` pony\nnew val create(\n  from: Bool val)\n: Bool val^\n```\n\n#### Parameters\n\n- from: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L4)\n\n``` pony\nfun box eq(\n  y: Bool val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L5)\n\n``` pony\nfun box ne(\n  y: Bool val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L6)\n\n``` pony\nfun box op_and(\n  y: Bool val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L7)\n\n``` pony\nfun box op_or(\n  y: Bool val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L8)\n\n``` pony\nfun box op_xor(\n  y: Bool val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [Bool](index) val\n\n#### Returns\n\n- [Bool](index) val\n\n### op_not\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L9)\n\n``` pony\nfun box op_not()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](index) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L11)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Bool](https://stdlib.ponylang.io/builtin-Bool)"
- name: Bool.create()
  id: builtin-bool#create
  summary: null
  belongs_to: Bool
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L2)

    ``` pony
    new val create(
      from: Bool val)
    : Bool val^
    ```

    #### Parameters

    - from: [Bool](index) val

    #### Returns

    - [Bool](index) val^

    ## Public Functions
- name: Bool.eq()
  id: builtin-bool#eq
  summary: null
  belongs_to: Bool
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L4)

    ``` pony
    fun box eq(
      y: Bool val)
    : Bool val
    ```

    #### Parameters

    - y: [Bool](index) val

    #### Returns

    - [Bool](index) val
- name: Bool.ne()
  id: builtin-bool#ne
  summary: null
  belongs_to: Bool
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L5)

    ``` pony
    fun box ne(
      y: Bool val)
    : Bool val
    ```

    #### Parameters

    - y: [Bool](index) val

    #### Returns

    - [Bool](index) val

    &nbsp;
- name: Bool.op_and()
  id: builtin-bool#op_and
  summary: null
  belongs_to: Bool
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L6)

    ``` pony
    fun box op_and(
      y: Bool val)
    : Bool val
    ```

    #### Parameters

    - y: [Bool](index) val

    #### Returns

    - [Bool](index) val

    &nbsp;
- name: Bool.op_not()
  id: builtin-bool#op_not
  summary: null
  belongs_to: Bool
  description: |-
    ### op_not

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L9)

    ``` pony
    fun box op_not()
    : Bool val
    ```

    #### Returns

    - [Bool](index) val

    &nbsp;
- name: Bool.op_or()
  id: builtin-bool#op_or
  summary: null
  belongs_to: Bool
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L7)

    ``` pony
    fun box op_or(
      y: Bool val)
    : Bool val
    ```

    #### Parameters

    - y: [Bool](index) val

    #### Returns

    - [Bool](index) val

    &nbsp;
- name: Bool.op_xor()
  id: builtin-bool#op_xor
  summary: null
  belongs_to: Bool
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/bool/#L8)

    ``` pony
    fun box op_xor(
      y: Bool val)
    : Bool val
    ```

    #### Parameters

    - y: [Bool](index) val

    #### Returns

    - [Bool](index) val

    &nbsp;
- name: Bool.string()
  id: builtin-bool#string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Bool
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/bool/#L11)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Bool](https://stdlib.ponylang.io/builtin-Bool)"
- name: ByteSeq
  id: builtin-byteseq
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ByteSeq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L1)\n\n``` pony\ntype ByteSeq is\n  (String val | Array[U8 val] val)\n```\n\n#### Type Alias For\n\n- ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ByteSeq](https://stdlib.ponylang.io/builtin-ByteSeq)"
- name: ByteSeqIter
  id: builtin-byteseqiter
  summary: Accept an iterable collection of String or Array[U8] val
  description: "# ByteSeqIter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L3)\n\nAccept an iterable collection of String or Array\\[U8\\] val.\n\n``` pony\ninterface val ByteSeqIter\n```\n\n## Public Functions\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L7)\n\n``` pony\nfun box values()\n: Iterator[(this->String box | this->Array[U8 val] box)] ref\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[(this-\\>[String](builtin-string) box \\| this-\\>[Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ByteSeqIter](https://stdlib.ponylang.io/builtin-ByteSeqIter)"
- name: ByteSeqIter.values()
  id: builtin-byteseqiter#values
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ByteSeqIter
  description: "### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L7)\n\n``` pony\nfun box values()\n: Iterator[(this->String box | this->Array[U8 val] box)] ref\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[(this-\\>[String](builtin-string) box \\| this-\\>[Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ByteSeqIter](https://stdlib.ponylang.io/builtin-ByteSeqIter)"
- name: Cap
  id: capsicum-cap
  summary: The Capsicum rights
  description: "# Cap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L1)\n\nThe Capsicum rights.\n\n``` pony\nprimitive val Cap\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L1)\n\n``` pony\nnew val create()\n: Cap val^\n```\n\n#### Returns\n\n- [Cap](index) val^\n\n## Public Functions\n\n### enter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)\n\nThis places the current process into capability mode, a mode of execution in which processes may only issue system calls operating on file descriptors or reading limited global system state. Access to global name spaces, such as file system or IPC name spaces, is prevented.\n\n``` pony\nfun box enter()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### read\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L18)\n\n``` pony\nfun box read()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L19)\n\n``` pony\nfun box write()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### seek_tell\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L20)\n\n``` pony\nfun box seek_tell()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### seek\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L21)\n\n``` pony\nfun box seek()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### pread\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L22)\n\n``` pony\nfun box pread()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### pwrite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L23)\n\n``` pony\nfun box pwrite()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L25)\n\n``` pony\nfun box mmap()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_r\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L26)\n\n``` pony\nfun box mmap_r()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_w\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L27)\n\n``` pony\nfun box mmap_w()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_x\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L28)\n\n``` pony\nfun box mmap_x()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_rw\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L29)\n\n``` pony\nfun box mmap_rw()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_rx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L30)\n\n``` pony\nfun box mmap_rx()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_wx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L31)\n\n``` pony\nfun box mmap_wx()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mmap_rwx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L32)\n\n``` pony\nfun box mmap_rwx()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### creat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L34)\n\n``` pony\nfun box creat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fexecve\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L35)\n\n``` pony\nfun box fexecve()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fsync\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L36)\n\n``` pony\nfun box fsync()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ftruncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L37)\n\n``` pony\nfun box ftruncate()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### lookup\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L38)\n\n``` pony\nfun box lookup()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchdir\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L39)\n\n``` pony\nfun box fchdir()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchflags\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L40)\n\n``` pony\nfun box fchflags()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### chflagsat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L41)\n\n``` pony\nfun box chflagsat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchmod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L42)\n\n``` pony\nfun box fchmod()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchmodat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L43)\n\n``` pony\nfun box fchmodat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L44)\n\n``` pony\nfun box fchown()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fchownat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L45)\n\n``` pony\nfun box fchownat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fcntl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L46)\n\n``` pony\nfun box fcntl()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### flock\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L47)\n\n``` pony\nfun box flock()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fpathconf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L48)\n\n``` pony\nfun box fpathconf()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fsck\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L49)\n\n``` pony\nfun box fsck()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fstat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L50)\n\n``` pony\nfun box fstat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fstatat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L51)\n\n``` pony\nfun box fstatat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### fstatfs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L52)\n\n``` pony\nfun box fstatfs()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### futimes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L53)\n\n``` pony\nfun box futimes()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### futimesat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L54)\n\n``` pony\nfun box futimesat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### linkat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L56)\n\n``` pony\nfun box linkat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mkdirat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L57)\n\n``` pony\nfun box mkdirat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mkfifoat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L58)\n\n``` pony\nfun box mkfifoat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mknodat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L59)\n\n``` pony\nfun box mknodat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### renameat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L60)\n\n``` pony\nfun box renameat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### symlinkat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L61)\n\n``` pony\nfun box symlinkat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### unlinkat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L62)\n\n``` pony\nfun box unlinkat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### accept\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L64)\n\n``` pony\nfun box accept()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### bind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L65)\n\n``` pony\nfun box bind()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### connect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L66)\n\n``` pony\nfun box connect()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### getpeername\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L67)\n\n``` pony\nfun box getpeername()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### getsockname\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L68)\n\n``` pony\nfun box getsockname()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### getsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L69)\n\n``` pony\nfun box getsockopt()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### listen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L70)\n\n``` pony\nfun box listen()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### peeloff\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L71)\n\n``` pony\nfun box peeloff()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### recv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L72)\n\n``` pony\nfun box recv()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### send\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L73)\n\n``` pony\nfun box send()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### setsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L74)\n\n``` pony\nfun box setsockopt()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### shutdown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L75)\n\n``` pony\nfun box shutdown()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### bindat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L76)\n\n``` pony\nfun box bindat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### connectat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L77)\n\n``` pony\nfun box connectat()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### sock_client\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L79)\n\n``` pony\nfun box sock_client()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### sock_server\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L83)\n\n``` pony\nfun box sock_server()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mac_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L87)\n\n``` pony\nfun box mac_get()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### mac_set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L88)\n\n``` pony\nfun box mac_set()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### sem_getvalue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L90)\n\n``` pony\nfun box sem_getvalue()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### sem_post\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L91)\n\n``` pony\nfun box sem_post()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### sem_wait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L92)\n\n``` pony\nfun box sem_wait()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### event\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L94)\n\n``` pony\nfun box event()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### kqueue_event\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L95)\n\n``` pony\nfun box kqueue_event()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ioctl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L96)\n\n``` pony\nfun box ioctl()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ttyhook\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L97)\n\n``` pony\nfun box ttyhook()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### pdgetpid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L99)\n\n``` pony\nfun box pdgetpid()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### pdwait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L100)\n\n``` pony\nfun box pdwait()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### pdkill\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L101)\n\n``` pony\nfun box pdkill()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### exattr_delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L103)\n\n``` pony\nfun box exattr_delete()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### exattr_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L104)\n\n``` pony\nfun box exattr_get()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### exattr_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L105)\n\n``` pony\nfun box exattr_list()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### exattr_set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L106)\n\n``` pony\nfun box exattr_set()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### acl_check\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L108)\n\n``` pony\nfun box acl_check()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### acl_delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L109)\n\n``` pony\nfun box acl_delete()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### acl_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L110)\n\n``` pony\nfun box acl_get()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### acl_set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L111)\n\n``` pony\nfun box acl_set()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### kqueue_change\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L113)\n\n``` pony\nfun box kqueue_change()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### kqueue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L114)\n\n``` pony\nfun box kqueue()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)\n\n``` pony\nfun box eq(\n  that: Cap val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Cap](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)\n\n``` pony\nfun box ne(\n  that: Cap val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Cap](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum-Cap](https://stdlib.ponylang.io/capsicum-Cap)"
- name: Cap.accept()
  id: capsicum-cap#accept
  summary: null
  belongs_to: Cap
  description: |-
    ### accept

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L64)

    ``` pony
    fun box accept()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.acl_check()
  id: capsicum-cap#acl_check
  summary: null
  belongs_to: Cap
  description: |-
    ### acl_check

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L108)

    ``` pony
    fun box acl_check()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.acl_delete()
  id: capsicum-cap#acl_delete
  summary: null
  belongs_to: Cap
  description: |-
    ### acl_delete

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L109)

    ``` pony
    fun box acl_delete()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.acl_get()
  id: capsicum-cap#acl_get
  summary: null
  belongs_to: Cap
  description: |-
    ### acl_get

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L110)

    ``` pony
    fun box acl_get()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.acl_set()
  id: capsicum-cap#acl_set
  summary: null
  belongs_to: Cap
  description: |-
    ### acl_set

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L111)

    ``` pony
    fun box acl_set()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.bind()
  id: capsicum-cap#bind
  summary: null
  belongs_to: Cap
  description: |-
    ### bind

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L65)

    ``` pony
    fun box bind()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.bindat()
  id: capsicum-cap#bindat
  summary: null
  belongs_to: Cap
  description: |-
    ### bindat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L76)

    ``` pony
    fun box bindat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.chflagsat()
  id: capsicum-cap#chflagsat
  summary: null
  belongs_to: Cap
  description: |-
    ### chflagsat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L41)

    ``` pony
    fun box chflagsat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.connect()
  id: capsicum-cap#connect
  summary: null
  belongs_to: Cap
  description: |-
    ### connect

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L66)

    ``` pony
    fun box connect()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.connectat()
  id: capsicum-cap#connectat
  summary: null
  belongs_to: Cap
  description: |-
    ### connectat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L77)

    ``` pony
    fun box connectat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.creat()
  id: capsicum-cap#creat
  summary: null
  belongs_to: Cap
  description: |-
    ### creat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L34)

    ``` pony
    fun box creat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.create()
  id: capsicum-cap#create
  summary: null
  belongs_to: Cap
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L1)

    ``` pony
    new val create()
    : Cap val^
    ```

    #### Returns

    - [Cap](index) val^

    ## Public Functions
- name: Cap.enter()
  id: capsicum-cap#enter
  summary: This places the current process into capability mode, a mode of execution in which processes may only issue system calls operating on file descriptors or reading limited global system state
  belongs_to: Cap
  description: |-
    ### enter

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)

    This places the current process into capability mode, a mode of execution in which processes may only issue system calls operating on file descriptors or reading limited global system state. Access to global name spaces, such as file system or IPC name spaces, is prevented.

    ``` pony
    fun box enter()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: Cap.eq()
  id: capsicum-cap#eq
  summary: null
  belongs_to: Cap
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)

    ``` pony
    fun box eq(
      that: Cap val)
    : Bool val
    ```

    #### Parameters

    - that: [Cap](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Cap.event()
  id: capsicum-cap#event
  summary: null
  belongs_to: Cap
  description: |-
    ### event

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L94)

    ``` pony
    fun box event()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.exattr_delete()
  id: capsicum-cap#exattr_delete
  summary: null
  belongs_to: Cap
  description: |-
    ### exattr_delete

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L103)

    ``` pony
    fun box exattr_delete()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.exattr_get()
  id: capsicum-cap#exattr_get
  summary: null
  belongs_to: Cap
  description: |-
    ### exattr_get

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L104)

    ``` pony
    fun box exattr_get()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.exattr_list()
  id: capsicum-cap#exattr_list
  summary: null
  belongs_to: Cap
  description: |-
    ### exattr_list

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L105)

    ``` pony
    fun box exattr_list()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.exattr_set()
  id: capsicum-cap#exattr_set
  summary: null
  belongs_to: Cap
  description: |-
    ### exattr_set

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L106)

    ``` pony
    fun box exattr_set()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchdir()
  id: capsicum-cap#fchdir
  summary: null
  belongs_to: Cap
  description: |-
    ### fchdir

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L39)

    ``` pony
    fun box fchdir()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchflags()
  id: capsicum-cap#fchflags
  summary: null
  belongs_to: Cap
  description: |-
    ### fchflags

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L40)

    ``` pony
    fun box fchflags()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchmod()
  id: capsicum-cap#fchmod
  summary: null
  belongs_to: Cap
  description: |-
    ### fchmod

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L42)

    ``` pony
    fun box fchmod()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchmodat()
  id: capsicum-cap#fchmodat
  summary: null
  belongs_to: Cap
  description: |-
    ### fchmodat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L43)

    ``` pony
    fun box fchmodat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchown()
  id: capsicum-cap#fchown
  summary: null
  belongs_to: Cap
  description: |-
    ### fchown

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L44)

    ``` pony
    fun box fchown()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fchownat()
  id: capsicum-cap#fchownat
  summary: null
  belongs_to: Cap
  description: |-
    ### fchownat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L45)

    ``` pony
    fun box fchownat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fcntl()
  id: capsicum-cap#fcntl
  summary: null
  belongs_to: Cap
  description: |-
    ### fcntl

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L46)

    ``` pony
    fun box fcntl()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fexecve()
  id: capsicum-cap#fexecve
  summary: null
  belongs_to: Cap
  description: |-
    ### fexecve

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L35)

    ``` pony
    fun box fexecve()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.flock()
  id: capsicum-cap#flock
  summary: null
  belongs_to: Cap
  description: |-
    ### flock

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L47)

    ``` pony
    fun box flock()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fpathconf()
  id: capsicum-cap#fpathconf
  summary: null
  belongs_to: Cap
  description: |-
    ### fpathconf

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L48)

    ``` pony
    fun box fpathconf()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fsck()
  id: capsicum-cap#fsck
  summary: null
  belongs_to: Cap
  description: |-
    ### fsck

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L49)

    ``` pony
    fun box fsck()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fstat()
  id: capsicum-cap#fstat
  summary: null
  belongs_to: Cap
  description: |-
    ### fstat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L50)

    ``` pony
    fun box fstat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fstatat()
  id: capsicum-cap#fstatat
  summary: null
  belongs_to: Cap
  description: |-
    ### fstatat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L51)

    ``` pony
    fun box fstatat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fstatfs()
  id: capsicum-cap#fstatfs
  summary: null
  belongs_to: Cap
  description: |-
    ### fstatfs

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L52)

    ``` pony
    fun box fstatfs()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.fsync()
  id: capsicum-cap#fsync
  summary: null
  belongs_to: Cap
  description: |-
    ### fsync

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L36)

    ``` pony
    fun box fsync()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.ftruncate()
  id: capsicum-cap#ftruncate
  summary: null
  belongs_to: Cap
  description: |-
    ### ftruncate

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L37)

    ``` pony
    fun box ftruncate()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.futimes()
  id: capsicum-cap#futimes
  summary: null
  belongs_to: Cap
  description: |-
    ### futimes

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L53)

    ``` pony
    fun box futimes()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.futimesat()
  id: capsicum-cap#futimesat
  summary: null
  belongs_to: Cap
  description: |-
    ### futimesat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L54)

    ``` pony
    fun box futimesat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.getpeername()
  id: capsicum-cap#getpeername
  summary: null
  belongs_to: Cap
  description: |-
    ### getpeername

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L67)

    ``` pony
    fun box getpeername()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.getsockname()
  id: capsicum-cap#getsockname
  summary: null
  belongs_to: Cap
  description: |-
    ### getsockname

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L68)

    ``` pony
    fun box getsockname()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.getsockopt()
  id: capsicum-cap#getsockopt
  summary: null
  belongs_to: Cap
  description: |-
    ### getsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L69)

    ``` pony
    fun box getsockopt()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.ioctl()
  id: capsicum-cap#ioctl
  summary: null
  belongs_to: Cap
  description: |-
    ### ioctl

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L96)

    ``` pony
    fun box ioctl()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.kqueue()
  id: capsicum-cap#kqueue
  summary: null
  belongs_to: Cap
  description: |-
    ### kqueue

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L114)

    ``` pony
    fun box kqueue()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.kqueue_change()
  id: capsicum-cap#kqueue_change
  summary: null
  belongs_to: Cap
  description: |-
    ### kqueue_change

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L113)

    ``` pony
    fun box kqueue_change()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.kqueue_event()
  id: capsicum-cap#kqueue_event
  summary: null
  belongs_to: Cap
  description: |-
    ### kqueue_event

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L95)

    ``` pony
    fun box kqueue_event()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.linkat()
  id: capsicum-cap#linkat
  summary: null
  belongs_to: Cap
  description: |-
    ### linkat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L56)

    ``` pony
    fun box linkat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.listen()
  id: capsicum-cap#listen
  summary: null
  belongs_to: Cap
  description: |-
    ### listen

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L70)

    ``` pony
    fun box listen()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.lookup()
  id: capsicum-cap#lookup
  summary: null
  belongs_to: Cap
  description: |-
    ### lookup

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L38)

    ``` pony
    fun box lookup()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mac_get()
  id: capsicum-cap#mac_get
  summary: null
  belongs_to: Cap
  description: |-
    ### mac_get

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L87)

    ``` pony
    fun box mac_get()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mac_set()
  id: capsicum-cap#mac_set
  summary: null
  belongs_to: Cap
  description: |-
    ### mac_set

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L88)

    ``` pony
    fun box mac_set()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mkdirat()
  id: capsicum-cap#mkdirat
  summary: null
  belongs_to: Cap
  description: |-
    ### mkdirat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L57)

    ``` pony
    fun box mkdirat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mkfifoat()
  id: capsicum-cap#mkfifoat
  summary: null
  belongs_to: Cap
  description: |-
    ### mkfifoat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L58)

    ``` pony
    fun box mkfifoat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mknodat()
  id: capsicum-cap#mknodat
  summary: null
  belongs_to: Cap
  description: |-
    ### mknodat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L59)

    ``` pony
    fun box mknodat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap()
  id: capsicum-cap#mmap
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L25)

    ``` pony
    fun box mmap()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_r()
  id: capsicum-cap#mmap_r
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_r

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L26)

    ``` pony
    fun box mmap_r()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_rw()
  id: capsicum-cap#mmap_rw
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_rw

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L29)

    ``` pony
    fun box mmap_rw()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_rwx()
  id: capsicum-cap#mmap_rwx
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_rwx

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L32)

    ``` pony
    fun box mmap_rwx()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_rx()
  id: capsicum-cap#mmap_rx
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_rx

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L30)

    ``` pony
    fun box mmap_rx()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_w()
  id: capsicum-cap#mmap_w
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_w

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L27)

    ``` pony
    fun box mmap_w()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_wx()
  id: capsicum-cap#mmap_wx
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_wx

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L31)

    ``` pony
    fun box mmap_wx()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.mmap_x()
  id: capsicum-cap#mmap_x
  summary: null
  belongs_to: Cap
  description: |-
    ### mmap_x

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L28)

    ``` pony
    fun box mmap_x()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.ne()
  id: capsicum-cap#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Cap
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap/#L5)\n\n``` pony\nfun box ne(\n  that: Cap val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Cap](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum-Cap](https://stdlib.ponylang.io/capsicum-Cap)"
- name: Cap.pdgetpid()
  id: capsicum-cap#pdgetpid
  summary: null
  belongs_to: Cap
  description: |-
    ### pdgetpid

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L99)

    ``` pony
    fun box pdgetpid()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.pdkill()
  id: capsicum-cap#pdkill
  summary: null
  belongs_to: Cap
  description: |-
    ### pdkill

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L101)

    ``` pony
    fun box pdkill()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.pdwait()
  id: capsicum-cap#pdwait
  summary: null
  belongs_to: Cap
  description: |-
    ### pdwait

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L100)

    ``` pony
    fun box pdwait()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.peeloff()
  id: capsicum-cap#peeloff
  summary: null
  belongs_to: Cap
  description: |-
    ### peeloff

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L71)

    ``` pony
    fun box peeloff()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.pread()
  id: capsicum-cap#pread
  summary: null
  belongs_to: Cap
  description: |-
    ### pread

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L22)

    ``` pony
    fun box pread()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.pwrite()
  id: capsicum-cap#pwrite
  summary: null
  belongs_to: Cap
  description: |-
    ### pwrite

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L23)

    ``` pony
    fun box pwrite()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.read()
  id: capsicum-cap#read
  summary: null
  belongs_to: Cap
  description: |-
    ### read

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L18)

    ``` pony
    fun box read()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.recv()
  id: capsicum-cap#recv
  summary: null
  belongs_to: Cap
  description: |-
    ### recv

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L72)

    ``` pony
    fun box recv()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.renameat()
  id: capsicum-cap#renameat
  summary: null
  belongs_to: Cap
  description: |-
    ### renameat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L60)

    ``` pony
    fun box renameat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.seek()
  id: capsicum-cap#seek
  summary: null
  belongs_to: Cap
  description: |-
    ### seek

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L21)

    ``` pony
    fun box seek()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.seek_tell()
  id: capsicum-cap#seek_tell
  summary: null
  belongs_to: Cap
  description: |-
    ### seek_tell

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L20)

    ``` pony
    fun box seek_tell()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.sem_getvalue()
  id: capsicum-cap#sem_getvalue
  summary: null
  belongs_to: Cap
  description: |-
    ### sem_getvalue

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L90)

    ``` pony
    fun box sem_getvalue()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.sem_post()
  id: capsicum-cap#sem_post
  summary: null
  belongs_to: Cap
  description: |-
    ### sem_post

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L91)

    ``` pony
    fun box sem_post()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.sem_wait()
  id: capsicum-cap#sem_wait
  summary: null
  belongs_to: Cap
  description: |-
    ### sem_wait

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L92)

    ``` pony
    fun box sem_wait()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.send()
  id: capsicum-cap#send
  summary: null
  belongs_to: Cap
  description: |-
    ### send

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L73)

    ``` pony
    fun box send()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.setsockopt()
  id: capsicum-cap#setsockopt
  summary: null
  belongs_to: Cap
  description: |-
    ### setsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L74)

    ``` pony
    fun box setsockopt()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.shutdown()
  id: capsicum-cap#shutdown
  summary: null
  belongs_to: Cap
  description: |-
    ### shutdown

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L75)

    ``` pony
    fun box shutdown()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.sock_client()
  id: capsicum-cap#sock_client
  summary: null
  belongs_to: Cap
  description: |-
    ### sock_client

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L79)

    ``` pony
    fun box sock_client()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.sock_server()
  id: capsicum-cap#sock_server
  summary: null
  belongs_to: Cap
  description: |-
    ### sock_server

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L83)

    ``` pony
    fun box sock_server()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.symlinkat()
  id: capsicum-cap#symlinkat
  summary: null
  belongs_to: Cap
  description: |-
    ### symlinkat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L61)

    ``` pony
    fun box symlinkat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.ttyhook()
  id: capsicum-cap#ttyhook
  summary: null
  belongs_to: Cap
  description: |-
    ### ttyhook

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L97)

    ``` pony
    fun box ttyhook()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.unlinkat()
  id: capsicum-cap#unlinkat
  summary: null
  belongs_to: Cap
  description: |-
    ### unlinkat

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L62)

    ``` pony
    fun box unlinkat()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Cap.write()
  id: capsicum-cap#write
  summary: null
  belongs_to: Cap
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap/#L19)

    ``` pony
    fun box write()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: CapError
  id: process-caperror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# CapError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L56)\n\n``` pony\nprimitive val CapError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L56)\n\n``` pony\nnew val create()\n: CapError val^\n```\n\n#### Returns\n\n- [CapError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L57)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L57)\n\n``` pony\nfun box eq(\n  that: CapError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CapError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L57)\n\n``` pony\nfun box ne(\n  that: CapError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CapError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-CapError](https://stdlib.ponylang.io/process-CapError)"
- name: CapError.create()
  id: process-caperror#create
  summary: null
  belongs_to: CapError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L56)

    ``` pony
    new val create()
    : CapError val^
    ```

    #### Returns

    - [CapError](index) val^

    ## Public Functions
- name: CapError.eq()
  id: process-caperror#eq
  summary: null
  belongs_to: CapError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L57)

    ``` pony
    fun box eq(
      that: CapError val)
    : Bool val
    ```

    #### Parameters

    - that: [CapError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CapError.ne()
  id: process-caperror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: CapError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L57)\n\n``` pony\nfun box ne(\n  that: CapError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CapError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-CapError](https://stdlib.ponylang.io/process-CapError)"
- name: CapError.string()
  id: process-caperror#string
  summary: null
  belongs_to: CapError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L57)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: CapRights
  id: capsicum-caprights
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# CapRights\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L3)\n\n``` pony\ntype CapRights is\n  CapRights0 ref\n```\n\n#### Type Alias For\n\n- [CapRights0](capsicum-caprights0) ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum-CapRights](https://stdlib.ponylang.io/capsicum-CapRights)"
- name: CapRights0
  id: capsicum-caprights0
  summary: Version 0 of the capsicum cap_rights_t structure
  description: "# CapRights0\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L5)\n\nVersion 0 of the capsicum cap_rights_t structure.\n\n``` pony\nclass ref CapRights0\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L12)\n\nInitialises with no rights.\n\n``` pony\nnew ref create()\n: CapRights0 ref^\n```\n\n#### Returns\n\n- [CapRights0](index) ref^\n\n### from\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L18)\n\nInitialises with the rights from a FileCaps.\n\n``` pony\nnew ref from(\n  caps: Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] box)\n: CapRights0 ref^\n```\n\n#### Parameters\n\n- caps: [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] box\n\n#### Returns\n\n- [CapRights0](index) ref^\n\n### descriptor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L52)\n\nInitialises with the rights on the given file descriptor.\n\n``` pony\nnew ref descriptor(\n  fd: I32 val)\n: CapRights0 ref^\n```\n\n#### Parameters\n\n- fd: [I32](builtin-i32) val\n\n#### Returns\n\n- [CapRights0](index) ref^\n\n## Public Functions\n\n### set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L60)\n\n``` pony\nfun ref set(\n  cap: U64 val)\n: None val\n```\n\n#### Parameters\n\n- cap: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### unset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L65)\n\n``` pony\nfun ref unset(\n  cap: U64 val)\n: None val\n```\n\n#### Parameters\n\n- cap: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### limit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L70)\n\nLimits the fd to the encoded rights.\n\n``` pony\nfun box limit(\n  fd: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- fd: [I32](builtin-i32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### merge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L80)\n\nMerge the rights in that into this.\n\n``` pony\nfun ref merge(\n  that: CapRights0 ref)\n: None val\n```\n\n#### Parameters\n\n- that: [CapRights0](index) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L88)\n\nRemove the rights in that from this.\n\n``` pony\nfun ref remove(\n  that: CapRights0 ref)\n: None val\n```\n\n#### Parameters\n\n- that: [CapRights0](index) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L96)\n\nClear all rights.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L104)\n\nCheck that this is a superset of the rights in that.\n\n``` pony\nfun box contains(\n  that: CapRights0 ref)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CapRights0](index) ref\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum-CapRights0](https://stdlib.ponylang.io/capsicum-CapRights0)"
- name: CapRights0.clear()
  id: capsicum-caprights0#clear
  summary: Clear all rights
  belongs_to: CapRights0
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L96)

    Clear all rights.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: CapRights0.contains()
  id: capsicum-caprights0#contains
  summary: Check that this is a superset of the rights in that
  belongs_to: CapRights0
  description: "### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L104)\n\nCheck that this is a superset of the rights in that.\n\n``` pony\nfun box contains(\n  that: CapRights0 ref)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CapRights0](index) ref\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/capsicum-CapRights0](https://stdlib.ponylang.io/capsicum-CapRights0)"
- name: CapRights0.create()
  id: capsicum-caprights0#create
  summary: Initialises with no rights
  belongs_to: CapRights0
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L12)

    Initialises with no rights.

    ``` pony
    new ref create()
    : CapRights0 ref^
    ```

    #### Returns

    - [CapRights0](index) ref^
- name: CapRights0.descriptor()
  id: capsicum-caprights0#descriptor
  summary: Initialises with the rights on the given file descriptor
  belongs_to: CapRights0
  description: |-
    ### descriptor

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L52)

    Initialises with the rights on the given file descriptor.

    ``` pony
    new ref descriptor(
      fd: I32 val)
    : CapRights0 ref^
    ```

    #### Parameters

    - fd: [I32](builtin-i32) val

    #### Returns

    - [CapRights0](index) ref^

    ## Public Functions
- name: CapRights0.from()
  id: capsicum-caprights0#from
  summary: Initialises with the rights from a FileCaps
  belongs_to: CapRights0
  description: |-
    ### from

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L18)

    Initialises with the rights from a FileCaps.

    ``` pony
    new ref from(
      caps: Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] box)
    : CapRights0 ref^
    ```

    #### Parameters

    - caps: [Flags](collections-flags)\[([FileCreate](files-filecreate) val \| [FileChmod](files-filechmod) val \| [FileChown](files-filechown) val \| [FileLink](files-filelink) val \| [FileLookup](files-filelookup) val \| [FileMkdir](files-filemkdir) val \| [FileRead](files-fileread) val \| [FileRemove](files-fileremove) val \| [FileRename](files-filerename) val \| [FileSeek](files-fileseek) val \| [FileStat](files-filestat) val \| [FileSync](files-filesync) val \| [FileTime](files-filetime) val \| [FileTruncate](files-filetruncate) val \| [FileWrite](files-filewrite) val \| [FileExec](files-fileexec) val), [U32](builtin-u32) val\] box

    #### Returns

    - [CapRights0](index) ref^

    &nbsp;
- name: CapRights0.limit()
  id: capsicum-caprights0#limit
  summary: Limits the fd to the encoded rights
  belongs_to: CapRights0
  description: |-
    ### limit

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L70)

    Limits the fd to the encoded rights.

    ``` pony
    fun box limit(
      fd: I32 val)
    : Bool val
    ```

    #### Parameters

    - fd: [I32](builtin-i32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CapRights0.merge()
  id: capsicum-caprights0#merge
  summary: Merge the rights in that into this
  belongs_to: CapRights0
  description: |-
    ### merge

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L80)

    Merge the rights in that into this.

    ``` pony
    fun ref merge(
      that: CapRights0 ref)
    : None val
    ```

    #### Parameters

    - that: [CapRights0](index) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: CapRights0.remove()
  id: capsicum-caprights0#remove
  summary: Remove the rights in that from this
  belongs_to: CapRights0
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L88)

    Remove the rights in that from this.

    ``` pony
    fun ref remove(
      that: CapRights0 ref)
    : None val
    ```

    #### Parameters

    - that: [CapRights0](index) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: CapRights0.set()
  id: capsicum-caprights0#set
  summary: null
  belongs_to: CapRights0
  description: |-
    ### set

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L60)

    ``` pony
    fun ref set(
      cap: U64 val)
    : None val
    ```

    #### Parameters

    - cap: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: CapRights0.unset()
  id: capsicum-caprights0#unset
  summary: null
  belongs_to: CapRights0
  description: |-
    ### unset

    [\[Source\]](https://stdlib.ponylang.io/src/capsicum/cap_rights/#L65)

    ``` pony
    fun ref unset(
      cap: U64 val)
    : None val
    ```

    #### Parameters

    - cap: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ChdirError
  id: process-chdirerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ChdirError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L59)\n\n``` pony\nprimitive val ChdirError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L59)\n\n``` pony\nnew val create()\n: ChdirError val^\n```\n\n#### Returns\n\n- [ChdirError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L60)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L60)\n\n``` pony\nfun box eq(\n  that: ChdirError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ChdirError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L60)\n\n``` pony\nfun box ne(\n  that: ChdirError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ChdirError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ChdirError](https://stdlib.ponylang.io/process-ChdirError)"
- name: ChdirError.create()
  id: process-chdirerror#create
  summary: null
  belongs_to: ChdirError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L59)

    ``` pony
    new val create()
    : ChdirError val^
    ```

    #### Returns

    - [ChdirError](index) val^

    ## Public Functions
- name: ChdirError.eq()
  id: process-chdirerror#eq
  summary: null
  belongs_to: ChdirError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L60)

    ``` pony
    fun box eq(
      that: ChdirError val)
    : Bool val
    ```

    #### Parameters

    - that: [ChdirError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ChdirError.ne()
  id: process-chdirerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ChdirError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L60)\n\n``` pony\nfun box ne(\n  that: ChdirError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ChdirError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ChdirError](https://stdlib.ponylang.io/process-ChdirError)"
- name: ChdirError.string()
  id: process-chdirerror#string
  summary: null
  belongs_to: ChdirError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L60)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: CollisionHash
  id: collections-persistent-collisionhash
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# CollisionHash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L341)\n\n``` pony\nprimitive val CollisionHash is\n  HashFunction[U64 val] val\n```\n\n#### Implements\n\n- [HashFunction](collections-hashfunction)\\[[U64](builtin-u64) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L341)\n\n``` pony\nnew val create()\n: CollisionHash val^\n```\n\n#### Returns\n\n- [CollisionHash](index) val^\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L342)\n\n``` pony\nfun box hash(\n  x: U64 val)\n: USize val\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L343)\n\n``` pony\nfun box eq(\n  x: U64 val,\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val\n- y: [U64](builtin-u64) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L342)\n\n``` pony\nfun box ne(\n  that: CollisionHash val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CollisionHash](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-CollisionHash](https://stdlib.ponylang.io/collections-persistent-CollisionHash)"
- name: CollisionHash.create()
  id: collections-persistent-collisionhash#create
  summary: null
  belongs_to: CollisionHash
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L341)

    ``` pony
    new val create()
    : CollisionHash val^
    ```

    #### Returns

    - [CollisionHash](index) val^

    ## Public Functions
- name: CollisionHash.eq()
  id: collections-persistent-collisionhash#eq
  summary: null
  belongs_to: CollisionHash
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L343)

    ``` pony
    fun box eq(
      x: U64 val,
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - x: [U64](builtin-u64) val
    - y: [U64](builtin-u64) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CollisionHash.hash()
  id: collections-persistent-collisionhash#hash
  summary: null
  belongs_to: CollisionHash
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L342)

    ``` pony
    fun box hash(
      x: U64 val)
    : USize val
    ```

    #### Parameters

    - x: [U64](builtin-u64) val

    #### Returns

    - [USize](builtin-usize) val
- name: CollisionHash.ne()
  id: collections-persistent-collisionhash#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: CollisionHash
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/_test/#L342)\n\n``` pony\nfun box ne(\n  that: CollisionHash val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CollisionHash](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-CollisionHash](https://stdlib.ponylang.io/collections-persistent-CollisionHash)"
- name: Command
  id: cli-command
  summary: Command contains all of the information describing a command with its spec and effective options and arguments, ready to use
  description: "# Command\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L3)\n\nCommand contains all of the information describing a command with its spec and effective options and arguments, ready to use.\n\n``` pony\nclass box Command\n```\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L24)\n\nReturns a representational string for this command.\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### spec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L39)\n\nReturns the spec for this command.\n\n``` pony\nfun box spec()\n: CommandSpec box\n```\n\n#### Returns\n\n- [CommandSpec](cli-commandspec) box\n\n### fullname\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L45)\n\nReturns the full name of this command, with its parents prefixed.\n\n``` pony\nfun box fullname()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### option\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L51)\n\nReturns the Option by name, defaulting to a fake Option if unknown.\n\n``` pony\nfun box option(\n  name: String val)\n: Option val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [Option](cli-option) val\n\n### arg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L57)\n\nReturns the Arg by name, defaulting to a fake Arg if unknown.\n\n``` pony\nfun box arg(\n  name: String val)\n: Arg val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [Arg](cli-arg) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Command](https://stdlib.ponylang.io/cli-Command)"
- name: Command.arg()
  id: cli-command#arg
  summary: Returns the Arg by name, defaulting to a fake Arg if unknown
  belongs_to: Command
  description: "### arg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L57)\n\nReturns the Arg by name, defaulting to a fake Arg if unknown.\n\n``` pony\nfun box arg(\n  name: String val)\n: Arg val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [Arg](cli-arg) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Command](https://stdlib.ponylang.io/cli-Command)"
- name: Command.fullname()
  id: cli-command#fullname
  summary: Returns the full name of this command, with its parents prefixed
  belongs_to: Command
  description: |-
    ### fullname

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L45)

    Returns the full name of this command, with its parents prefixed.

    ``` pony
    fun box fullname()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Command.option()
  id: cli-command#option
  summary: Returns the Option by name, defaulting to a fake Option if unknown
  belongs_to: Command
  description: |-
    ### option

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L51)

    Returns the Option by name, defaulting to a fake Option if unknown.

    ``` pony
    fun box option(
      name: String val)
    : Option val
    ```

    #### Parameters

    - name: [String](builtin-string) val

    #### Returns

    - [Option](cli-option) val

    &nbsp;
- name: Command.spec()
  id: cli-command#spec
  summary: Returns the spec for this command
  belongs_to: Command
  description: |-
    ### spec

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L39)

    Returns the spec for this command.

    ``` pony
    fun box spec()
    : CommandSpec box
    ```

    #### Returns

    - [CommandSpec](cli-commandspec) box

    &nbsp;
- name: Command.string()
  id: cli-command#string
  summary: Returns a representational string for this command
  belongs_to: Command
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L24)

    Returns a representational string for this command.

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: CommandHelp
  id: cli-commandhelp
  summary: CommandHelp encapsulates the information needed to generate a user help message for a given CommandSpec, optionally with a specific command identified to print help about
  description: "# CommandHelp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L37)\n\nCommandHelp encapsulates the information needed to generate a user help message for a given CommandSpec, optionally with a specific command identified to print help about. Use `Help.general()` or `Help.for_command()` to create a CommandHelp instance.\n\n``` pony\nclass box CommandHelp\n```\n\n## Public Functions\n\n### fullname\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L51)\n\n``` pony\nfun box fullname()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L58)\n\n``` pony\nfun box string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### help_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L60)\n\nRenders the help message as a String.\n\n``` pony\nfun box help_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### print_help\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L70)\n\nPrints the help message to an OutStream.\n\n``` pony\nfun box print_help(\n  os: OutStream tag)\n: None val\n```\n\n#### Parameters\n\n- os: [OutStream](builtin-outstream) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandHelp](https://stdlib.ponylang.io/cli-CommandHelp)"
- name: CommandHelp.fullname()
  id: cli-commandhelp#fullname
  summary: null
  belongs_to: CommandHelp
  description: |-
    ### fullname

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L51)

    ``` pony
    fun box fullname()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: CommandHelp.help_string()
  id: cli-commandhelp#help_string
  summary: Renders the help message as a String
  belongs_to: CommandHelp
  description: |-
    ### help_string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L60)

    Renders the help message as a String.

    ``` pony
    fun box help_string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: CommandHelp.print_help()
  id: cli-commandhelp#print_help
  summary: Prints the help message to an OutStream
  belongs_to: CommandHelp
  description: "### print_help\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L70)\n\nPrints the help message to an OutStream.\n\n``` pony\nfun box print_help(\n  os: OutStream tag)\n: None val\n```\n\n#### Parameters\n\n- os: [OutStream](builtin-outstream) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandHelp](https://stdlib.ponylang.io/cli-CommandHelp)"
- name: CommandHelp.string()
  id: cli-commandhelp#string
  summary: null
  belongs_to: CommandHelp
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L58)

    ``` pony
    fun box string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: CommandParser
  id: cli-commandparser
  summary: Creates a new parser for a given command spec
  description: "# CommandParser\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_parser/#L3)\n\n``` pony\nclass ref CommandParser\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_parser/#L7)\n\nCreates a new parser for a given command spec.\n\n``` pony\nnew box create(\n  spec': CommandSpec box)\n: CommandParser box^\n```\n\n#### Parameters\n\n- spec': [CommandSpec](cli-commandspec) box\n\n#### Returns\n\n- [CommandParser](index) box^\n\n## Public Functions\n\n### parse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_parser/#L18)\n\nParses all of the command line tokens and env vars and returns a Command, or the first SyntaxError.\n\n``` pony\nfun box parse(\n  argv: Array[String val] box,\n  envs: (Array[String val] box | None val) = reference)\n: (Command box | CommandHelp box | SyntaxError val)\n```\n\n#### Parameters\n\n- argv: [Array](builtin-array)\\[[String](builtin-string) val\\] box\n- envs: ([Array](builtin-array)\\[[String](builtin-string) val\\] box \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- ([Command](cli-command) box \\| [CommandHelp](cli-commandhelp) box \\| [SyntaxError](cli-syntaxerror) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandParser](https://stdlib.ponylang.io/cli-CommandParser)"
- name: CommandParser.create()
  id: cli-commandparser#create
  summary: Creates a new parser for a given command spec
  belongs_to: CommandParser
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_parser/#L7)

    Creates a new parser for a given command spec.

    ``` pony
    new box create(
      spec': CommandSpec box)
    : CommandParser box^
    ```

    #### Parameters

    - spec': [CommandSpec](cli-commandspec) box

    #### Returns

    - [CommandParser](index) box^

    ## Public Functions
- name: CommandParser.parse()
  id: cli-commandparser#parse
  summary: Parses all of the command line tokens and env vars and returns a Command, or the first SyntaxError
  belongs_to: CommandParser
  description: "### parse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_parser/#L18)\n\nParses all of the command line tokens and env vars and returns a Command, or the first SyntaxError.\n\n``` pony\nfun box parse(\n  argv: Array[String val] box,\n  envs: (Array[String val] box | None val) = reference)\n: (Command box | CommandHelp box | SyntaxError val)\n```\n\n#### Parameters\n\n- argv: [Array](builtin-array)\\[[String](builtin-string) val\\] box\n- envs: ([Array](builtin-array)\\[[String](builtin-string) val\\] box \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- ([Command](cli-command) box \\| [CommandHelp](cli-commandhelp) box \\| [SyntaxError](cli-syntaxerror) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandParser](https://stdlib.ponylang.io/cli-CommandParser)"
- name: CommandSpec
  id: cli-commandspec
  summary: CommandSpec describes the specification of a parent or leaf command
  description: "# CommandSpec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L9)\n\nCommandSpec describes the specification of a parent or leaf command. Each command has the following attributes:\n\n- a name: a simple string token that identifies the command.\n- a description: used in the syntax message.\n- a map of options: the valid options for this command.\n- an optional help option+command name for help parsing\n- one of:\n- a Map of child commands.\n- an Array of arguments.\n\n``` pony\nclass ref CommandSpec\n```\n\n## Constructors\n\n### parent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L33)\n\nCreates a command spec that can accept options and child commands, but not arguments.\n\n``` pony\nnew ref parent(\n  name': String val,\n  descr': String val = \"\",\n  options': Array[OptionSpec val] box = call,\n  commands': Array[CommandSpec ref] box = call)\n: CommandSpec ref^ ?\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- options': [Array](builtin-array)\\[[OptionSpec](cli-optionspec) val\\] box = call\n- commands': [Array](builtin-array)\\[[CommandSpec](index) ref\\] box = call\n\n#### Returns\n\n- [CommandSpec](index) ref^ ?\n\n### leaf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L53)\n\nCreates a command spec that can accept options and arguments, but not child commands.\n\n``` pony\nnew ref leaf(\n  name': String val,\n  descr': String val = \"\",\n  options': Array[OptionSpec val] box = call,\n  args': Array[ArgSpec val] box = call)\n: CommandSpec ref^ ?\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- options': [Array](builtin-array)\\[[OptionSpec](cli-optionspec) val\\] box = call\n- args': [Array](builtin-array)\\[[ArgSpec](cli-argspec) val\\] box = call\n\n#### Returns\n\n- [CommandSpec](index) ref^ ?\n\n## Public Functions\n\n### add_command\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L84)\n\nAdds an additional child command to this parent command.\n\n``` pony\nfun ref add_command(\n  cmd: CommandSpec box)\n: None val ?\n```\n\n#### Parameters\n\n- cmd: [CommandSpec](index) box\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### add_help\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L91)\n\nAdds a standard help option and, optionally command, to a root command.\n\n``` pony\nfun ref add_help(\n  hname: String val = \"help\",\n  descr': String val = \"\")\n: None val ?\n```\n\n#### Parameters\n\n- hname: [String](builtin-string) val = \"help\"\n- descr': [String](builtin-string) val = \"\"\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L106)\n\nReturns the name of this command.\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### descr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L112)\n\nReturns the description for this command.\n\n``` pony\nfun box descr()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### options\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L118)\n\nReturns a map by name of the named options of this command.\n\n``` pony\nfun box options()\n: HashMap[String val, OptionSpec val, HashEq[String val] val] box\n```\n\n#### Returns\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [OptionSpec](cli-optionspec) val, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] box\n\n### commands\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L124)\n\nReturns a map by name of the child commands of this command.\n\n``` pony\nfun box commands()\n: HashMap[String val, CommandSpec box, HashEq[String val] val] box\n```\n\n#### Returns\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [CommandSpec](index) box, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] box\n\n### args\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L130)\n\nReturns an array of the positional arguments of this command.\n\n``` pony\nfun box args()\n: Array[ArgSpec val] box\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[ArgSpec](cli-argspec) val\\] box\n\n### is_leaf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L136)\n\n``` pony\nfun box is_leaf()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### is_parent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L138)\n\n``` pony\nfun box is_parent()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### help_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L140)\n\nReturns the name of the help command, which defaults to \"help\".\n\n``` pony\nfun box help_name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### help_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L146)\n\nReturns a formated help string for this command and all of its arguments.\n\n``` pony\nfun box help_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandSpec](https://stdlib.ponylang.io/cli-CommandSpec)"
- name: CommandSpec.add_command()
  id: cli-commandspec#add_command
  summary: Adds an additional child command to this parent command
  belongs_to: CommandSpec
  description: |-
    ### add_command

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L84)

    Adds an additional child command to this parent command.

    ``` pony
    fun ref add_command(
      cmd: CommandSpec box)
    : None val ?
    ```

    #### Parameters

    - cmd: [CommandSpec](index) box

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: CommandSpec.add_help()
  id: cli-commandspec#add_help
  summary: Adds a standard help option and, optionally command, to a root command
  belongs_to: CommandSpec
  description: |-
    ### add_help

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L91)

    Adds a standard help option and, optionally command, to a root command.

    ``` pony
    fun ref add_help(
      hname: String val = "help",
      descr': String val = "")
    : None val ?
    ```

    #### Parameters

    - hname: [String](builtin-string) val = "help"
    - descr': [String](builtin-string) val = ""

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: CommandSpec.args()
  id: cli-commandspec#args
  summary: Returns an array of the positional arguments of this command
  belongs_to: CommandSpec
  description: |-
    ### args

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L130)

    Returns an array of the positional arguments of this command.

    ``` pony
    fun box args()
    : Array[ArgSpec val] box
    ```

    #### Returns

    - [Array](builtin-array)\[[ArgSpec](cli-argspec) val\] box

    &nbsp;
- name: CommandSpec.commands()
  id: cli-commandspec#commands
  summary: Returns a map by name of the child commands of this command
  belongs_to: CommandSpec
  description: |-
    ### commands

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L124)

    Returns a map by name of the child commands of this command.

    ``` pony
    fun box commands()
    : HashMap[String val, CommandSpec box, HashEq[String val] val] box
    ```

    #### Returns

    - [HashMap](collections-hashmap)\[[String](builtin-string) val, [CommandSpec](index) box, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] box

    &nbsp;
- name: CommandSpec.descr()
  id: cli-commandspec#descr
  summary: Returns the description for this command
  belongs_to: CommandSpec
  description: |-
    ### descr

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L112)

    Returns the description for this command.

    ``` pony
    fun box descr()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: CommandSpec.help_name()
  id: cli-commandspec#help_name
  summary: null
  belongs_to: CommandSpec
  description: |-
    ### help_name

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L140)

    Returns the name of the help command, which defaults to "help".

    ``` pony
    fun box help_name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: CommandSpec.help_string()
  id: cli-commandspec#help_string
  summary: Returns a formated help string for this command and all of its arguments
  belongs_to: CommandSpec
  description: "### help_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L146)\n\nReturns a formated help string for this command and all of its arguments.\n\n``` pony\nfun box help_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-CommandSpec](https://stdlib.ponylang.io/cli-CommandSpec)"
- name: CommandSpec.is_leaf()
  id: cli-commandspec#is_leaf
  summary: null
  belongs_to: CommandSpec
  description: |-
    ### is_leaf

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L136)

    ``` pony
    fun box is_leaf()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CommandSpec.is_parent()
  id: cli-commandspec#is_parent
  summary: null
  belongs_to: CommandSpec
  description: |-
    ### is_parent

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L138)

    ``` pony
    fun box is_parent()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CommandSpec.leaf()
  id: cli-commandspec#leaf
  summary: Creates a command spec that can accept options and arguments, but not child commands
  belongs_to: CommandSpec
  description: |-
    ### leaf

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L53)

    Creates a command spec that can accept options and arguments, but not child commands.

    ``` pony
    new ref leaf(
      name': String val,
      descr': String val = "",
      options': Array[OptionSpec val] box = call,
      args': Array[ArgSpec val] box = call)
    : CommandSpec ref^ ?
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - options': [Array](builtin-array)\[[OptionSpec](cli-optionspec) val\] box = call
    - args': [Array](builtin-array)\[[ArgSpec](cli-argspec) val\] box = call

    #### Returns

    - [CommandSpec](index) ref^ ?

    ## Public Functions
- name: CommandSpec.name()
  id: cli-commandspec#name
  summary: Returns the name of this command
  belongs_to: CommandSpec
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L106)

    Returns the name of this command.

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: CommandSpec.options()
  id: cli-commandspec#options
  summary: Returns a map by name of the named options of this command
  belongs_to: CommandSpec
  description: |-
    ### options

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L118)

    Returns a map by name of the named options of this command.

    ``` pony
    fun box options()
    : HashMap[String val, OptionSpec val, HashEq[String val] val] box
    ```

    #### Returns

    - [HashMap](collections-hashmap)\[[String](builtin-string) val, [OptionSpec](cli-optionspec) val, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] box

    &nbsp;
- name: CommandSpec.parent()
  id: cli-commandspec#parent
  summary: Creates a command spec that can accept options and child commands, but not arguments
  belongs_to: CommandSpec
  description: |-
    ### parent

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L33)

    Creates a command spec that can accept options and child commands, but not arguments.

    ``` pony
    new ref parent(
      name': String val,
      descr': String val = "",
      options': Array[OptionSpec val] box = call,
      commands': Array[CommandSpec ref] box = call)
    : CommandSpec ref^ ?
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - options': [Array](builtin-array)\[[OptionSpec](cli-optionspec) val\] box = call
    - commands': [Array](builtin-array)\[[CommandSpec](index) ref\] box = call

    #### Returns

    - [CommandSpec](index) ref^ ?
- name: CommonPrefix
  id: strings-commonprefix
  summary: Creates a string that is the common prefix of the supplied strings, possibly empty
  description: "# CommonPrefix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L1)\n\nCreates a string that is the common prefix of the supplied strings, possibly empty.\n\n``` pony\nprimitive val CommonPrefix\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L1)\n\n``` pony\nnew val create()\n: CommonPrefix val^\n```\n\n#### Returns\n\n- [CommonPrefix](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)\n\n``` pony\nfun box apply(\n  data: ReadSeq[Stringable box] box)\n: String iso^\n```\n\n#### Parameters\n\n- data: [ReadSeq](builtin-readseq)\\[[Stringable](builtin-stringable) box\\] box\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)\n\n``` pony\nfun box eq(\n  that: CommonPrefix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CommonPrefix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)\n\n``` pony\nfun box ne(\n  that: CommonPrefix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CommonPrefix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/strings-CommonPrefix](https://stdlib.ponylang.io/strings-CommonPrefix)"
- name: CommonPrefix.apply()
  id: strings-commonprefix#apply
  summary: null
  belongs_to: CommonPrefix
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)

    ``` pony
    fun box apply(
      data: ReadSeq[Stringable box] box)
    : String iso^
    ```

    #### Parameters

    - data: [ReadSeq](builtin-readseq)\[[Stringable](builtin-stringable) box\] box

    #### Returns

    - [String](builtin-string) iso^
- name: CommonPrefix.create()
  id: strings-commonprefix#create
  summary: null
  belongs_to: CommonPrefix
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L1)

    ``` pony
    new val create()
    : CommonPrefix val^
    ```

    #### Returns

    - [CommonPrefix](index) val^

    ## Public Functions
- name: CommonPrefix.eq()
  id: strings-commonprefix#eq
  summary: null
  belongs_to: CommonPrefix
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)

    ``` pony
    fun box eq(
      that: CommonPrefix val)
    : Bool val
    ```

    #### Parameters

    - that: [CommonPrefix](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CommonPrefix.ne()
  id: strings-commonprefix#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: CommonPrefix
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/strings/common_prefix/#L7)\n\n``` pony\nfun box ne(\n  that: CommonPrefix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CommonPrefix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/strings-CommonPrefix](https://stdlib.ponylang.io/strings-CommonPrefix)"
- name: Comparable
  id: builtin-comparable
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Comparable\\[A: [Comparable](index)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L22)\n\n``` pony\ninterface ref Comparable[A: Comparable[A] #read] is\n  Equatable[A] ref\n```\n\n#### Implements\n\n- [Equatable](builtin-equatable)\\[A\\] ref\n\n## Public Functions\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L23)\n\n``` pony\nfun box lt(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L24)\n\n``` pony\nfun box le(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L25)\n\n``` pony\nfun box ge(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L26)\n\n``` pony\nfun box gt(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)\n\n``` pony\nfun box eq(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Comparable](https://stdlib.ponylang.io/builtin-Comparable)"
- name: Comparable.compare()
  id: builtin-comparable#compare
  summary: null
  belongs_to: Comparable
  description: |-
    ### compare

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)

    ``` pony
    fun box compare(
      that: box->A)
    : (Less val | Equal val | Greater val)
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    &nbsp;
- name: Comparable.eq()
  id: builtin-comparable#eq
  summary: null
  belongs_to: Comparable
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)

    ``` pony
    fun box eq(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Comparable.ge()
  id: builtin-comparable#ge
  summary: null
  belongs_to: Comparable
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L25)

    ``` pony
    fun box ge(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Comparable.gt()
  id: builtin-comparable#gt
  summary: null
  belongs_to: Comparable
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L26)

    ``` pony
    fun box gt(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Comparable.le()
  id: builtin-comparable#le
  summary: null
  belongs_to: Comparable
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L24)

    ``` pony
    fun box le(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Comparable.lt()
  id: builtin-comparable#lt
  summary: null
  belongs_to: Comparable
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L23)

    ``` pony
    fun box lt(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val
- name: Comparable.ne()
  id: builtin-comparable#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Comparable
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Comparable](https://stdlib.ponylang.io/builtin-Comparable)"
- name: Compare
  id: builtin-compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L13)\n\n``` pony\ntype Compare is\n  (Less val | Equal val | Greater val)\n```\n\n#### Type Alias For\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Compare](https://stdlib.ponylang.io/builtin-Compare)"
- name: Cons
  id: collections-persistent-cons
  summary: A list with a head and a tail, where the tail can be empty
  description: "# Cons\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L234)\n\nA list with a head and a tail, where the tail can be empty.\n\n``` pony\nclass val Cons[A: A] is\n  ReadSeq[val->A] box\n```\n\n#### Implements\n\n- [ReadSeq](builtin-readseq)\\[val-\\>A\\] box\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L243)\n\n``` pony\nnew val create(\n  a: val->A,\n  t: (Cons[A] val | Nil[A] val))\n: Cons[A] val^\n```\n\n#### Parameters\n\n- a: val-\\>A\n- t: ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n#### Returns\n\n- [Cons](index)\\[A\\] val^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L248)\n\nReturns the size of the list.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L254)\n\nReturns the i-th element of the list. Errors if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: val->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- val-\\>A ?\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L263)\n\nReturns an iterator over the elements of the list.\n\n``` pony\nfun box values()\n: Iterator[val->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[val-\\>A\\] ref^\n\n### is_empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L273)\n\nReturns a Bool indicating if the list is empty.\n\n``` pony\nfun box is_empty()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### is_non_empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L279)\n\nReturns a Bool indicating if the list is non-empty.\n\n``` pony\nfun box is_non_empty()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### head\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L285)\n\nReturns the head of the list.\n\n``` pony\nfun box head()\n: val->A\n```\n\n#### Returns\n\n- val-\\>A\n\n### tail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L291)\n\nReturns the tail of the list.\n\n``` pony\nfun box tail()\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L297)\n\nBuilds a new list by reversing the elements in the list.\n\n``` pony\nfun val reverse()\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### prepend\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L313)\n\nBuilds a new list with an element added to the front of this list.\n\n``` pony\nfun val prepend(\n  a: val->A!)\n: Cons[A] val\n```\n\n#### Parameters\n\n- a: val-\\>A!\n\n#### Returns\n\n- [Cons](index)\\[A\\] val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L319)\n\nBuilds a new list that is the concatenation of this list and the provided list.\n\n``` pony\nfun val concat(\n  l: (Cons[A] val | Nil[A] val))\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- l: ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L336)\n\nBuilds a new list by applying a function to every member of the list.\n\n``` pony\nfun val map[B: B](\n  f: {(val->A): val->B}[A, B] box)\n: (Cons[B] val | Nil[B] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): val-\\>B}\\[A, B\\] box\n\n#### Returns\n\n- ([Cons](index)\\[B\\] val \\| [Nil](collections-persistent-nil)\\[B\\] val)\n\n### flat_map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L353)\n\nBuilds a new list by applying a function to every member of the list and using the elements of the resulting lists.\n\n``` pony\nfun val flat_map[B: B](\n  f: {(val->A): List[B]}[A, B] box)\n: (Cons[B] val | Nil[B] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): List\\[B\\]}\\[A, B\\] box\n\n#### Returns\n\n- ([Cons](index)\\[B\\] val \\| [Nil](collections-persistent-nil)\\[B\\] val)\n\n### for_each\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L383)\n\nApplies the supplied function to every element of the list in order.\n\n``` pony\nfun val for_each(\n  f: {(val->A)}[A] box)\n: None val\n```\n\n#### Parameters\n\n- f: {(val-\\>A)}\\[A\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L399)\n\nBuilds a new list with those elements that satisfy a provided predicate.\n\n``` pony\nfun val filter(\n  f: {(val->A): Bool}[A] box)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### fold\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L421)\n\nFolds the elements of the list using the supplied function.\n\n``` pony\nfun val fold[B: B](\n  f: {(B, val->A): B^}[A, B] box,\n  acc: B)\n: B\n```\n\n#### Parameters\n\n- f: {(B, val-\\>A): B^}\\[A, B\\] box\n- acc: B\n\n#### Returns\n\n- B\n\n### every\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L438)\n\nReturns true if every element satisfies the provided predicate, false otherwise.\n\n``` pony\nfun val every(\n  f: {(val->A): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### exists\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L462)\n\nReturns true if at least one element satisfies the provided predicate, false otherwise.\n\n``` pony\nfun val exists(\n  f: {(val->A): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### partition\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L485)\n\nBuilds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not.\n\n``` pony\nfun val partition(\n  f: {(val->A): Bool}[A] box)\n: ((Cons[A] val | Nil[A] val) , (Cons[A] val | Nil[A] val))\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- (([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val) , ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val))\n\n### drop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L510)\n\nBuilds a list by dropping the first n elements.\n\n``` pony\nfun val drop(\n  n: USize val)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### drop_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L526)\n\nBuilds a list by dropping elements from the front of the list until one fails to satisfy the provided predicate.\n\n``` pony\nfun val drop_while(\n  f: {(val->A): Bool}[A] box)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### take\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L542)\n\nBuilds a list of the first n elements.\n\n``` pony\nfun val take(\n  n: USize val)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### take_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L562)\n\nBuilds a list of elements satisfying the provided predicate until one does not.\n\n``` pony\nfun val take_while(\n  f: {(val->A): Bool}[A] box)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Cons](https://stdlib.ponylang.io/collections-persistent-Cons)"
- name: Cons.apply()
  id: collections-persistent-cons#apply
  summary: Returns the i-th element of the list
  belongs_to: Cons
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L254)

    Returns the i-th element of the list. Errors if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : val->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - val-\>A ?

    &nbsp;
- name: Cons.concat()
  id: collections-persistent-cons#concat
  summary: Builds a new list that is the concatenation of this list and the provided list
  belongs_to: Cons
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L319)

    Builds a new list that is the concatenation of this list and the provided list.

    ``` pony
    fun val concat(
      l: (Cons[A] val | Nil[A] val))
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - l: ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.create()
  id: collections-persistent-cons#create
  summary: null
  belongs_to: Cons
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L243)

    ``` pony
    new val create(
      a: val->A,
      t: (Cons[A] val | Nil[A] val))
    : Cons[A] val^
    ```

    #### Parameters

    - a: val-\>A
    - t: ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    #### Returns

    - [Cons](index)\[A\] val^

    ## Public Functions
- name: Cons.drop()
  id: collections-persistent-cons#drop
  summary: Builds a list by dropping the first n elements
  belongs_to: Cons
  description: |-
    ### drop

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L510)

    Builds a list by dropping the first n elements.

    ``` pony
    fun val drop(
      n: USize val)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.drop_while()
  id: collections-persistent-cons#drop_while
  summary: Builds a list by dropping elements from the front of the list until one fails to satisfy the provided predicate
  belongs_to: Cons
  description: |-
    ### drop_while

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L526)

    Builds a list by dropping elements from the front of the list until one fails to satisfy the provided predicate.

    ``` pony
    fun val drop_while(
      f: {(val->A): Bool}[A] box)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.every()
  id: collections-persistent-cons#every
  summary: Returns true if every element satisfies the provided predicate, false otherwise
  belongs_to: Cons
  description: |-
    ### every

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L438)

    Returns true if every element satisfies the provided predicate, false otherwise.

    ``` pony
    fun val every(
      f: {(val->A): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Cons.exists()
  id: collections-persistent-cons#exists
  summary: Returns true if at least one element satisfies the provided predicate, false otherwise
  belongs_to: Cons
  description: |-
    ### exists

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L462)

    Returns true if at least one element satisfies the provided predicate, false otherwise.

    ``` pony
    fun val exists(
      f: {(val->A): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Cons.filter()
  id: collections-persistent-cons#filter
  summary: Builds a new list with those elements that satisfy a provided predicate
  belongs_to: Cons
  description: |-
    ### filter

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L399)

    Builds a new list with those elements that satisfy a provided predicate.

    ``` pony
    fun val filter(
      f: {(val->A): Bool}[A] box)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.flat_map()
  id: collections-persistent-cons#flat_mapb-b
  summary: Builds a new list by applying a function to every member of the list and using the elements of the resulting lists
  belongs_to: Cons
  description: |-
    ### flat_map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L353)

    Builds a new list by applying a function to every member of the list and using the elements of the resulting lists.

    ``` pony
    fun val flat_map[B: B](
      f: {(val->A): List[B]}[A, B] box)
    : (Cons[B] val | Nil[B] val)
    ```

    #### Parameters

    - f: {(val-\>A): List\[B\]}\[A, B\] box

    #### Returns

    - ([Cons](index)\[B\] val \| [Nil](collections-persistent-nil)\[B\] val)

    &nbsp;
- name: Cons.fold()
  id: collections-persistent-cons#foldb-b
  summary: Folds the elements of the list using the supplied function
  belongs_to: Cons
  description: |-
    ### fold\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L421)

    Folds the elements of the list using the supplied function.

    ``` pony
    fun val fold[B: B](
      f: {(B, val->A): B^}[A, B] box,
      acc: B)
    : B
    ```

    #### Parameters

    - f: {(B, val-\>A): B^}\[A, B\] box
    - acc: B

    #### Returns

    - B

    &nbsp;
- name: Cons.for_each()
  id: collections-persistent-cons#for_each
  summary: Applies the supplied function to every element of the list in order
  belongs_to: Cons
  description: |-
    ### for_each

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L383)

    Applies the supplied function to every element of the list in order.

    ``` pony
    fun val for_each(
      f: {(val->A)}[A] box)
    : None val
    ```

    #### Parameters

    - f: {(val-\>A)}\[A\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Cons.head()
  id: collections-persistent-cons#head
  summary: Returns the head of the list
  belongs_to: Cons
  description: |-
    ### head

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L285)

    Returns the head of the list.

    ``` pony
    fun box head()
    : val->A
    ```

    #### Returns

    - val-\>A

    &nbsp;
- name: Cons.is_empty()
  id: collections-persistent-cons#is_empty
  summary: Returns a Bool indicating if the list is empty
  belongs_to: Cons
  description: |-
    ### is_empty

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L273)

    Returns a Bool indicating if the list is empty.

    ``` pony
    fun box is_empty()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Cons.is_non_empty()
  id: collections-persistent-cons#is_non_empty
  summary: Returns a Bool indicating if the list is non-empty
  belongs_to: Cons
  description: |-
    ### is_non_empty

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L279)

    Returns a Bool indicating if the list is non-empty.

    ``` pony
    fun box is_non_empty()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Cons.map()
  id: collections-persistent-cons#mapb-b
  summary: Builds a new list by applying a function to every member of the list
  belongs_to: Cons
  description: |-
    ### map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L336)

    Builds a new list by applying a function to every member of the list.

    ``` pony
    fun val map[B: B](
      f: {(val->A): val->B}[A, B] box)
    : (Cons[B] val | Nil[B] val)
    ```

    #### Parameters

    - f: {(val-\>A): val-\>B}\[A, B\] box

    #### Returns

    - ([Cons](index)\[B\] val \| [Nil](collections-persistent-nil)\[B\] val)

    &nbsp;
- name: Cons.partition()
  id: collections-persistent-cons#partition
  summary: Builds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not
  belongs_to: Cons
  description: |-
    ### partition

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L485)

    Builds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not.

    ``` pony
    fun val partition(
      f: {(val->A): Bool}[A] box)
    : ((Cons[A] val | Nil[A] val) , (Cons[A] val | Nil[A] val))
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - (([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val) , ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val))

    &nbsp;
- name: Cons.prepend()
  id: collections-persistent-cons#prepend
  summary: Builds a new list with an element added to the front of this list
  belongs_to: Cons
  description: |-
    ### prepend

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L313)

    Builds a new list with an element added to the front of this list.

    ``` pony
    fun val prepend(
      a: val->A!)
    : Cons[A] val
    ```

    #### Parameters

    - a: val-\>A!

    #### Returns

    - [Cons](index)\[A\] val

    &nbsp;
- name: Cons.reverse()
  id: collections-persistent-cons#reverse
  summary: Builds a new list by reversing the elements in the list
  belongs_to: Cons
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L297)

    Builds a new list by reversing the elements in the list.

    ``` pony
    fun val reverse()
    : (Cons[A] val | Nil[A] val)
    ```

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.size()
  id: collections-persistent-cons#size
  summary: Returns the size of the list
  belongs_to: Cons
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L248)

    Returns the size of the list.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: Cons.tail()
  id: collections-persistent-cons#tail
  summary: Returns the tail of the list
  belongs_to: Cons
  description: |-
    ### tail

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L291)

    Returns the tail of the list.

    ``` pony
    fun box tail()
    : (Cons[A] val | Nil[A] val)
    ```

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.take()
  id: collections-persistent-cons#take
  summary: Builds a list of the first n elements
  belongs_to: Cons
  description: |-
    ### take

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L542)

    Builds a list of the first n elements.

    ``` pony
    fun val take(
      n: USize val)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - ([Cons](index)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Cons.take_while()
  id: collections-persistent-cons#take_while
  summary: Builds a list of elements satisfying the provided predicate until one does not
  belongs_to: Cons
  description: "### take_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L562)\n\nBuilds a list of elements satisfying the provided predicate until one does not.\n\n``` pony\nfun val take_while(\n  f: {(val->A): Bool}[A] box)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- ([Cons](index)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Cons](https://stdlib.ponylang.io/collections-persistent-Cons)"
- name: Cons.values()
  id: collections-persistent-cons#values
  summary: Returns an iterator over the elements of the list
  belongs_to: Cons
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L263)

    Returns an iterator over the elements of the list.

    ``` pony
    fun box values()
    : Iterator[val->A] ref^
    ```

    #### Returns

    - [Iterator](builtin-iterator)\[val-\>A\] ref^

    &nbsp;
- name: CreateFile
  id: files-createfile
  summary: Open a File for read/write, creating if it doesn't exist, preserving the contents if it does exist
  description: "# CreateFile\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L49)\n\nOpen a File for read/write, creating if it doesn't exist, preserving the contents if it does exist.\n\n``` pony\nprimitive val CreateFile\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L49)\n\n``` pony\nnew val create()\n: CreateFile val^\n```\n\n#### Returns\n\n- [CreateFile](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L54)\n\n``` pony\nfun box apply(\n  from: FilePath val)\n: (File ref | FileOK val | FileError val | \n    FileEOF val | FileBadFileNumber val | FileExists val | \n    FilePermissionDenied val)\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- ([File](files-file) ref \\| [FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L54)\n\n``` pony\nfun box eq(\n  that: CreateFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CreateFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L54)\n\n``` pony\nfun box ne(\n  that: CreateFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CreateFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-CreateFile](https://stdlib.ponylang.io/files-CreateFile)"
- name: CreateFile.apply()
  id: files-createfile#apply
  summary: null
  belongs_to: CreateFile
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L54)\n\n``` pony\nfun box apply(\n  from: FilePath val)\n: (File ref | FileOK val | FileError val | \n    FileEOF val | FileBadFileNumber val | FileExists val | \n    FilePermissionDenied val)\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- ([File](files-file) ref \\| [FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)"
- name: CreateFile.create()
  id: files-createfile#create
  summary: null
  belongs_to: CreateFile
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L49)

    ``` pony
    new val create()
    : CreateFile val^
    ```

    #### Returns

    - [CreateFile](index) val^

    ## Public Functions
- name: CreateFile.eq()
  id: files-createfile#eq
  summary: null
  belongs_to: CreateFile
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L54)

    ``` pony
    fun box eq(
      that: CreateFile val)
    : Bool val
    ```

    #### Parameters

    - that: [CreateFile](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: CreateFile.ne()
  id: files-createfile#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: CreateFile
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L54)\n\n``` pony\nfun box ne(\n  that: CreateFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [CreateFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-CreateFile](https://stdlib.ponylang.io/files-CreateFile)"
- name: Custodian
  id: bureaucracy-custodian
  summary: A Custodian keeps a set of actors to dispose
  description: "# Custodian\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L21)\n\nA Custodian keeps a set of actors to dispose. When the Custodian is disposed, it disposes of the actors in its set and then clears the set.\n\n## Example program\n\nImagine you have a program with 3 actors that you need to shutdown when it receives a TERM signal. We can set up a Custodian that knows about each of our actors and when a TERM signal is received, is disposed of.\n\n``` pony\nuse \"bureaucracy\"\nuse \"signals\"\n\nactor Actor1\n  be dispose() => None // dispose of resources here.\n\nactor Actor2\n  be dispose() => None // dispose of resources here.\n\nactor Actor3\n  be dispose() => None // dispose of resources here.\n\nactor Main\n  new create(env: Env) =>\n    let actor1 = Actor1\n    let actor2 = Actor2\n    let actor3 = Actor3\n\n    let custodian = Custodian\n    custodian(actor1)\n    custodian(actor2)\n    custodian(actor3)\n\n    SignalHandler(TermHandler(custodian), Sig.term())\n\nclass TermHandler is SignalNotify\n  let _custodian: Custodian\n\n  new iso create(custodian: Custodian) =>\n    _custodian = custodian\n\n  fun ref apply(count: U32): Bool =>\n    _custodian.dispose()\n    true\n```\n\n``` pony\nactor tag Custodian\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L21)\n\n``` pony\nnew tag create()\n: Custodian tag^\n```\n\n#### Returns\n\n- [Custodian](index) tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L71)\n\nAdd an actor to be disposed of.\n\n``` pony\nbe apply(\n  worker: DisposableActor tag)\n```\n\n#### Parameters\n\n- worker: [DisposableActor](builtin-disposableactor) tag\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L77)\n\nRemoves an actor from the set of things to be disposed.\n\n``` pony\nbe remove(\n  worker: DisposableActor tag)\n```\n\n#### Parameters\n\n- worker: [DisposableActor](builtin-disposableactor) tag\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L83)\n\nDispose of the actors in the set and then clear the set.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/bureaucracy-Custodian](https://stdlib.ponylang.io/bureaucracy-Custodian)"
- name: Custodian.apply()
  id: bureaucracy-custodian#apply
  summary: Add an actor to be disposed of
  belongs_to: Custodian
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L71)

    Add an actor to be disposed of.

    ``` pony
    be apply(
      worker: DisposableActor tag)
    ```

    #### Parameters

    - worker: [DisposableActor](builtin-disposableactor) tag
- name: Custodian.create()
  id: bureaucracy-custodian#create
  summary: null
  belongs_to: Custodian
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L21)

    ``` pony
    new tag create()
    : Custodian tag^
    ```

    #### Returns

    - [Custodian](index) tag^

    ## Public Behaviours
- name: Custodian.dispose()
  id: bureaucracy-custodian#dispose
  summary: Dispose of the actors in the set and then clear the set
  belongs_to: Custodian
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L83)\n\nDispose of the actors in the set and then clear the set.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/bureaucracy-Custodian](https://stdlib.ponylang.io/bureaucracy-Custodian)"
- name: Custodian.remove()
  id: bureaucracy-custodian#remove
  summary: Removes an actor from the set of things to be disposed
  belongs_to: Custodian
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/custodian/#L77)

    Removes an actor from the set of things to be disposed.

    ``` pony
    be remove(
      worker: DisposableActor tag)
    ```

    #### Parameters

    - worker: [DisposableActor](builtin-disposableactor) tag

    &nbsp;
- name: Debug
  id: debug-debug
  summary: This is a debug only print utility
  description: "# Debug\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L24)\n\nThis is a debug only print utility.\n\n``` pony\nprimitive val Debug\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L24)\n\n``` pony\nnew val create()\n: Debug val^\n```\n\n#### Returns\n\n- [Debug](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L28)\n\nIf platform is debug configured, print either a single stringable or a sequence of stringables. The default separator is \", \", and the default output stream is stdout.\n\n``` pony\nfun box apply(\n  msg: (Stringable box | ReadSeq[Stringable box] box),\n  sep: String val = \", \",\n  stream: (DebugOut val | DebugErr val) = reference)\n: None val\n```\n\n#### Parameters\n\n- msg: ([Stringable](builtin-stringable) box \\| [ReadSeq](builtin-readseq)\\[[Stringable](builtin-stringable) box\\] box)\n- sep: [String](builtin-string) val = \", \"\n- stream: ([DebugOut](debug-debugout) val \\| [DebugErr](debug-debugerr) val) = reference\n\n#### Returns\n\n- [None](builtin-none) val\n\n### out\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L47)\n\nIf platform is debug configured, print message to standard output\n\n``` pony\nfun box out(\n  msg: Stringable box = \"\")\n: None val\n```\n\n#### Parameters\n\n- msg: [Stringable](builtin-stringable) box = \"\"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### err\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L53)\n\nIf platform is debug configured, print message to standard error\n\n``` pony\nfun box err(\n  msg: Stringable box = \"\")\n: None val\n```\n\n#### Parameters\n\n- msg: [Stringable](builtin-stringable) box = \"\"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L28)\n\n``` pony\nfun box eq(\n  that: Debug val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Debug](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L28)\n\n``` pony\nfun box ne(\n  that: Debug val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Debug](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-Debug](https://stdlib.ponylang.io/debug-Debug)"
- name: Debug.apply()
  id: debug-debug#apply
  summary: If platform is debug configured, print either a single stringable or a sequence of stringables
  belongs_to: Debug
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L28)

    If platform is debug configured, print either a single stringable or a sequence of stringables. The default separator is ", ", and the default output stream is stdout.

    ``` pony
    fun box apply(
      msg: (Stringable box | ReadSeq[Stringable box] box),
      sep: String val = ", ",
      stream: (DebugOut val | DebugErr val) = reference)
    : None val
    ```

    #### Parameters

    - msg: ([Stringable](builtin-stringable) box \| [ReadSeq](builtin-readseq)\[[Stringable](builtin-stringable) box\] box)
    - sep: [String](builtin-string) val = ", "
    - stream: ([DebugOut](debug-debugout) val \| [DebugErr](debug-debugerr) val) = reference

    #### Returns

    - [None](builtin-none) val
- name: Debug.create()
  id: debug-debug#create
  summary: null
  belongs_to: Debug
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L24)

    ``` pony
    new val create()
    : Debug val^
    ```

    #### Returns

    - [Debug](index) val^

    ## Public Functions
- name: Debug.eq()
  id: debug-debug#eq
  summary: null
  belongs_to: Debug
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L28)

    ``` pony
    fun box eq(
      that: Debug val)
    : Bool val
    ```

    #### Parameters

    - that: [Debug](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Debug.err()
  id: debug-debug#err
  summary: null
  belongs_to: Debug
  description: |-
    ### err

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L53)

    If platform is debug configured, print message to standard error

    ``` pony
    fun box err(
      msg: Stringable box = "")
    : None val
    ```

    #### Parameters

    - msg: [Stringable](builtin-stringable) box = ""

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Debug.ne()
  id: debug-debug#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Debug
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L28)\n\n``` pony\nfun box ne(\n  that: Debug val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Debug](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-Debug](https://stdlib.ponylang.io/debug-Debug)"
- name: Debug.out()
  id: debug-debug#out
  summary: null
  belongs_to: Debug
  description: |-
    ### out

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L47)

    If platform is debug configured, print message to standard output

    ``` pony
    fun box out(
      msg: Stringable box = "")
    : None val
    ```

    #### Parameters

    - msg: [Stringable](builtin-stringable) box = ""

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: DebugErr
  id: debug-debugerr
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DebugErr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L20)\n\n``` pony\nprimitive val DebugErr\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L20)\n\n``` pony\nnew val create()\n: DebugErr val^\n```\n\n#### Returns\n\n- [DebugErr](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L22)\n\n``` pony\nfun box eq(\n  that: DebugErr val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugErr](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L22)\n\n``` pony\nfun box ne(\n  that: DebugErr val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugErr](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-DebugErr](https://stdlib.ponylang.io/debug-DebugErr)"
- name: DebugErr.create()
  id: debug-debugerr#create
  summary: null
  belongs_to: DebugErr
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L20)

    ``` pony
    new val create()
    : DebugErr val^
    ```

    #### Returns

    - [DebugErr](index) val^

    ## Public Functions
- name: DebugErr.eq()
  id: debug-debugerr#eq
  summary: null
  belongs_to: DebugErr
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L22)

    ``` pony
    fun box eq(
      that: DebugErr val)
    : Bool val
    ```

    #### Parameters

    - that: [DebugErr](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: DebugErr.ne()
  id: debug-debugerr#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DebugErr
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L22)\n\n``` pony\nfun box ne(\n  that: DebugErr val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugErr](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-DebugErr](https://stdlib.ponylang.io/debug-DebugErr)"
- name: DebugOut
  id: debug-debugout
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DebugOut\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L19)\n\n``` pony\nprimitive val DebugOut\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L19)\n\n``` pony\nnew val create()\n: DebugOut val^\n```\n\n#### Returns\n\n- [DebugOut](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L20)\n\n``` pony\nfun box eq(\n  that: DebugOut val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugOut](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L20)\n\n``` pony\nfun box ne(\n  that: DebugOut val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugOut](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-DebugOut](https://stdlib.ponylang.io/debug-DebugOut)"
- name: DebugOut.create()
  id: debug-debugout#create
  summary: null
  belongs_to: DebugOut
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L19)

    ``` pony
    new val create()
    : DebugOut val^
    ```

    #### Returns

    - [DebugOut](index) val^

    ## Public Functions
- name: DebugOut.eq()
  id: debug-debugout#eq
  summary: null
  belongs_to: DebugOut
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/debug/debug/#L20)

    ``` pony
    fun box eq(
      that: DebugOut val)
    : Bool val
    ```

    #### Parameters

    - that: [DebugOut](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: DebugOut.ne()
  id: debug-debugout#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DebugOut
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L20)\n\n``` pony\nfun box ne(\n  that: DebugOut val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DebugOut](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-DebugOut](https://stdlib.ponylang.io/debug-DebugOut)"
- name: DebugStream
  id: debug-debugstream
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DebugStream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/debug/debug/#L22)\n\n``` pony\ntype DebugStream is\n  (DebugOut val | DebugErr val)\n```\n\n#### Type Alias For\n\n- ([DebugOut](debug-debugout) val \\| [DebugErr](debug-debugerr) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/debug-DebugStream](https://stdlib.ponylang.io/debug-DebugStream)"
- name: DefaultLogFormatter
  id: logger-defaultlogformatter
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DefaultLogFormatter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L154)\n\n``` pony\nprimitive val DefaultLogFormatter is\n  LogFormatter val\n```\n\n#### Implements\n\n- [LogFormatter](logger-logformatter) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L154)\n\n``` pony\nnew val create()\n: DefaultLogFormatter val^\n```\n\n#### Returns\n\n- [DefaultLogFormatter](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L155)\n\n``` pony\nfun box apply(\n  msg: String val,\n  loc: SourceLoc val)\n: String val\n```\n\n#### Parameters\n\n- msg: [String](builtin-string) val\n- loc: [SourceLoc](builtin-sourceloc) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L155)\n\n``` pony\nfun box eq(\n  that: DefaultLogFormatter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DefaultLogFormatter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L155)\n\n``` pony\nfun box ne(\n  that: DefaultLogFormatter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DefaultLogFormatter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-DefaultLogFormatter](https://stdlib.ponylang.io/logger-DefaultLogFormatter)"
- name: DefaultLogFormatter.apply()
  id: logger-defaultlogformatter#apply
  summary: null
  belongs_to: DefaultLogFormatter
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L155)

    ``` pony
    fun box apply(
      msg: String val,
      loc: SourceLoc val)
    : String val
    ```

    #### Parameters

    - msg: [String](builtin-string) val
    - loc: [SourceLoc](builtin-sourceloc) val

    #### Returns

    - [String](builtin-string) val
- name: DefaultLogFormatter.create()
  id: logger-defaultlogformatter#create
  summary: null
  belongs_to: DefaultLogFormatter
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L154)

    ``` pony
    new val create()
    : DefaultLogFormatter val^
    ```

    #### Returns

    - [DefaultLogFormatter](index) val^

    ## Public Functions
- name: DefaultLogFormatter.eq()
  id: logger-defaultlogformatter#eq
  summary: null
  belongs_to: DefaultLogFormatter
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L155)

    ``` pony
    fun box eq(
      that: DefaultLogFormatter val)
    : Bool val
    ```

    #### Parameters

    - that: [DefaultLogFormatter](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DefaultLogFormatter.ne()
  id: logger-defaultlogformatter#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DefaultLogFormatter
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L155)\n\n``` pony\nfun box ne(\n  that: DefaultLogFormatter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DefaultLogFormatter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-DefaultLogFormatter](https://stdlib.ponylang.io/logger-DefaultLogFormatter)"
- name: DeserialiseAuth
  id: serialise-deserialiseauth
  summary: This is a capability token that allows the holder to deserialise objects
  description: "# DeserialiseAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L48)\n\nThis is a capability token that allows the holder to deserialise objects. It does not allow the holder to serialise objects or examine serialised.\n\n``` pony\nprimitive val DeserialiseAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)\n\n``` pony\nnew val create(\n  auth: AmbientAuth val)\n: DeserialiseAuth val^\n```\n\n#### Parameters\n\n- auth: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [DeserialiseAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)\n\n``` pony\nfun box eq(\n  that: DeserialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DeserialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)\n\n``` pony\nfun box ne(\n  that: DeserialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DeserialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-DeserialiseAuth](https://stdlib.ponylang.io/serialise-DeserialiseAuth)"
- name: DeserialiseAuth.create()
  id: serialise-deserialiseauth#create
  summary: null
  belongs_to: DeserialiseAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)

    ``` pony
    new val create(
      auth: AmbientAuth val)
    : DeserialiseAuth val^
    ```

    #### Parameters

    - auth: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [DeserialiseAuth](index) val^

    ## Public Functions
- name: DeserialiseAuth.eq()
  id: serialise-deserialiseauth#eq
  summary: null
  belongs_to: DeserialiseAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)

    ``` pony
    fun box eq(
      that: DeserialiseAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [DeserialiseAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: DeserialiseAuth.ne()
  id: serialise-deserialiseauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DeserialiseAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L53)\n\n``` pony\nfun box ne(\n  that: DeserialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DeserialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-DeserialiseAuth](https://stdlib.ponylang.io/serialise-DeserialiseAuth)"
- name: Dice
  id: random-dice
  summary: A simple dice roller
  description: "# Dice\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/dice/#L1)\n\nA simple dice roller.\n\n``` pony\nclass ref Dice\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/dice/#L7)\n\nInitialise with a random number generator.\n\n``` pony\nnew ref create(\n  from: Random ref)\n: Dice ref^\n```\n\n#### Parameters\n\n- from: [Random](random-random) ref\n\n#### Returns\n\n- [Dice](index) ref^\n\n## Public fields\n\n### var r: [Random](random-random) ref\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/dice/#L5)\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/dice/#L13)\n\nReturn the sum of `count` rolls of a die with the given number of `sides`. The die is numbered from 1 to `sides`. For example, count = 2 and sides = 6 will return a value between 2 and 12.\n\n``` pony\nfun ref apply(\n  count: U64 val,\n  sides: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- count: [U64](builtin-u64) val\n- sides: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-Dice](https://stdlib.ponylang.io/random-Dice)"
- name: Dice.apply()
  id: random-dice#apply
  summary: Return the sum of count rolls of a die with the given number of sides
  belongs_to: Dice
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/dice/#L13)\n\nReturn the sum of `count` rolls of a die with the given number of `sides`. The die is numbered from 1 to `sides`. For example, count = 2 and sides = 6 will return a value between 2 and 12.\n\n``` pony\nfun ref apply(\n  count: U64 val,\n  sides: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- count: [U64](builtin-u64) val\n- sides: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-Dice](https://stdlib.ponylang.io/random-Dice)"
- name: Dice.create()
  id: random-dice#create
  summary: Initialise with a random number generator
  belongs_to: Dice
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/dice/#L7)

    Initialise with a random number generator.

    ``` pony
    new ref create(
      from: Random ref)
    : Dice ref^
    ```

    #### Parameters

    - from: [Random](random-random) ref

    #### Returns

    - [Dice](index) ref^

    ## Public fields
- name: Dice.var()
  id: random-dice#var-r-random-ref
  summary: null
  belongs_to: Dice
  description: |-
    ### var r: [Random](random-random) ref

    [\[Source\]](https://stdlib.ponylang.io/src/random/dice/#L5)

    ## Public Functions
- name: Directory
  id: files-directory
  summary: Operations on a directory
  description: "# Directory\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L15)\n\nOperations on a directory.\n\nThe directory-relative functions (open, etc) use the \\*at interface on FreeBSD and Linux. This isn't available on OS X prior to 10.10, so it is not used. On FreeBSD, this allows the directory-relative functions to take advantage of Capsicum.\n\n``` pony\nclass ref Directory\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L37)\n\nThis will raise an error if the path doesn't exist or it is not a directory, or if FileRead or FileStat permission isn't available.\n\n``` pony\nnew ref create(\n  from: FilePath val)\n: Directory ref^ ?\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- [Directory](index) ref^ ?\n\n## Public fields\n\n### let path: [FilePath](files-filepath) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L24)\n\nThis is the filesystem path locating this directory on the file system and an object capability granting access to operate on this directory.\n\n## Public Functions\n\n### entries\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L77)\n\nThe entries will include everything in the directory, but it is not recursive. The path for the entry will be relative to the directory, so it will contain no directory separators. The entries will not include \".\" or \"..\".\n\n``` pony\nfun box entries()\n: Array[String val] iso^ ?\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](builtin-string) val\\] iso^ ?\n\n### open\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L149)\n\nOpen a directory relative to this one. Raises an error if the path is not within this directory hierarchy.\n\n``` pony\nfun box open(\n  target: String val)\n: Directory iso^ ?\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [Directory](index) iso^ ?\n\n### mkdir\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L171)\n\nCreates a directory relative to this one. Returns false if the path is not within this directory hierarchy or if FileMkdir permission is missing.\n\n``` pony\nfun box mkdir(\n  target: String val)\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### create_file\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L210)\n\nOpen for read/write, creating if it doesn't exist, preserving the contents if it does exist.\n\n``` pony\nfun box create_file(\n  target: String val)\n: File iso^ ?\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [File](files-file) iso^ ?\n\n### open_file\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L238)\n\nOpen for read only, failing if it doesn't exist.\n\n``` pony\nfun box open_file(\n  target: String val)\n: File iso^ ?\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [File](files-file) iso^ ?\n\n### info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L261)\n\nReturn a FileInfo for this directory. Raise an error if the fd is invalid or if we don't have FileStat permission.\n\n``` pony\nfun box info()\n: FileInfo val ?\n```\n\n#### Returns\n\n- [FileInfo](files-fileinfo) val ?\n\n### chmod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L268)\n\nSet the FileMode for this directory.\n\n``` pony\nfun box chmod(\n  mode: FileMode box)\n: Bool val\n```\n\n#### Parameters\n\n- mode: [FileMode](files-filemode) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### chown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L274)\n\nSet the owner and group for this directory. Does nothing on Windows.\n\n``` pony\nfun box chown(\n  uid: U32 val,\n  gid: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- uid: [U32](builtin-u32) val\n- gid: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### touch\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L280)\n\nSet the last access and modification times of the directory to now.\n\n``` pony\nfun box touch()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### set_time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L286)\n\nSet the last access and modification times of the directory to the given values.\n\n``` pony\nfun box set_time(\n  atime: (I64 val , I64 val),\n  mtime: (I64 val , I64 val))\n: Bool val\n```\n\n#### Parameters\n\n- atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### infoat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L293)\n\nReturn a FileInfo for some path relative to this directory.\n\n``` pony\nfun box infoat(\n  target: String val)\n: FileInfo val ?\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [FileInfo](files-fileinfo) val ?\n\n### chmodat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L313)\n\nSet the FileMode for some path relative to this directory.\n\n``` pony\nfun box chmodat(\n  target: String val,\n  mode: FileMode box)\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n- mode: [FileMode](files-filemode) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### chownat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L337)\n\nSet the FileMode for some path relative to this directory.\n\n``` pony\nfun box chownat(\n  target: String val,\n  uid: U32 val,\n  gid: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n- uid: [U32](builtin-u32) val\n- gid: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### touchat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L361)\n\nSet the last access and modification times of the directory to now.\n\n``` pony\nfun box touchat(\n  target: String val)\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### set_time_at\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L367)\n\nSet the last access and modification times of the directory to the given values.\n\n``` pony\nfun box set_time_at(\n  target: String val,\n  atime: (I64 val , I64 val),\n  mtime: (I64 val , I64 val))\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n- atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### symlink\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L401)\n\nLink the source path to the link_name, where the link_name is relative to this directory.\n\n``` pony\nfun box symlink(\n  source: FilePath val,\n  link_name: String val)\n: Bool val\n```\n\n#### Parameters\n\n- source: [FilePath](files-filepath) val\n- link_name: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L428)\n\nRemove the file or directory. The directory contents will be removed as well, recursively. Symlinks will be removed but not traversed.\n\n``` pony\nfun box remove(\n  target: String val)\n: Bool val\n```\n\n#### Parameters\n\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### rename\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L467)\n\nRename source (which is relative to this directory) to target (which is relative to the `to` directory).\n\n``` pony\nfun box rename(\n  source: String val,\n  to: Directory box,\n  target: String val)\n: Bool val\n```\n\n#### Parameters\n\n- source: [String](builtin-string) val\n- to: [Directory](index) box\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L496)\n\nClose the directory.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-Directory](https://stdlib.ponylang.io/files-Directory)"
- name: Directory.chmod()
  id: files-directory#chmod
  summary: Set the FileMode for this directory
  belongs_to: Directory
  description: |-
    ### chmod

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L268)

    Set the FileMode for this directory.

    ``` pony
    fun box chmod(
      mode: FileMode box)
    : Bool val
    ```

    #### Parameters

    - mode: [FileMode](files-filemode) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.chmodat()
  id: files-directory#chmodat
  summary: Set the FileMode for some path relative to this directory
  belongs_to: Directory
  description: |-
    ### chmodat

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L313)

    Set the FileMode for some path relative to this directory.

    ``` pony
    fun box chmodat(
      target: String val,
      mode: FileMode box)
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val
    - mode: [FileMode](files-filemode) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.chown()
  id: files-directory#chown
  summary: Set the owner and group for this directory
  belongs_to: Directory
  description: |-
    ### chown

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L274)

    Set the owner and group for this directory. Does nothing on Windows.

    ``` pony
    fun box chown(
      uid: U32 val,
      gid: U32 val)
    : Bool val
    ```

    #### Parameters

    - uid: [U32](builtin-u32) val
    - gid: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.chownat()
  id: files-directory#chownat
  summary: Set the FileMode for some path relative to this directory
  belongs_to: Directory
  description: |-
    ### chownat

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L337)

    Set the FileMode for some path relative to this directory.

    ``` pony
    fun box chownat(
      target: String val,
      uid: U32 val,
      gid: U32 val)
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val
    - uid: [U32](builtin-u32) val
    - gid: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.create()
  id: files-directory#create
  summary: This will raise an error if the path doesn't exist or it is not a directory, or if FileRead or FileStat permission isn't available
  belongs_to: Directory
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L37)

    This will raise an error if the path doesn't exist or it is not a directory, or if FileRead or FileStat permission isn't available.

    ``` pony
    new ref create(
      from: FilePath val)
    : Directory ref^ ?
    ```

    #### Parameters

    - from: [FilePath](files-filepath) val

    #### Returns

    - [Directory](index) ref^ ?

    ## Public fields
- name: Directory.create_file()
  id: files-directory#create_file
  summary: Open for read/write, creating if it doesn't exist, preserving the contents if it does exist
  belongs_to: Directory
  description: |-
    ### create_file

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L210)

    Open for read/write, creating if it doesn't exist, preserving the contents if it does exist.

    ``` pony
    fun box create_file(
      target: String val)
    : File iso^ ?
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [File](files-file) iso^ ?

    &nbsp;
- name: Directory.dispose()
  id: files-directory#dispose
  summary: Close the directory
  belongs_to: Directory
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/directory/#L496)\n\nClose the directory.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-Directory](https://stdlib.ponylang.io/files-Directory)"
- name: Directory.entries()
  id: files-directory#entries
  summary: The entries will include everything in the directory, but it is not recursive
  belongs_to: Directory
  description: |-
    ### entries

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L77)

    The entries will include everything in the directory, but it is not recursive. The path for the entry will be relative to the directory, so it will contain no directory separators. The entries will not include "." or "..".

    ``` pony
    fun box entries()
    : Array[String val] iso^ ?
    ```

    #### Returns

    - [Array](builtin-array)\[[String](builtin-string) val\] iso^ ?
- name: Directory.info()
  id: files-directory#info
  summary: Return a FileInfo for this directory
  belongs_to: Directory
  description: |-
    ### info

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L261)

    Return a FileInfo for this directory. Raise an error if the fd is invalid or if we don't have FileStat permission.

    ``` pony
    fun box info()
    : FileInfo val ?
    ```

    #### Returns

    - [FileInfo](files-fileinfo) val ?

    &nbsp;
- name: Directory.infoat()
  id: files-directory#infoat
  summary: Return a FileInfo for some path relative to this directory
  belongs_to: Directory
  description: |-
    ### infoat

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L293)

    Return a FileInfo for some path relative to this directory.

    ``` pony
    fun box infoat(
      target: String val)
    : FileInfo val ?
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [FileInfo](files-fileinfo) val ?

    &nbsp;
- name: Directory.mkdir()
  id: files-directory#mkdir
  summary: Creates a directory relative to this one
  belongs_to: Directory
  description: |-
    ### mkdir

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L171)

    Creates a directory relative to this one. Returns false if the path is not within this directory hierarchy or if FileMkdir permission is missing.

    ``` pony
    fun box mkdir(
      target: String val)
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.open()
  id: files-directory#open
  summary: Open a directory relative to this one
  belongs_to: Directory
  description: |-
    ### open

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L149)

    Open a directory relative to this one. Raises an error if the path is not within this directory hierarchy.

    ``` pony
    fun box open(
      target: String val)
    : Directory iso^ ?
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [Directory](index) iso^ ?

    &nbsp;
- name: Directory.open_file()
  id: files-directory#open_file
  summary: Open for read only, failing if it doesn't exist
  belongs_to: Directory
  description: |-
    ### open_file

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L238)

    Open for read only, failing if it doesn't exist.

    ``` pony
    fun box open_file(
      target: String val)
    : File iso^ ?
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [File](files-file) iso^ ?

    &nbsp;
- name: Directory.path
  id: files-directory#let-path-filepath-val
  summary: This is the filesystem path locating this directory on the file system and an object capability granting access to operate on this directory
  belongs_to: Directory
  description: |-
    ### let path: [FilePath](files-filepath) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L24)

    This is the filesystem path locating this directory on the file system and an object capability granting access to operate on this directory.

    ## Public Functions
- name: Directory.remove()
  id: files-directory#remove
  summary: Remove the file or directory
  belongs_to: Directory
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L428)

    Remove the file or directory. The directory contents will be removed as well, recursively. Symlinks will be removed but not traversed.

    ``` pony
    fun box remove(
      target: String val)
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.rename()
  id: files-directory#rename
  summary: Rename source (which is relative to this directory) to target (which is relative to the to directory)
  belongs_to: Directory
  description: |-
    ### rename

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L467)

    Rename source (which is relative to this directory) to target (which is relative to the `to` directory).

    ``` pony
    fun box rename(
      source: String val,
      to: Directory box,
      target: String val)
    : Bool val
    ```

    #### Parameters

    - source: [String](builtin-string) val
    - to: [Directory](index) box
    - target: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.set_time()
  id: files-directory#set_time
  summary: Set the last access and modification times of the directory to the given values
  belongs_to: Directory
  description: |-
    ### set_time

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L286)

    Set the last access and modification times of the directory to the given values.

    ``` pony
    fun box set_time(
      atime: (I64 val , I64 val),
      mtime: (I64 val , I64 val))
    : Bool val
    ```

    #### Parameters

    - atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)
    - mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.set_time_at()
  id: files-directory#set_time_at
  summary: Set the last access and modification times of the directory to the given values
  belongs_to: Directory
  description: |-
    ### set_time_at

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L367)

    Set the last access and modification times of the directory to the given values.

    ``` pony
    fun box set_time_at(
      target: String val,
      atime: (I64 val , I64 val),
      mtime: (I64 val , I64 val))
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val
    - atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)
    - mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.symlink()
  id: files-directory#symlink
  summary: Link the source path to the link_name, where the link_name is relative to this directory
  belongs_to: Directory
  description: |-
    ### symlink

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L401)

    Link the source path to the link_name, where the link_name is relative to this directory.

    ``` pony
    fun box symlink(
      source: FilePath val,
      link_name: String val)
    : Bool val
    ```

    #### Parameters

    - source: [FilePath](files-filepath) val
    - link_name: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.touch()
  id: files-directory#touch
  summary: Set the last access and modification times of the directory to now
  belongs_to: Directory
  description: |-
    ### touch

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L280)

    Set the last access and modification times of the directory to now.

    ``` pony
    fun box touch()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Directory.touchat()
  id: files-directory#touchat
  summary: Set the last access and modification times of the directory to now
  belongs_to: Directory
  description: |-
    ### touchat

    [\[Source\]](https://stdlib.ponylang.io/src/files/directory/#L361)

    Set the last access and modification times of the directory to now.

    ``` pony
    fun box touchat(
      target: String val)
    : Bool val
    ```

    #### Parameters

    - target: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DisposableActor
  id: builtin-disposableactor
  summary: An interface used to asynchronously dispose of an actor
  description: "# DisposableActor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/disposable_actor/#L1)\n\nAn interface used to asynchronously dispose of an actor.\n\n``` pony\ninterface tag DisposableActor\n```\n\n## Public Behaviours\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/disposable_actor/#L5)\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-DisposableActor](https://stdlib.ponylang.io/builtin-DisposableActor)"
- name: DisposableActor.dispose()
  id: builtin-disposableactor#dispose
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DisposableActor
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/disposable_actor/#L5)\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-DisposableActor](https://stdlib.ponylang.io/builtin-DisposableActor)"
- name: DNS
  id: net-dns
  summary: Helper functions for resolving DNS queries
  description: "# DNS\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L3)\n\nHelper functions for resolving DNS queries.\n\n``` pony\nprimitive val DNS\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L3)\n\n``` pony\nnew val create()\n: DNS val^\n```\n\n#### Returns\n\n- [DNS](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L7)\n\nGets all IPv4 and IPv6 addresses for a host and service.\n\n``` pony\nfun box apply(\n  auth: (AmbientAuth val | NetAuth val | DNSAuth val),\n  host: String val,\n  service: String val)\n: Array[NetAddress val] iso^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[NetAddress](net-netaddress) val\\] iso^\n\n### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L15)\n\nGets all IPv4 addresses for a host and service.\n\n``` pony\nfun box ip4(\n  auth: (AmbientAuth val | NetAuth val | DNSAuth val),\n  host: String val,\n  service: String val)\n: Array[NetAddress val] iso^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[NetAddress](net-netaddress) val\\] iso^\n\n### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L23)\n\nGets all IPv6 addresses for a host and service.\n\n``` pony\nfun box ip6(\n  auth: (AmbientAuth val | NetAuth val | DNSAuth val),\n  host: String val,\n  service: String val)\n: Array[NetAddress val] iso^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[NetAddress](net-netaddress) val\\] iso^\n\n### broadcast_ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L31)\n\nLink-local IP4 broadcast address.\n\n``` pony\nfun box broadcast_ip4(\n  auth: (AmbientAuth val | NetAuth val | DNSAuth val),\n  service: String val)\n: Array[NetAddress val] iso^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n- service: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[NetAddress](net-netaddress) val\\] iso^\n\n### broadcast_ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L39)\n\nLink-local IP6 broadcast address.\n\n``` pony\nfun box broadcast_ip6(\n  auth: (AmbientAuth val | NetAuth val | DNSAuth val),\n  service: String val)\n: Array[NetAddress val] iso^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n- service: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[NetAddress](net-netaddress) val\\] iso^\n\n### is_ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L47)\n\nReturns true if the host is a literal IPv4 address.\n\n``` pony\nfun box is_ip4(\n  host: String val)\n: Bool val\n```\n\n#### Parameters\n\n- host: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### is_ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L53)\n\nReturns true if the host is a literal IPv6 address.\n\n``` pony\nfun box is_ip6(\n  host: String val)\n: Bool val\n```\n\n#### Parameters\n\n- host: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L7)\n\n``` pony\nfun box eq(\n  that: DNS val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNS](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L7)\n\n``` pony\nfun box ne(\n  that: DNS val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNS](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-DNS](https://stdlib.ponylang.io/net-DNS)"
- name: DNS.apply()
  id: net-dns#apply
  summary: Gets all IPv4 and IPv6 addresses for a host and service
  belongs_to: DNS
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L7)

    Gets all IPv4 and IPv6 addresses for a host and service.

    ``` pony
    fun box apply(
      auth: (AmbientAuth val | NetAuth val | DNSAuth val),
      host: String val,
      service: String val)
    : Array[NetAddress val] iso^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [DNSAuth](net-dnsauth) val)
    - host: [String](builtin-string) val
    - service: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[NetAddress](net-netaddress) val\] iso^
- name: DNS.broadcast_ip4()
  id: net-dns#broadcast_ip4
  summary: Link-local IP4 broadcast address
  belongs_to: DNS
  description: |-
    ### broadcast_ip4

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L31)

    Link-local IP4 broadcast address.

    ``` pony
    fun box broadcast_ip4(
      auth: (AmbientAuth val | NetAuth val | DNSAuth val),
      service: String val)
    : Array[NetAddress val] iso^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [DNSAuth](net-dnsauth) val)
    - service: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[NetAddress](net-netaddress) val\] iso^

    &nbsp;
- name: DNS.broadcast_ip6()
  id: net-dns#broadcast_ip6
  summary: Link-local IP6 broadcast address
  belongs_to: DNS
  description: |-
    ### broadcast_ip6

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L39)

    Link-local IP6 broadcast address.

    ``` pony
    fun box broadcast_ip6(
      auth: (AmbientAuth val | NetAuth val | DNSAuth val),
      service: String val)
    : Array[NetAddress val] iso^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [DNSAuth](net-dnsauth) val)
    - service: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[NetAddress](net-netaddress) val\] iso^

    &nbsp;
- name: DNS.create()
  id: net-dns#create
  summary: null
  belongs_to: DNS
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L3)

    ``` pony
    new val create()
    : DNS val^
    ```

    #### Returns

    - [DNS](index) val^

    ## Public Functions
- name: DNS.eq()
  id: net-dns#eq
  summary: null
  belongs_to: DNS
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L7)

    ``` pony
    fun box eq(
      that: DNS val)
    : Bool val
    ```

    #### Parameters

    - that: [DNS](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DNS.ip4()
  id: net-dns#ip4
  summary: Gets all IPv4 addresses for a host and service
  belongs_to: DNS
  description: |-
    ### ip4

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L15)

    Gets all IPv4 addresses for a host and service.

    ``` pony
    fun box ip4(
      auth: (AmbientAuth val | NetAuth val | DNSAuth val),
      host: String val,
      service: String val)
    : Array[NetAddress val] iso^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [DNSAuth](net-dnsauth) val)
    - host: [String](builtin-string) val
    - service: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[NetAddress](net-netaddress) val\] iso^

    &nbsp;
- name: DNS.ip6()
  id: net-dns#ip6
  summary: Gets all IPv6 addresses for a host and service
  belongs_to: DNS
  description: |-
    ### ip6

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L23)

    Gets all IPv6 addresses for a host and service.

    ``` pony
    fun box ip6(
      auth: (AmbientAuth val | NetAuth val | DNSAuth val),
      host: String val,
      service: String val)
    : Array[NetAddress val] iso^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [DNSAuth](net-dnsauth) val)
    - host: [String](builtin-string) val
    - service: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[NetAddress](net-netaddress) val\] iso^

    &nbsp;
- name: DNS.is_ip4()
  id: net-dns#is_ip4
  summary: Returns true if the host is a literal IPv4 address
  belongs_to: DNS
  description: |-
    ### is_ip4

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L47)

    Returns true if the host is a literal IPv4 address.

    ``` pony
    fun box is_ip4(
      host: String val)
    : Bool val
    ```

    #### Parameters

    - host: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DNS.is_ip6()
  id: net-dns#is_ip6
  summary: Returns true if the host is a literal IPv6 address
  belongs_to: DNS
  description: |-
    ### is_ip6

    [\[Source\]](https://stdlib.ponylang.io/src/net/dns/#L53)

    Returns true if the host is a literal IPv6 address.

    ``` pony
    fun box is_ip6(
      host: String val)
    : Bool val
    ```

    #### Parameters

    - host: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DNS.ne()
  id: net-dns#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DNS
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L7)\n\n``` pony\nfun box ne(\n  that: DNS val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNS](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-DNS](https://stdlib.ponylang.io/net-DNS)"
- name: DNSAuth
  id: net-dnsauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DNSAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L5)\n\n``` pony\nprimitive val DNSAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L6)\n\n``` pony\nnew val create(\n  from: (AmbientAuth val | NetAuth val))\n: DNSAuth val^\n```\n\n#### Parameters\n\n- from: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val)\n\n#### Returns\n\n- [DNSAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L6)\n\n``` pony\nfun box eq(\n  that: DNSAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNSAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L6)\n\n``` pony\nfun box ne(\n  that: DNSAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNSAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-DNSAuth](https://stdlib.ponylang.io/net-DNSAuth)"
- name: DNSAuth.create()
  id: net-dnsauth#create
  summary: null
  belongs_to: DNSAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L6)

    ``` pony
    new val create(
      from: (AmbientAuth val | NetAuth val))
    : DNSAuth val^
    ```

    #### Parameters

    - from: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val)

    #### Returns

    - [DNSAuth](index) val^

    ## Public Functions
- name: DNSAuth.eq()
  id: net-dnsauth#eq
  summary: null
  belongs_to: DNSAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L6)

    ``` pony
    fun box eq(
      that: DNSAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [DNSAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: DNSAuth.ne()
  id: net-dnsauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DNSAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L6)\n\n``` pony\nfun box ne(\n  that: DNSAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DNSAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-DNSAuth](https://stdlib.ponylang.io/net-DNSAuth)"
- name: DNSLookupAuth
  id: net-dnslookupauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# DNSLookupAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/dns/#L1)\n\n``` pony\ntype DNSLookupAuth is\n  (AmbientAuth val | NetAuth val | DNSAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-DNSLookupAuth](https://stdlib.ponylang.io/net-DNSLookupAuth)"
- name: DoNotOptimise
  id: builtin-donotoptimise
  summary: Contains functions preventing some compiler optimisations, namely dead code removal
  description: "# DoNotOptimise\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L1)\n\nContains functions preventing some compiler optimisations, namely dead code removal. This is useful for benchmarking purposes.\n\n``` pony\nprimitive val DoNotOptimise\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L1)\n\n``` pony\nnew val create()\n: DoNotOptimise val^\n```\n\n#### Returns\n\n- [DoNotOptimise](index) val^\n\n## Public Functions\n\n### apply\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)\n\nPrevent the compiler from optimising out obj and any computation it is derived from. This doesn't prevent constant propagation.\n\n``` pony\nfun box apply[A: A](\n  obj: A)\n: None val\n```\n\n#### Parameters\n\n- obj: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### observe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L14)\n\nPrevent the compiler from optimising out writes to an object marked by the apply function.\n\n``` pony\nfun box observe()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)\n\n``` pony\nfun box eq(\n  that: DoNotOptimise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DoNotOptimise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)\n\n``` pony\nfun box ne(\n  that: DoNotOptimise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DoNotOptimise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-DoNotOptimise](https://stdlib.ponylang.io/builtin-DoNotOptimise)"
- name: DoNotOptimise.apply()
  id: builtin-donotoptimise#applya-a
  summary: Prevent the compiler from optimising out obj and any computation it is derived from
  belongs_to: DoNotOptimise
  description: |-
    ### apply\[A: A\]

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)

    Prevent the compiler from optimising out obj and any computation it is derived from. This doesn't prevent constant propagation.

    ``` pony
    fun box apply[A: A](
      obj: A)
    : None val
    ```

    #### Parameters

    - obj: A

    #### Returns

    - [None](builtin-none) val
- name: DoNotOptimise.create()
  id: builtin-donotoptimise#create
  summary: null
  belongs_to: DoNotOptimise
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L1)

    ``` pony
    new val create()
    : DoNotOptimise val^
    ```

    #### Returns

    - [DoNotOptimise](index) val^

    ## Public Functions
- name: DoNotOptimise.eq()
  id: builtin-donotoptimise#eq
  summary: null
  belongs_to: DoNotOptimise
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)

    ``` pony
    fun box eq(
      that: DoNotOptimise val)
    : Bool val
    ```

    #### Parameters

    - that: [DoNotOptimise](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: DoNotOptimise.ne()
  id: builtin-donotoptimise#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: DoNotOptimise
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L7)\n\n``` pony\nfun box ne(\n  that: DoNotOptimise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [DoNotOptimise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-DoNotOptimise](https://stdlib.ponylang.io/builtin-DoNotOptimise)"
- name: DoNotOptimise.observe()
  id: builtin-donotoptimise#observe
  summary: Prevent the compiler from optimising out writes to an object marked by the apply function
  belongs_to: DoNotOptimise
  description: |-
    ### observe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/do_not_optimise/#L14)

    Prevent the compiler from optimising out writes to an object marked by the apply function.

    ``` pony
    fun box observe()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Env
  id: builtin-env
  summary: An environment holds the command line and other values injected into the program by default by the runtime
  description: "# Env\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L1)\n\nAn environment holds the command line and other values injected into the program by default by the runtime.\n\n``` pony\nclass val Env\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L57)\n\nBuild an artificial environment. A root capability may be supplied.\n\n``` pony\nnew val create(\n  root': (AmbientAuth val | None val),\n  input': InputStream tag,\n  out': OutStream tag,\n  err': OutStream tag,\n  args': Array[String val] val,\n  vars': Array[String val] val,\n  exitcode': {(I32)} val)\n: Env val^\n```\n\n#### Parameters\n\n- root': ([AmbientAuth](builtin-ambientauth) val \\| [None](builtin-none) val)\n- input': [InputStream](builtin-inputstream) tag\n- out': [OutStream](builtin-outstream) tag\n- err': [OutStream](builtin-outstream) tag\n- args': [Array](builtin-array)\\[[String](builtin-string) val\\] val\n- vars': [Array](builtin-array)\\[[String](builtin-string) val\\] val\n- exitcode': {(I32)} val\n\n#### Returns\n\n- [Env](index) val^\n\n## Public fields\n\n### let root: ([AmbientAuth](builtin-ambientauth) val \\| [None](builtin-none) val)\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L6)\n\nThe root capability.\n\nCan be `None` for artificially constructed `Env` instances.\n\n### let input: [InputStream](builtin-inputstream) tag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L13)\n\nStdin represented as an actor.\n\n### let out: [OutStream](builtin-outstream) tag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L18)\n\nStdout\n\n### let err: [OutStream](builtin-outstream) tag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L21)\n\nStderr\n\n### let args: [Array](builtin-array)\\[[String](builtin-string) val\\] val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L24)\n\nThe command line used to start the program.\n\n### let vars: [Array](builtin-array)\\[[String](builtin-string) val\\] val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L27)\n\nThe program's environment variables.\n\n### let exitcode: {(I32)} val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L30)\n\nSets the environment's exit code. The exit code of the root environment will be the exit code of the application, which defaults to 0.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Env](https://stdlib.ponylang.io/builtin-Env)"
- name: Env.args
  id: builtin-env#let-args-arraystring-val-val
  summary: The command line used to start the program
  belongs_to: Env
  description: |-
    ### let args: [Array](builtin-array)\[[String](builtin-string) val\] val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L24)

    The command line used to start the program.
- name: Env.create()
  id: builtin-env#create
  summary: Build an artificial environment
  belongs_to: Env
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L57)

    Build an artificial environment. A root capability may be supplied.

    ``` pony
    new val create(
      root': (AmbientAuth val | None val),
      input': InputStream tag,
      out': OutStream tag,
      err': OutStream tag,
      args': Array[String val] val,
      vars': Array[String val] val,
      exitcode': {(I32)} val)
    : Env val^
    ```

    #### Parameters

    - root': ([AmbientAuth](builtin-ambientauth) val \| [None](builtin-none) val)
    - input': [InputStream](builtin-inputstream) tag
    - out': [OutStream](builtin-outstream) tag
    - err': [OutStream](builtin-outstream) tag
    - args': [Array](builtin-array)\[[String](builtin-string) val\] val
    - vars': [Array](builtin-array)\[[String](builtin-string) val\] val
    - exitcode': {(I32)} val

    #### Returns

    - [Env](index) val^

    ## Public fields
- name: Env.err
  id: builtin-env#let-err-outstream-tag
  summary: null
  belongs_to: Env
  description: |-
    ### let err: [OutStream](builtin-outstream) tag

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L21)

    Stderr
- name: Env.exitcode
  id: builtin-env#let-exitcode-i32-val
  summary: Sets the environment's exit code
  belongs_to: Env
  description: "### let exitcode: {(I32)} val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/env/#L30)\n\nSets the environment's exit code. The exit code of the root environment will be the exit code of the application, which defaults to 0.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Env](https://stdlib.ponylang.io/builtin-Env)"
- name: Env.input
  id: builtin-env#let-input-inputstream-tag
  summary: Stdin represented as an actor
  belongs_to: Env
  description: |-
    ### let input: [InputStream](builtin-inputstream) tag

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L13)

    Stdin represented as an actor.
- name: Env.out
  id: builtin-env#let-out-outstream-tag
  summary: null
  belongs_to: Env
  description: |-
    ### let out: [OutStream](builtin-outstream) tag

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L18)

    Stdout
- name: Env.root
  id: builtin-env#let-root-ambientauth-val-none-val
  summary: The root capability
  belongs_to: Env
  description: |-
    ### let root: ([AmbientAuth](builtin-ambientauth) val \| [None](builtin-none) val)

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L6)

    The root capability.

    Can be `None` for artificially constructed `Env` instances.
- name: Env.vars
  id: builtin-env#let-vars-arraystring-val-val
  summary: The program's environment variables
  belongs_to: Env
  description: |-
    ### let vars: [Array](builtin-array)\[[String](builtin-string) val\] val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/env/#L27)

    The program's environment variables.
- name: EnvVars
  id: options-envvars
  summary: Turns an array of strings that look like environment variables, ie key=value, into a map from string to string
  description: "# EnvVars\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L3)\n\n``` pony\nprimitive val EnvVars\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L3)\n\n``` pony\nnew val create()\n: EnvVars val^\n```\n\n#### Returns\n\n- [EnvVars](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)\n\nTurns an array of strings that look like environment variables, ie key=value, into a map from string to string.\n\n``` pony\nfun box apply(\n  from: Array[String val] val)\n: HashMap[String val, String val, HashEq[String val] val] val\n```\n\n#### Parameters\n\n- from: [Array](builtin-array)\\[[String](builtin-string) val\\] val\n\n#### Returns\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)\n\n``` pony\nfun box eq(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)\n\n``` pony\nfun box ne(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-EnvVars](https://stdlib.ponylang.io/options-EnvVars)"
- name: EnvVars
  id: cli-envvars
  summary: Turns an array of strings that look like environment variables, ie
  description: "# EnvVars\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L3)\n\n``` pony\nprimitive val EnvVars\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L3)\n\n``` pony\nnew val create()\n: EnvVars val^\n```\n\n#### Returns\n\n- [EnvVars](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)\n\nTurns an array of strings that look like environment variables, ie. key=value, into a map of string to string. Can optionally filter for keys matching a 'prefix', and will squash resulting keys to lowercase iff 'squash' is true.\n\nSo: = becomes: {KEY, VALUE} or {key, VALUE}\n\n``` pony\nfun box apply(\n  envs: (Array[String val] box | None val),\n  prefix: String val = \"\",\n  squash: Bool val = false)\n: HashMap[String val, String val, HashEq[String val] val] val\n```\n\n#### Parameters\n\n- envs: ([Array](builtin-array)\\[[String](builtin-string) val\\] box \\| [None](builtin-none) val)\n- prefix: [String](builtin-string) val = \"\"\n- squash: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)\n\n``` pony\nfun box eq(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)\n\n``` pony\nfun box ne(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-EnvVars](https://stdlib.ponylang.io/cli-EnvVars)"
- name: EnvVars.apply()
  id: options-envvars#apply
  summary: Turns an array of strings that look like environment variables, ie key=value, into a map from string to string
  belongs_to: EnvVars
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)

    Turns an array of strings that look like environment variables, ie key=value, into a map from string to string.

    ``` pony
    fun box apply(
      from: Array[String val] val)
    : HashMap[String val, String val, HashEq[String val] val] val
    ```

    #### Parameters

    - from: [Array](builtin-array)\[[String](builtin-string) val\] val

    #### Returns

    - [HashMap](collections-hashmap)\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] val
- name: EnvVars.apply()
  id: cli-envvars#apply
  summary: Turns an array of strings that look like environment variables, ie
  belongs_to: EnvVars
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)

    Turns an array of strings that look like environment variables, ie. key=value, into a map of string to string. Can optionally filter for keys matching a 'prefix', and will squash resulting keys to lowercase iff 'squash' is true.

    So: = becomes: {KEY, VALUE} or {key, VALUE}

    ``` pony
    fun box apply(
      envs: (Array[String val] box | None val),
      prefix: String val = "",
      squash: Bool val = false)
    : HashMap[String val, String val, HashEq[String val] val] val
    ```

    #### Parameters

    - envs: ([Array](builtin-array)\[[String](builtin-string) val\] box \| [None](builtin-none) val)
    - prefix: [String](builtin-string) val = ""
    - squash: [Bool](builtin-bool) val = false

    #### Returns

    - [HashMap](collections-hashmap)\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] val
- name: EnvVars.create()
  id: options-envvars#create
  summary: null
  belongs_to: EnvVars
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/env_vars/#L3)

    ``` pony
    new val create()
    : EnvVars val^
    ```

    #### Returns

    - [EnvVars](index) val^

    ## Public Functions
- name: EnvVars.create()
  id: cli-envvars#create
  summary: null
  belongs_to: EnvVars
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/cli/env_vars/#L3)

    ``` pony
    new val create()
    : EnvVars val^
    ```

    #### Returns

    - [EnvVars](index) val^

    ## Public Functions
- name: EnvVars.eq()
  id: options-envvars#eq
  summary: null
  belongs_to: EnvVars
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)

    ``` pony
    fun box eq(
      that: EnvVars val)
    : Bool val
    ```

    #### Parameters

    - that: [EnvVars](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: EnvVars.eq()
  id: cli-envvars#eq
  summary: null
  belongs_to: EnvVars
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)

    ``` pony
    fun box eq(
      that: EnvVars val)
    : Bool val
    ```

    #### Parameters

    - that: [EnvVars](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: EnvVars.ne()
  id: options-envvars#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: EnvVars
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/env_vars/#L4)\n\n``` pony\nfun box ne(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-EnvVars](https://stdlib.ponylang.io/options-EnvVars)"
- name: EnvVars.ne()
  id: cli-envvars#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: EnvVars
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/env_vars/#L4)\n\n``` pony\nfun box ne(\n  that: EnvVars val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [EnvVars](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-EnvVars](https://stdlib.ponylang.io/cli-EnvVars)"
- name: Equal
  id: builtin-equal
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Equal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L5)\n\n``` pony\nprimitive val Equal is\n  Equatable[(Less val | Equal val | Greater val)] ref\n```\n\n#### Implements\n\n- [Equatable](builtin-equatable)\\[([Less](builtin-less) val \\| [Equal](index) val \\| [Greater](builtin-greater) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L5)\n\n``` pony\nnew val create()\n: Equal val^\n```\n\n#### Returns\n\n- [Equal](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L6)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)\n\n``` pony\nfun box eq(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](index) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](index) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Equal](https://stdlib.ponylang.io/builtin-Equal)"
- name: Equal.create()
  id: builtin-equal#create
  summary: null
  belongs_to: Equal
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L5)

    ``` pony
    new val create()
    : Equal val^
    ```

    #### Returns

    - [Equal](index) val^

    ## Public Functions
- name: Equal.eq()
  id: builtin-equal#eq
  summary: null
  belongs_to: Equal
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)

    ``` pony
    fun box eq(
      that: (Less val | Equal val | Greater val))
    : Bool val
    ```

    #### Parameters

    - that: ([Less](builtin-less) val \| [Equal](index) val \| [Greater](builtin-greater) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Equal.ne()
  id: builtin-equal#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Equal
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](index) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Equal](https://stdlib.ponylang.io/builtin-Equal)"
- name: Equal.string()
  id: builtin-equal#string
  summary: null
  belongs_to: Equal
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L6)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Equatable
  id: builtin-equatable
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Equatable\\[A: [Equatable](index)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L18)\n\n``` pony\ninterface ref Equatable[A: Equatable[A] #read]\n```\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)\n\n``` pony\nfun box eq(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Equatable](https://stdlib.ponylang.io/builtin-Equatable)"
- name: Equatable.eq()
  id: builtin-equatable#eq
  summary: null
  belongs_to: Equatable
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)

    ``` pony
    fun box eq(
      that: box->A)
    : Bool val
    ```

    #### Parameters

    - that: box-\>A

    #### Returns

    - [Bool](builtin-bool) val
- name: Equatable.ne()
  id: builtin-equatable#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Equatable
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Equatable](https://stdlib.ponylang.io/builtin-Equatable)"
- name: Error
  id: logger-error
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L107)\n\n``` pony\nprimitive val Error\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L107)\n\n``` pony\nnew val create()\n: Error val^\n```\n\n#### Returns\n\n- [Error](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L108)\n\n``` pony\nfun box apply()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L108)\n\n``` pony\nfun box eq(\n  that: Error val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Error](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L108)\n\n``` pony\nfun box ne(\n  that: Error val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Error](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Error](https://stdlib.ponylang.io/logger-Error)"
- name: Error.apply()
  id: logger-error#apply
  summary: null
  belongs_to: Error
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L108)

    ``` pony
    fun box apply()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Error.create()
  id: logger-error#create
  summary: null
  belongs_to: Error
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L107)

    ``` pony
    new val create()
    : Error val^
    ```

    #### Returns

    - [Error](index) val^

    ## Public Functions
- name: Error.eq()
  id: logger-error#eq
  summary: null
  belongs_to: Error
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L108)

    ``` pony
    fun box eq(
      that: Error val)
    : Bool val
    ```

    #### Parameters

    - that: [Error](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Error.ne()
  id: logger-error#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Error
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L108)\n\n``` pony\nfun box ne(\n  that: Error val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Error](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Error](https://stdlib.ponylang.io/logger-Error)"
- name: ErrorReason
  id: options-errorreason
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ErrorReason\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L89)\n\n``` pony\ntype ErrorReason is\n  (UnrecognisedOption val | MissingArgument val | InvalidArgument val | AmbiguousMatch val)\n```\n\n#### Type Alias For\n\n- ([UnrecognisedOption](options-unrecognisedoption) val \\| [MissingArgument](options-missingargument) val \\| [InvalidArgument](options-invalidargument) val \\| [AmbiguousMatch](options-ambiguousmatch) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-ErrorReason](https://stdlib.ponylang.io/options-ErrorReason)"
- name: ExecveError
  id: process-execveerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ExecveError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L38)\n\n``` pony\nprimitive val ExecveError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L38)\n\n``` pony\nnew val create()\n: ExecveError val^\n```\n\n#### Returns\n\n- [ExecveError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L39)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L39)\n\n``` pony\nfun box eq(\n  that: ExecveError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ExecveError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L39)\n\n``` pony\nfun box ne(\n  that: ExecveError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ExecveError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ExecveError](https://stdlib.ponylang.io/process-ExecveError)"
- name: ExecveError.create()
  id: process-execveerror#create
  summary: null
  belongs_to: ExecveError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L38)

    ``` pony
    new val create()
    : ExecveError val^
    ```

    #### Returns

    - [ExecveError](index) val^

    ## Public Functions
- name: ExecveError.eq()
  id: process-execveerror#eq
  summary: null
  belongs_to: ExecveError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L39)

    ``` pony
    fun box eq(
      that: ExecveError val)
    : Bool val
    ```

    #### Parameters

    - that: [ExecveError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ExecveError.ne()
  id: process-execveerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ExecveError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L39)\n\n``` pony\nfun box ne(\n  that: ExecveError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ExecveError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ExecveError](https://stdlib.ponylang.io/process-ExecveError)"
- name: ExecveError.string()
  id: process-execveerror#string
  summary: null
  belongs_to: ExecveError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L39)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Exited
  id: process-exited
  summary: 'Process exit status: Process exited with an exit code'
  description: "# Exited\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L72)\n\nProcess exit status: Process exited with an exit code.\n\n``` pony\nclass val Exited is\n  Stringable box,\n  Equatable[(Exited val | Signaled val)] ref\n```\n\n#### Implements\n\n- [Stringable](builtin-stringable) box\n- [Equatable](builtin-equatable)\\[([Exited](index) val \\| [Signaled](process-signaled) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L78)\n\n``` pony\nnew val create(\n  code: I32 val)\n: Exited val^\n```\n\n#### Parameters\n\n- code: [I32](builtin-i32) val\n\n#### Returns\n\n- [Exited](index) val^\n\n## Public Functions\n\n### exit_code\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L81)\n\nRetrieve the exit code of the exited process.\n\n``` pony\nfun box exit_code()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L87)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L95)\n\n``` pony\nfun box eq(\n  other: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- other: ([Exited](index) val \\| [Signaled](process-signaled) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Exited](index) val \\| [Signaled](process-signaled) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-Exited](https://stdlib.ponylang.io/process-Exited)"
- name: Exited.create()
  id: process-exited#create
  summary: null
  belongs_to: Exited
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L78)

    ``` pony
    new val create(
      code: I32 val)
    : Exited val^
    ```

    #### Parameters

    - code: [I32](builtin-i32) val

    #### Returns

    - [Exited](index) val^

    ## Public Functions
- name: Exited.eq()
  id: process-exited#eq
  summary: null
  belongs_to: Exited
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L95)

    ``` pony
    fun box eq(
      other: (Exited val | Signaled val))
    : Bool val
    ```

    #### Parameters

    - other: ([Exited](index) val \| [Signaled](process-signaled) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Exited.exit_code()
  id: process-exited#exit_code
  summary: Retrieve the exit code of the exited process
  belongs_to: Exited
  description: |-
    ### exit_code

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L81)

    Retrieve the exit code of the exited process.

    ``` pony
    fun box exit_code()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val
- name: Exited.ne()
  id: process-exited#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Exited
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Exited](index) val \\| [Signaled](process-signaled) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-Exited](https://stdlib.ponylang.io/process-Exited)"
- name: Exited.string()
  id: process-exited#string
  summary: null
  belongs_to: Exited
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L87)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: F32
  id: builtin-f32
  summary: Minimum negative value representable
  description: "# F32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L1)\n\n``` pony\nprimitive val F32 is\n  FloatingPoint[F32 val] val\n```\n\n#### Implements\n\n- [FloatingPoint](builtin-floatingpoint)\\[[F32](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L2)\n\n``` pony\nnew val create(\n  value: F32 val = 0)\n: F32 val^\n```\n\n#### Parameters\n\n- value: [F32](index) val = 0\n\n#### Returns\n\n- [F32](index) val^\n\n### pi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L3)\n\n``` pony\nnew val pi()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n### e\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L4)\n\n``` pony\nnew val e()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n### from_bits\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L9)\n\n``` pony\nnew val from_bits(\n  i: U32 val)\n: F32 val^\n```\n\n#### Parameters\n\n- i: [U32](builtin-u32) val\n\n#### Returns\n\n- [F32](index) val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](index) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L11)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: F32 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [F32](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L13)\n\nMinimum negative value representable.\n\n``` pony\nnew val min_value()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L19)\n\nMaximum positive value representable.\n\n``` pony\nnew val max_value()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n### min_normalised\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L25)\n\nMinimum positive value representable at full precision (ie a normalised number).\n\n``` pony\nnew val min_normalised()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n### epsilon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L32)\n\nMinimum positive value such that (1 + epsilon) != 1.\n\n``` pony\nnew val epsilon()\n: F32 val^\n```\n\n#### Returns\n\n- [F32](index) val^\n\n## Public Functions\n\n### bits\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L10)\n\n``` pony\nfun box bits()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### radix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L38)\n\nExponent radix.\n\n``` pony\nfun tag radix()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L44)\n\nMantissa precision in bits.\n\n``` pony\nfun tag precision2()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L50)\n\nMantissa precision in decimal digits.\n\n``` pony\nfun tag precision10()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### min_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L56)\n\nMinimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number).\n\n``` pony\nfun tag min_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### min_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L63)\n\nMinimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number).\n\n``` pony\nfun tag min_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L70)\n\nMaximum exponent value such that (2^exponent) - 1 is representable.\n\n``` pony\nfun tag max_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L76)\n\nMaximum exponent value such that (10^exponent) - 1 is representable.\n\n``` pony\nfun tag max_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L82)\n\n``` pony\nfun box abs()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### ceil\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L83)\n\n``` pony\nfun box ceil()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### floor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L84)\n\n``` pony\nfun box floor()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### round\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L85)\n\n``` pony\nfun box round()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### trunc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L86)\n\n``` pony\nfun box trunc()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L88)\n\n``` pony\nfun box min(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L89)\n\n``` pony\nfun box max(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L91)\n\n``` pony\nfun box fld(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L94)\n\n``` pony\nfun box fld_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L97)\n\n``` pony\nfun box mod(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L107)\n\n``` pony\nfun box mod_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### finite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L117)\n\nCheck whether this number is finite, ie not +/-infinity and not NaN.\n\n``` pony\nfun box finite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### infinite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L124)\n\nCheck whether this number is +/-infinity\n\n``` pony\nfun box infinite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### nan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L132)\n\nCheck whether this number is NaN.\n\n``` pony\nfun box nan()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ldexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L140)\n\n``` pony\nfun box ldexp(\n  x: F32 val,\n  exponent: I32 val)\n: F32 val\n```\n\n#### Parameters\n\n- x: [F32](index) val\n- exponent: [I32](builtin-i32) val\n\n#### Returns\n\n- [F32](index) val\n\n### frexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L143)\n\n``` pony\nfun box frexp()\n: (F32 val , U32 val)\n```\n\n#### Returns\n\n- ([F32](index) val , [U32](builtin-u32) val)\n\n### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L148)\n\n``` pony\nfun box log()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### log2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L149)\n\n``` pony\nfun box log2()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### log10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L150)\n\n``` pony\nfun box log10()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### logb\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L151)\n\n``` pony\nfun box logb()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### pow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L153)\n\n``` pony\nfun box pow(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### powi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L154)\n\n``` pony\nfun box powi(\n  y: I32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [I32](builtin-i32) val\n\n#### Returns\n\n- [F32](index) val\n\n### sqrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L161)\n\n``` pony\nfun box sqrt()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### sqrt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L168)\n\nUnsafe operation. If this is negative, the result is undefined.\n\n``` pony\nfun box sqrt_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### cbrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L175)\n\n``` pony\nfun box cbrt()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### exp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L176)\n\n``` pony\nfun box exp()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L177)\n\n``` pony\nfun box exp2()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### cos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L179)\n\n``` pony\nfun box cos()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### sin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L180)\n\n``` pony\nfun box sin()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### tan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L181)\n\n``` pony\nfun box tan()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### cosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L183)\n\n``` pony\nfun box cosh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### sinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L184)\n\n``` pony\nfun box sinh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### tanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L185)\n\n``` pony\nfun box tanh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### acos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L187)\n\n``` pony\nfun box acos()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### asin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L188)\n\n``` pony\nfun box asin()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### atan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L189)\n\n``` pony\nfun box atan()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### atan2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L190)\n\n``` pony\nfun box atan2(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### acosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L192)\n\n``` pony\nfun box acosh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### asinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L193)\n\n``` pony\nfun box asinh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### atanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L194)\n\n``` pony\nfun box atanh()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### copysign\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L196)\n\n``` pony\nfun box copysign(\n  sign: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- sign: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L198)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L199)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L201)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L202)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L204)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L211)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L527)\n\n``` pony\nfun box add_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L536)\n\n``` pony\nfun box sub_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L545)\n\n``` pony\nfun box mul_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L554)\n\n``` pony\nfun box div_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L571)\n\n``` pony\nfun box divrem_unsafe(\n  y: F32 val)\n: (F32 val , F32 val)\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- ([F32](index) val , [F32](index) val)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L580)\n\n``` pony\nfun box rem_unsafe(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L597)\n\n``` pony\nfun box neg_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### eq_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L606)\n\n``` pony\nfun box eq_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L615)\n\n``` pony\nfun box ne_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L624)\n\n``` pony\nfun box lt_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L633)\n\n``` pony\nfun box le_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L642)\n\n``` pony\nfun box ge_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L651)\n\n``` pony\nfun box gt_unsafe(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L711)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: F32 val)\n: (F32 val , F32 val)\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- ([F32](index) val , [F32](index) val)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: F32 val)\n: F32 val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [F32](index) val\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: F32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](index) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: F32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [F32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-F32](https://stdlib.ponylang.io/builtin-F32)"
- name: F32.abs()
  id: builtin-f32#abs
  summary: null
  belongs_to: F32
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L82)

    ``` pony
    fun box abs()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.acos()
  id: builtin-f32#acos
  summary: null
  belongs_to: F32
  description: |-
    ### acos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L187)

    ``` pony
    fun box acos()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.acosh()
  id: builtin-f32#acosh
  summary: null
  belongs_to: F32
  description: |-
    ### acosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L192)

    ``` pony
    fun box acosh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.add()
  id: builtin-f32#add
  summary: null
  belongs_to: F32
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.add_unsafe()
  id: builtin-f32#add_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L527)

    ``` pony
    fun box add_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.asin()
  id: builtin-f32#asin
  summary: null
  belongs_to: F32
  description: |-
    ### asin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L188)

    ``` pony
    fun box asin()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.asinh()
  id: builtin-f32#asinh
  summary: null
  belongs_to: F32
  description: |-
    ### asinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L193)

    ``` pony
    fun box asinh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.atan()
  id: builtin-f32#atan
  summary: null
  belongs_to: F32
  description: |-
    ### atan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L189)

    ``` pony
    fun box atan()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.atan2()
  id: builtin-f32#atan2
  summary: null
  belongs_to: F32
  description: |-
    ### atan2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L190)

    ``` pony
    fun box atan2(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.atanh()
  id: builtin-f32#atanh
  summary: null
  belongs_to: F32
  description: |-
    ### atanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L194)

    ``` pony
    fun box atanh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.bits()
  id: builtin-f32#bits
  summary: null
  belongs_to: F32
  description: |-
    ### bits

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L10)

    ``` pony
    fun box bits()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: F32.cbrt()
  id: builtin-f32#cbrt
  summary: null
  belongs_to: F32
  description: |-
    ### cbrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L175)

    ``` pony
    fun box cbrt()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.ceil()
  id: builtin-f32#ceil
  summary: null
  belongs_to: F32
  description: |-
    ### ceil

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L83)

    ``` pony
    fun box ceil()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.compare()
  id: builtin-f32#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: F32
  description: "### compare\n\n``` pony\nfun box compare(\n  that: F32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [F32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-F32](https://stdlib.ponylang.io/builtin-F32)"
- name: F32.copysign()
  id: builtin-f32#copysign
  summary: null
  belongs_to: F32
  description: |-
    ### copysign

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L196)

    ``` pony
    fun box copysign(
      sign: F32 val)
    : F32 val
    ```

    #### Parameters

    - sign: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.cos()
  id: builtin-f32#cos
  summary: null
  belongs_to: F32
  description: |-
    ### cos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L179)

    ``` pony
    fun box cos()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.cosh()
  id: builtin-f32#cosh
  summary: null
  belongs_to: F32
  description: |-
    ### cosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L183)

    ``` pony
    fun box cosh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.create()
  id: builtin-f32#create
  summary: null
  belongs_to: F32
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L2)

    ``` pony
    new val create(
      value: F32 val = 0)
    : F32 val^
    ```

    #### Parameters

    - value: [F32](index) val = 0

    #### Returns

    - [F32](index) val^
- name: F32.div()
  id: builtin-f32#div
  summary: null
  belongs_to: F32
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.div_unsafe()
  id: builtin-f32#div_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L554)

    ``` pony
    fun box div_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.divrem()
  id: builtin-f32#divrem
  summary: null
  belongs_to: F32
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: F32 val)
    : (F32 val , F32 val)
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - ([F32](index) val , [F32](index) val)

    &nbsp;
- name: F32.divrem_unsafe()
  id: builtin-f32#divrem_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L571)

    ``` pony
    fun box divrem_unsafe(
      y: F32 val)
    : (F32 val , F32 val)
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - ([F32](index) val , [F32](index) val)

    &nbsp;
- name: F32.e()
  id: builtin-f32#e
  summary: null
  belongs_to: F32
  description: |-
    ### e

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L4)

    ``` pony
    new val e()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.epsilon()
  id: builtin-f32#epsilon
  summary: Minimum positive value such that (1 + epsilon) != 1
  belongs_to: F32
  description: |-
    ### epsilon

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L32)

    Minimum positive value such that (1 + epsilon) != 1.

    ``` pony
    new val epsilon()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    ## Public Functions
- name: F32.eq()
  id: builtin-f32#eq
  summary: null
  belongs_to: F32
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.eq_unsafe()
  id: builtin-f32#eq_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### eq_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L606)

    ``` pony
    fun box eq_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.exp()
  id: builtin-f32#exp
  summary: null
  belongs_to: F32
  description: |-
    ### exp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L176)

    ``` pony
    fun box exp()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.exp2()
  id: builtin-f32#exp2
  summary: null
  belongs_to: F32
  description: |-
    ### exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L177)

    ``` pony
    fun box exp2()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.f32()
  id: builtin-f32#f32_1
  summary: null
  belongs_to: F32
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.f32_unsafe()
  id: builtin-f32#f32_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.f64()
  id: builtin-f32#f64
  summary: null
  belongs_to: F32
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: F32.f64_unsafe()
  id: builtin-f32#f64_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: F32.finite()
  id: builtin-f32#finite
  summary: Check whether this number is finite, ie not +/-infinity and not NaN
  belongs_to: F32
  description: |-
    ### finite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L117)

    Check whether this number is finite, ie not +/-infinity and not NaN.

    ``` pony
    fun box finite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.fld()
  id: builtin-f32#fld
  summary: null
  belongs_to: F32
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L91)

    ``` pony
    fun box fld(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.fld_unsafe()
  id: builtin-f32#fld_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L94)

    ``` pony
    fun box fld_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.floor()
  id: builtin-f32#floor
  summary: null
  belongs_to: F32
  description: |-
    ### floor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L84)

    ``` pony
    fun box floor()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.frexp()
  id: builtin-f32#frexp
  summary: null
  belongs_to: F32
  description: |-
    ### frexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L143)

    ``` pony
    fun box frexp()
    : (F32 val , U32 val)
    ```

    #### Returns

    - ([F32](index) val , [U32](builtin-u32) val)

    &nbsp;
- name: F32.from()
  id: builtin-f32#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: F32
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](index) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L11)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: F32 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [F32](index) val^\n\n&nbsp;"
- name: F32.from_bits()
  id: builtin-f32#from_bits
  summary: null
  belongs_to: F32
  description: |-
    ### from_bits

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L9)

    ``` pony
    new val from_bits(
      i: U32 val)
    : F32 val^
    ```

    #### Parameters

    - i: [U32](builtin-u32) val

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.ge()
  id: builtin-f32#ge
  summary: null
  belongs_to: F32
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.ge_unsafe()
  id: builtin-f32#ge_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### ge_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L642)

    ``` pony
    fun box ge_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.gt()
  id: builtin-f32#gt
  summary: null
  belongs_to: F32
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.gt_unsafe()
  id: builtin-f32#gt_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### gt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L651)

    ``` pony
    fun box gt_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.hash()
  id: builtin-f32#hash
  summary: null
  belongs_to: F32
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L198)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F32.hash64()
  id: builtin-f32#hash64
  summary: null
  belongs_to: F32
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L199)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F32.i128()
  id: builtin-f32#i128
  summary: null
  belongs_to: F32
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L201)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: F32.i128_unsafe()
  id: builtin-f32#i128_unsafe
  summary: Unsafe operation
  belongs_to: F32
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L204)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: F32.i16()
  id: builtin-f32#i16
  summary: null
  belongs_to: F32
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.i16_unsafe()
  id: builtin-f32#i16_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.i32()
  id: builtin-f32#i32
  summary: null
  belongs_to: F32
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: F32.i32_unsafe()
  id: builtin-f32#i32_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: F32.i64()
  id: builtin-f32#i64
  summary: null
  belongs_to: F32
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: F32.i64_unsafe()
  id: builtin-f32#i64_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: F32.i8()
  id: builtin-f32#i8
  summary: null
  belongs_to: F32
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: F32.i8_unsafe()
  id: builtin-f32#i8_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: F32.ilong()
  id: builtin-f32#ilong
  summary: null
  belongs_to: F32
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: F32.ilong_unsafe()
  id: builtin-f32#ilong_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: F32.infinite()
  id: builtin-f32#infinite
  summary: null
  belongs_to: F32
  description: |-
    ### infinite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L124)

    Check whether this number is +/-infinity

    ``` pony
    fun box infinite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.isize()
  id: builtin-f32#isize
  summary: null
  belongs_to: F32
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: F32.isize_unsafe()
  id: builtin-f32#isize_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: F32.ldexp()
  id: builtin-f32#ldexp
  summary: null
  belongs_to: F32
  description: |-
    ### ldexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L140)

    ``` pony
    fun box ldexp(
      x: F32 val,
      exponent: I32 val)
    : F32 val
    ```

    #### Parameters

    - x: [F32](index) val
    - exponent: [I32](builtin-i32) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.le()
  id: builtin-f32#le
  summary: null
  belongs_to: F32
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.le_unsafe()
  id: builtin-f32#le_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### le_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L633)

    ``` pony
    fun box le_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.log()
  id: builtin-f32#log
  summary: null
  belongs_to: F32
  description: |-
    ### log

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L148)

    ``` pony
    fun box log()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.log10()
  id: builtin-f32#log10
  summary: null
  belongs_to: F32
  description: |-
    ### log10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L150)

    ``` pony
    fun box log10()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.log2()
  id: builtin-f32#log2
  summary: null
  belongs_to: F32
  description: |-
    ### log2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L149)

    ``` pony
    fun box log2()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.logb()
  id: builtin-f32#logb
  summary: null
  belongs_to: F32
  description: |-
    ### logb

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L151)

    ``` pony
    fun box logb()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.lt()
  id: builtin-f32#lt
  summary: null
  belongs_to: F32
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.lt_unsafe()
  id: builtin-f32#lt_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### lt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L624)

    ``` pony
    fun box lt_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.max()
  id: builtin-f32#max
  summary: null
  belongs_to: F32
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L89)

    ``` pony
    fun box max(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.max_exp10()
  id: builtin-f32#max_exp10
  summary: Maximum exponent value such that (10^exponent) - 1 is representable
  belongs_to: F32
  description: |-
    ### max_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L76)

    Maximum exponent value such that (10^exponent) - 1 is representable.

    ``` pony
    fun tag max_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.max_exp2()
  id: builtin-f32#max_exp2
  summary: Maximum exponent value such that (2^exponent) - 1 is representable
  belongs_to: F32
  description: |-
    ### max_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L70)

    Maximum exponent value such that (2^exponent) - 1 is representable.

    ``` pony
    fun tag max_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.max_value()
  id: builtin-f32#max_value
  summary: Maximum positive value representable
  belongs_to: F32
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L19)

    Maximum positive value representable.

    ``` pony
    new val max_value()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.min()
  id: builtin-f32#min
  summary: null
  belongs_to: F32
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L88)

    ``` pony
    fun box min(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.min_exp10()
  id: builtin-f32#min_exp10
  summary: Minimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number)
  belongs_to: F32
  description: |-
    ### min_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L63)

    Minimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number).

    ``` pony
    fun tag min_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.min_exp2()
  id: builtin-f32#min_exp2
  summary: Minimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number)
  belongs_to: F32
  description: |-
    ### min_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L56)

    Minimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number).

    ``` pony
    fun tag min_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F32.min_normalised()
  id: builtin-f32#min_normalised
  summary: Minimum positive value representable at full precision (ie a normalised number)
  belongs_to: F32
  description: |-
    ### min_normalised

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L25)

    Minimum positive value representable at full precision (ie a normalised number).

    ``` pony
    new val min_normalised()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.min_value()
  id: builtin-f32#min_value
  summary: Minimum negative value representable
  belongs_to: F32
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L13)

    Minimum negative value representable.

    ``` pony
    new val min_value()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.mod()
  id: builtin-f32#mod
  summary: null
  belongs_to: F32
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L97)

    ``` pony
    fun box mod(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.mod_unsafe()
  id: builtin-f32#mod_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L107)

    ``` pony
    fun box mod_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.mul()
  id: builtin-f32#mul
  summary: null
  belongs_to: F32
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.mul_unsafe()
  id: builtin-f32#mul_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L545)

    ``` pony
    fun box mul_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.nan()
  id: builtin-f32#nan
  summary: Check whether this number is NaN
  belongs_to: F32
  description: |-
    ### nan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L132)

    Check whether this number is NaN.

    ``` pony
    fun box nan()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.ne()
  id: builtin-f32#ne
  summary: null
  belongs_to: F32
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.ne_unsafe()
  id: builtin-f32#ne_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### ne_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L615)

    ``` pony
    fun box ne_unsafe(
      y: F32 val)
    : Bool val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F32.neg()
  id: builtin-f32#neg
  summary: null
  belongs_to: F32
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.neg_unsafe()
  id: builtin-f32#neg_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L597)

    ``` pony
    fun box neg_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.pi()
  id: builtin-f32#pi
  summary: null
  belongs_to: F32
  description: |-
    ### pi

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L3)

    ``` pony
    new val pi()
    : F32 val^
    ```

    #### Returns

    - [F32](index) val^

    &nbsp;
- name: F32.pow()
  id: builtin-f32#pow
  summary: null
  belongs_to: F32
  description: |-
    ### pow

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L153)

    ``` pony
    fun box pow(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.powi()
  id: builtin-f32#powi
  summary: null
  belongs_to: F32
  description: |-
    ### powi

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L154)

    ``` pony
    fun box powi(
      y: I32 val)
    : F32 val
    ```

    #### Parameters

    - y: [I32](builtin-i32) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.precision10()
  id: builtin-f32#precision10
  summary: Mantissa precision in decimal digits
  belongs_to: F32
  description: |-
    ### precision10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L50)

    Mantissa precision in decimal digits.

    ``` pony
    fun tag precision10()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F32.precision2()
  id: builtin-f32#precision2
  summary: Mantissa precision in bits
  belongs_to: F32
  description: |-
    ### precision2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L44)

    Mantissa precision in bits.

    ``` pony
    fun tag precision2()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F32.radix()
  id: builtin-f32#radix
  summary: Exponent radix
  belongs_to: F32
  description: |-
    ### radix

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L38)

    Exponent radix.

    ``` pony
    fun tag radix()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F32.rem()
  id: builtin-f32#rem
  summary: null
  belongs_to: F32
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.rem_unsafe()
  id: builtin-f32#rem_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L580)

    ``` pony
    fun box rem_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.round()
  id: builtin-f32#round
  summary: null
  belongs_to: F32
  description: |-
    ### round

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L85)

    ``` pony
    fun box round()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.sin()
  id: builtin-f32#sin
  summary: null
  belongs_to: F32
  description: |-
    ### sin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L180)

    ``` pony
    fun box sin()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.sinh()
  id: builtin-f32#sinh
  summary: null
  belongs_to: F32
  description: |-
    ### sinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L184)

    ``` pony
    fun box sinh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.sqrt()
  id: builtin-f32#sqrt
  summary: null
  belongs_to: F32
  description: |-
    ### sqrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L161)

    ``` pony
    fun box sqrt()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.sqrt_unsafe()
  id: builtin-f32#sqrt_unsafe
  summary: Unsafe operation
  belongs_to: F32
  description: |-
    ### sqrt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L168)

    Unsafe operation. If this is negative, the result is undefined.

    ``` pony
    fun box sqrt_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.string()
  id: builtin-f32#string
  summary: null
  belongs_to: F32
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L711)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: F32.sub()
  id: builtin-f32#sub
  summary: null
  belongs_to: F32
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.sub_unsafe()
  id: builtin-f32#sub_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L536)

    ``` pony
    fun box sub_unsafe(
      y: F32 val)
    : F32 val
    ```

    #### Parameters

    - y: [F32](index) val

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.tan()
  id: builtin-f32#tan
  summary: null
  belongs_to: F32
  description: |-
    ### tan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L181)

    ``` pony
    fun box tan()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.tanh()
  id: builtin-f32#tanh
  summary: null
  belongs_to: F32
  description: |-
    ### tanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L185)

    ``` pony
    fun box tanh()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.trunc()
  id: builtin-f32#trunc
  summary: null
  belongs_to: F32
  description: |-
    ### trunc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L86)

    ``` pony
    fun box trunc()
    : F32 val
    ```

    #### Returns

    - [F32](index) val

    &nbsp;
- name: F32.u128()
  id: builtin-f32#u128
  summary: null
  belongs_to: F32
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L202)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: F32.u128_unsafe()
  id: builtin-f32#u128_unsafe
  summary: Unsafe operation
  belongs_to: F32
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L211)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: F32.u16()
  id: builtin-f32#u16
  summary: null
  belongs_to: F32
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: F32.u16_unsafe()
  id: builtin-f32#u16_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: F32.u32()
  id: builtin-f32#u32
  summary: null
  belongs_to: F32
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: F32.u32_unsafe()
  id: builtin-f32#u32_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: F32.u64()
  id: builtin-f32#u64
  summary: null
  belongs_to: F32
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F32.u64_unsafe()
  id: builtin-f32#u64_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F32.u8()
  id: builtin-f32#u8
  summary: null
  belongs_to: F32
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F32.u8_unsafe()
  id: builtin-f32#u8_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F32.ulong()
  id: builtin-f32#ulong
  summary: null
  belongs_to: F32
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: F32.ulong_unsafe()
  id: builtin-f32#ulong_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: F32.usize()
  id: builtin-f32#usize
  summary: null
  belongs_to: F32
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F32.usize_unsafe()
  id: builtin-f32#usize_unsafe
  summary: null
  belongs_to: F32
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F64
  id: builtin-f64
  summary: Minimum negative value representable
  description: "# F64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L218)\n\n``` pony\nprimitive val F64 is\n  FloatingPoint[F64 val] val\n```\n\n#### Implements\n\n- [FloatingPoint](builtin-floatingpoint)\\[[F64](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L219)\n\n``` pony\nnew val create(\n  value: F64 val = 0)\n: F64 val^\n```\n\n#### Parameters\n\n- value: [F64](index) val = 0\n\n#### Returns\n\n- [F64](index) val^\n\n### pi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L220)\n\n``` pony\nnew val pi()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n### e\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L221)\n\n``` pony\nnew val e()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n### from_bits\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L226)\n\n``` pony\nnew val from_bits(\n  i: U64 val)\n: F64 val^\n```\n\n#### Parameters\n\n- i: [U64](builtin-u64) val\n\n#### Returns\n\n- [F64](index) val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](index) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L228)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: F64 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [F64](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L230)\n\nMinimum negative value representable.\n\n``` pony\nnew val min_value()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L236)\n\nMaximum positive value representable.\n\n``` pony\nnew val max_value()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n### min_normalised\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L242)\n\nMinimum positive value representable at full precision (ie a normalised number).\n\n``` pony\nnew val min_normalised()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n### epsilon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L249)\n\nMinimum positive value such that (1 + epsilon) != 1.\n\n``` pony\nnew val epsilon()\n: F64 val^\n```\n\n#### Returns\n\n- [F64](index) val^\n\n## Public Functions\n\n### bits\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L227)\n\n``` pony\nfun box bits()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### radix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L255)\n\nExponent radix.\n\n``` pony\nfun tag radix()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L261)\n\nMantissa precision in bits.\n\n``` pony\nfun tag precision2()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L267)\n\nMantissa precision in decimal digits.\n\n``` pony\nfun tag precision10()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### min_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L273)\n\nMinimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number).\n\n``` pony\nfun tag min_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### min_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L280)\n\nMinimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number).\n\n``` pony\nfun tag min_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L287)\n\nMaximum exponent value such that (2^exponent) - 1 is representable.\n\n``` pony\nfun tag max_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L293)\n\nMaximum exponent value such that (10^exponent) - 1 is representable.\n\n``` pony\nfun tag max_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L299)\n\n``` pony\nfun box abs()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### ceil\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L300)\n\n``` pony\nfun box ceil()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### floor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L301)\n\n``` pony\nfun box floor()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### round\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L302)\n\n``` pony\nfun box round()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### trunc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L303)\n\n``` pony\nfun box trunc()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L305)\n\n``` pony\nfun box min(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L306)\n\n``` pony\nfun box max(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L308)\n\n``` pony\nfun box fld(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L311)\n\n``` pony\nfun box fld_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L314)\n\n``` pony\nfun box mod(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L324)\n\n``` pony\nfun box mod_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### finite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L334)\n\nCheck whether this number is finite, ie not +/-infinity and not NaN.\n\n``` pony\nfun box finite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### infinite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L341)\n\nCheck whether this number is +/-infinity\n\n``` pony\nfun box infinite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### nan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L349)\n\nCheck whether this number is NaN.\n\n``` pony\nfun box nan()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ldexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L357)\n\n``` pony\nfun box ldexp(\n  x: F64 val,\n  exponent: I32 val)\n: F64 val\n```\n\n#### Parameters\n\n- x: [F64](index) val\n- exponent: [I32](builtin-i32) val\n\n#### Returns\n\n- [F64](index) val\n\n### frexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L360)\n\n``` pony\nfun box frexp()\n: (F64 val , U32 val)\n```\n\n#### Returns\n\n- ([F64](index) val , [U32](builtin-u32) val)\n\n### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L365)\n\n``` pony\nfun box log()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### log2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L366)\n\n``` pony\nfun box log2()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### log10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L367)\n\n``` pony\nfun box log10()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### logb\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L368)\n\n``` pony\nfun box logb()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### pow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L370)\n\n``` pony\nfun box pow(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### powi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L371)\n\n``` pony\nfun box powi(\n  y: I32 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [I32](builtin-i32) val\n\n#### Returns\n\n- [F64](index) val\n\n### sqrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L378)\n\n``` pony\nfun box sqrt()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### sqrt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L385)\n\nUnsafe operation. If this is negative, the result is undefined.\n\n``` pony\nfun box sqrt_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### cbrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L392)\n\n``` pony\nfun box cbrt()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### exp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L393)\n\n``` pony\nfun box exp()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L394)\n\n``` pony\nfun box exp2()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### cos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L396)\n\n``` pony\nfun box cos()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### sin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L397)\n\n``` pony\nfun box sin()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### tan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L398)\n\n``` pony\nfun box tan()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### cosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L400)\n\n``` pony\nfun box cosh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### sinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L401)\n\n``` pony\nfun box sinh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### tanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L402)\n\n``` pony\nfun box tanh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### acos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L404)\n\n``` pony\nfun box acos()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### asin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L405)\n\n``` pony\nfun box asin()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### atan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L406)\n\n``` pony\nfun box atan()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### atan2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L407)\n\n``` pony\nfun box atan2(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### acosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L409)\n\n``` pony\nfun box acosh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### asinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L410)\n\n``` pony\nfun box asinh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### atanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L411)\n\n``` pony\nfun box atanh()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### copysign\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L413)\n\n``` pony\nfun box copysign(\n  sign: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- sign: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L415)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L416)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L418)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L445)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L471)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L478)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L527)\n\n``` pony\nfun box add_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L536)\n\n``` pony\nfun box sub_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L545)\n\n``` pony\nfun box mul_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L554)\n\n``` pony\nfun box div_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L571)\n\n``` pony\nfun box divrem_unsafe(\n  y: F64 val)\n: (F64 val , F64 val)\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- ([F64](index) val , [F64](index) val)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L580)\n\n``` pony\nfun box rem_unsafe(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L597)\n\n``` pony\nfun box neg_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### eq_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L606)\n\n``` pony\nfun box eq_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L615)\n\n``` pony\nfun box ne_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L624)\n\n``` pony\nfun box lt_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L633)\n\n``` pony\nfun box le_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L642)\n\n``` pony\nfun box ge_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L651)\n\n``` pony\nfun box gt_unsafe(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L711)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: F64 val)\n: (F64 val , F64 val)\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- ([F64](index) val , [F64](index) val)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: F64 val)\n: F64 val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [F64](index) val\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: F64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [F64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](index) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: F64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [F64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-F64](https://stdlib.ponylang.io/builtin-F64)"
- name: F64.abs()
  id: builtin-f64#abs
  summary: null
  belongs_to: F64
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L299)

    ``` pony
    fun box abs()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.acos()
  id: builtin-f64#acos
  summary: null
  belongs_to: F64
  description: |-
    ### acos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L404)

    ``` pony
    fun box acos()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.acosh()
  id: builtin-f64#acosh
  summary: null
  belongs_to: F64
  description: |-
    ### acosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L409)

    ``` pony
    fun box acosh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.add()
  id: builtin-f64#add
  summary: null
  belongs_to: F64
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.add_unsafe()
  id: builtin-f64#add_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L527)

    ``` pony
    fun box add_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.asin()
  id: builtin-f64#asin
  summary: null
  belongs_to: F64
  description: |-
    ### asin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L405)

    ``` pony
    fun box asin()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.asinh()
  id: builtin-f64#asinh
  summary: null
  belongs_to: F64
  description: |-
    ### asinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L410)

    ``` pony
    fun box asinh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.atan()
  id: builtin-f64#atan
  summary: null
  belongs_to: F64
  description: |-
    ### atan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L406)

    ``` pony
    fun box atan()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.atan2()
  id: builtin-f64#atan2
  summary: null
  belongs_to: F64
  description: |-
    ### atan2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L407)

    ``` pony
    fun box atan2(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.atanh()
  id: builtin-f64#atanh
  summary: null
  belongs_to: F64
  description: |-
    ### atanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L411)

    ``` pony
    fun box atanh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.bits()
  id: builtin-f64#bits
  summary: null
  belongs_to: F64
  description: |-
    ### bits

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L227)

    ``` pony
    fun box bits()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F64.cbrt()
  id: builtin-f64#cbrt
  summary: null
  belongs_to: F64
  description: |-
    ### cbrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L392)

    ``` pony
    fun box cbrt()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.ceil()
  id: builtin-f64#ceil
  summary: null
  belongs_to: F64
  description: |-
    ### ceil

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L300)

    ``` pony
    fun box ceil()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.compare()
  id: builtin-f64#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: F64
  description: "### compare\n\n``` pony\nfun box compare(\n  that: F64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [F64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-F64](https://stdlib.ponylang.io/builtin-F64)"
- name: F64.copysign()
  id: builtin-f64#copysign
  summary: null
  belongs_to: F64
  description: |-
    ### copysign

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L413)

    ``` pony
    fun box copysign(
      sign: F64 val)
    : F64 val
    ```

    #### Parameters

    - sign: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.cos()
  id: builtin-f64#cos
  summary: null
  belongs_to: F64
  description: |-
    ### cos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L396)

    ``` pony
    fun box cos()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.cosh()
  id: builtin-f64#cosh
  summary: null
  belongs_to: F64
  description: |-
    ### cosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L400)

    ``` pony
    fun box cosh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.create()
  id: builtin-f64#create
  summary: null
  belongs_to: F64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L219)

    ``` pony
    new val create(
      value: F64 val = 0)
    : F64 val^
    ```

    #### Parameters

    - value: [F64](index) val = 0

    #### Returns

    - [F64](index) val^
- name: F64.div()
  id: builtin-f64#div
  summary: null
  belongs_to: F64
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.div_unsafe()
  id: builtin-f64#div_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L554)

    ``` pony
    fun box div_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.divrem()
  id: builtin-f64#divrem
  summary: null
  belongs_to: F64
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: F64 val)
    : (F64 val , F64 val)
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - ([F64](index) val , [F64](index) val)

    &nbsp;
- name: F64.divrem_unsafe()
  id: builtin-f64#divrem_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L571)

    ``` pony
    fun box divrem_unsafe(
      y: F64 val)
    : (F64 val , F64 val)
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - ([F64](index) val , [F64](index) val)

    &nbsp;
- name: F64.e()
  id: builtin-f64#e
  summary: null
  belongs_to: F64
  description: |-
    ### e

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L221)

    ``` pony
    new val e()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.epsilon()
  id: builtin-f64#epsilon
  summary: Minimum positive value such that (1 + epsilon) != 1
  belongs_to: F64
  description: |-
    ### epsilon

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L249)

    Minimum positive value such that (1 + epsilon) != 1.

    ``` pony
    new val epsilon()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    ## Public Functions
- name: F64.eq()
  id: builtin-f64#eq
  summary: null
  belongs_to: F64
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.eq_unsafe()
  id: builtin-f64#eq_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### eq_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L606)

    ``` pony
    fun box eq_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.exp()
  id: builtin-f64#exp
  summary: null
  belongs_to: F64
  description: |-
    ### exp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L393)

    ``` pony
    fun box exp()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.exp2()
  id: builtin-f64#exp2
  summary: null
  belongs_to: F64
  description: |-
    ### exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L394)

    ``` pony
    fun box exp2()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.f32()
  id: builtin-f64#f32
  summary: null
  belongs_to: F64
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: F64.f32_unsafe()
  id: builtin-f64#f32_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: F64.f64()
  id: builtin-f64#f64_1
  summary: null
  belongs_to: F64
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.f64_unsafe()
  id: builtin-f64#f64_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.finite()
  id: builtin-f64#finite
  summary: Check whether this number is finite, ie not +/-infinity and not NaN
  belongs_to: F64
  description: |-
    ### finite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L334)

    Check whether this number is finite, ie not +/-infinity and not NaN.

    ``` pony
    fun box finite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.fld()
  id: builtin-f64#fld
  summary: null
  belongs_to: F64
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L308)

    ``` pony
    fun box fld(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.fld_unsafe()
  id: builtin-f64#fld_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L311)

    ``` pony
    fun box fld_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.floor()
  id: builtin-f64#floor
  summary: null
  belongs_to: F64
  description: |-
    ### floor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L301)

    ``` pony
    fun box floor()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.frexp()
  id: builtin-f64#frexp
  summary: null
  belongs_to: F64
  description: |-
    ### frexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L360)

    ``` pony
    fun box frexp()
    : (F64 val , U32 val)
    ```

    #### Returns

    - ([F64](index) val , [U32](builtin-u32) val)

    &nbsp;
- name: F64.from()
  id: builtin-f64#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: F64
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](index) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L228)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: F64 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [F64](index) val^\n\n&nbsp;"
- name: F64.from_bits()
  id: builtin-f64#from_bits
  summary: null
  belongs_to: F64
  description: |-
    ### from_bits

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L226)

    ``` pony
    new val from_bits(
      i: U64 val)
    : F64 val^
    ```

    #### Parameters

    - i: [U64](builtin-u64) val

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.ge()
  id: builtin-f64#ge
  summary: null
  belongs_to: F64
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.ge_unsafe()
  id: builtin-f64#ge_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### ge_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L642)

    ``` pony
    fun box ge_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.gt()
  id: builtin-f64#gt
  summary: null
  belongs_to: F64
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.gt_unsafe()
  id: builtin-f64#gt_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### gt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L651)

    ``` pony
    fun box gt_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.hash()
  id: builtin-f64#hash
  summary: null
  belongs_to: F64
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L415)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F64.hash64()
  id: builtin-f64#hash64
  summary: null
  belongs_to: F64
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L416)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F64.i128()
  id: builtin-f64#i128
  summary: null
  belongs_to: F64
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L418)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: F64.i128_unsafe()
  id: builtin-f64#i128_unsafe
  summary: Unsafe operation
  belongs_to: F64
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L471)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: F64.i16()
  id: builtin-f64#i16
  summary: null
  belongs_to: F64
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.i16_unsafe()
  id: builtin-f64#i16_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.i32()
  id: builtin-f64#i32
  summary: null
  belongs_to: F64
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: F64.i32_unsafe()
  id: builtin-f64#i32_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: F64.i64()
  id: builtin-f64#i64
  summary: null
  belongs_to: F64
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: F64.i64_unsafe()
  id: builtin-f64#i64_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: F64.i8()
  id: builtin-f64#i8
  summary: null
  belongs_to: F64
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: F64.i8_unsafe()
  id: builtin-f64#i8_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: F64.ilong()
  id: builtin-f64#ilong
  summary: null
  belongs_to: F64
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: F64.ilong_unsafe()
  id: builtin-f64#ilong_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: F64.infinite()
  id: builtin-f64#infinite
  summary: null
  belongs_to: F64
  description: |-
    ### infinite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L341)

    Check whether this number is +/-infinity

    ``` pony
    fun box infinite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.isize()
  id: builtin-f64#isize
  summary: null
  belongs_to: F64
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: F64.isize_unsafe()
  id: builtin-f64#isize_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: F64.ldexp()
  id: builtin-f64#ldexp
  summary: null
  belongs_to: F64
  description: |-
    ### ldexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L357)

    ``` pony
    fun box ldexp(
      x: F64 val,
      exponent: I32 val)
    : F64 val
    ```

    #### Parameters

    - x: [F64](index) val
    - exponent: [I32](builtin-i32) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.le()
  id: builtin-f64#le
  summary: null
  belongs_to: F64
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.le_unsafe()
  id: builtin-f64#le_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### le_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L633)

    ``` pony
    fun box le_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.log()
  id: builtin-f64#log
  summary: null
  belongs_to: F64
  description: |-
    ### log

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L365)

    ``` pony
    fun box log()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.log10()
  id: builtin-f64#log10
  summary: null
  belongs_to: F64
  description: |-
    ### log10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L367)

    ``` pony
    fun box log10()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.log2()
  id: builtin-f64#log2
  summary: null
  belongs_to: F64
  description: |-
    ### log2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L366)

    ``` pony
    fun box log2()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.logb()
  id: builtin-f64#logb
  summary: null
  belongs_to: F64
  description: |-
    ### logb

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L368)

    ``` pony
    fun box logb()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.lt()
  id: builtin-f64#lt
  summary: null
  belongs_to: F64
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.lt_unsafe()
  id: builtin-f64#lt_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### lt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L624)

    ``` pony
    fun box lt_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.max()
  id: builtin-f64#max
  summary: null
  belongs_to: F64
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L306)

    ``` pony
    fun box max(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.max_exp10()
  id: builtin-f64#max_exp10
  summary: Maximum exponent value such that (10^exponent) - 1 is representable
  belongs_to: F64
  description: |-
    ### max_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L293)

    Maximum exponent value such that (10^exponent) - 1 is representable.

    ``` pony
    fun tag max_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.max_exp2()
  id: builtin-f64#max_exp2
  summary: Maximum exponent value such that (2^exponent) - 1 is representable
  belongs_to: F64
  description: |-
    ### max_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L287)

    Maximum exponent value such that (2^exponent) - 1 is representable.

    ``` pony
    fun tag max_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.max_value()
  id: builtin-f64#max_value
  summary: Maximum positive value representable
  belongs_to: F64
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L236)

    Maximum positive value representable.

    ``` pony
    new val max_value()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.min()
  id: builtin-f64#min
  summary: null
  belongs_to: F64
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L305)

    ``` pony
    fun box min(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.min_exp10()
  id: builtin-f64#min_exp10
  summary: Minimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number)
  belongs_to: F64
  description: |-
    ### min_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L280)

    Minimum exponent value such that (10^exponent) - 1 is representable at full precision (ie a normalised number).

    ``` pony
    fun tag min_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.min_exp2()
  id: builtin-f64#min_exp2
  summary: Minimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number)
  belongs_to: F64
  description: |-
    ### min_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L273)

    Minimum exponent value such that (2^exponent) - 1 is representable at full precision (ie a normalised number).

    ``` pony
    fun tag min_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: F64.min_normalised()
  id: builtin-f64#min_normalised
  summary: Minimum positive value representable at full precision (ie a normalised number)
  belongs_to: F64
  description: |-
    ### min_normalised

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L242)

    Minimum positive value representable at full precision (ie a normalised number).

    ``` pony
    new val min_normalised()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.min_value()
  id: builtin-f64#min_value
  summary: Minimum negative value representable
  belongs_to: F64
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L230)

    Minimum negative value representable.

    ``` pony
    new val min_value()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.mod()
  id: builtin-f64#mod
  summary: null
  belongs_to: F64
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L314)

    ``` pony
    fun box mod(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.mod_unsafe()
  id: builtin-f64#mod_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L324)

    ``` pony
    fun box mod_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.mul()
  id: builtin-f64#mul
  summary: null
  belongs_to: F64
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.mul_unsafe()
  id: builtin-f64#mul_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L545)

    ``` pony
    fun box mul_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.nan()
  id: builtin-f64#nan
  summary: Check whether this number is NaN
  belongs_to: F64
  description: |-
    ### nan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L349)

    Check whether this number is NaN.

    ``` pony
    fun box nan()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.ne()
  id: builtin-f64#ne
  summary: null
  belongs_to: F64
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.ne_unsafe()
  id: builtin-f64#ne_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### ne_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L615)

    ``` pony
    fun box ne_unsafe(
      y: F64 val)
    : Bool val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: F64.neg()
  id: builtin-f64#neg
  summary: null
  belongs_to: F64
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.neg_unsafe()
  id: builtin-f64#neg_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L597)

    ``` pony
    fun box neg_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.pi()
  id: builtin-f64#pi
  summary: null
  belongs_to: F64
  description: |-
    ### pi

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L220)

    ``` pony
    new val pi()
    : F64 val^
    ```

    #### Returns

    - [F64](index) val^

    &nbsp;
- name: F64.pow()
  id: builtin-f64#pow
  summary: null
  belongs_to: F64
  description: |-
    ### pow

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L370)

    ``` pony
    fun box pow(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.powi()
  id: builtin-f64#powi
  summary: null
  belongs_to: F64
  description: |-
    ### powi

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L371)

    ``` pony
    fun box powi(
      y: I32 val)
    : F64 val
    ```

    #### Parameters

    - y: [I32](builtin-i32) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.precision10()
  id: builtin-f64#precision10
  summary: Mantissa precision in decimal digits
  belongs_to: F64
  description: |-
    ### precision10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L267)

    Mantissa precision in decimal digits.

    ``` pony
    fun tag precision10()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F64.precision2()
  id: builtin-f64#precision2
  summary: Mantissa precision in bits
  belongs_to: F64
  description: |-
    ### precision2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L261)

    Mantissa precision in bits.

    ``` pony
    fun tag precision2()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F64.radix()
  id: builtin-f64#radix
  summary: Exponent radix
  belongs_to: F64
  description: |-
    ### radix

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L255)

    Exponent radix.

    ``` pony
    fun tag radix()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F64.rem()
  id: builtin-f64#rem
  summary: null
  belongs_to: F64
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.rem_unsafe()
  id: builtin-f64#rem_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L580)

    ``` pony
    fun box rem_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.round()
  id: builtin-f64#round
  summary: null
  belongs_to: F64
  description: |-
    ### round

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L302)

    ``` pony
    fun box round()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.sin()
  id: builtin-f64#sin
  summary: null
  belongs_to: F64
  description: |-
    ### sin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L397)

    ``` pony
    fun box sin()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.sinh()
  id: builtin-f64#sinh
  summary: null
  belongs_to: F64
  description: |-
    ### sinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L401)

    ``` pony
    fun box sinh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.sqrt()
  id: builtin-f64#sqrt
  summary: null
  belongs_to: F64
  description: |-
    ### sqrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L378)

    ``` pony
    fun box sqrt()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.sqrt_unsafe()
  id: builtin-f64#sqrt_unsafe
  summary: Unsafe operation
  belongs_to: F64
  description: |-
    ### sqrt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L385)

    Unsafe operation. If this is negative, the result is undefined.

    ``` pony
    fun box sqrt_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.string()
  id: builtin-f64#string
  summary: null
  belongs_to: F64
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L711)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: F64.sub()
  id: builtin-f64#sub
  summary: null
  belongs_to: F64
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.sub_unsafe()
  id: builtin-f64#sub_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L536)

    ``` pony
    fun box sub_unsafe(
      y: F64 val)
    : F64 val
    ```

    #### Parameters

    - y: [F64](index) val

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.tan()
  id: builtin-f64#tan
  summary: null
  belongs_to: F64
  description: |-
    ### tan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L398)

    ``` pony
    fun box tan()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.tanh()
  id: builtin-f64#tanh
  summary: null
  belongs_to: F64
  description: |-
    ### tanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L402)

    ``` pony
    fun box tanh()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.trunc()
  id: builtin-f64#trunc
  summary: null
  belongs_to: F64
  description: |-
    ### trunc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L303)

    ``` pony
    fun box trunc()
    : F64 val
    ```

    #### Returns

    - [F64](index) val

    &nbsp;
- name: F64.u128()
  id: builtin-f64#u128
  summary: null
  belongs_to: F64
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L445)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: F64.u128_unsafe()
  id: builtin-f64#u128_unsafe
  summary: Unsafe operation
  belongs_to: F64
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/float/#L478)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: F64.u16()
  id: builtin-f64#u16
  summary: null
  belongs_to: F64
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: F64.u16_unsafe()
  id: builtin-f64#u16_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: F64.u32()
  id: builtin-f64#u32
  summary: null
  belongs_to: F64
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: F64.u32_unsafe()
  id: builtin-f64#u32_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: F64.u64()
  id: builtin-f64#u64
  summary: null
  belongs_to: F64
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F64.u64_unsafe()
  id: builtin-f64#u64_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: F64.u8()
  id: builtin-f64#u8
  summary: null
  belongs_to: F64
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F64.u8_unsafe()
  id: builtin-f64#u8_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: F64.ulong()
  id: builtin-f64#ulong
  summary: null
  belongs_to: F64
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: F64.ulong_unsafe()
  id: builtin-f64#ulong_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: F64.usize()
  id: builtin-f64#usize
  summary: null
  belongs_to: F64
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F64.usize_unsafe()
  id: builtin-f64#usize_unsafe
  summary: null
  belongs_to: F64
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: F64Argument
  id: options-f64argument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# F64Argument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L72)\n\n``` pony\nprimitive val F64Argument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L72)\n\n``` pony\nnew val create()\n: F64Argument val^\n```\n\n#### Returns\n\n- [F64Argument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L73)\n\n``` pony\nfun box eq(\n  that: F64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [F64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L73)\n\n``` pony\nfun box ne(\n  that: F64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [F64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-F64Argument](https://stdlib.ponylang.io/options-F64Argument)"
- name: F64Argument.create()
  id: options-f64argument#create
  summary: null
  belongs_to: F64Argument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L72)

    ``` pony
    new val create()
    : F64Argument val^
    ```

    #### Returns

    - [F64Argument](index) val^

    ## Public Functions
- name: F64Argument.eq()
  id: options-f64argument#eq
  summary: null
  belongs_to: F64Argument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L73)

    ``` pony
    fun box eq(
      that: F64Argument val)
    : Bool val
    ```

    #### Parameters

    - that: [F64Argument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: F64Argument.ne()
  id: options-f64argument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: F64Argument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L73)\n\n``` pony\nfun box ne(\n  that: F64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [F64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-F64Argument](https://stdlib.ponylang.io/options-F64Argument)"
- name: Fact
  id: assert-fact
  summary: This is an assertion that is always enabled
  description: "# Fact\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L19)\n\nThis is an assertion that is always enabled. If the test is false, it will print any supplied error message to stderr and raise an error.\n\n``` pony\nprimitive val Fact\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L19)\n\n``` pony\nnew val create()\n: Fact val^\n```\n\n#### Returns\n\n- [Fact](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L24)\n\n``` pony\nfun box apply(\n  test: Bool val,\n  msg: String val = \"\")\n: None val ?\n```\n\n#### Parameters\n\n- test: [Bool](builtin-bool) val\n- msg: [String](builtin-string) val = \"\"\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L24)\n\n``` pony\nfun box eq(\n  that: Fact val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fact](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L24)\n\n``` pony\nfun box ne(\n  that: Fact val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fact](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/assert-Fact](https://stdlib.ponylang.io/assert-Fact)"
- name: Fact.apply()
  id: assert-fact#apply
  summary: null
  belongs_to: Fact
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L24)

    ``` pony
    fun box apply(
      test: Bool val,
      msg: String val = "")
    : None val ?
    ```

    #### Parameters

    - test: [Bool](builtin-bool) val
    - msg: [String](builtin-string) val = ""

    #### Returns

    - [None](builtin-none) val ?
- name: Fact.create()
  id: assert-fact#create
  summary: null
  belongs_to: Fact
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L19)

    ``` pony
    new val create()
    : Fact val^
    ```

    #### Returns

    - [Fact](index) val^

    ## Public Functions
- name: Fact.eq()
  id: assert-fact#eq
  summary: null
  belongs_to: Fact
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/assert/assert/#L24)

    ``` pony
    fun box eq(
      that: Fact val)
    : Bool val
    ```

    #### Parameters

    - that: [Fact](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Fact.ne()
  id: assert-fact#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Fact
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/assert/assert/#L24)\n\n``` pony\nfun box ne(\n  that: Fact val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fact](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/assert-Fact](https://stdlib.ponylang.io/assert-Fact)"
- name: Fibonacci
  id: math-fibonacci
  summary: Useful for microbenchmarks to impress your friends
  description: "# Fibonacci\\[optional A: ([Integer](builtin-integer)\\[A\\] val & ([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L15)\n\nUseful for microbenchmarks to impress your friends. Look y'all, Pony goes fast! We suppose if you are into Agile planning poker that you could also use this in conjunction with `Random` to assign User Story Points.\n\n``` pony\nclass ref Fibonacci[optional A: (Integer[A] val & (U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val))] is\n  Iterator[A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L15)\n\n``` pony\nnew iso create()\n: Fibonacci[A] iso^\n```\n\n#### Returns\n\n- [Fibonacci](index)\\[A\\] iso^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L25)\n\n``` pony\nfun box apply(\n  n: U8 val)\n: A\n```\n\n#### Parameters\n\n- n: [U8](builtin-u8) val\n\n#### Returns\n\n- A\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L43)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L45)\n\n``` pony\nfun ref next()\n: A\n```\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/math-Fibonacci](https://stdlib.ponylang.io/math-Fibonacci)"
- name: Fibonacci.apply()
  id: math-fibonacci#apply
  summary: null
  belongs_to: Fibonacci
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/math/fibonacci/#L25)

    ``` pony
    fun box apply(
      n: U8 val)
    : A
    ```

    #### Parameters

    - n: [U8](builtin-u8) val

    #### Returns

    - A
- name: Fibonacci.create()
  id: math-fibonacci#create
  summary: null
  belongs_to: Fibonacci
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/math/fibonacci/#L15)

    ``` pony
    new iso create()
    : Fibonacci[A] iso^
    ```

    #### Returns

    - [Fibonacci](index)\[A\] iso^

    ## Public Functions
- name: Fibonacci.has_next()
  id: math-fibonacci#has_next
  summary: null
  belongs_to: Fibonacci
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/math/fibonacci/#L43)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Fibonacci.next()
  id: math-fibonacci#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Fibonacci
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/math/fibonacci/#L45)\n\n``` pony\nfun ref next()\n: A\n```\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/math-Fibonacci](https://stdlib.ponylang.io/math-Fibonacci)"
- name: File
  id: files-file
  summary: Operations on a file
  description: "# File\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L78)\n\nOperations on a file.\n\n``` pony\nclass ref File\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L101)\n\nAttempt to open for read/write, creating if it doesn't exist, preserving the contents if it does exist. Set errno according to result.\n\n``` pony\nnew ref create(\n  from: FilePath val)\n: File ref^\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- [File](index) ref^\n\n### open\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L141)\n\nOpen for read only. Set \\_errno according to result.\n\n``` pony\nnew ref open(\n  from: FilePath val)\n: File ref^\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- [File](index) ref^\n\n## Public fields\n\n### let path: [FilePath](files-filepath) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L82)\n\nThis is the filesystem path locating this file on the file system and an object capability granting access to operate on this file.\n\n### let writeable: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L88)\n\n`true` if the underlying file descriptor has been opened as writeable.\n\n## Public Functions\n\n### errno\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L192)\n\nReturns the last error code set for this File\n\n``` pony\nfun box errno()\n: (FileOK val | FileError val | FileEOF val | \n    FileBadFileNumber val | FileExists val | FilePermissionDenied val)\n```\n\n#### Returns\n\n- ([FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)\n\n### clear_errno\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L198)\n\nClears the last error code set for this File. Clears the error indicator for the stream.\n\n``` pony\nfun ref clear_errno()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### valid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L219)\n\nReturns true if the file is currently open.\n\n``` pony\nfun box valid()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### read\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L226)\n\nReturns up to len bytes.\n\n``` pony\nfun ref read(\n  len: USize val)\n: Array[U8 val] iso^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^\n\n### read_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L252)\n\nReturns up to len bytes. The resulting string may have internal null characters.\n\n``` pony\nfun ref read_string(\n  len: USize val)\n: String iso^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### print\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L277)\n\nSame as write, buts adds a newline.\n\n``` pony\nfun ref print(\n  data: (String box | Array[U8 val] box))\n: Bool val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### printv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L286)\n\nPrint an iterable collection of ByteSeqs.\n\n``` pony\nfun ref printv(\n  data: ByteSeqIter box)\n: Bool val\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L297)\n\nReturns false if the file wasn't opened with write permission. Returns false and closes the file if not all the bytes were written.\n\n``` pony\nfun ref write(\n  data: (String box | Array[U8 val] box))\n: Bool val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L306)\n\nWrite an iterable collection of ByteSeqs.\n\n``` pony\nfun ref writev(\n  data: ByteSeqIter box)\n: Bool val\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### queue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L316)\n\nQueue data to be written NOTE: Queue'd data will always be written before normal print/write requested data\n\n``` pony\nfun ref queue(\n  data: (String box | Array[U8 val] box))\n: None val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### queuev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L325)\n\nQueue an iterable collection of ByteSeqs to be written NOTE: Queue'd data will always be written before normal print/write requested data\n\n``` pony\nfun ref queuev(\n  data: ByteSeqIter box)\n: None val\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L335)\n\nFlush any queued data\n\n``` pony\nfun ref flush()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### position\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L432)\n\nReturn the current cursor position in the file.\n\n``` pony\nfun ref position()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L457)\n\nReturn the total length of the file.\n\n``` pony\nfun ref size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### seek_start\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L467)\n\nSet the cursor position relative to the start of the file.\n\n``` pony\nfun ref seek_start(\n  offset: USize val)\n: None val\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### seek_end\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L475)\n\nSet the cursor position relative to the end of the file.\n\n``` pony\nfun ref seek_end(\n  offset: USize val)\n: None val\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### seek\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L483)\n\nMove the cursor position.\n\n``` pony\nfun ref seek(\n  offset: ISize val)\n: None val\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### sync\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L491)\n\nSync the file contents to physical storage.\n\n``` pony\nfun ref sync()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### datasync\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L511)\n\nSync the file contents to physical storage.\n\n``` pony\nfun ref datasync()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### set_length\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L530)\n\nChange the file size. If it is made larger, the new contents are undefined.\n\n``` pony\nfun ref set_length(\n  len: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L560)\n\nReturn a FileInfo for this directory. Raise an error if the fd is invalid or if we don't have FileStat permission.\n\n``` pony\nfun box info()\n: FileInfo val ?\n```\n\n#### Returns\n\n- [FileInfo](files-fileinfo) val ?\n\n### chmod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L567)\n\nSet the FileMode for this directory.\n\n``` pony\nfun box chmod(\n  mode: FileMode box)\n: Bool val\n```\n\n#### Parameters\n\n- mode: [FileMode](files-filemode) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### chown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L573)\n\nSet the owner and group for this directory. Does nothing on Windows.\n\n``` pony\nfun box chown(\n  uid: U32 val,\n  gid: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- uid: [U32](builtin-u32) val\n- gid: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### touch\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L579)\n\nSet the last access and modification times of the directory to now.\n\n``` pony\nfun box touch()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### set_time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L585)\n\nSet the last access and modification times of the directory to the given values.\n\n``` pony\nfun box set_time(\n  atime: (I64 val , I64 val),\n  mtime: (I64 val , I64 val))\n: Bool val\n```\n\n#### Parameters\n\n- atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lines\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L592)\n\nReturns an iterator for reading lines from the file.\n\n``` pony\nfun ref lines()\n: FileLines ref\n```\n\n#### Returns\n\n- [FileLines](files-filelines) ref\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L598)\n\nClose the file. Future operations will do nothing.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-File](https://stdlib.ponylang.io/files-File)"
- name: File.chmod()
  id: files-file#chmod
  summary: Set the FileMode for this directory
  belongs_to: File
  description: |-
    ### chmod

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L567)

    Set the FileMode for this directory.

    ``` pony
    fun box chmod(
      mode: FileMode box)
    : Bool val
    ```

    #### Parameters

    - mode: [FileMode](files-filemode) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.chown()
  id: files-file#chown
  summary: Set the owner and group for this directory
  belongs_to: File
  description: |-
    ### chown

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L573)

    Set the owner and group for this directory. Does nothing on Windows.

    ``` pony
    fun box chown(
      uid: U32 val,
      gid: U32 val)
    : Bool val
    ```

    #### Parameters

    - uid: [U32](builtin-u32) val
    - gid: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.clear_errno()
  id: files-file#clear_errno
  summary: Clears the last error code set for this File
  belongs_to: File
  description: |-
    ### clear_errno

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L198)

    Clears the last error code set for this File. Clears the error indicator for the stream.

    ``` pony
    fun ref clear_errno()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.create()
  id: files-file#create
  summary: Attempt to open for read/write, creating if it doesn't exist, preserving the contents if it does exist
  belongs_to: File
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L101)

    Attempt to open for read/write, creating if it doesn't exist, preserving the contents if it does exist. Set errno according to result.

    ``` pony
    new ref create(
      from: FilePath val)
    : File ref^
    ```

    #### Parameters

    - from: [FilePath](files-filepath) val

    #### Returns

    - [File](index) ref^
- name: File.datasync()
  id: files-file#datasync
  summary: Sync the file contents to physical storage
  belongs_to: File
  description: |-
    ### datasync

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L511)

    Sync the file contents to physical storage.

    ``` pony
    fun ref datasync()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.dispose()
  id: files-file#dispose
  summary: Close the file
  belongs_to: File
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L598)\n\nClose the file. Future operations will do nothing.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-File](https://stdlib.ponylang.io/files-File)"
- name: File.errno()
  id: files-file#errno
  summary: null
  belongs_to: File
  description: "### errno\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L192)\n\nReturns the last error code set for this File\n\n``` pony\nfun box errno()\n: (FileOK val | FileError val | FileEOF val | \n    FileBadFileNumber val | FileExists val | FilePermissionDenied val)\n```\n\n#### Returns\n\n- ([FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)\n\n&nbsp;"
- name: File.flush()
  id: files-file#flush
  summary: null
  belongs_to: File
  description: |-
    ### flush

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L335)

    Flush any queued data

    ``` pony
    fun ref flush()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.info()
  id: files-file#info
  summary: Return a FileInfo for this directory
  belongs_to: File
  description: |-
    ### info

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L560)

    Return a FileInfo for this directory. Raise an error if the fd is invalid or if we don't have FileStat permission.

    ``` pony
    fun box info()
    : FileInfo val ?
    ```

    #### Returns

    - [FileInfo](files-fileinfo) val ?

    &nbsp;
- name: File.lines()
  id: files-file#lines
  summary: Returns an iterator for reading lines from the file
  belongs_to: File
  description: |-
    ### lines

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L592)

    Returns an iterator for reading lines from the file.

    ``` pony
    fun ref lines()
    : FileLines ref
    ```

    #### Returns

    - [FileLines](files-filelines) ref

    &nbsp;
- name: File.open()
  id: files-file#open
  summary: Open for read only
  belongs_to: File
  description: |-
    ### open

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L141)

    Open for read only. Set \_errno according to result.

    ``` pony
    new ref open(
      from: FilePath val)
    : File ref^
    ```

    #### Parameters

    - from: [FilePath](files-filepath) val

    #### Returns

    - [File](index) ref^

    ## Public fields
- name: File.path
  id: files-file#let-path-filepath-val
  summary: This is the filesystem path locating this file on the file system and an object capability granting access to operate on this file
  belongs_to: File
  description: |-
    ### let path: [FilePath](files-filepath) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L82)

    This is the filesystem path locating this file on the file system and an object capability granting access to operate on this file.
- name: File.position()
  id: files-file#position
  summary: Return the current cursor position in the file
  belongs_to: File
  description: |-
    ### position

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L432)

    Return the current cursor position in the file.

    ``` pony
    fun ref position()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: File.print()
  id: files-file#print
  summary: Same as write, buts adds a newline
  belongs_to: File
  description: |-
    ### print

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L277)

    Same as write, buts adds a newline.

    ``` pony
    fun ref print(
      data: (String box | Array[U8 val] box))
    : Bool val
    ```

    #### Parameters

    - data: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.printv()
  id: files-file#printv
  summary: Print an iterable collection of ByteSeqs
  belongs_to: File
  description: |-
    ### printv

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L286)

    Print an iterable collection of ByteSeqs.

    ``` pony
    fun ref printv(
      data: ByteSeqIter box)
    : Bool val
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.queue()
  id: files-file#queue
  summary: null
  belongs_to: File
  description: |-
    ### queue

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L316)

    Queue data to be written NOTE: Queue'd data will always be written before normal print/write requested data

    ``` pony
    fun ref queue(
      data: (String box | Array[U8 val] box))
    : None val
    ```

    #### Parameters

    - data: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.queuev()
  id: files-file#queuev
  summary: null
  belongs_to: File
  description: |-
    ### queuev

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L325)

    Queue an iterable collection of ByteSeqs to be written NOTE: Queue'd data will always be written before normal print/write requested data

    ``` pony
    fun ref queuev(
      data: ByteSeqIter box)
    : None val
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.read()
  id: files-file#read
  summary: Returns up to len bytes
  belongs_to: File
  description: |-
    ### read

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L226)

    Returns up to len bytes.

    ``` pony
    fun ref read(
      len: USize val)
    : Array[U8 val] iso^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] iso^

    &nbsp;
- name: File.read_string()
  id: files-file#read_string
  summary: Returns up to len bytes
  belongs_to: File
  description: |-
    ### read_string

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L252)

    Returns up to len bytes. The resulting string may have internal null characters.

    ``` pony
    fun ref read_string(
      len: USize val)
    : String iso^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: File.seek()
  id: files-file#seek
  summary: Move the cursor position
  belongs_to: File
  description: |-
    ### seek

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L483)

    Move the cursor position.

    ``` pony
    fun ref seek(
      offset: ISize val)
    : None val
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.seek_end()
  id: files-file#seek_end
  summary: Set the cursor position relative to the end of the file
  belongs_to: File
  description: |-
    ### seek_end

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L475)

    Set the cursor position relative to the end of the file.

    ``` pony
    fun ref seek_end(
      offset: USize val)
    : None val
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.seek_start()
  id: files-file#seek_start
  summary: Set the cursor position relative to the start of the file
  belongs_to: File
  description: |-
    ### seek_start

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L467)

    Set the cursor position relative to the start of the file.

    ``` pony
    fun ref seek_start(
      offset: USize val)
    : None val
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.set_length()
  id: files-file#set_length
  summary: Change the file size
  belongs_to: File
  description: |-
    ### set_length

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L530)

    Change the file size. If it is made larger, the new contents are undefined.

    ``` pony
    fun ref set_length(
      len: USize val)
    : Bool val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.set_time()
  id: files-file#set_time
  summary: Set the last access and modification times of the directory to the given values
  belongs_to: File
  description: |-
    ### set_time

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L585)

    Set the last access and modification times of the directory to the given values.

    ``` pony
    fun box set_time(
      atime: (I64 val , I64 val),
      mtime: (I64 val , I64 val))
    : Bool val
    ```

    #### Parameters

    - atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)
    - mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.size()
  id: files-file#size
  summary: Return the total length of the file
  belongs_to: File
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L457)

    Return the total length of the file.

    ``` pony
    fun ref size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: File.sync()
  id: files-file#sync
  summary: Sync the file contents to physical storage
  belongs_to: File
  description: |-
    ### sync

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L491)

    Sync the file contents to physical storage.

    ``` pony
    fun ref sync()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: File.touch()
  id: files-file#touch
  summary: Set the last access and modification times of the directory to now
  belongs_to: File
  description: |-
    ### touch

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L579)

    Set the last access and modification times of the directory to now.

    ``` pony
    fun box touch()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.valid()
  id: files-file#valid
  summary: Returns true if the file is currently open
  belongs_to: File
  description: |-
    ### valid

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L219)

    Returns true if the file is currently open.

    ``` pony
    fun box valid()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.write()
  id: files-file#write
  summary: Returns false if the file wasn't opened with write permission
  belongs_to: File
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L297)

    Returns false if the file wasn't opened with write permission. Returns false and closes the file if not all the bytes were written.

    ``` pony
    fun ref write(
      data: (String box | Array[U8 val] box))
    : Bool val
    ```

    #### Parameters

    - data: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: File.writeable
  id: files-file#let-writeable-bool-val
  summary: true if the underlying file descriptor has been opened as writeable
  belongs_to: File
  description: |-
    ### let writeable: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L88)

    `true` if the underlying file descriptor has been opened as writeable.

    ## Public Functions
- name: File.writev()
  id: files-file#writev
  summary: Write an iterable collection of ByteSeqs
  belongs_to: File
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L306)

    Write an iterable collection of ByteSeqs.

    ``` pony
    fun ref writev(
      data: ByteSeqIter box)
    : Bool val
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileBadFileNumber
  id: files-filebadfilenumber
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileBadFileNumber\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L27)\n\n``` pony\nprimitive val FileBadFileNumber\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L27)\n\n``` pony\nnew val create()\n: FileBadFileNumber val^\n```\n\n#### Returns\n\n- [FileBadFileNumber](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L28)\n\n``` pony\nfun box eq(\n  that: FileBadFileNumber val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileBadFileNumber](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L28)\n\n``` pony\nfun box ne(\n  that: FileBadFileNumber val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileBadFileNumber](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileBadFileNumber](https://stdlib.ponylang.io/files-FileBadFileNumber)"
- name: FileBadFileNumber.create()
  id: files-filebadfilenumber#create
  summary: null
  belongs_to: FileBadFileNumber
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L27)

    ``` pony
    new val create()
    : FileBadFileNumber val^
    ```

    #### Returns

    - [FileBadFileNumber](index) val^

    ## Public Functions
- name: FileBadFileNumber.eq()
  id: files-filebadfilenumber#eq
  summary: null
  belongs_to: FileBadFileNumber
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L28)

    ``` pony
    fun box eq(
      that: FileBadFileNumber val)
    : Bool val
    ```

    #### Parameters

    - that: [FileBadFileNumber](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FileBadFileNumber.ne()
  id: files-filebadfilenumber#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileBadFileNumber
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L28)\n\n``` pony\nfun box ne(\n  that: FileBadFileNumber val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileBadFileNumber](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileBadFileNumber](https://stdlib.ponylang.io/files-FileBadFileNumber)"
- name: FileCaps
  id: files-filecaps
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileCaps\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L51)\n\n``` pony\ntype FileCaps is\n  Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] ref\n```\n\n#### Type Alias For\n\n- [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileCaps](https://stdlib.ponylang.io/files-FileCaps)"
- name: FileChmod
  id: files-filechmod
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileChmod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L6)\n\n``` pony\nprimitive val FileChmod\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L6)\n\n``` pony\nnew val create()\n: FileChmod val^\n```\n\n#### Returns\n\n- [FileChmod](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)\n\n``` pony\nfun box eq(\n  that: FileChmod val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChmod](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)\n\n``` pony\nfun box ne(\n  that: FileChmod val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChmod](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileChmod](https://stdlib.ponylang.io/files-FileChmod)"
- name: FileChmod.create()
  id: files-filechmod#create
  summary: null
  belongs_to: FileChmod
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L6)

    ``` pony
    new val create()
    : FileChmod val^
    ```

    #### Returns

    - [FileChmod](index) val^

    ## Public Functions
- name: FileChmod.eq()
  id: files-filechmod#eq
  summary: null
  belongs_to: FileChmod
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)

    ``` pony
    fun box eq(
      that: FileChmod val)
    : Bool val
    ```

    #### Parameters

    - that: [FileChmod](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileChmod.ne()
  id: files-filechmod#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileChmod
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)\n\n``` pony\nfun box ne(\n  that: FileChmod val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChmod](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileChmod](https://stdlib.ponylang.io/files-FileChmod)"
- name: FileChmod.value()
  id: files-filechmod#value
  summary: null
  belongs_to: FileChmod
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L7)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileChown
  id: files-filechown
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileChown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L9)\n\n``` pony\nprimitive val FileChown\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L9)\n\n``` pony\nnew val create()\n: FileChown val^\n```\n\n#### Returns\n\n- [FileChown](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)\n\n``` pony\nfun box eq(\n  that: FileChown val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChown](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)\n\n``` pony\nfun box ne(\n  that: FileChown val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChown](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileChown](https://stdlib.ponylang.io/files-FileChown)"
- name: FileChown.create()
  id: files-filechown#create
  summary: null
  belongs_to: FileChown
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L9)

    ``` pony
    new val create()
    : FileChown val^
    ```

    #### Returns

    - [FileChown](index) val^

    ## Public Functions
- name: FileChown.eq()
  id: files-filechown#eq
  summary: null
  belongs_to: FileChown
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)

    ``` pony
    fun box eq(
      that: FileChown val)
    : Bool val
    ```

    #### Parameters

    - that: [FileChown](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileChown.ne()
  id: files-filechown#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileChown
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)\n\n``` pony\nfun box ne(\n  that: FileChown val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileChown](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileChown](https://stdlib.ponylang.io/files-FileChown)"
- name: FileChown.value()
  id: files-filechown#value
  summary: null
  belongs_to: FileChown
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L10)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileCreate
  id: files-filecreate
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileCreate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L3)\n\n``` pony\nprimitive val FileCreate\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L3)\n\n``` pony\nnew val create()\n: FileCreate val^\n```\n\n#### Returns\n\n- [FileCreate](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)\n\n``` pony\nfun box eq(\n  that: FileCreate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileCreate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)\n\n``` pony\nfun box ne(\n  that: FileCreate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileCreate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileCreate](https://stdlib.ponylang.io/files-FileCreate)"
- name: FileCreate.create()
  id: files-filecreate#create
  summary: null
  belongs_to: FileCreate
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L3)

    ``` pony
    new val create()
    : FileCreate val^
    ```

    #### Returns

    - [FileCreate](index) val^

    ## Public Functions
- name: FileCreate.eq()
  id: files-filecreate#eq
  summary: null
  belongs_to: FileCreate
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)

    ``` pony
    fun box eq(
      that: FileCreate val)
    : Bool val
    ```

    #### Parameters

    - that: [FileCreate](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileCreate.ne()
  id: files-filecreate#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileCreate
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)\n\n``` pony\nfun box ne(\n  that: FileCreate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileCreate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileCreate](https://stdlib.ponylang.io/files-FileCreate)"
- name: FileCreate.value()
  id: files-filecreate#value
  summary: null
  belongs_to: FileCreate
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L4)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileEOF
  id: files-fileeof
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileEOF\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L26)\n\n``` pony\nprimitive val FileEOF\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L26)\n\n``` pony\nnew val create()\n: FileEOF val^\n```\n\n#### Returns\n\n- [FileEOF](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L27)\n\n``` pony\nfun box eq(\n  that: FileEOF val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileEOF](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L27)\n\n``` pony\nfun box ne(\n  that: FileEOF val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileEOF](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileEOF](https://stdlib.ponylang.io/files-FileEOF)"
- name: FileEOF.create()
  id: files-fileeof#create
  summary: null
  belongs_to: FileEOF
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L26)

    ``` pony
    new val create()
    : FileEOF val^
    ```

    #### Returns

    - [FileEOF](index) val^

    ## Public Functions
- name: FileEOF.eq()
  id: files-fileeof#eq
  summary: null
  belongs_to: FileEOF
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L27)

    ``` pony
    fun box eq(
      that: FileEOF val)
    : Bool val
    ```

    #### Parameters

    - that: [FileEOF](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FileEOF.ne()
  id: files-fileeof#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileEOF
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L27)\n\n``` pony\nfun box ne(\n  that: FileEOF val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileEOF](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileEOF](https://stdlib.ponylang.io/files-FileEOF)"
- name: FileErrNo
  id: files-fileerrno
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileErrNo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L40)\n\n``` pony\ntype FileErrNo is\n  (FileOK val | FileError val | FileEOF val | FileBadFileNumber val | FileExists val | FilePermissionDenied val)\n```\n\n#### Type Alias For\n\n- ([FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileErrNo](https://stdlib.ponylang.io/files-FileErrNo)"
- name: FileError
  id: files-fileerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L25)\n\n``` pony\nprimitive val FileError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L25)\n\n``` pony\nnew val create()\n: FileError val^\n```\n\n#### Returns\n\n- [FileError](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L26)\n\n``` pony\nfun box eq(\n  that: FileError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L26)\n\n``` pony\nfun box ne(\n  that: FileError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileError](https://stdlib.ponylang.io/files-FileError)"
- name: FileError.create()
  id: files-fileerror#create
  summary: null
  belongs_to: FileError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L25)

    ``` pony
    new val create()
    : FileError val^
    ```

    #### Returns

    - [FileError](index) val^

    ## Public Functions
- name: FileError.eq()
  id: files-fileerror#eq
  summary: null
  belongs_to: FileError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L26)

    ``` pony
    fun box eq(
      that: FileError val)
    : Bool val
    ```

    #### Parameters

    - that: [FileError](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FileError.ne()
  id: files-fileerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L26)\n\n``` pony\nfun box ne(\n  that: FileError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileError](https://stdlib.ponylang.io/files-FileError)"
- name: FileExec
  id: files-fileexec
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileExec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L48)\n\n``` pony\nprimitive val FileExec\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L48)\n\n``` pony\nnew val create()\n: FileExec val^\n```\n\n#### Returns\n\n- [FileExec](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)\n\n``` pony\nfun box eq(\n  that: FileExec val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExec](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)\n\n``` pony\nfun box ne(\n  that: FileExec val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExec](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileExec](https://stdlib.ponylang.io/files-FileExec)"
- name: FileExec.create()
  id: files-fileexec#create
  summary: null
  belongs_to: FileExec
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L48)

    ``` pony
    new val create()
    : FileExec val^
    ```

    #### Returns

    - [FileExec](index) val^

    ## Public Functions
- name: FileExec.eq()
  id: files-fileexec#eq
  summary: null
  belongs_to: FileExec
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)

    ``` pony
    fun box eq(
      that: FileExec val)
    : Bool val
    ```

    #### Parameters

    - that: [FileExec](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileExec.ne()
  id: files-fileexec#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileExec
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)\n\n``` pony\nfun box ne(\n  that: FileExec val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExec](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileExec](https://stdlib.ponylang.io/files-FileExec)"
- name: FileExec.value()
  id: files-fileexec#value
  summary: null
  belongs_to: FileExec
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L49)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileExists
  id: files-fileexists
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileExists\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L28)\n\n``` pony\nprimitive val FileExists\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L28)\n\n``` pony\nnew val create()\n: FileExists val^\n```\n\n#### Returns\n\n- [FileExists](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L29)\n\n``` pony\nfun box eq(\n  that: FileExists val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExists](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L29)\n\n``` pony\nfun box ne(\n  that: FileExists val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExists](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileExists](https://stdlib.ponylang.io/files-FileExists)"
- name: FileExists.create()
  id: files-fileexists#create
  summary: null
  belongs_to: FileExists
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L28)

    ``` pony
    new val create()
    : FileExists val^
    ```

    #### Returns

    - [FileExists](index) val^

    ## Public Functions
- name: FileExists.eq()
  id: files-fileexists#eq
  summary: null
  belongs_to: FileExists
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L29)

    ``` pony
    fun box eq(
      that: FileExists val)
    : Bool val
    ```

    #### Parameters

    - that: [FileExists](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FileExists.ne()
  id: files-fileexists#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileExists
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L29)\n\n``` pony\nfun box ne(\n  that: FileExists val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileExists](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileExists](https://stdlib.ponylang.io/files-FileExists)"
- name: FileInfo
  id: files-fileinfo
  summary: This contains file system metadata for a path
  description: "# FileInfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L1)\n\nThis contains file system metadata for a path.\n\nA symlink will report information about itself, other than the size which will be the size of the target. A broken symlink will report as much as it can and will set the broken flag.\n\n``` pony\nclass val FileInfo\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L86)\n\nThis will raise an error if the FileStat capability isn't available or the path doesn't exist.\n\n``` pony\nnew val create(\n  from: FilePath val)\n: FileInfo val^ ?\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- [FileInfo](index) val^ ?\n\n## Public fields\n\n### let filepath: [FilePath](files-filepath) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L9)\n\n### let mode: [FileMode](files-filemode) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L11)\n\nUNIX-style file mode.\n\n### let hard_links: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L14)\n\nNumber of hardlinks to this `filepath`.\n\n### let device: [U64](builtin-u64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L17)\n\nOS id of the device containing this `filepath`. Device IDs consist of a major and minor device id, denoting the type of device and the instance of this type on the system.\n\n### let inode: [U64](builtin-u64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L24)\n\nUNIX specific INODE number of `filepath`. Is 0 on Windows.\n\n### let uid: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L27)\n\nUNIX-style user ID of the owner of `filepath`.\n\n### let gid: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L30)\n\nUNIX-style user ID of the owning group of `filepath`.\n\n### let size: [USize](builtin-usize) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L33)\n\nTotal size of `filepath` in bytes.\n\nIn case of a symlink this is the size of the target, not the symlink itself.\n\n### let access_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L40)\n\nTime of last access as a tuple of seconds and nanoseconds since the epoch:\n\n``` pony\n(let a_secs: I64, let a_nanos: I64) = file_info.access_time\n```\n\n### let modified_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L49)\n\nTime of last modification as tuple of seconds and nanoseconds since the epoch:\n\n``` pony\n(let m_secs: I64, let m_nanos: I64) = file_info.modified_time\n```\n\n### let change_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L58)\n\nTime of the last change either the attributes (number of links, owner, group, file mode, ...) or the content of `filepath` as a tuple of seconds and nanoseconds since the epoch:\n\n``` pony\n(let c_secs: I64, let c_nanos: I64) = file_info.change_time\n```\n\nOn Windows this will be the file creation time.\n\n### let file: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L71)\n\n`true` if `filepath` points to an a regular file.\n\n### let directory: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L74)\n\n`true` if `filepath` points to a directory.\n\n### let pipe: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L77)\n\n`true` if `filepath` points to a named pipe.\n\n### let symlink: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L80)\n\n`true` if `filepath` points to a symbolic link.\n\n### let broken: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L83)\n\n`true` if `filepath` points to a broken symlink.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileInfo](https://stdlib.ponylang.io/files-FileInfo)"
- name: FileInfo.access_time
  id: files-fileinfo#let-access_time-i64-val-i64-val
  summary: null
  belongs_to: FileInfo
  description: |-
    ### let access_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L40)

    Time of last access as a tuple of seconds and nanoseconds since the epoch:

    ``` pony
    (let a_secs: I64, let a_nanos: I64) = file_info.access_time
    ```
- name: FileInfo.broken
  id: files-fileinfo#let-broken-bool-val
  summary: true if filepath points to a broken symlink
  belongs_to: FileInfo
  description: "### let broken: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_info/#L83)\n\n`true` if `filepath` points to a broken symlink.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileInfo](https://stdlib.ponylang.io/files-FileInfo)"
- name: FileInfo.change_time
  id: files-fileinfo#let-change_time-i64-val-i64-val
  summary: On Windows this will be the file creation time
  belongs_to: FileInfo
  description: |-
    ### let change_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L58)

    Time of the last change either the attributes (number of links, owner, group, file mode, ...) or the content of `filepath` as a tuple of seconds and nanoseconds since the epoch:

    ``` pony
    (let c_secs: I64, let c_nanos: I64) = file_info.change_time
    ```

    On Windows this will be the file creation time.
- name: FileInfo.create()
  id: files-fileinfo#create
  summary: This will raise an error if the FileStat capability isn't available or the path doesn't exist
  belongs_to: FileInfo
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L86)

    This will raise an error if the FileStat capability isn't available or the path doesn't exist.

    ``` pony
    new val create(
      from: FilePath val)
    : FileInfo val^ ?
    ```

    #### Parameters

    - from: [FilePath](files-filepath) val

    #### Returns

    - [FileInfo](index) val^ ?

    ## Public fields
- name: FileInfo.device
  id: files-fileinfo#let-device-u64-val
  summary: OS id of the device containing this filepath
  belongs_to: FileInfo
  description: |-
    ### let device: [U64](builtin-u64) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L17)

    OS id of the device containing this `filepath`. Device IDs consist of a major and minor device id, denoting the type of device and the instance of this type on the system.
- name: FileInfo.directory
  id: files-fileinfo#let-directory-bool-val
  summary: true if filepath points to a directory
  belongs_to: FileInfo
  description: |-
    ### let directory: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L74)

    `true` if `filepath` points to a directory.
- name: FileInfo.file
  id: files-fileinfo#let-file-bool-val
  summary: true if filepath points to an a regular file
  belongs_to: FileInfo
  description: |-
    ### let file: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L71)

    `true` if `filepath` points to an a regular file.
- name: FileInfo.filepath
  id: files-fileinfo#let-filepath-filepath-val
  summary: null
  belongs_to: FileInfo
  description: |-
    ### let filepath: [FilePath](files-filepath) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L9)
- name: FileInfo.gid
  id: files-fileinfo#let-gid-u32-val
  summary: UNIX-style user ID of the owning group of filepath
  belongs_to: FileInfo
  description: |-
    ### let gid: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L30)

    UNIX-style user ID of the owning group of `filepath`.
- name: FileInfo.hard_links
  id: files-fileinfo#let-hard_links-u32-val
  summary: Number of hardlinks to this filepath
  belongs_to: FileInfo
  description: |-
    ### let hard_links: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L14)

    Number of hardlinks to this `filepath`.
- name: FileInfo.inode
  id: files-fileinfo#let-inode-u64-val
  summary: UNIX specific INODE number of filepath
  belongs_to: FileInfo
  description: |-
    ### let inode: [U64](builtin-u64) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L24)

    UNIX specific INODE number of `filepath`. Is 0 on Windows.
- name: FileInfo.mode
  id: files-fileinfo#let-mode-filemode-val
  summary: UNIX-style file mode
  belongs_to: FileInfo
  description: |-
    ### let mode: [FileMode](files-filemode) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L11)

    UNIX-style file mode.
- name: FileInfo.modified_time
  id: files-fileinfo#let-modified_time-i64-val-i64-val
  summary: null
  belongs_to: FileInfo
  description: |-
    ### let modified_time: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L49)

    Time of last modification as tuple of seconds and nanoseconds since the epoch:

    ``` pony
    (let m_secs: I64, let m_nanos: I64) = file_info.modified_time
    ```
- name: FileInfo.pipe
  id: files-fileinfo#let-pipe-bool-val
  summary: true if filepath points to a named pipe
  belongs_to: FileInfo
  description: |-
    ### let pipe: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L77)

    `true` if `filepath` points to a named pipe.
- name: FileInfo.size
  id: files-fileinfo#let-size-usize-val
  summary: Total size of filepath in bytes
  belongs_to: FileInfo
  description: |-
    ### let size: [USize](builtin-usize) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L33)

    Total size of `filepath` in bytes.

    In case of a symlink this is the size of the target, not the symlink itself.
- name: FileInfo.symlink
  id: files-fileinfo#let-symlink-bool-val
  summary: true if filepath points to a symbolic link
  belongs_to: FileInfo
  description: |-
    ### let symlink: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L80)

    `true` if `filepath` points to a symbolic link.
- name: FileInfo.uid
  id: files-fileinfo#let-uid-u32-val
  summary: UNIX-style user ID of the owner of filepath
  belongs_to: FileInfo
  description: |-
    ### let uid: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_info/#L27)

    UNIX-style user ID of the owner of `filepath`.
- name: FileLines
  id: files-filelines
  summary: Iterate over the lines in a file
  description: "# FileLines\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_lines/#L3)\n\nIterate over the lines in a file.\n\nReturns lines without trailing line breaks. Advances the file cursor to the end of each line returned from `next`.\n\nThis class buffers the file contents to accumulate full lines. If the file does not contain linebreaks, the whole file content is read and buffered, which might exceed memory resources. Take care.\n\n``` pony\nclass ref FileLines is\n  Iterator[String iso^] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[[String](builtin-string) iso^\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_lines/#L24)\n\nCreate a FileLines instance on a given file.\n\nThis instance returns lines from the position of the given `file` at the time this constructor is called. Later manipulation of the file position is not accounted for. As a result iterating with this class will always return the full file content without gaps or repeated lines.\n\n`min_read_size` determines the minimum amount of bytes to read from the file in one go. This class keeps track of the line lengths in the current file and uses the length of the last line as amount of bytes to read next, but it will never read less than `min_read_size`.\n\n``` pony\nnew ref create(\n  file: File ref,\n  min_read_size: USize val = 256)\n: FileLines ref^\n```\n\n#### Parameters\n\n- file: [File](files-file) ref\n- min_read_size: [USize](builtin-usize) val = 256\n\n#### Returns\n\n- [FileLines](index) ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_lines/#L45)\n\n``` pony\nfun ref has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_lines/#L48)\n\nReturns the next line in the file.\n\n``` pony\nfun ref next()\n: String iso^ ?\n```\n\n#### Returns\n\n- [String](builtin-string) iso^ ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLines](https://stdlib.ponylang.io/files-FileLines)"
- name: FileLines.create()
  id: files-filelines#create
  summary: Create a FileLines instance on a given file
  belongs_to: FileLines
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_lines/#L24)

    Create a FileLines instance on a given file.

    This instance returns lines from the position of the given `file` at the time this constructor is called. Later manipulation of the file position is not accounted for. As a result iterating with this class will always return the full file content without gaps or repeated lines.

    `min_read_size` determines the minimum amount of bytes to read from the file in one go. This class keeps track of the line lengths in the current file and uses the length of the last line as amount of bytes to read next, but it will never read less than `min_read_size`.

    ``` pony
    new ref create(
      file: File ref,
      min_read_size: USize val = 256)
    : FileLines ref^
    ```

    #### Parameters

    - file: [File](files-file) ref
    - min_read_size: [USize](builtin-usize) val = 256

    #### Returns

    - [FileLines](index) ref^

    ## Public Functions
- name: FileLines.has_next()
  id: files-filelines#has_next
  summary: null
  belongs_to: FileLines
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_lines/#L45)

    ``` pony
    fun ref has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: FileLines.next()
  id: files-filelines#next
  summary: Returns the next line in the file
  belongs_to: FileLines
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_lines/#L48)\n\nReturns the next line in the file.\n\n``` pony\nfun ref next()\n: String iso^ ?\n```\n\n#### Returns\n\n- [String](builtin-string) iso^ ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLines](https://stdlib.ponylang.io/files-FileLines)"
- name: FileLink
  id: files-filelink
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileLink\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L12)\n\n``` pony\nprimitive val FileLink\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L12)\n\n``` pony\nnew val create()\n: FileLink val^\n```\n\n#### Returns\n\n- [FileLink](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)\n\n``` pony\nfun box eq(\n  that: FileLink val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLink](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)\n\n``` pony\nfun box ne(\n  that: FileLink val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLink](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLink](https://stdlib.ponylang.io/files-FileLink)"
- name: FileLink.create()
  id: files-filelink#create
  summary: null
  belongs_to: FileLink
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L12)

    ``` pony
    new val create()
    : FileLink val^
    ```

    #### Returns

    - [FileLink](index) val^

    ## Public Functions
- name: FileLink.eq()
  id: files-filelink#eq
  summary: null
  belongs_to: FileLink
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)

    ``` pony
    fun box eq(
      that: FileLink val)
    : Bool val
    ```

    #### Parameters

    - that: [FileLink](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileLink.ne()
  id: files-filelink#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileLink
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)\n\n``` pony\nfun box ne(\n  that: FileLink val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLink](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLink](https://stdlib.ponylang.io/files-FileLink)"
- name: FileLink.value()
  id: files-filelink#value
  summary: null
  belongs_to: FileLink
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L13)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileLookup
  id: files-filelookup
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileLookup\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L15)\n\n``` pony\nprimitive val FileLookup\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L15)\n\n``` pony\nnew val create()\n: FileLookup val^\n```\n\n#### Returns\n\n- [FileLookup](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)\n\n``` pony\nfun box eq(\n  that: FileLookup val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLookup](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)\n\n``` pony\nfun box ne(\n  that: FileLookup val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLookup](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLookup](https://stdlib.ponylang.io/files-FileLookup)"
- name: FileLookup.create()
  id: files-filelookup#create
  summary: null
  belongs_to: FileLookup
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L15)

    ``` pony
    new val create()
    : FileLookup val^
    ```

    #### Returns

    - [FileLookup](index) val^

    ## Public Functions
- name: FileLookup.eq()
  id: files-filelookup#eq
  summary: null
  belongs_to: FileLookup
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)

    ``` pony
    fun box eq(
      that: FileLookup val)
    : Bool val
    ```

    #### Parameters

    - that: [FileLookup](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileLookup.ne()
  id: files-filelookup#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileLookup
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)\n\n``` pony\nfun box ne(\n  that: FileLookup val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileLookup](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileLookup](https://stdlib.ponylang.io/files-FileLookup)"
- name: FileLookup.value()
  id: files-filelookup#value
  summary: null
  belongs_to: FileLookup
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L16)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileMkdir
  id: files-filemkdir
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileMkdir\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L18)\n\n``` pony\nprimitive val FileMkdir\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L18)\n\n``` pony\nnew val create()\n: FileMkdir val^\n```\n\n#### Returns\n\n- [FileMkdir](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)\n\n``` pony\nfun box eq(\n  that: FileMkdir val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileMkdir](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)\n\n``` pony\nfun box ne(\n  that: FileMkdir val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileMkdir](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileMkdir](https://stdlib.ponylang.io/files-FileMkdir)"
- name: FileMkdir.create()
  id: files-filemkdir#create
  summary: null
  belongs_to: FileMkdir
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L18)

    ``` pony
    new val create()
    : FileMkdir val^
    ```

    #### Returns

    - [FileMkdir](index) val^

    ## Public Functions
- name: FileMkdir.eq()
  id: files-filemkdir#eq
  summary: null
  belongs_to: FileMkdir
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)

    ``` pony
    fun box eq(
      that: FileMkdir val)
    : Bool val
    ```

    #### Parameters

    - that: [FileMkdir](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileMkdir.ne()
  id: files-filemkdir#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileMkdir
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)\n\n``` pony\nfun box ne(\n  that: FileMkdir val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileMkdir](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileMkdir](https://stdlib.ponylang.io/files-FileMkdir)"
- name: FileMkdir.value()
  id: files-filemkdir#value
  summary: null
  belongs_to: FileMkdir
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L19)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileMode
  id: files-filemode
  summary: This stores a UNIX-style mode broken out into a Bool for each bit
  description: "# FileMode\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L1)\n\nThis stores a UNIX-style mode broken out into a Bool for each bit. For other operating systems, the mapping will be approximate. For example, on Windows, if the file is readable all the read Bools will be set, and if the file is writeable, all the write Bools will be set.\n\nThe default mode is read/write for the owner, read-only for everyone else.\n\n``` pony\nclass ref FileMode\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L1)\n\n``` pony\nnew iso create()\n: FileMode iso^\n```\n\n#### Returns\n\n- [FileMode](index) iso^\n\n## Public fields\n\n### var setuid: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L10)\n\n`true` if the SETUID bit is set.\n\n### var setgid: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L13)\n\n`true` if the SETGID bit is set.\n\n### var sticky: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L16)\n\n`true` if the sticky bit is set.\n\n### var owner_read: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L19)\n\n`true` if the owning user can read the file.\n\n### var owner_write: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L22)\n\n`true` if the owning user can write to the file.\n\n### var owner_exec: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L25)\n\n`true` if the owning user can execute the file.\n\n### var group_read: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L28)\n\n`true` if members of the owning group can read the file.\n\n### var group_write: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L31)\n\n`true` if members of the owning group can write to the file.\n\n### var group_exec: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L34)\n\n`true` if members of the owning group can execute the file.\n\n### var any_read: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L37)\n\n`true` if every user can read the file.\n\n### var any_write: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L40)\n\n`true` if every user can write to the file.\n\n### var any_exec: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L43)\n\n\\`true if every user can execute the file.\n\n## Public Functions\n\n### exec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L46)\n\nSet the executable flag for everyone.\n\n``` pony\nfun ref exec()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### shared\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L54)\n\nSet the write flag for everyone to the same as owner_write.\n\n``` pony\nfun ref shared()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L61)\n\nClear all of the any-user flags.\n\n``` pony\nfun ref group()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### private\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L69)\n\nClear all of the group and any-user flags.\n\n``` pony\nfun ref private()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileMode](https://stdlib.ponylang.io/files-FileMode)"
- name: FileMode.create()
  id: files-filemode#create
  summary: null
  belongs_to: FileMode
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L1)

    ``` pony
    new iso create()
    : FileMode iso^
    ```

    #### Returns

    - [FileMode](index) iso^

    ## Public fields
- name: FileMode.exec()
  id: files-filemode#exec
  summary: Set the executable flag for everyone
  belongs_to: FileMode
  description: |-
    ### exec

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L46)

    Set the executable flag for everyone.

    ``` pony
    fun ref exec()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val
- name: FileMode.group()
  id: files-filemode#group
  summary: Clear all of the any-user flags
  belongs_to: FileMode
  description: |-
    ### group

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L61)

    Clear all of the any-user flags.

    ``` pony
    fun ref group()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: FileMode.private()
  id: files-filemode#private
  summary: Clear all of the group and any-user flags
  belongs_to: FileMode
  description: "### private\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_mode/#L69)\n\nClear all of the group and any-user flags.\n\n``` pony\nfun ref private()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileMode](https://stdlib.ponylang.io/files-FileMode)"
- name: FileMode.shared()
  id: files-filemode#shared
  summary: Set the write flag for everyone to the same as owner_write
  belongs_to: FileMode
  description: |-
    ### shared

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L54)

    Set the write flag for everyone to the same as owner_write.

    ``` pony
    fun ref shared()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: FileMode.var()
  id: files-filemode#var-setuid-bool-val
  summary: true if the SETUID bit is set
  belongs_to: FileMode
  description: |-
    ### var setuid: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L10)

    `true` if the SETUID bit is set.
- name: FileMode.var()
  id: files-filemode#var-setgid-bool-val
  summary: true if the SETGID bit is set
  belongs_to: FileMode
  description: |-
    ### var setgid: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L13)

    `true` if the SETGID bit is set.
- name: FileMode.var()
  id: files-filemode#var-sticky-bool-val
  summary: true if the sticky bit is set
  belongs_to: FileMode
  description: |-
    ### var sticky: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L16)

    `true` if the sticky bit is set.
- name: FileMode.var()
  id: files-filemode#var-owner_read-bool-val
  summary: true if the owning user can read the file
  belongs_to: FileMode
  description: |-
    ### var owner_read: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L19)

    `true` if the owning user can read the file.
- name: FileMode.var()
  id: files-filemode#var-owner_write-bool-val
  summary: true if the owning user can write to the file
  belongs_to: FileMode
  description: |-
    ### var owner_write: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L22)

    `true` if the owning user can write to the file.
- name: FileMode.var()
  id: files-filemode#var-owner_exec-bool-val
  summary: true if the owning user can execute the file
  belongs_to: FileMode
  description: |-
    ### var owner_exec: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L25)

    `true` if the owning user can execute the file.
- name: FileMode.var()
  id: files-filemode#var-group_read-bool-val
  summary: true if members of the owning group can read the file
  belongs_to: FileMode
  description: |-
    ### var group_read: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L28)

    `true` if members of the owning group can read the file.
- name: FileMode.var()
  id: files-filemode#var-group_write-bool-val
  summary: true if members of the owning group can write to the file
  belongs_to: FileMode
  description: |-
    ### var group_write: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L31)

    `true` if members of the owning group can write to the file.
- name: FileMode.var()
  id: files-filemode#var-group_exec-bool-val
  summary: true if members of the owning group can execute the file
  belongs_to: FileMode
  description: |-
    ### var group_exec: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L34)

    `true` if members of the owning group can execute the file.
- name: FileMode.var()
  id: files-filemode#var-any_read-bool-val
  summary: true if every user can read the file
  belongs_to: FileMode
  description: |-
    ### var any_read: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L37)

    `true` if every user can read the file.
- name: FileMode.var()
  id: files-filemode#var-any_write-bool-val
  summary: true if every user can write to the file
  belongs_to: FileMode
  description: |-
    ### var any_write: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L40)

    `true` if every user can write to the file.
- name: FileMode.var()
  id: files-filemode#var-any_exec-bool-val
  summary: '`true if every user can execute the file'
  belongs_to: FileMode
  description: |-
    ### var any_exec: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_mode/#L43)

    \`true if every user can execute the file.

    ## Public Functions
- name: FileOK
  id: files-fileok
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileOK\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L24)\n\n``` pony\nprimitive val FileOK\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L24)\n\n``` pony\nnew val create()\n: FileOK val^\n```\n\n#### Returns\n\n- [FileOK](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L25)\n\n``` pony\nfun box eq(\n  that: FileOK val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileOK](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L25)\n\n``` pony\nfun box ne(\n  that: FileOK val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileOK](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileOK](https://stdlib.ponylang.io/files-FileOK)"
- name: FileOK.create()
  id: files-fileok#create
  summary: null
  belongs_to: FileOK
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L24)

    ``` pony
    new val create()
    : FileOK val^
    ```

    #### Returns

    - [FileOK](index) val^

    ## Public Functions
- name: FileOK.eq()
  id: files-fileok#eq
  summary: null
  belongs_to: FileOK
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L25)

    ``` pony
    fun box eq(
      that: FileOK val)
    : Bool val
    ```

    #### Parameters

    - that: [FileOK](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FileOK.ne()
  id: files-fileok#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileOK
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L25)\n\n``` pony\nfun box ne(\n  that: FileOK val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileOK](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileOK](https://stdlib.ponylang.io/files-FileOK)"
- name: FilePath
  id: files-filepath
  summary: A FilePath represents a capability to access a path
  description: "# FilePath\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L9)\n\nA FilePath represents a capability to access a path. The path will be represented as an absolute path and a set of capabilities for operations on that path.\n\n``` pony\nclass val FilePath\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L24)\n\nCreate a new path. The caller must either provide the root capability or an existing FilePath.\n\nIf the root capability is provided, path' will be relative to the program's working directory. Otherwise, it will be relative to the existing FilePath, and the existing FilePath must be a prefix of the resulting path.\n\nThe resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the parent.\n\n``` pony\nnew val create(\n  base: (FilePath val | AmbientAuth val),\n  path': String val,\n  caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)\n: FilePath val^ ?\n```\n\n#### Parameters\n\n- base: ([FilePath](index) val \\| [AmbientAuth](builtin-ambientauth) val)\n- path': [String](builtin-string) val\n- caps': [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] val = recover\n\n#### Returns\n\n- [FilePath](index) val^ ?\n\n### mkdtemp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L60)\n\nCreate a temporary directory and returns a path to it. The directory's name will begin with `prefix`. The caller must either provide the root capability or an existing FilePath.\n\nIf AmbientAuth is provided, pattern will be relative to the program's working directory. Otherwise, it will be relative to the existing FilePath, and the existing FilePath must be a prefix of the resulting path.\n\nThe resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the base.\n\n``` pony\nnew val mkdtemp(\n  base: (FilePath val | AmbientAuth val),\n  prefix: String val = \"\",\n  caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)\n: FilePath val^ ?\n```\n\n#### Parameters\n\n- base: ([FilePath](index) val \\| [AmbientAuth](builtin-ambientauth) val)\n- prefix: [String](builtin-string) val = \"\"\n- caps': [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] val = recover\n\n#### Returns\n\n- [FilePath](index) val^ ?\n\n## Public fields\n\n### let path: [String](builtin-string) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L15)\n\nAbsolute filesystem path.\n\n### let caps: [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] ref\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L19)\n\nSet of capabilities for operations on `path`.\n\n## Public Functions\n\n### join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L102)\n\nReturn a new path relative to this one.\n\n``` pony\nfun val join(\n  path': String val,\n  caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)\n: FilePath val ?\n```\n\n#### Parameters\n\n- path': [String](builtin-string) val\n- caps': [Flags](collections-flags)\\[([FileCreate](files-filecreate) val \\| [FileChmod](files-filechmod) val \\| [FileChown](files-filechown) val \\| [FileLink](files-filelink) val \\| [FileLookup](files-filelookup) val \\| [FileMkdir](files-filemkdir) val \\| [FileRead](files-fileread) val \\| [FileRemove](files-fileremove) val \\| [FileRename](files-filerename) val \\| [FileSeek](files-fileseek) val \\| [FileStat](files-filestat) val \\| [FileSync](files-filesync) val \\| [FileTime](files-filetime) val \\| [FileTruncate](files-filetruncate) val \\| [FileWrite](files-filewrite) val \\| [FileExec](files-fileexec) val), [U32](builtin-u32) val\\] val = recover\n\n#### Returns\n\n- [FilePath](index) val ?\n\n### walk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L112)\n\nWalks a directory structure starting at this.\n\n`handler(dir_path, dir_entries)` will be called for each directory starting with this one. The handler can control which subdirectories are expanded by removing them from the `dir_entries` list.\n\n``` pony\nfun val walk(\n  handler: WalkHandler ref,\n  follow_links: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- handler: [WalkHandler](files-walkhandler) ref\n- follow_links: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### canonical\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L136)\n\nReturn the equivalent canonical absolute path. Raise an error if there isn't one.\n\n``` pony\nfun val canonical()\n: FilePath val ?\n```\n\n#### Returns\n\n- [FilePath](index) val ?\n\n### exists\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L143)\n\nReturns true if the path exists. Returns false for a broken symlink.\n\n``` pony\nfun val exists()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### mkdir\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L153)\n\nCreates the directory. Will recursively create each element. Returns true if the directory exists when we're done, false if it does not. If we do not have the FileStat permission, this will return false even if the directory does exist.\n\n``` pony\nfun val mkdir(\n  must_create: Bool val = false)\n: Bool val\n```\n\n#### Parameters\n\n- must_create: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L200)\n\nRemove the file or directory. The directory contents will be removed as well, recursively. Symlinks will be removed but not traversed.\n\n``` pony\nfun val remove()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### rename\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L242)\n\nRename a file or directory.\n\n``` pony\nfun box rename(\n  new_path: FilePath val)\n: Bool val\n```\n\n#### Parameters\n\n- new_path: [FilePath](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### symlink\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L252)\n\nCreate a symlink to a file or directory.\n\nNote that on Windows a program must be running with elevated priviledges to be able to create symlinks.\n\n``` pony\nfun val symlink(\n  link_name: FilePath val)\n: Bool val\n```\n\n#### Parameters\n\n- link_name: [FilePath](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### chmod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L325)\n\nSet the FileMode for a path.\n\n``` pony\nfun box chmod(\n  mode: FileMode box)\n: Bool val\n```\n\n#### Parameters\n\n- mode: [FileMode](files-filemode) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### chown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L341)\n\nSet the owner and group for a path. Does nothing on Windows.\n\n``` pony\nfun box chown(\n  uid: U32 val,\n  gid: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- uid: [U32](builtin-u32) val\n- gid: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### touch\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L355)\n\nSet the last access and modification times of a path to now.\n\n``` pony\nfun box touch()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### set_time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L361)\n\nSet the last access and modification times of a path to the given values.\n\n``` pony\nfun box set_time(\n  atime: (I64 val , I64 val),\n  mtime: (I64 val , I64 val))\n: Bool val\n```\n\n#### Parameters\n\n- atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FilePath](https://stdlib.ponylang.io/files-FilePath)"
- name: FilePath.canonical()
  id: files-filepath#canonical
  summary: Return the equivalent canonical absolute path
  belongs_to: FilePath
  description: |-
    ### canonical

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L136)

    Return the equivalent canonical absolute path. Raise an error if there isn't one.

    ``` pony
    fun val canonical()
    : FilePath val ?
    ```

    #### Returns

    - [FilePath](index) val ?

    &nbsp;
- name: FilePath.caps
  id: files-filepath#let-caps-flagsfilecreate-val-filechmod-val-filechown-val-filelink-val-filelookup-val-filemkdir-val-fileread-val-fileremove-val-filerename-val-fileseek-val-filestat-val-filesync-val-filetime-val-filetruncate-val-filewrite-val-fileexec-val-u32-val-ref
  summary: Set of capabilities for operations on path
  belongs_to: FilePath
  description: |-
    ### let caps: [Flags](collections-flags)\[([FileCreate](files-filecreate) val \| [FileChmod](files-filechmod) val \| [FileChown](files-filechown) val \| [FileLink](files-filelink) val \| [FileLookup](files-filelookup) val \| [FileMkdir](files-filemkdir) val \| [FileRead](files-fileread) val \| [FileRemove](files-fileremove) val \| [FileRename](files-filerename) val \| [FileSeek](files-fileseek) val \| [FileStat](files-filestat) val \| [FileSync](files-filesync) val \| [FileTime](files-filetime) val \| [FileTruncate](files-filetruncate) val \| [FileWrite](files-filewrite) val \| [FileExec](files-fileexec) val), [U32](builtin-u32) val\] ref

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L19)

    Set of capabilities for operations on `path`.

    ## Public Functions
- name: FilePath.chmod()
  id: files-filepath#chmod
  summary: Set the FileMode for a path
  belongs_to: FilePath
  description: |-
    ### chmod

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L325)

    Set the FileMode for a path.

    ``` pony
    fun box chmod(
      mode: FileMode box)
    : Bool val
    ```

    #### Parameters

    - mode: [FileMode](files-filemode) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.chown()
  id: files-filepath#chown
  summary: Set the owner and group for a path
  belongs_to: FilePath
  description: |-
    ### chown

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L341)

    Set the owner and group for a path. Does nothing on Windows.

    ``` pony
    fun box chown(
      uid: U32 val,
      gid: U32 val)
    : Bool val
    ```

    #### Parameters

    - uid: [U32](builtin-u32) val
    - gid: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.create()
  id: files-filepath#create
  summary: Create a new path
  belongs_to: FilePath
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L24)

    Create a new path. The caller must either provide the root capability or an existing FilePath.

    If the root capability is provided, path' will be relative to the program's working directory. Otherwise, it will be relative to the existing FilePath, and the existing FilePath must be a prefix of the resulting path.

    The resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the parent.

    ``` pony
    new val create(
      base: (FilePath val | AmbientAuth val),
      path': String val,
      caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)
    : FilePath val^ ?
    ```

    #### Parameters

    - base: ([FilePath](index) val \| [AmbientAuth](builtin-ambientauth) val)
    - path': [String](builtin-string) val
    - caps': [Flags](collections-flags)\[([FileCreate](files-filecreate) val \| [FileChmod](files-filechmod) val \| [FileChown](files-filechown) val \| [FileLink](files-filelink) val \| [FileLookup](files-filelookup) val \| [FileMkdir](files-filemkdir) val \| [FileRead](files-fileread) val \| [FileRemove](files-fileremove) val \| [FileRename](files-filerename) val \| [FileSeek](files-fileseek) val \| [FileStat](files-filestat) val \| [FileSync](files-filesync) val \| [FileTime](files-filetime) val \| [FileTruncate](files-filetruncate) val \| [FileWrite](files-filewrite) val \| [FileExec](files-fileexec) val), [U32](builtin-u32) val\] val = recover

    #### Returns

    - [FilePath](index) val^ ?
- name: FilePath.exists()
  id: files-filepath#exists
  summary: Returns true if the path exists
  belongs_to: FilePath
  description: |-
    ### exists

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L143)

    Returns true if the path exists. Returns false for a broken symlink.

    ``` pony
    fun val exists()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.join()
  id: files-filepath#join
  summary: Return a new path relative to this one
  belongs_to: FilePath
  description: |-
    ### join

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L102)

    Return a new path relative to this one.

    ``` pony
    fun val join(
      path': String val,
      caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)
    : FilePath val ?
    ```

    #### Parameters

    - path': [String](builtin-string) val
    - caps': [Flags](collections-flags)\[([FileCreate](files-filecreate) val \| [FileChmod](files-filechmod) val \| [FileChown](files-filechown) val \| [FileLink](files-filelink) val \| [FileLookup](files-filelookup) val \| [FileMkdir](files-filemkdir) val \| [FileRead](files-fileread) val \| [FileRemove](files-fileremove) val \| [FileRename](files-filerename) val \| [FileSeek](files-fileseek) val \| [FileStat](files-filestat) val \| [FileSync](files-filesync) val \| [FileTime](files-filetime) val \| [FileTruncate](files-filetruncate) val \| [FileWrite](files-filewrite) val \| [FileExec](files-fileexec) val), [U32](builtin-u32) val\] val = recover

    #### Returns

    - [FilePath](index) val ?

    &nbsp;
- name: FilePath.mkdir()
  id: files-filepath#mkdir
  summary: Creates the directory
  belongs_to: FilePath
  description: |-
    ### mkdir

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L153)

    Creates the directory. Will recursively create each element. Returns true if the directory exists when we're done, false if it does not. If we do not have the FileStat permission, this will return false even if the directory does exist.

    ``` pony
    fun val mkdir(
      must_create: Bool val = false)
    : Bool val
    ```

    #### Parameters

    - must_create: [Bool](builtin-bool) val = false

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.mkdtemp()
  id: files-filepath#mkdtemp
  summary: Create a temporary directory and returns a path to it
  belongs_to: FilePath
  description: |-
    ### mkdtemp

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L60)

    Create a temporary directory and returns a path to it. The directory's name will begin with `prefix`. The caller must either provide the root capability or an existing FilePath.

    If AmbientAuth is provided, pattern will be relative to the program's working directory. Otherwise, it will be relative to the existing FilePath, and the existing FilePath must be a prefix of the resulting path.

    The resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the base.

    ``` pony
    new val mkdtemp(
      base: (FilePath val | AmbientAuth val),
      prefix: String val = "",
      caps': Flags[(FileCreate val | FileChmod val | FileChown val | FileLink val | FileLookup val | FileMkdir val | FileRead val | FileRemove val | FileRename val | FileSeek val | FileStat val | FileSync val | FileTime val | FileTruncate val | FileWrite val | FileExec val), U32 val] val = recover)
    : FilePath val^ ?
    ```

    #### Parameters

    - base: ([FilePath](index) val \| [AmbientAuth](builtin-ambientauth) val)
    - prefix: [String](builtin-string) val = ""
    - caps': [Flags](collections-flags)\[([FileCreate](files-filecreate) val \| [FileChmod](files-filechmod) val \| [FileChown](files-filechown) val \| [FileLink](files-filelink) val \| [FileLookup](files-filelookup) val \| [FileMkdir](files-filemkdir) val \| [FileRead](files-fileread) val \| [FileRemove](files-fileremove) val \| [FileRename](files-filerename) val \| [FileSeek](files-fileseek) val \| [FileStat](files-filestat) val \| [FileSync](files-filesync) val \| [FileTime](files-filetime) val \| [FileTruncate](files-filetruncate) val \| [FileWrite](files-filewrite) val \| [FileExec](files-fileexec) val), [U32](builtin-u32) val\] val = recover

    #### Returns

    - [FilePath](index) val^ ?

    ## Public fields
- name: FilePath.path
  id: files-filepath#let-path-string-val
  summary: Absolute filesystem path
  belongs_to: FilePath
  description: |-
    ### let path: [String](builtin-string) val

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L15)

    Absolute filesystem path.
- name: FilePath.remove()
  id: files-filepath#remove
  summary: Remove the file or directory
  belongs_to: FilePath
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L200)

    Remove the file or directory. The directory contents will be removed as well, recursively. Symlinks will be removed but not traversed.

    ``` pony
    fun val remove()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.rename()
  id: files-filepath#rename
  summary: Rename a file or directory
  belongs_to: FilePath
  description: |-
    ### rename

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L242)

    Rename a file or directory.

    ``` pony
    fun box rename(
      new_path: FilePath val)
    : Bool val
    ```

    #### Parameters

    - new_path: [FilePath](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.set_time()
  id: files-filepath#set_time
  summary: Set the last access and modification times of a path to the given values
  belongs_to: FilePath
  description: "### set_time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L361)\n\nSet the last access and modification times of a path to the given values.\n\n``` pony\nfun box set_time(\n  atime: (I64 val , I64 val),\n  mtime: (I64 val , I64 val))\n: Bool val\n```\n\n#### Parameters\n\n- atime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- mtime: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FilePath](https://stdlib.ponylang.io/files-FilePath)"
- name: FilePath.symlink()
  id: files-filepath#symlink
  summary: Create a symlink to a file or directory
  belongs_to: FilePath
  description: |-
    ### symlink

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L252)

    Create a symlink to a file or directory.

    Note that on Windows a program must be running with elevated priviledges to be able to create symlinks.

    ``` pony
    fun val symlink(
      link_name: FilePath val)
    : Bool val
    ```

    #### Parameters

    - link_name: [FilePath](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.touch()
  id: files-filepath#touch
  summary: Set the last access and modification times of a path to now
  belongs_to: FilePath
  description: |-
    ### touch

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L355)

    Set the last access and modification times of a path to now.

    ``` pony
    fun box touch()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FilePath.walk()
  id: files-filepath#walk
  summary: Walks a directory structure starting at this
  belongs_to: FilePath
  description: |-
    ### walk

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_path/#L112)

    Walks a directory structure starting at this.

    `handler(dir_path, dir_entries)` will be called for each directory starting with this one. The handler can control which subdirectories are expanded by removing them from the `dir_entries` list.

    ``` pony
    fun val walk(
      handler: WalkHandler ref,
      follow_links: Bool val = false)
    : None val
    ```

    #### Parameters

    - handler: [WalkHandler](files-walkhandler) ref
    - follow_links: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: FilePermissionDenied
  id: files-filepermissiondenied
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FilePermissionDenied\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L29)\n\n``` pony\nprimitive val FilePermissionDenied\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L29)\n\n``` pony\nnew val create()\n: FilePermissionDenied val^\n```\n\n#### Returns\n\n- [FilePermissionDenied](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L31)\n\n``` pony\nfun box eq(\n  that: FilePermissionDenied val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FilePermissionDenied](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L31)\n\n``` pony\nfun box ne(\n  that: FilePermissionDenied val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FilePermissionDenied](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FilePermissionDenied](https://stdlib.ponylang.io/files-FilePermissionDenied)"
- name: FilePermissionDenied.create()
  id: files-filepermissiondenied#create
  summary: null
  belongs_to: FilePermissionDenied
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L29)

    ``` pony
    new val create()
    : FilePermissionDenied val^
    ```

    #### Returns

    - [FilePermissionDenied](index) val^

    ## Public Functions
- name: FilePermissionDenied.eq()
  id: files-filepermissiondenied#eq
  summary: null
  belongs_to: FilePermissionDenied
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L31)

    ``` pony
    fun box eq(
      that: FilePermissionDenied val)
    : Bool val
    ```

    #### Parameters

    - that: [FilePermissionDenied](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FilePermissionDenied.ne()
  id: files-filepermissiondenied#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FilePermissionDenied
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L31)\n\n``` pony\nfun box ne(\n  that: FilePermissionDenied val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FilePermissionDenied](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FilePermissionDenied](https://stdlib.ponylang.io/files-FilePermissionDenied)"
- name: FileRead
  id: files-fileread
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileRead\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L21)\n\n``` pony\nprimitive val FileRead\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L21)\n\n``` pony\nnew val create()\n: FileRead val^\n```\n\n#### Returns\n\n- [FileRead](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)\n\n``` pony\nfun box eq(\n  that: FileRead val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRead](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)\n\n``` pony\nfun box ne(\n  that: FileRead val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRead](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRead](https://stdlib.ponylang.io/files-FileRead)"
- name: FileRead.create()
  id: files-fileread#create
  summary: null
  belongs_to: FileRead
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L21)

    ``` pony
    new val create()
    : FileRead val^
    ```

    #### Returns

    - [FileRead](index) val^

    ## Public Functions
- name: FileRead.eq()
  id: files-fileread#eq
  summary: null
  belongs_to: FileRead
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)

    ``` pony
    fun box eq(
      that: FileRead val)
    : Bool val
    ```

    #### Parameters

    - that: [FileRead](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileRead.ne()
  id: files-fileread#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileRead
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)\n\n``` pony\nfun box ne(\n  that: FileRead val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRead](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRead](https://stdlib.ponylang.io/files-FileRead)"
- name: FileRead.value()
  id: files-fileread#value
  summary: null
  belongs_to: FileRead
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L22)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileRemove
  id: files-fileremove
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileRemove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L24)\n\n``` pony\nprimitive val FileRemove\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L24)\n\n``` pony\nnew val create()\n: FileRemove val^\n```\n\n#### Returns\n\n- [FileRemove](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)\n\n``` pony\nfun box eq(\n  that: FileRemove val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRemove](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)\n\n``` pony\nfun box ne(\n  that: FileRemove val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRemove](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRemove](https://stdlib.ponylang.io/files-FileRemove)"
- name: FileRemove.create()
  id: files-fileremove#create
  summary: null
  belongs_to: FileRemove
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L24)

    ``` pony
    new val create()
    : FileRemove val^
    ```

    #### Returns

    - [FileRemove](index) val^

    ## Public Functions
- name: FileRemove.eq()
  id: files-fileremove#eq
  summary: null
  belongs_to: FileRemove
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)

    ``` pony
    fun box eq(
      that: FileRemove val)
    : Bool val
    ```

    #### Parameters

    - that: [FileRemove](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileRemove.ne()
  id: files-fileremove#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileRemove
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)\n\n``` pony\nfun box ne(\n  that: FileRemove val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRemove](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRemove](https://stdlib.ponylang.io/files-FileRemove)"
- name: FileRemove.value()
  id: files-fileremove#value
  summary: null
  belongs_to: FileRemove
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L25)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileRename
  id: files-filerename
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileRename\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L27)\n\n``` pony\nprimitive val FileRename\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L27)\n\n``` pony\nnew val create()\n: FileRename val^\n```\n\n#### Returns\n\n- [FileRename](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)\n\n``` pony\nfun box eq(\n  that: FileRename val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRename](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)\n\n``` pony\nfun box ne(\n  that: FileRename val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRename](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRename](https://stdlib.ponylang.io/files-FileRename)"
- name: FileRename.create()
  id: files-filerename#create
  summary: null
  belongs_to: FileRename
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L27)

    ``` pony
    new val create()
    : FileRename val^
    ```

    #### Returns

    - [FileRename](index) val^

    ## Public Functions
- name: FileRename.eq()
  id: files-filerename#eq
  summary: null
  belongs_to: FileRename
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)

    ``` pony
    fun box eq(
      that: FileRename val)
    : Bool val
    ```

    #### Parameters

    - that: [FileRename](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileRename.ne()
  id: files-filerename#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileRename
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)\n\n``` pony\nfun box ne(\n  that: FileRename val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileRename](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileRename](https://stdlib.ponylang.io/files-FileRename)"
- name: FileRename.value()
  id: files-filerename#value
  summary: null
  belongs_to: FileRename
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L28)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileSeek
  id: files-fileseek
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileSeek\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L30)\n\n``` pony\nprimitive val FileSeek\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L30)\n\n``` pony\nnew val create()\n: FileSeek val^\n```\n\n#### Returns\n\n- [FileSeek](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)\n\n``` pony\nfun box eq(\n  that: FileSeek val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSeek](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)\n\n``` pony\nfun box ne(\n  that: FileSeek val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSeek](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileSeek](https://stdlib.ponylang.io/files-FileSeek)"
- name: FileSeek.create()
  id: files-fileseek#create
  summary: null
  belongs_to: FileSeek
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L30)

    ``` pony
    new val create()
    : FileSeek val^
    ```

    #### Returns

    - [FileSeek](index) val^

    ## Public Functions
- name: FileSeek.eq()
  id: files-fileseek#eq
  summary: null
  belongs_to: FileSeek
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)

    ``` pony
    fun box eq(
      that: FileSeek val)
    : Bool val
    ```

    #### Parameters

    - that: [FileSeek](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileSeek.ne()
  id: files-fileseek#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileSeek
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)\n\n``` pony\nfun box ne(\n  that: FileSeek val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSeek](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileSeek](https://stdlib.ponylang.io/files-FileSeek)"
- name: FileSeek.value()
  id: files-fileseek#value
  summary: null
  belongs_to: FileSeek
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L31)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileStat
  id: files-filestat
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileStat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L33)\n\n``` pony\nprimitive val FileStat\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L33)\n\n``` pony\nnew val create()\n: FileStat val^\n```\n\n#### Returns\n\n- [FileStat](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)\n\n``` pony\nfun box eq(\n  that: FileStat val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileStat](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)\n\n``` pony\nfun box ne(\n  that: FileStat val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileStat](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileStat](https://stdlib.ponylang.io/files-FileStat)"
- name: FileStat.create()
  id: files-filestat#create
  summary: null
  belongs_to: FileStat
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L33)

    ``` pony
    new val create()
    : FileStat val^
    ```

    #### Returns

    - [FileStat](index) val^

    ## Public Functions
- name: FileStat.eq()
  id: files-filestat#eq
  summary: null
  belongs_to: FileStat
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)

    ``` pony
    fun box eq(
      that: FileStat val)
    : Bool val
    ```

    #### Parameters

    - that: [FileStat](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileStat.ne()
  id: files-filestat#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileStat
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)\n\n``` pony\nfun box ne(\n  that: FileStat val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileStat](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileStat](https://stdlib.ponylang.io/files-FileStat)"
- name: FileStat.value()
  id: files-filestat#value
  summary: null
  belongs_to: FileStat
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L34)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileStream
  id: files-filestream
  summary: Asynchronous access to a File object
  description: "# FileStream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L1)\n\nAsynchronous access to a File object. Wraps file operations print, write, printv and writev. The File will be disposed through File.\\_final.\n\n``` pony\nactor tag FileStream is\n  OutStream tag\n```\n\n#### Implements\n\n- [OutStream](builtin-outstream) tag\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L8)\n\n``` pony\nnew tag create(\n  file: File iso)\n: FileStream tag^\n```\n\n#### Parameters\n\n- file: [File](files-file) iso\n\n#### Returns\n\n- [FileStream](index) tag^\n\n## Public Behaviours\n\n### print\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L11)\n\nPrint some bytes and insert a newline afterwards.\n\n``` pony\nbe print(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L17)\n\nPrint some bytes without inserting a newline afterwards.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### printv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L23)\n\nPrint an iterable collection of ByteSeqs.\n\n``` pony\nbe printv(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L29)\n\nWrite an iterable collection of ByteSeqs.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L35)\n\nFlush pending data to write.\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileStream](https://stdlib.ponylang.io/files-FileStream)"
- name: FileStream.create()
  id: files-filestream#create
  summary: null
  belongs_to: FileStream
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_stream/#L8)

    ``` pony
    new tag create(
      file: File iso)
    : FileStream tag^
    ```

    #### Parameters

    - file: [File](files-file) iso

    #### Returns

    - [FileStream](index) tag^

    ## Public Behaviours
- name: FileStream.flush()
  id: files-filestream#flush
  summary: Flush pending data to write
  belongs_to: FileStream
  description: "### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_stream/#L35)\n\nFlush pending data to write.\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileStream](https://stdlib.ponylang.io/files-FileStream)"
- name: FileStream.print()
  id: files-filestream#print
  summary: Print some bytes and insert a newline afterwards
  belongs_to: FileStream
  description: |-
    ### print

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_stream/#L11)

    Print some bytes and insert a newline afterwards.

    ``` pony
    be print(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)
- name: FileStream.printv()
  id: files-filestream#printv
  summary: Print an iterable collection of ByteSeqs
  belongs_to: FileStream
  description: |-
    ### printv

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_stream/#L23)

    Print an iterable collection of ByteSeqs.

    ``` pony
    be printv(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: FileStream.write()
  id: files-filestream#write
  summary: Print some bytes without inserting a newline afterwards
  belongs_to: FileStream
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_stream/#L17)

    Print some bytes without inserting a newline afterwards.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: FileStream.writev()
  id: files-filestream#writev
  summary: Write an iterable collection of ByteSeqs
  belongs_to: FileStream
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_stream/#L29)

    Write an iterable collection of ByteSeqs.

    ``` pony
    be writev(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: FileSync
  id: files-filesync
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileSync\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L36)\n\n``` pony\nprimitive val FileSync\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L36)\n\n``` pony\nnew val create()\n: FileSync val^\n```\n\n#### Returns\n\n- [FileSync](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)\n\n``` pony\nfun box eq(\n  that: FileSync val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSync](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)\n\n``` pony\nfun box ne(\n  that: FileSync val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSync](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileSync](https://stdlib.ponylang.io/files-FileSync)"
- name: FileSync.create()
  id: files-filesync#create
  summary: null
  belongs_to: FileSync
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L36)

    ``` pony
    new val create()
    : FileSync val^
    ```

    #### Returns

    - [FileSync](index) val^

    ## Public Functions
- name: FileSync.eq()
  id: files-filesync#eq
  summary: null
  belongs_to: FileSync
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)

    ``` pony
    fun box eq(
      that: FileSync val)
    : Bool val
    ```

    #### Parameters

    - that: [FileSync](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileSync.ne()
  id: files-filesync#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileSync
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)\n\n``` pony\nfun box ne(\n  that: FileSync val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileSync](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileSync](https://stdlib.ponylang.io/files-FileSync)"
- name: FileSync.value()
  id: files-filesync#value
  summary: null
  belongs_to: FileSync
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L37)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileTime
  id: files-filetime
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileTime\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L39)\n\n``` pony\nprimitive val FileTime\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L39)\n\n``` pony\nnew val create()\n: FileTime val^\n```\n\n#### Returns\n\n- [FileTime](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)\n\n``` pony\nfun box eq(\n  that: FileTime val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTime](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)\n\n``` pony\nfun box ne(\n  that: FileTime val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTime](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileTime](https://stdlib.ponylang.io/files-FileTime)"
- name: FileTime.create()
  id: files-filetime#create
  summary: null
  belongs_to: FileTime
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L39)

    ``` pony
    new val create()
    : FileTime val^
    ```

    #### Returns

    - [FileTime](index) val^

    ## Public Functions
- name: FileTime.eq()
  id: files-filetime#eq
  summary: null
  belongs_to: FileTime
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)

    ``` pony
    fun box eq(
      that: FileTime val)
    : Bool val
    ```

    #### Parameters

    - that: [FileTime](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileTime.ne()
  id: files-filetime#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileTime
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)\n\n``` pony\nfun box ne(\n  that: FileTime val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTime](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileTime](https://stdlib.ponylang.io/files-FileTime)"
- name: FileTime.value()
  id: files-filetime#value
  summary: null
  belongs_to: FileTime
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L40)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileTruncate
  id: files-filetruncate
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileTruncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L42)\n\n``` pony\nprimitive val FileTruncate\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L42)\n\n``` pony\nnew val create()\n: FileTruncate val^\n```\n\n#### Returns\n\n- [FileTruncate](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)\n\n``` pony\nfun box eq(\n  that: FileTruncate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTruncate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)\n\n``` pony\nfun box ne(\n  that: FileTruncate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTruncate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileTruncate](https://stdlib.ponylang.io/files-FileTruncate)"
- name: FileTruncate.create()
  id: files-filetruncate#create
  summary: null
  belongs_to: FileTruncate
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L42)

    ``` pony
    new val create()
    : FileTruncate val^
    ```

    #### Returns

    - [FileTruncate](index) val^

    ## Public Functions
- name: FileTruncate.eq()
  id: files-filetruncate#eq
  summary: null
  belongs_to: FileTruncate
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)

    ``` pony
    fun box eq(
      that: FileTruncate val)
    : Bool val
    ```

    #### Parameters

    - that: [FileTruncate](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileTruncate.ne()
  id: files-filetruncate#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileTruncate
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)\n\n``` pony\nfun box ne(\n  that: FileTruncate val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileTruncate](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileTruncate](https://stdlib.ponylang.io/files-FileTruncate)"
- name: FileTruncate.value()
  id: files-filetruncate#value
  summary: null
  belongs_to: FileTruncate
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L43)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: FileWrite
  id: files-filewrite
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FileWrite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L45)\n\n``` pony\nprimitive val FileWrite\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L45)\n\n``` pony\nnew val create()\n: FileWrite val^\n```\n\n#### Returns\n\n- [FileWrite](index) val^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)\n\n``` pony\nfun box value()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)\n\n``` pony\nfun box eq(\n  that: FileWrite val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileWrite](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)\n\n``` pony\nfun box ne(\n  that: FileWrite val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileWrite](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileWrite](https://stdlib.ponylang.io/files-FileWrite)"
- name: FileWrite.create()
  id: files-filewrite#create
  summary: null
  belongs_to: FileWrite
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L45)

    ``` pony
    new val create()
    : FileWrite val^
    ```

    #### Returns

    - [FileWrite](index) val^

    ## Public Functions
- name: FileWrite.eq()
  id: files-filewrite#eq
  summary: null
  belongs_to: FileWrite
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)

    ``` pony
    fun box eq(
      that: FileWrite val)
    : Bool val
    ```

    #### Parameters

    - that: [FileWrite](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FileWrite.ne()
  id: files-filewrite#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FileWrite
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)\n\n``` pony\nfun box ne(\n  that: FileWrite val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FileWrite](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-FileWrite](https://stdlib.ponylang.io/files-FileWrite)"
- name: FileWrite.value()
  id: files-filewrite#value
  summary: null
  belongs_to: FileWrite
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/files/file_caps/#L46)

    ``` pony
    fun box value()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Fine
  id: logger-fine
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Fine\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L98)\n\n``` pony\nprimitive val Fine\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L98)\n\n``` pony\nnew val create()\n: Fine val^\n```\n\n#### Returns\n\n- [Fine](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L99)\n\n``` pony\nfun box apply()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L99)\n\n``` pony\nfun box eq(\n  that: Fine val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fine](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L99)\n\n``` pony\nfun box ne(\n  that: Fine val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fine](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Fine](https://stdlib.ponylang.io/logger-Fine)"
- name: Fine.apply()
  id: logger-fine#apply
  summary: null
  belongs_to: Fine
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L99)

    ``` pony
    fun box apply()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Fine.create()
  id: logger-fine#create
  summary: null
  belongs_to: Fine
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L98)

    ``` pony
    new val create()
    : Fine val^
    ```

    #### Returns

    - [Fine](index) val^

    ## Public Functions
- name: Fine.eq()
  id: logger-fine#eq
  summary: null
  belongs_to: Fine
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L99)

    ``` pony
    fun box eq(
      that: Fine val)
    : Bool val
    ```

    #### Parameters

    - that: [Fine](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Fine.ne()
  id: logger-fine#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Fine
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L99)\n\n``` pony\nfun box ne(\n  that: Fine val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Fine](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Fine](https://stdlib.ponylang.io/logger-Fine)"
- name: Flag
  id: collections-flag
  summary: A flag should be a primitive with a value method that returns the bits that represent the flag
  description: "# Flag\\[A: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L1)\n\nA flag should be a primitive with a value method that returns the bits that represent the flag. This allows a flag to encode a single bit, or any combination of bits.\n\n``` pony\ninterface val Flag[A: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Integer[A] val)]\n```\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L7)\n\n``` pony\nfun box value()\n: A\n```\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Flag](https://stdlib.ponylang.io/collections-Flag)"
- name: Flag.value()
  id: collections-flag#value
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Flag
  description: "### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L7)\n\n``` pony\nfun box value()\n: A\n```\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Flag](https://stdlib.ponylang.io/collections-Flag)"
- name: Flags
  id: collections-flags
  summary: Flags is a set of flags
  description: "# Flags\\[A: [Flag](collections-flag)\\[B\\] val, optional B: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L9)\n\nFlags is a set of flags. The flags that are recognised should be passed as a union type for type parameter A. For example:\n\nprimitive SSE fun value(): U64 =\\> 1\n\nprimitive AVX fun value(): U64 =\\> 2\n\nprimitive RDTSCP fun value(): U64 =\\> 4\n\ntype Features is Flags\\[(SSE \\| AVX \\| RDTSCP)\\]\n\nType parameter B is the unlying field used to store the flags.\n\n``` pony\nclass ref Flags[A: Flag[B] val, optional B: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Integer[B] val)] is\n  Comparable[Flags[A, B] box] ref\n```\n\n#### Implements\n\n- [Comparable](builtin-comparable)\\[[Flags](index)\\[A, B\\] box\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L9)\n\n``` pony\nnew iso create()\n: Flags[A, B] iso^\n```\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n## Public Functions\n\n### value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L30)\n\nReturns the bit encoding of the set flags.\n\n``` pony\nfun box value()\n: B\n```\n\n#### Returns\n\n- B\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L36)\n\nReturns true if the flag is set.\n\n``` pony\nfun box apply(\n  flag: A)\n: Bool val\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### all\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L42)\n\nSets all bits, including undefined flags.\n\n``` pony\nfun ref all()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L48)\n\nUnsets all flags.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L54)\n\nSets the flag.\n\n``` pony\nfun ref set(\n  flag: A)\n: None val\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### unset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L60)\n\nUnsets the flag.\n\n``` pony\nfun ref unset(\n  flag: A)\n: None val\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### flip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L66)\n\nSets the flag if it is unset, unsets the flag if it is set.\n\n``` pony\nfun ref flip(\n  flag: A)\n: None val\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### union\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L72)\n\nThe union of this and that.\n\n``` pony\nfun ref union(\n  that: Flags[A, B] box)\n: None val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### intersect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L78)\n\nThe intersection of this and that.\n\n``` pony\nfun ref intersect(\n  that: Flags[A, B] box)\n: None val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### difference\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L84)\n\nThe symmetric difference of this and that.\n\n``` pony\nfun ref difference(\n  that: Flags[A, B] box)\n: None val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L90)\n\nUnset flags that are set in that.\n\n``` pony\nfun ref remove(\n  that: Flags[A, B] box)\n: None val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L96)\n\nThis with the flag set.\n\n``` pony\nfun box add(\n  flag: A)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L104)\n\nThis with the flag unset.\n\n``` pony\nfun box sub(\n  flag: A)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- flag: A\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L112)\n\nThe union of this and that.\n\n``` pony\nfun box op_or(\n  that: Flags[A, B] box)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L120)\n\nThe intersection of this and that.\n\n``` pony\nfun box op_and(\n  that: Flags[A, B] box)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L128)\n\nThe symmetric difference of this and that.\n\n``` pony\nfun box op_xor(\n  that: Flags[A, B] box)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### without\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L136)\n\nThe flags in this that are not in that.\n\n``` pony\nfun box without(\n  that: Flags[A, B] box)\n: Flags[A, B] iso^\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### clone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L144)\n\nCreate a clone.\n\n``` pony\nfun box clone()\n: Flags[A, B] iso^\n```\n\n#### Returns\n\n- [Flags](index)\\[A, B\\] iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L152)\n\nReturns true if this has the same flags set as that.\n\n``` pony\nfun box eq(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L158)\n\nReturns true if the flags set on this are a strict subset of the flags set on that. Flags is only partially ordered, so lt is not the opposite of ge.\n\n``` pony\nfun box lt(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L165)\n\nReturns true if the flags set on this are a subset of the flags set on that or they are the same. Flags is only partially ordered, so le is not the opposite of te.\n\n``` pony\nfun box le(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L173)\n\nReturns true if the flags set on this are a struct superset of the flags set on that. Flags is only partially ordered, so gt is not the opposite of le.\n\n``` pony\nfun box gt(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/flag/#L181)\n\nReturns true if the flags set on this are a superset of the flags set on that or they are the same. Flags is only partially ordered, so ge is not the opposite of lt.\n\n``` pony\nfun box ge(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)\n\n``` pony\nfun box compare(\n  that: Flags[A, B] box)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Flags](https://stdlib.ponylang.io/collections-Flags)"
- name: Flags.add()
  id: collections-flags#add
  summary: This with the flag set
  belongs_to: Flags
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L96)

    This with the flag set.

    ``` pony
    fun box add(
      flag: A)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.all()
  id: collections-flags#all
  summary: Sets all bits, including undefined flags
  belongs_to: Flags
  description: |-
    ### all

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L42)

    Sets all bits, including undefined flags.

    ``` pony
    fun ref all()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.apply()
  id: collections-flags#apply
  summary: Returns true if the flag is set
  belongs_to: Flags
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L36)

    Returns true if the flag is set.

    ``` pony
    fun box apply(
      flag: A)
    : Bool val
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.clear()
  id: collections-flags#clear
  summary: Unsets all flags
  belongs_to: Flags
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L48)

    Unsets all flags.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.clone()
  id: collections-flags#clone
  summary: Create a clone
  belongs_to: Flags
  description: |-
    ### clone

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L144)

    Create a clone.

    ``` pony
    fun box clone()
    : Flags[A, B] iso^
    ```

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.compare()
  id: collections-flags#compare
  summary: null
  belongs_to: Flags
  description: |-
    ### compare

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)

    ``` pony
    fun box compare(
      that: Flags[A, B] box)
    : (Less val | Equal val | Greater val)
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    &nbsp;
- name: Flags.create()
  id: collections-flags#create
  summary: null
  belongs_to: Flags
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L9)

    ``` pony
    new iso create()
    : Flags[A, B] iso^
    ```

    #### Returns

    - [Flags](index)\[A, B\] iso^

    ## Public Functions
- name: Flags.difference()
  id: collections-flags#difference
  summary: The symmetric difference of this and that
  belongs_to: Flags
  description: |-
    ### difference

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L84)

    The symmetric difference of this and that.

    ``` pony
    fun ref difference(
      that: Flags[A, B] box)
    : None val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.eq()
  id: collections-flags#eq
  summary: Returns true if this has the same flags set as that
  belongs_to: Flags
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L152)

    Returns true if this has the same flags set as that.

    ``` pony
    fun box eq(
      that: Flags[A, B] box)
    : Bool val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.flip()
  id: collections-flags#flip
  summary: Sets the flag if it is unset, unsets the flag if it is set
  belongs_to: Flags
  description: |-
    ### flip

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L66)

    Sets the flag if it is unset, unsets the flag if it is set.

    ``` pony
    fun ref flip(
      flag: A)
    : None val
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.ge()
  id: collections-flags#ge
  summary: Returns true if the flags set on this are a superset of the flags set on that or they are the same
  belongs_to: Flags
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L181)

    Returns true if the flags set on this are a superset of the flags set on that or they are the same. Flags is only partially ordered, so ge is not the opposite of lt.

    ``` pony
    fun box ge(
      that: Flags[A, B] box)
    : Bool val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.gt()
  id: collections-flags#gt
  summary: Returns true if the flags set on this are a struct superset of the flags set on that
  belongs_to: Flags
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L173)

    Returns true if the flags set on this are a struct superset of the flags set on that. Flags is only partially ordered, so gt is not the opposite of le.

    ``` pony
    fun box gt(
      that: Flags[A, B] box)
    : Bool val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.intersect()
  id: collections-flags#intersect
  summary: The intersection of this and that
  belongs_to: Flags
  description: |-
    ### intersect

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L78)

    The intersection of this and that.

    ``` pony
    fun ref intersect(
      that: Flags[A, B] box)
    : None val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.le()
  id: collections-flags#le
  summary: Returns true if the flags set on this are a subset of the flags set on that or they are the same
  belongs_to: Flags
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L165)

    Returns true if the flags set on this are a subset of the flags set on that or they are the same. Flags is only partially ordered, so le is not the opposite of te.

    ``` pony
    fun box le(
      that: Flags[A, B] box)
    : Bool val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.lt()
  id: collections-flags#lt
  summary: Returns true if the flags set on this are a strict subset of the flags set on that
  belongs_to: Flags
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L158)

    Returns true if the flags set on this are a strict subset of the flags set on that. Flags is only partially ordered, so lt is not the opposite of ge.

    ``` pony
    fun box lt(
      that: Flags[A, B] box)
    : Bool val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Flags.ne()
  id: collections-flags#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Flags
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: Flags[A, B] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Flags](index)\\[A, B\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Flags](https://stdlib.ponylang.io/collections-Flags)"
- name: Flags.op_and()
  id: collections-flags#op_and
  summary: The intersection of this and that
  belongs_to: Flags
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L120)

    The intersection of this and that.

    ``` pony
    fun box op_and(
      that: Flags[A, B] box)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.op_or()
  id: collections-flags#op_or
  summary: The union of this and that
  belongs_to: Flags
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L112)

    The union of this and that.

    ``` pony
    fun box op_or(
      that: Flags[A, B] box)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.op_xor()
  id: collections-flags#op_xor
  summary: The symmetric difference of this and that
  belongs_to: Flags
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L128)

    The symmetric difference of this and that.

    ``` pony
    fun box op_xor(
      that: Flags[A, B] box)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.remove()
  id: collections-flags#remove
  summary: Unset flags that are set in that
  belongs_to: Flags
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L90)

    Unset flags that are set in that.

    ``` pony
    fun ref remove(
      that: Flags[A, B] box)
    : None val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.set()
  id: collections-flags#set
  summary: Sets the flag
  belongs_to: Flags
  description: |-
    ### set

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L54)

    Sets the flag.

    ``` pony
    fun ref set(
      flag: A)
    : None val
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.sub()
  id: collections-flags#sub
  summary: This with the flag unset
  belongs_to: Flags
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L104)

    This with the flag unset.

    ``` pony
    fun box sub(
      flag: A)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Flags.union()
  id: collections-flags#union
  summary: The union of this and that
  belongs_to: Flags
  description: |-
    ### union

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L72)

    The union of this and that.

    ``` pony
    fun ref union(
      that: Flags[A, B] box)
    : None val
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.unset()
  id: collections-flags#unset
  summary: Unsets the flag
  belongs_to: Flags
  description: |-
    ### unset

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L60)

    Unsets the flag.

    ``` pony
    fun ref unset(
      flag: A)
    : None val
    ```

    #### Parameters

    - flag: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Flags.value()
  id: collections-flags#value
  summary: Returns the bit encoding of the set flags
  belongs_to: Flags
  description: |-
    ### value

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L30)

    Returns the bit encoding of the set flags.

    ``` pony
    fun box value()
    : B
    ```

    #### Returns

    - B
- name: Flags.without()
  id: collections-flags#without
  summary: The flags in this that are not in that
  belongs_to: Flags
  description: |-
    ### without

    [\[Source\]](https://stdlib.ponylang.io/src/collections/flag/#L136)

    The flags in this that are not in that.

    ``` pony
    fun box without(
      that: Flags[A, B] box)
    : Flags[A, B] iso^
    ```

    #### Parameters

    - that: [Flags](index)\[A, B\] box

    #### Returns

    - [Flags](index)\[A, B\] iso^

    &nbsp;
- name: Float
  id: builtin-float
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Float\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/float/#L485)\n\n``` pony\ntype Float is\n  (F32 val | F64 val)\n```\n\n#### Type Alias For\n\n- ([F32](builtin-f32) val \\| [F64](builtin-f64) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Float](https://stdlib.ponylang.io/builtin-Float)"
- name: FloatingPoint
  id: builtin-floatingpoint
  summary: Unsafe operation
  description: "# FloatingPoint\\[A: [FloatingPoint](index)\\[A\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L516)\n\n``` pony\ntrait val FloatingPoint[A: FloatingPoint[A] val] is\n  Real[A] val\n```\n\n#### Implements\n\n- [Real](builtin-real)\\[A\\] val\n\n## Constructors\n\n### min_normalised\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L517)\n\n``` pony\nnew val min_normalised()\n: FloatingPoint[A] val^\n```\n\n#### Returns\n\n- [FloatingPoint](index)\\[A\\] val^\n\n### epsilon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L518)\n\n``` pony\nnew val epsilon()\n: FloatingPoint[A] val^\n```\n\n#### Returns\n\n- [FloatingPoint](index)\\[A\\] val^\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L135)\n\n``` pony\nnew val create(\n  value: A)\n: Real[A] val^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L138)\n\n``` pony\nnew val min_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L139)\n\n``` pony\nnew val max_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n## Public Functions\n\n### radix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L519)\n\n``` pony\nfun tag radix()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L520)\n\n``` pony\nfun tag precision2()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### precision10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L521)\n\n``` pony\nfun tag precision10()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### min_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L522)\n\n``` pony\nfun tag min_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### min_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L523)\n\n``` pony\nfun tag min_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L524)\n\n``` pony\nfun tag max_exp2()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### max_exp10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L525)\n\n``` pony\nfun tag max_exp10()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L527)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box add_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L536)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box sub_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L545)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box mul_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L554)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box div_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L563)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box fld_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L571)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box divrem_unsafe(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L580)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box rem_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L589)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box mod_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L597)\n\nUnsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box neg_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### eq_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L606)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box eq_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L615)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box ne_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L624)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box lt_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L633)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box le_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L642)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box ge_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L651)\n\nUnsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.\n\n``` pony\nfun box gt_unsafe(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L660)\n\n``` pony\nfun box abs()\n: A\n```\n\n#### Returns\n\n- A\n\n### ceil\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L661)\n\n``` pony\nfun box ceil()\n: A\n```\n\n#### Returns\n\n- A\n\n### floor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L662)\n\n``` pony\nfun box floor()\n: A\n```\n\n#### Returns\n\n- A\n\n### round\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L663)\n\n``` pony\nfun box round()\n: A\n```\n\n#### Returns\n\n- A\n\n### trunc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L664)\n\n``` pony\nfun box trunc()\n: A\n```\n\n#### Returns\n\n- A\n\n### finite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L666)\n\n``` pony\nfun box finite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### infinite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L667)\n\n``` pony\nfun box infinite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### nan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L668)\n\n``` pony\nfun box nan()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ldexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L670)\n\n``` pony\nfun box ldexp(\n  x: A,\n  exponent: I32 val)\n: A\n```\n\n#### Parameters\n\n- x: A\n- exponent: [I32](builtin-i32) val\n\n#### Returns\n\n- A\n\n### frexp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L671)\n\n``` pony\nfun box frexp()\n: (A , U32 val)\n```\n\n#### Returns\n\n- (A , [U32](builtin-u32) val)\n\n### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L672)\n\n``` pony\nfun box log()\n: A\n```\n\n#### Returns\n\n- A\n\n### log2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L673)\n\n``` pony\nfun box log2()\n: A\n```\n\n#### Returns\n\n- A\n\n### log10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L674)\n\n``` pony\nfun box log10()\n: A\n```\n\n#### Returns\n\n- A\n\n### logb\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L675)\n\n``` pony\nfun box logb()\n: A\n```\n\n#### Returns\n\n- A\n\n### pow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L677)\n\n``` pony\nfun box pow(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### powi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L678)\n\n``` pony\nfun box powi(\n  y: I32 val)\n: A\n```\n\n#### Parameters\n\n- y: [I32](builtin-i32) val\n\n#### Returns\n\n- A\n\n### sqrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L680)\n\n``` pony\nfun box sqrt()\n: A\n```\n\n#### Returns\n\n- A\n\n### sqrt_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L682)\n\nUnsafe operation. If this is negative, the result is undefined.\n\n``` pony\nfun box sqrt_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### cbrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L688)\n\n``` pony\nfun box cbrt()\n: A\n```\n\n#### Returns\n\n- A\n\n### exp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L689)\n\n``` pony\nfun box exp()\n: A\n```\n\n#### Returns\n\n- A\n\n### exp2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L690)\n\n``` pony\nfun box exp2()\n: A\n```\n\n#### Returns\n\n- A\n\n### cos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L692)\n\n``` pony\nfun box cos()\n: A\n```\n\n#### Returns\n\n- A\n\n### sin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L693)\n\n``` pony\nfun box sin()\n: A\n```\n\n#### Returns\n\n- A\n\n### tan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L694)\n\n``` pony\nfun box tan()\n: A\n```\n\n#### Returns\n\n- A\n\n### cosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L696)\n\n``` pony\nfun box cosh()\n: A\n```\n\n#### Returns\n\n- A\n\n### sinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L697)\n\n``` pony\nfun box sinh()\n: A\n```\n\n#### Returns\n\n- A\n\n### tanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L698)\n\n``` pony\nfun box tanh()\n: A\n```\n\n#### Returns\n\n- A\n\n### acos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L700)\n\n``` pony\nfun box acos()\n: A\n```\n\n#### Returns\n\n- A\n\n### asin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L701)\n\n``` pony\nfun box asin()\n: A\n```\n\n#### Returns\n\n- A\n\n### atan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L702)\n\n``` pony\nfun box atan()\n: A\n```\n\n#### Returns\n\n- A\n\n### atan2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L703)\n\n``` pony\nfun box atan2(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### acosh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L705)\n\n``` pony\nfun box acosh()\n: A\n```\n\n#### Returns\n\n- A\n\n### asinh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L706)\n\n``` pony\nfun box asinh()\n: A\n```\n\n#### Returns\n\n- A\n\n### atanh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L707)\n\n``` pony\nfun box atanh()\n: A\n```\n\n#### Returns\n\n- A\n\n### copysign\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L709)\n\n``` pony\nfun box copysign(\n  sign: A)\n: A\n```\n\n#### Parameters\n\n- sign: A\n\n#### Returns\n\n- A\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L711)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: A\n```\n\n#### Returns\n\n- A\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L161)\n\n``` pony\nfun box fld(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L165)\n\n``` pony\nfun box mod(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L179)\n\n``` pony\nfun box min(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L180)\n\n``` pony\nfun box max(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L182)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L198)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L6)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L14)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L49)\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L98)\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-FloatingPoint](https://stdlib.ponylang.io/builtin-FloatingPoint)"
- name: FloatingPoint.abs()
  id: builtin-floatingpoint#abs
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L660)

    ``` pony
    fun box abs()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.acos()
  id: builtin-floatingpoint#acos
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### acos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L700)

    ``` pony
    fun box acos()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.acosh()
  id: builtin-floatingpoint#acosh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### acosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L705)

    ``` pony
    fun box acosh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.add()
  id: builtin-floatingpoint#add
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.add_unsafe()
  id: builtin-floatingpoint#add_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L527)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box add_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.asin()
  id: builtin-floatingpoint#asin
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### asin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L701)

    ``` pony
    fun box asin()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.asinh()
  id: builtin-floatingpoint#asinh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### asinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L706)

    ``` pony
    fun box asinh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.atan()
  id: builtin-floatingpoint#atan
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### atan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L702)

    ``` pony
    fun box atan()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.atan2()
  id: builtin-floatingpoint#atan2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### atan2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L703)

    ``` pony
    fun box atan2(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.atanh()
  id: builtin-floatingpoint#atanh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### atanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L707)

    ``` pony
    fun box atanh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.cbrt()
  id: builtin-floatingpoint#cbrt
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### cbrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L688)

    ``` pony
    fun box cbrt()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.ceil()
  id: builtin-floatingpoint#ceil
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ceil

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L661)

    ``` pony
    fun box ceil()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.compare()
  id: builtin-floatingpoint#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FloatingPoint
  description: "### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-FloatingPoint](https://stdlib.ponylang.io/builtin-FloatingPoint)"
- name: FloatingPoint.copysign()
  id: builtin-floatingpoint#copysign
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### copysign

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L709)

    ``` pony
    fun box copysign(
      sign: A)
    : A
    ```

    #### Parameters

    - sign: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.cos()
  id: builtin-floatingpoint#cos
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### cos

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L692)

    ``` pony
    fun box cos()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.cosh()
  id: builtin-floatingpoint#cosh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### cosh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L696)

    ``` pony
    fun box cosh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.create()
  id: builtin-floatingpoint#create
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L135)

    ``` pony
    new val create(
      value: A)
    : Real[A] val^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Real](builtin-real)\[A\] val^

    &nbsp;
- name: FloatingPoint.div()
  id: builtin-floatingpoint#div
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.div_unsafe()
  id: builtin-floatingpoint#div_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L554)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box div_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.divrem()
  id: builtin-floatingpoint#divrem
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: FloatingPoint.divrem_unsafe()
  id: builtin-floatingpoint#divrem_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L571)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box divrem_unsafe(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: FloatingPoint.epsilon()
  id: builtin-floatingpoint#epsilon
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### epsilon

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L518)

    ``` pony
    new val epsilon()
    : FloatingPoint[A] val^
    ```

    #### Returns

    - [FloatingPoint](index)\[A\] val^

    &nbsp;
- name: FloatingPoint.eq()
  id: builtin-floatingpoint#eq
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.eq_unsafe()
  id: builtin-floatingpoint#eq_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### eq_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L606)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box eq_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.exp()
  id: builtin-floatingpoint#exp
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### exp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L689)

    ``` pony
    fun box exp()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.exp2()
  id: builtin-floatingpoint#exp2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L690)

    ``` pony
    fun box exp2()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.f32()
  id: builtin-floatingpoint#f32
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: FloatingPoint.f32_unsafe()
  id: builtin-floatingpoint#f32_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: FloatingPoint.f64()
  id: builtin-floatingpoint#f64
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: FloatingPoint.f64_unsafe()
  id: builtin-floatingpoint#f64_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: FloatingPoint.finite()
  id: builtin-floatingpoint#finite
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### finite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L666)

    ``` pony
    fun box finite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.fld()
  id: builtin-floatingpoint#fld
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L161)

    ``` pony
    fun box fld(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.fld_unsafe()
  id: builtin-floatingpoint#fld_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L563)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box fld_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.floor()
  id: builtin-floatingpoint#floor
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### floor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L662)

    ``` pony
    fun box floor()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.frexp()
  id: builtin-floatingpoint#frexp
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### frexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L671)

    ``` pony
    fun box frexp()
    : (A , U32 val)
    ```

    #### Returns

    - (A , [U32](builtin-u32) val)

    &nbsp;
- name: FloatingPoint.from()
  id: builtin-floatingpoint#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: FloatingPoint
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n&nbsp;"
- name: FloatingPoint.ge()
  id: builtin-floatingpoint#ge
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.ge_unsafe()
  id: builtin-floatingpoint#ge_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### ge_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L642)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box ge_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.gt()
  id: builtin-floatingpoint#gt
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.gt_unsafe()
  id: builtin-floatingpoint#gt_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### gt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L651)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box gt_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.hash()
  id: builtin-floatingpoint#hash
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L182)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: FloatingPoint.hash64()
  id: builtin-floatingpoint#hash64
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L198)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: FloatingPoint.i128()
  id: builtin-floatingpoint#i128
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L6)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: FloatingPoint.i128_unsafe()
  id: builtin-floatingpoint#i128_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L49)

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: FloatingPoint.i16()
  id: builtin-floatingpoint#i16
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.i16_unsafe()
  id: builtin-floatingpoint#i16_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.i32()
  id: builtin-floatingpoint#i32
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: FloatingPoint.i32_unsafe()
  id: builtin-floatingpoint#i32_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: FloatingPoint.i64()
  id: builtin-floatingpoint#i64
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: FloatingPoint.i64_unsafe()
  id: builtin-floatingpoint#i64_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: FloatingPoint.i8()
  id: builtin-floatingpoint#i8
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: FloatingPoint.i8_unsafe()
  id: builtin-floatingpoint#i8_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: FloatingPoint.ilong()
  id: builtin-floatingpoint#ilong
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: FloatingPoint.ilong_unsafe()
  id: builtin-floatingpoint#ilong_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: FloatingPoint.infinite()
  id: builtin-floatingpoint#infinite
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### infinite

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L667)

    ``` pony
    fun box infinite()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.isize()
  id: builtin-floatingpoint#isize
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: FloatingPoint.isize_unsafe()
  id: builtin-floatingpoint#isize_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: FloatingPoint.ldexp()
  id: builtin-floatingpoint#ldexp
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ldexp

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L670)

    ``` pony
    fun box ldexp(
      x: A,
      exponent: I32 val)
    : A
    ```

    #### Parameters

    - x: A
    - exponent: [I32](builtin-i32) val

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.le()
  id: builtin-floatingpoint#le
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.le_unsafe()
  id: builtin-floatingpoint#le_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### le_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L633)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box le_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.log()
  id: builtin-floatingpoint#log
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### log

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L672)

    ``` pony
    fun box log()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.log10()
  id: builtin-floatingpoint#log10
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### log10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L674)

    ``` pony
    fun box log10()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.log2()
  id: builtin-floatingpoint#log2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### log2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L673)

    ``` pony
    fun box log2()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.logb()
  id: builtin-floatingpoint#logb
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### logb

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L675)

    ``` pony
    fun box logb()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.lt()
  id: builtin-floatingpoint#lt
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.lt_unsafe()
  id: builtin-floatingpoint#lt_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### lt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L624)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box lt_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.max()
  id: builtin-floatingpoint#max
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L180)

    ``` pony
    fun box max(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.max_exp10()
  id: builtin-floatingpoint#max_exp10
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### max_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L525)

    ``` pony
    fun tag max_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.max_exp2()
  id: builtin-floatingpoint#max_exp2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### max_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L524)

    ``` pony
    fun tag max_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.max_value()
  id: builtin-floatingpoint#max_value
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L139)

    ``` pony
    new val max_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    ## Public Functions
- name: FloatingPoint.min()
  id: builtin-floatingpoint#min
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L179)

    ``` pony
    fun box min(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.min_exp10()
  id: builtin-floatingpoint#min_exp10
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### min_exp10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L523)

    ``` pony
    fun tag min_exp10()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.min_exp2()
  id: builtin-floatingpoint#min_exp2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### min_exp2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L522)

    ``` pony
    fun tag min_exp2()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: FloatingPoint.min_normalised()
  id: builtin-floatingpoint#min_normalised
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### min_normalised

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L517)

    ``` pony
    new val min_normalised()
    : FloatingPoint[A] val^
    ```

    #### Returns

    - [FloatingPoint](index)\[A\] val^
- name: FloatingPoint.min_value()
  id: builtin-floatingpoint#min_value
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L138)

    ``` pony
    new val min_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    &nbsp;
- name: FloatingPoint.mod()
  id: builtin-floatingpoint#mod
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L165)

    ``` pony
    fun box mod(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.mod_unsafe()
  id: builtin-floatingpoint#mod_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L589)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box mod_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.mul()
  id: builtin-floatingpoint#mul
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.mul_unsafe()
  id: builtin-floatingpoint#mul_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L545)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box mul_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.nan()
  id: builtin-floatingpoint#nan
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### nan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L668)

    ``` pony
    fun box nan()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.ne()
  id: builtin-floatingpoint#ne
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.ne_unsafe()
  id: builtin-floatingpoint#ne_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### ne_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L615)

    Unsafe operation. If any input of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box ne_unsafe(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: FloatingPoint.neg()
  id: builtin-floatingpoint#neg
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.neg_unsafe()
  id: builtin-floatingpoint#neg_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L597)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box neg_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.pow()
  id: builtin-floatingpoint#pow
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### pow

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L677)

    ``` pony
    fun box pow(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.powi()
  id: builtin-floatingpoint#powi
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### powi

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L678)

    ``` pony
    fun box powi(
      y: I32 val)
    : A
    ```

    #### Parameters

    - y: [I32](builtin-i32) val

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.precision10()
  id: builtin-floatingpoint#precision10
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### precision10

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L521)

    ``` pony
    fun tag precision10()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: FloatingPoint.precision2()
  id: builtin-floatingpoint#precision2
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### precision2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L520)

    ``` pony
    fun tag precision2()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: FloatingPoint.radix()
  id: builtin-floatingpoint#radix
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### radix

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L519)

    ``` pony
    fun tag radix()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: FloatingPoint.rem()
  id: builtin-floatingpoint#rem
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.rem_unsafe()
  id: builtin-floatingpoint#rem_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L580)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box rem_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.round()
  id: builtin-floatingpoint#round
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### round

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L663)

    ``` pony
    fun box round()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.sin()
  id: builtin-floatingpoint#sin
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### sin

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L693)

    ``` pony
    fun box sin()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.sinh()
  id: builtin-floatingpoint#sinh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### sinh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L697)

    ``` pony
    fun box sinh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.sqrt()
  id: builtin-floatingpoint#sqrt
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### sqrt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L680)

    ``` pony
    fun box sqrt()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.sqrt_unsafe()
  id: builtin-floatingpoint#sqrt_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### sqrt_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L682)

    Unsafe operation. If this is negative, the result is undefined.

    ``` pony
    fun box sqrt_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.string()
  id: builtin-floatingpoint#string
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L711)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: FloatingPoint.sub()
  id: builtin-floatingpoint#sub
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.sub_unsafe()
  id: builtin-floatingpoint#sub_unsafe
  summary: Unsafe operation
  belongs_to: FloatingPoint
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L536)

    Unsafe operation. If any input or output of the operation is +/- infinity or NaN, the result is undefined. The operation isn't required to fully comply to IEEE 754 semantics.

    ``` pony
    fun box sub_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.tan()
  id: builtin-floatingpoint#tan
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### tan

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L694)

    ``` pony
    fun box tan()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.tanh()
  id: builtin-floatingpoint#tanh
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### tanh

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L698)

    ``` pony
    fun box tanh()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.trunc()
  id: builtin-floatingpoint#trunc
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### trunc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L664)

    ``` pony
    fun box trunc()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: FloatingPoint.u128()
  id: builtin-floatingpoint#u128
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L14)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: FloatingPoint.u128_unsafe()
  id: builtin-floatingpoint#u128_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L98)

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: FloatingPoint.u16()
  id: builtin-floatingpoint#u16
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: FloatingPoint.u16_unsafe()
  id: builtin-floatingpoint#u16_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: FloatingPoint.u32()
  id: builtin-floatingpoint#u32
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: FloatingPoint.u32_unsafe()
  id: builtin-floatingpoint#u32_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: FloatingPoint.u64()
  id: builtin-floatingpoint#u64
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: FloatingPoint.u64_unsafe()
  id: builtin-floatingpoint#u64_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: FloatingPoint.u8()
  id: builtin-floatingpoint#u8
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: FloatingPoint.u8_unsafe()
  id: builtin-floatingpoint#u8_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: FloatingPoint.ulong()
  id: builtin-floatingpoint#ulong
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: FloatingPoint.ulong_unsafe()
  id: builtin-floatingpoint#ulong_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: FloatingPoint.usize()
  id: builtin-floatingpoint#usize
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: FloatingPoint.usize_unsafe()
  id: builtin-floatingpoint#usize_unsafe
  summary: null
  belongs_to: FloatingPoint
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ForkError
  id: process-forkerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ForkError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L44)\n\n``` pony\nprimitive val ForkError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L44)\n\n``` pony\nnew val create()\n: ForkError val^\n```\n\n#### Returns\n\n- [ForkError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L45)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L45)\n\n``` pony\nfun box eq(\n  that: ForkError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ForkError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L45)\n\n``` pony\nfun box ne(\n  that: ForkError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ForkError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ForkError](https://stdlib.ponylang.io/process-ForkError)"
- name: ForkError.create()
  id: process-forkerror#create
  summary: null
  belongs_to: ForkError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L44)

    ``` pony
    new val create()
    : ForkError val^
    ```

    #### Returns

    - [ForkError](index) val^

    ## Public Functions
- name: ForkError.eq()
  id: process-forkerror#eq
  summary: null
  belongs_to: ForkError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L45)

    ``` pony
    fun box eq(
      that: ForkError val)
    : Bool val
    ```

    #### Parameters

    - that: [ForkError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ForkError.ne()
  id: process-forkerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ForkError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L45)\n\n``` pony\nfun box ne(\n  that: ForkError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ForkError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ForkError](https://stdlib.ponylang.io/process-ForkError)"
- name: ForkError.string()
  id: process-forkerror#string
  summary: null
  belongs_to: ForkError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L45)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Format
  id: format-format
  summary: Provides functions for generating formatted strings
  description: "# Format\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L37)\n\nProvides functions for generating formatted strings.\n\n- fmt. Format to use.\n- prefix. Prefix to use.\n- prec. Precision to use. The exact meaning of this depends on the type, but is generally the number of characters used for all, or part, of the string. A value of -1 indicates that the default for the type should be used.\n- width. The minimum number of characters that will be in the produced string. If necessary the string will be padded with the fill character to make it long enough. *align. Specify whether fill characters should be added at the beginning or end of the generated string, or both.* fill: The character to pad a string with if is is shorter than width.\n\n``` pony\nprimitive val Format\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L37)\n\n``` pony\nnew val create()\n: Format val^\n```\n\n#### Returns\n\n- [Format](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L54)\n\n``` pony\nfun box apply(\n  str: String val,\n  fmt: FormatDefault val = reference,\n  prefix: PrefixDefault val = reference,\n  prec: USize val = call,\n  width: USize val = 0,\n  align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,\n  fill: U32 val = 32)\n: String iso^\n```\n\n#### Parameters\n\n- str: [String](builtin-string) val\n- fmt: [FormatDefault](format-formatdefault) val = reference\n- prefix: [PrefixDefault](format-prefixdefault) val = reference\n- prec: [USize](builtin-usize) val = call\n- width: [USize](builtin-usize) val = 0\n- align: ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val) = reference\n- fill: [U32](builtin-u32) val = 32\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### int\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[A\\])\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L94)\n\n``` pony\nfun box int[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val) & Integer[A])](\n  x: A,\n  fmt: (FormatDefault val | FormatUTF32 val | FormatBinary val | \n    FormatBinaryBare val | FormatOctal val | FormatOctalBare val | \n    FormatHex val | FormatHexBare val | FormatHexSmall val | \n    FormatHexSmallBare val) = reference,\n  prefix: (PrefixDefault val | PrefixSpace val | PrefixSign val) = reference,\n  prec: USize val = call,\n  width: USize val = 0,\n  align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,\n  fill: U32 val = 32)\n: String iso^\n```\n\n#### Parameters\n\n- x: A\n- fmt: ([FormatDefault](format-formatdefault) val \\| [FormatUTF32](format-formatutf32) val \\| [FormatBinary](format-formatbinary) val \\| [FormatBinaryBare](format-formatbinarybare) val \\| [FormatOctal](format-formatoctal) val \\| [FormatOctalBare](format-formatoctalbare) val \\| [FormatHex](format-formathex) val \\| [FormatHexBare](format-formathexbare) val \\| [FormatHexSmall](format-formathexsmall) val \\| [FormatHexSmallBare](format-formathexsmallbare) val) = reference\n- prefix: ([PrefixDefault](format-prefixdefault) val \\| [PrefixSpace](format-prefixspace) val \\| [PrefixSign](format-prefixsign) val) = reference\n- prec: [USize](builtin-usize) val = call\n- width: [USize](builtin-usize) val = 0\n- align: ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val) = reference\n- fill: [U32](builtin-u32) val = 32\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### float\\[A: (([F32](builtin-f32) val \\| [F64](builtin-f64) val) & [FloatingPoint](builtin-floatingpoint)\\[A\\])\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L135)\n\n``` pony\nfun box float[A: ((F32 val | F64 val) & FloatingPoint[A])](\n  x: A,\n  fmt: (FormatDefault val | FormatExp val | FormatExpLarge val | \n    FormatFix val | FormatFixLarge val | FormatGeneral val | \n    FormatGeneralLarge val) = reference,\n  prefix: (PrefixDefault val | PrefixSpace val | PrefixSign val) = reference,\n  prec: USize val = 6,\n  width: USize val = 0,\n  align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,\n  fill: U32 val = 32)\n: String iso^\n```\n\n#### Parameters\n\n- x: A\n- fmt: ([FormatDefault](format-formatdefault) val \\| [FormatExp](format-formatexp) val \\| [FormatExpLarge](format-formatexplarge) val \\| [FormatFix](format-formatfix) val \\| [FormatFixLarge](format-formatfixlarge) val \\| [FormatGeneral](format-formatgeneral) val \\| [FormatGeneralLarge](format-formatgenerallarge) val) = reference\n- prefix: ([PrefixDefault](format-prefixdefault) val \\| [PrefixSpace](format-prefixspace) val \\| [PrefixSign](format-prefixsign) val) = reference\n- prec: [USize](builtin-usize) val = 6\n- width: [USize](builtin-usize) val = 0\n- align: ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val) = reference\n- fill: [U32](builtin-u32) val = 32\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L54)\n\n``` pony\nfun box eq(\n  that: Format val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Format](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L54)\n\n``` pony\nfun box ne(\n  that: Format val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Format](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-Format](https://stdlib.ponylang.io/format-Format)"
- name: Format.apply()
  id: format-format#apply
  summary: null
  belongs_to: Format
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/format/format/#L54)

    ``` pony
    fun box apply(
      str: String val,
      fmt: FormatDefault val = reference,
      prefix: PrefixDefault val = reference,
      prec: USize val = call,
      width: USize val = 0,
      align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,
      fill: U32 val = 32)
    : String iso^
    ```

    #### Parameters

    - str: [String](builtin-string) val
    - fmt: [FormatDefault](format-formatdefault) val = reference
    - prefix: [PrefixDefault](format-prefixdefault) val = reference
    - prec: [USize](builtin-usize) val = call
    - width: [USize](builtin-usize) val = 0
    - align: ([AlignLeft](format-alignleft) val \| [AlignRight](format-alignright) val \| [AlignCenter](format-aligncenter) val) = reference
    - fill: [U32](builtin-u32) val = 32

    #### Returns

    - [String](builtin-string) iso^
- name: Format.create()
  id: format-format#create
  summary: null
  belongs_to: Format
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format/#L37)

    ``` pony
    new val create()
    : Format val^
    ```

    #### Returns

    - [Format](index) val^

    ## Public Functions
- name: Format.eq()
  id: format-format#eq
  summary: null
  belongs_to: Format
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format/#L54)

    ``` pony
    fun box eq(
      that: Format val)
    : Bool val
    ```

    #### Parameters

    - that: [Format](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Format.float()
  id: format-format#floata-f32-val-f64-val-floatingpointa
  summary: null
  belongs_to: Format
  description: "### float\\[A: (([F32](builtin-f32) val \\| [F64](builtin-f64) val) & [FloatingPoint](builtin-floatingpoint)\\[A\\])\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L135)\n\n``` pony\nfun box float[A: ((F32 val | F64 val) & FloatingPoint[A])](\n  x: A,\n  fmt: (FormatDefault val | FormatExp val | FormatExpLarge val | \n    FormatFix val | FormatFixLarge val | FormatGeneral val | \n    FormatGeneralLarge val) = reference,\n  prefix: (PrefixDefault val | PrefixSpace val | PrefixSign val) = reference,\n  prec: USize val = 6,\n  width: USize val = 0,\n  align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,\n  fill: U32 val = 32)\n: String iso^\n```\n\n#### Parameters\n\n- x: A\n- fmt: ([FormatDefault](format-formatdefault) val \\| [FormatExp](format-formatexp) val \\| [FormatExpLarge](format-formatexplarge) val \\| [FormatFix](format-formatfix) val \\| [FormatFixLarge](format-formatfixlarge) val \\| [FormatGeneral](format-formatgeneral) val \\| [FormatGeneralLarge](format-formatgenerallarge) val) = reference\n- prefix: ([PrefixDefault](format-prefixdefault) val \\| [PrefixSpace](format-prefixspace) val \\| [PrefixSign](format-prefixsign) val) = reference\n- prec: [USize](builtin-usize) val = 6\n- width: [USize](builtin-usize) val = 0\n- align: ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val) = reference\n- fill: [U32](builtin-u32) val = 32\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n&nbsp;"
- name: Format.int()
  id: format-format#inta-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-integera
  summary: null
  belongs_to: Format
  description: "### int\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[A\\])\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L94)\n\n``` pony\nfun box int[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val) & Integer[A])](\n  x: A,\n  fmt: (FormatDefault val | FormatUTF32 val | FormatBinary val | \n    FormatBinaryBare val | FormatOctal val | FormatOctalBare val | \n    FormatHex val | FormatHexBare val | FormatHexSmall val | \n    FormatHexSmallBare val) = reference,\n  prefix: (PrefixDefault val | PrefixSpace val | PrefixSign val) = reference,\n  prec: USize val = call,\n  width: USize val = 0,\n  align: (AlignLeft val | AlignRight val | AlignCenter val) = reference,\n  fill: U32 val = 32)\n: String iso^\n```\n\n#### Parameters\n\n- x: A\n- fmt: ([FormatDefault](format-formatdefault) val \\| [FormatUTF32](format-formatutf32) val \\| [FormatBinary](format-formatbinary) val \\| [FormatBinaryBare](format-formatbinarybare) val \\| [FormatOctal](format-formatoctal) val \\| [FormatOctalBare](format-formatoctalbare) val \\| [FormatHex](format-formathex) val \\| [FormatHexBare](format-formathexbare) val \\| [FormatHexSmall](format-formathexsmall) val \\| [FormatHexSmallBare](format-formathexsmallbare) val) = reference\n- prefix: ([PrefixDefault](format-prefixdefault) val \\| [PrefixSpace](format-prefixspace) val \\| [PrefixSign](format-prefixsign) val) = reference\n- prec: [USize](builtin-usize) val = call\n- width: [USize](builtin-usize) val = 0\n- align: ([AlignLeft](format-alignleft) val \\| [AlignRight](format-alignright) val \\| [AlignCenter](format-aligncenter) val) = reference\n- fill: [U32](builtin-u32) val = 32\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n&nbsp;"
- name: Format.ne()
  id: format-format#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Format
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format/#L54)\n\n``` pony\nfun box ne(\n  that: Format val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Format](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-Format](https://stdlib.ponylang.io/format-Format)"
- name: FormatBinary
  id: format-formatbinary
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatBinary\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)\n\n``` pony\nprimitive val FormatBinary is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)\n\n``` pony\nnew val create()\n: FormatBinary val^\n```\n\n#### Returns\n\n- [FormatBinary](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)\n\n``` pony\nfun box eq(\n  that: FormatBinary val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinary](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)\n\n``` pony\nfun box ne(\n  that: FormatBinary val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinary](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatBinary](https://stdlib.ponylang.io/format-FormatBinary)"
- name: FormatBinary.create()
  id: format-formatbinary#create
  summary: null
  belongs_to: FormatBinary
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)

    ``` pony
    new val create()
    : FormatBinary val^
    ```

    #### Returns

    - [FormatBinary](index) val^

    ## Public Functions
- name: FormatBinary.eq()
  id: format-formatbinary#eq
  summary: null
  belongs_to: FormatBinary
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)

    ``` pony
    fun box eq(
      that: FormatBinary val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatBinary](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatBinary.ne()
  id: format-formatbinary#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatBinary
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)\n\n``` pony\nfun box ne(\n  that: FormatBinary val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinary](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatBinary](https://stdlib.ponylang.io/format-FormatBinary)"
- name: FormatBinaryBare
  id: format-formatbinarybare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatBinaryBare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)\n\n``` pony\nprimitive val FormatBinaryBare is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)\n\n``` pony\nnew val create()\n: FormatBinaryBare val^\n```\n\n#### Returns\n\n- [FormatBinaryBare](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)\n\n``` pony\nfun box eq(\n  that: FormatBinaryBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinaryBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)\n\n``` pony\nfun box ne(\n  that: FormatBinaryBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinaryBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatBinaryBare](https://stdlib.ponylang.io/format-FormatBinaryBare)"
- name: FormatBinaryBare.create()
  id: format-formatbinarybare#create
  summary: null
  belongs_to: FormatBinaryBare
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L7)

    ``` pony
    new val create()
    : FormatBinaryBare val^
    ```

    #### Returns

    - [FormatBinaryBare](index) val^

    ## Public Functions
- name: FormatBinaryBare.eq()
  id: format-formatbinarybare#eq
  summary: null
  belongs_to: FormatBinaryBare
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)

    ``` pony
    fun box eq(
      that: FormatBinaryBare val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatBinaryBare](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatBinaryBare.ne()
  id: format-formatbinarybare#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatBinaryBare
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)\n\n``` pony\nfun box ne(\n  that: FormatBinaryBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatBinaryBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatBinaryBare](https://stdlib.ponylang.io/format-FormatBinaryBare)"
- name: FormatDefault
  id: format-formatdefault
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatDefault\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L3)\n\n``` pony\nprimitive val FormatDefault is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L3)\n\n``` pony\nnew val create()\n: FormatDefault val^\n```\n\n#### Returns\n\n- [FormatDefault](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)\n\n``` pony\nfun box eq(\n  that: FormatDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)\n\n``` pony\nfun box ne(\n  that: FormatDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatDefault](https://stdlib.ponylang.io/format-FormatDefault)"
- name: FormatDefault.create()
  id: format-formatdefault#create
  summary: null
  belongs_to: FormatDefault
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L3)

    ``` pony
    new val create()
    : FormatDefault val^
    ```

    #### Returns

    - [FormatDefault](index) val^

    ## Public Functions
- name: FormatDefault.eq()
  id: format-formatdefault#eq
  summary: null
  belongs_to: FormatDefault
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)

    ``` pony
    fun box eq(
      that: FormatDefault val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatDefault](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatDefault.ne()
  id: format-formatdefault#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatDefault
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)\n\n``` pony\nfun box ne(\n  that: FormatDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatDefault](https://stdlib.ponylang.io/format-FormatDefault)"
- name: FormatExp
  id: format-formatexp
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatExp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L27)\n\n``` pony\nprimitive val FormatExp is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L27)\n\n``` pony\nnew val create()\n: FormatExp val^\n```\n\n#### Returns\n\n- [FormatExp](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)\n\n``` pony\nfun box eq(\n  that: FormatExp val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExp](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)\n\n``` pony\nfun box ne(\n  that: FormatExp val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExp](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatExp](https://stdlib.ponylang.io/format-FormatExp)"
- name: FormatExp.create()
  id: format-formatexp#create
  summary: null
  belongs_to: FormatExp
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L27)

    ``` pony
    new val create()
    : FormatExp val^
    ```

    #### Returns

    - [FormatExp](index) val^

    ## Public Functions
- name: FormatExp.eq()
  id: format-formatexp#eq
  summary: null
  belongs_to: FormatExp
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)

    ``` pony
    fun box eq(
      that: FormatExp val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatExp](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatExp.ne()
  id: format-formatexp#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatExp
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)\n\n``` pony\nfun box ne(\n  that: FormatExp val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExp](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatExp](https://stdlib.ponylang.io/format-FormatExp)"
- name: FormatExpLarge
  id: format-formatexplarge
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatExpLarge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)\n\n``` pony\nprimitive val FormatExpLarge is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)\n\n``` pony\nnew val create()\n: FormatExpLarge val^\n```\n\n#### Returns\n\n- [FormatExpLarge](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)\n\n``` pony\nfun box eq(\n  that: FormatExpLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExpLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)\n\n``` pony\nfun box ne(\n  that: FormatExpLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExpLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatExpLarge](https://stdlib.ponylang.io/format-FormatExpLarge)"
- name: FormatExpLarge.create()
  id: format-formatexplarge#create
  summary: null
  belongs_to: FormatExpLarge
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L28)

    ``` pony
    new val create()
    : FormatExpLarge val^
    ```

    #### Returns

    - [FormatExpLarge](index) val^

    ## Public Functions
- name: FormatExpLarge.eq()
  id: format-formatexplarge#eq
  summary: null
  belongs_to: FormatExpLarge
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)

    ``` pony
    fun box eq(
      that: FormatExpLarge val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatExpLarge](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatExpLarge.ne()
  id: format-formatexplarge#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatExpLarge
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)\n\n``` pony\nfun box ne(\n  that: FormatExpLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatExpLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatExpLarge](https://stdlib.ponylang.io/format-FormatExpLarge)"
- name: FormatFix
  id: format-formatfix
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatFix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)\n\n``` pony\nprimitive val FormatFix is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)\n\n``` pony\nnew val create()\n: FormatFix val^\n```\n\n#### Returns\n\n- [FormatFix](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)\n\n``` pony\nfun box eq(\n  that: FormatFix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)\n\n``` pony\nfun box ne(\n  that: FormatFix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatFix](https://stdlib.ponylang.io/format-FormatFix)"
- name: FormatFix.create()
  id: format-formatfix#create
  summary: null
  belongs_to: FormatFix
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L29)

    ``` pony
    new val create()
    : FormatFix val^
    ```

    #### Returns

    - [FormatFix](index) val^

    ## Public Functions
- name: FormatFix.eq()
  id: format-formatfix#eq
  summary: null
  belongs_to: FormatFix
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)

    ``` pony
    fun box eq(
      that: FormatFix val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatFix](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatFix.ne()
  id: format-formatfix#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatFix
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)\n\n``` pony\nfun box ne(\n  that: FormatFix val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFix](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatFix](https://stdlib.ponylang.io/format-FormatFix)"
- name: FormatFixLarge
  id: format-formatfixlarge
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatFixLarge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)\n\n``` pony\nprimitive val FormatFixLarge is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)\n\n``` pony\nnew val create()\n: FormatFixLarge val^\n```\n\n#### Returns\n\n- [FormatFixLarge](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)\n\n``` pony\nfun box eq(\n  that: FormatFixLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFixLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)\n\n``` pony\nfun box ne(\n  that: FormatFixLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFixLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatFixLarge](https://stdlib.ponylang.io/format-FormatFixLarge)"
- name: FormatFixLarge.create()
  id: format-formatfixlarge#create
  summary: null
  belongs_to: FormatFixLarge
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L30)

    ``` pony
    new val create()
    : FormatFixLarge val^
    ```

    #### Returns

    - [FormatFixLarge](index) val^

    ## Public Functions
- name: FormatFixLarge.eq()
  id: format-formatfixlarge#eq
  summary: null
  belongs_to: FormatFixLarge
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)

    ``` pony
    fun box eq(
      that: FormatFixLarge val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatFixLarge](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatFixLarge.ne()
  id: format-formatfixlarge#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatFixLarge
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)\n\n``` pony\nfun box ne(\n  that: FormatFixLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatFixLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatFixLarge](https://stdlib.ponylang.io/format-FormatFixLarge)"
- name: FormatFloat
  id: format-formatfloat
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatFloat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L34)\n\n``` pony\ntype FormatFloat is\n  (FormatDefault val | FormatExp val | FormatExpLarge val | FormatFix val | FormatFixLarge val | FormatGeneral val | FormatGeneralLarge val)\n```\n\n#### Type Alias For\n\n- ([FormatDefault](format-formatdefault) val \\| [FormatExp](format-formatexp) val \\| [FormatExpLarge](format-formatexplarge) val \\| [FormatFix](format-formatfix) val \\| [FormatFixLarge](format-formatfixlarge) val \\| [FormatGeneral](format-formatgeneral) val \\| [FormatGeneralLarge](format-formatgenerallarge) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatFloat](https://stdlib.ponylang.io/format-FormatFloat)"
- name: FormatGeneral
  id: format-formatgeneral
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatGeneral\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)\n\n``` pony\nprimitive val FormatGeneral is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)\n\n``` pony\nnew val create()\n: FormatGeneral val^\n```\n\n#### Returns\n\n- [FormatGeneral](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)\n\n``` pony\nfun box eq(\n  that: FormatGeneral val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneral](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)\n\n``` pony\nfun box ne(\n  that: FormatGeneral val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneral](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatGeneral](https://stdlib.ponylang.io/format-FormatGeneral)"
- name: FormatGeneral.create()
  id: format-formatgeneral#create
  summary: null
  belongs_to: FormatGeneral
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L31)

    ``` pony
    new val create()
    : FormatGeneral val^
    ```

    #### Returns

    - [FormatGeneral](index) val^

    ## Public Functions
- name: FormatGeneral.eq()
  id: format-formatgeneral#eq
  summary: null
  belongs_to: FormatGeneral
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)

    ``` pony
    fun box eq(
      that: FormatGeneral val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatGeneral](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatGeneral.ne()
  id: format-formatgeneral#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatGeneral
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)\n\n``` pony\nfun box ne(\n  that: FormatGeneral val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneral](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatGeneral](https://stdlib.ponylang.io/format-FormatGeneral)"
- name: FormatGeneralLarge
  id: format-formatgenerallarge
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatGeneralLarge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)\n\n``` pony\nprimitive val FormatGeneralLarge is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)\n\n``` pony\nnew val create()\n: FormatGeneralLarge val^\n```\n\n#### Returns\n\n- [FormatGeneralLarge](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L34)\n\n``` pony\nfun box eq(\n  that: FormatGeneralLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneralLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L34)\n\n``` pony\nfun box ne(\n  that: FormatGeneralLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneralLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatGeneralLarge](https://stdlib.ponylang.io/format-FormatGeneralLarge)"
- name: FormatGeneralLarge.create()
  id: format-formatgenerallarge#create
  summary: null
  belongs_to: FormatGeneralLarge
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L32)

    ``` pony
    new val create()
    : FormatGeneralLarge val^
    ```

    #### Returns

    - [FormatGeneralLarge](index) val^

    ## Public Functions
- name: FormatGeneralLarge.eq()
  id: format-formatgenerallarge#eq
  summary: null
  belongs_to: FormatGeneralLarge
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L34)

    ``` pony
    fun box eq(
      that: FormatGeneralLarge val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatGeneralLarge](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatGeneralLarge.ne()
  id: format-formatgenerallarge#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatGeneralLarge
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L34)\n\n``` pony\nfun box ne(\n  that: FormatGeneralLarge val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatGeneralLarge](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatGeneralLarge](https://stdlib.ponylang.io/format-FormatGeneralLarge)"
- name: FormatHex
  id: format-formathex
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatHex\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)\n\n``` pony\nprimitive val FormatHex is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)\n\n``` pony\nnew val create()\n: FormatHex val^\n```\n\n#### Returns\n\n- [FormatHex](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)\n\n``` pony\nfun box eq(\n  that: FormatHex val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHex](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)\n\n``` pony\nfun box ne(\n  that: FormatHex val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHex](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHex](https://stdlib.ponylang.io/format-FormatHex)"
- name: FormatHex.create()
  id: format-formathex#create
  summary: null
  belongs_to: FormatHex
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)

    ``` pony
    new val create()
    : FormatHex val^
    ```

    #### Returns

    - [FormatHex](index) val^

    ## Public Functions
- name: FormatHex.eq()
  id: format-formathex#eq
  summary: null
  belongs_to: FormatHex
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)

    ``` pony
    fun box eq(
      that: FormatHex val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatHex](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatHex.ne()
  id: format-formathex#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatHex
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)\n\n``` pony\nfun box ne(\n  that: FormatHex val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHex](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHex](https://stdlib.ponylang.io/format-FormatHex)"
- name: FormatHexBare
  id: format-formathexbare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatHexBare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)\n\n``` pony\nprimitive val FormatHexBare is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)\n\n``` pony\nnew val create()\n: FormatHexBare val^\n```\n\n#### Returns\n\n- [FormatHexBare](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)\n\n``` pony\nfun box eq(\n  that: FormatHexBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)\n\n``` pony\nfun box ne(\n  that: FormatHexBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexBare](https://stdlib.ponylang.io/format-FormatHexBare)"
- name: FormatHexBare.create()
  id: format-formathexbare#create
  summary: null
  belongs_to: FormatHexBare
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L11)

    ``` pony
    new val create()
    : FormatHexBare val^
    ```

    #### Returns

    - [FormatHexBare](index) val^

    ## Public Functions
- name: FormatHexBare.eq()
  id: format-formathexbare#eq
  summary: null
  belongs_to: FormatHexBare
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)

    ``` pony
    fun box eq(
      that: FormatHexBare val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatHexBare](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatHexBare.ne()
  id: format-formathexbare#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatHexBare
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)\n\n``` pony\nfun box ne(\n  that: FormatHexBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexBare](https://stdlib.ponylang.io/format-FormatHexBare)"
- name: FormatHexSmall
  id: format-formathexsmall
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatHexSmall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)\n\n``` pony\nprimitive val FormatHexSmall is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)\n\n``` pony\nnew val create()\n: FormatHexSmall val^\n```\n\n#### Returns\n\n- [FormatHexSmall](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)\n\n``` pony\nfun box eq(\n  that: FormatHexSmall val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmall](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)\n\n``` pony\nfun box ne(\n  that: FormatHexSmall val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmall](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexSmall](https://stdlib.ponylang.io/format-FormatHexSmall)"
- name: FormatHexSmall.create()
  id: format-formathexsmall#create
  summary: null
  belongs_to: FormatHexSmall
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L12)

    ``` pony
    new val create()
    : FormatHexSmall val^
    ```

    #### Returns

    - [FormatHexSmall](index) val^

    ## Public Functions
- name: FormatHexSmall.eq()
  id: format-formathexsmall#eq
  summary: null
  belongs_to: FormatHexSmall
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)

    ``` pony
    fun box eq(
      that: FormatHexSmall val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatHexSmall](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatHexSmall.ne()
  id: format-formathexsmall#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatHexSmall
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)\n\n``` pony\nfun box ne(\n  that: FormatHexSmall val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmall](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexSmall](https://stdlib.ponylang.io/format-FormatHexSmall)"
- name: FormatHexSmallBare
  id: format-formathexsmallbare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatHexSmallBare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)\n\n``` pony\nprimitive val FormatHexSmallBare is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)\n\n``` pony\nnew val create()\n: FormatHexSmallBare val^\n```\n\n#### Returns\n\n- [FormatHexSmallBare](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L15)\n\n``` pony\nfun box eq(\n  that: FormatHexSmallBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmallBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L15)\n\n``` pony\nfun box ne(\n  that: FormatHexSmallBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmallBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexSmallBare](https://stdlib.ponylang.io/format-FormatHexSmallBare)"
- name: FormatHexSmallBare.create()
  id: format-formathexsmallbare#create
  summary: null
  belongs_to: FormatHexSmallBare
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L13)

    ``` pony
    new val create()
    : FormatHexSmallBare val^
    ```

    #### Returns

    - [FormatHexSmallBare](index) val^

    ## Public Functions
- name: FormatHexSmallBare.eq()
  id: format-formathexsmallbare#eq
  summary: null
  belongs_to: FormatHexSmallBare
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L15)

    ``` pony
    fun box eq(
      that: FormatHexSmallBare val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatHexSmallBare](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatHexSmallBare.ne()
  id: format-formathexsmallbare#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatHexSmallBare
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L15)\n\n``` pony\nfun box ne(\n  that: FormatHexSmallBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatHexSmallBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatHexSmallBare](https://stdlib.ponylang.io/format-FormatHexSmallBare)"
- name: FormatInt
  id: format-formatint
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatInt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L15)\n\n``` pony\ntype FormatInt is\n  (FormatDefault val | FormatUTF32 val | FormatBinary val | FormatBinaryBare val | FormatOctal val | FormatOctalBare val | FormatHex val | FormatHexBare val | FormatHexSmall val | FormatHexSmallBare val)\n```\n\n#### Type Alias For\n\n- ([FormatDefault](format-formatdefault) val \\| [FormatUTF32](format-formatutf32) val \\| [FormatBinary](format-formatbinary) val \\| [FormatBinaryBare](format-formatbinarybare) val \\| [FormatOctal](format-formatoctal) val \\| [FormatOctalBare](format-formatoctalbare) val \\| [FormatHex](format-formathex) val \\| [FormatHexBare](format-formathexbare) val \\| [FormatHexSmall](format-formathexsmall) val \\| [FormatHexSmallBare](format-formathexsmallbare) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatInt](https://stdlib.ponylang.io/format-FormatInt)"
- name: FormatOctal
  id: format-formatoctal
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatOctal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)\n\n``` pony\nprimitive val FormatOctal is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)\n\n``` pony\nnew val create()\n: FormatOctal val^\n```\n\n#### Returns\n\n- [FormatOctal](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)\n\n``` pony\nfun box eq(\n  that: FormatOctal val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctal](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)\n\n``` pony\nfun box ne(\n  that: FormatOctal val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctal](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatOctal](https://stdlib.ponylang.io/format-FormatOctal)"
- name: FormatOctal.create()
  id: format-formatoctal#create
  summary: null
  belongs_to: FormatOctal
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L8)

    ``` pony
    new val create()
    : FormatOctal val^
    ```

    #### Returns

    - [FormatOctal](index) val^

    ## Public Functions
- name: FormatOctal.eq()
  id: format-formatoctal#eq
  summary: null
  belongs_to: FormatOctal
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)

    ``` pony
    fun box eq(
      that: FormatOctal val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatOctal](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatOctal.ne()
  id: format-formatoctal#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatOctal
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)\n\n``` pony\nfun box ne(\n  that: FormatOctal val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctal](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatOctal](https://stdlib.ponylang.io/format-FormatOctal)"
- name: FormatOctalBare
  id: format-formatoctalbare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatOctalBare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)\n\n``` pony\nprimitive val FormatOctalBare is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)\n\n``` pony\nnew val create()\n: FormatOctalBare val^\n```\n\n#### Returns\n\n- [FormatOctalBare](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)\n\n``` pony\nfun box eq(\n  that: FormatOctalBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctalBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)\n\n``` pony\nfun box ne(\n  that: FormatOctalBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctalBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatOctalBare](https://stdlib.ponylang.io/format-FormatOctalBare)"
- name: FormatOctalBare.create()
  id: format-formatoctalbare#create
  summary: null
  belongs_to: FormatOctalBare
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L9)

    ``` pony
    new val create()
    : FormatOctalBare val^
    ```

    #### Returns

    - [FormatOctalBare](index) val^

    ## Public Functions
- name: FormatOctalBare.eq()
  id: format-formatoctalbare#eq
  summary: null
  belongs_to: FormatOctalBare
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)

    ``` pony
    fun box eq(
      that: FormatOctalBare val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatOctalBare](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatOctalBare.ne()
  id: format-formatoctalbare#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatOctalBare
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L10)\n\n``` pony\nfun box ne(\n  that: FormatOctalBare val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatOctalBare](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatOctalBare](https://stdlib.ponylang.io/format-FormatOctalBare)"
- name: FormatSpec
  id: format-formatspec
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatSpec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L1)\n\n``` pony\ntrait val FormatSpec\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatSpec](https://stdlib.ponylang.io/format-FormatSpec)"
- name: FormatUTF32
  id: format-formatutf32
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# FormatUTF32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)\n\n``` pony\nprimitive val FormatUTF32 is\n  FormatSpec val\n```\n\n#### Implements\n\n- [FormatSpec](format-formatspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)\n\n``` pony\nnew val create()\n: FormatUTF32 val^\n```\n\n#### Returns\n\n- [FormatUTF32](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)\n\n``` pony\nfun box eq(\n  that: FormatUTF32 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatUTF32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)\n\n``` pony\nfun box ne(\n  that: FormatUTF32 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatUTF32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatUTF32](https://stdlib.ponylang.io/format-FormatUTF32)"
- name: FormatUTF32.create()
  id: format-formatutf32#create
  summary: null
  belongs_to: FormatUTF32
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L5)

    ``` pony
    new val create()
    : FormatUTF32 val^
    ```

    #### Returns

    - [FormatUTF32](index) val^

    ## Public Functions
- name: FormatUTF32.eq()
  id: format-formatutf32#eq
  summary: null
  belongs_to: FormatUTF32
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)

    ``` pony
    fun box eq(
      that: FormatUTF32 val)
    : Bool val
    ```

    #### Parameters

    - that: [FormatUTF32](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: FormatUTF32.ne()
  id: format-formatutf32#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FormatUTF32
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/format_spec/#L6)\n\n``` pony\nfun box ne(\n  that: FormatUTF32 val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [FormatUTF32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-FormatUTF32](https://stdlib.ponylang.io/format-FormatUTF32)"
- name: Fulfill
  id: promises-fulfill
  summary: A function from A to B that is called when a promise is fulfilled
  description: "# Fulfill\\[A: [Any](builtin-any) \\#share, B: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L4)\n\nA function from A to B that is called when a promise is fulfilled.\n\n``` pony\ninterface iso Fulfill[A: Any #share, B: Any #share]\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L8)\n\n``` pony\nfun ref apply(\n  value: A)\n: B ?\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- B ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Fulfill](https://stdlib.ponylang.io/promises-Fulfill)"
- name: Fulfill.apply()
  id: promises-fulfill#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Fulfill
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L8)\n\n``` pony\nfun ref apply(\n  value: A)\n: B ?\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- B ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Fulfill](https://stdlib.ponylang.io/promises-Fulfill)"
- name: FulfillIdentity
  id: promises-fulfillidentity
  summary: An identity function for fulfilling promises
  description: "# FulfillIdentity\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L16)\n\nAn identity function for fulfilling promises.\n\n``` pony\nclass iso FulfillIdentity[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L16)\n\n``` pony\nnew iso create()\n: FulfillIdentity[A] iso^\n```\n\n#### Returns\n\n- [FulfillIdentity](index)\\[A\\] iso^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L20)\n\n``` pony\nfun ref apply(\n  value: A)\n: A\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-FulfillIdentity](https://stdlib.ponylang.io/promises-FulfillIdentity)"
- name: FulfillIdentity.apply()
  id: promises-fulfillidentity#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: FulfillIdentity
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L20)\n\n``` pony\nfun ref apply(\n  value: A)\n: A\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- A\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-FulfillIdentity](https://stdlib.ponylang.io/promises-FulfillIdentity)"
- name: FulfillIdentity.create()
  id: promises-fulfillidentity#create
  summary: null
  belongs_to: FulfillIdentity
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/promises/fulfill/#L16)

    ``` pony
    new iso create()
    : FulfillIdentity[A] iso^
    ```

    #### Returns

    - [FulfillIdentity](index)\[A\] iso^

    ## Public Functions
- name: Greater
  id: builtin-greater
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Greater\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L9)\n\n``` pony\nprimitive val Greater is\n  Equatable[(Less val | Equal val | Greater val)] ref\n```\n\n#### Implements\n\n- [Equatable](builtin-equatable)\\[([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](index) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L9)\n\n``` pony\nnew val create()\n: Greater val^\n```\n\n#### Returns\n\n- [Greater](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L10)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)\n\n``` pony\nfun box eq(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Greater](https://stdlib.ponylang.io/builtin-Greater)"
- name: Greater.create()
  id: builtin-greater#create
  summary: null
  belongs_to: Greater
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L9)

    ``` pony
    new val create()
    : Greater val^
    ```

    #### Returns

    - [Greater](index) val^

    ## Public Functions
- name: Greater.eq()
  id: builtin-greater#eq
  summary: null
  belongs_to: Greater
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)

    ``` pony
    fun box eq(
      that: (Less val | Equal val | Greater val))
    : Bool val
    ```

    #### Parameters

    - that: ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](index) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Greater.ne()
  id: builtin-greater#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Greater
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Greater](https://stdlib.ponylang.io/builtin-Greater)"
- name: Greater.string()
  id: builtin-greater#string
  summary: null
  belongs_to: Greater
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L10)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: HasEq
  id: builtin-haseq
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# HasEq\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L15)\n\n``` pony\ninterface ref HasEq[A: A]\n```\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L16)\n\n``` pony\nfun box eq(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-HasEq](https://stdlib.ponylang.io/builtin-HasEq)"
- name: HasEq.eq()
  id: builtin-haseq#eq
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HasEq
  description: "### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L16)\n\n``` pony\nfun box eq(\n  that: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-HasEq](https://stdlib.ponylang.io/builtin-HasEq)"
- name: Hashable
  id: collections-hashable
  summary: Anything with a hash method is hashable
  description: "# Hashable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L1)\n\nAnything with a hash method is hashable.\n\n``` pony\ninterface ref Hashable\n```\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L5)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Hashable](https://stdlib.ponylang.io/collections-Hashable)"
- name: Hashable.hash()
  id: collections-hashable#hash
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Hashable
  description: "### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L5)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Hashable](https://stdlib.ponylang.io/collections-Hashable)"
- name: Hashable64
  id: collections-hashable64
  summary: A version of Hashable that returns 64-bit hashes on every platform
  description: "# Hashable64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L7)\n\nA version of Hashable that returns 64-bit hashes on every platform.\n\n``` pony\ninterface ref Hashable64\n```\n\n## Public Functions\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L11)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Hashable64](https://stdlib.ponylang.io/collections-Hashable64)"
- name: Hashable64.hash64()
  id: collections-hashable64#hash64
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Hashable64
  description: "### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L11)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Hashable64](https://stdlib.ponylang.io/collections-Hashable64)"
- name: HashByteSeq
  id: collections-hashbyteseq
  summary: Hash and equality functions for arbitrary ByteSeq
  description: "# HashByteSeq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L103)\n\nHash and equality functions for arbitrary ByteSeq.\n\n``` pony\nprimitive val HashByteSeq is\n  HashFunction[(String box | Array[U8 val] box)] val,\n  HashFunction64[(String box | Array[U8 val] box)] val\n```\n\n#### Implements\n\n- [HashFunction](collections-hashfunction)\\[([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\\] val\n- [HashFunction64](collections-hashfunction64)\\[([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L103)\n\n``` pony\nnew val create()\n: HashByteSeq val^\n```\n\n#### Returns\n\n- [HashByteSeq](index) val^\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L108)\n\n``` pony\nfun box hash(\n  x: (String box | Array[U8 val] box))\n: USize val\n```\n\n#### Parameters\n\n- x: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L111)\n\n``` pony\nfun box hash64(\n  x: (String box | Array[U8 val] box))\n: U64 val\n```\n\n#### Parameters\n\n- x: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L114)\n\n``` pony\nfun box eq(\n  x: (String box | Array[U8 val] box),\n  y: (String box | Array[U8 val] box))\n: Bool val\n```\n\n#### Parameters\n\n- x: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n- y: ([String](builtin-string) box \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] box)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L108)\n\n``` pony\nfun box ne(\n  that: HashByteSeq val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashByteSeq](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashByteSeq](https://stdlib.ponylang.io/collections-HashByteSeq)"
- name: HashByteSeq.create()
  id: collections-hashbyteseq#create
  summary: null
  belongs_to: HashByteSeq
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L103)

    ``` pony
    new val create()
    : HashByteSeq val^
    ```

    #### Returns

    - [HashByteSeq](index) val^

    ## Public Functions
- name: HashByteSeq.eq()
  id: collections-hashbyteseq#eq
  summary: null
  belongs_to: HashByteSeq
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L114)

    ``` pony
    fun box eq(
      x: (String box | Array[U8 val] box),
      y: (String box | Array[U8 val] box))
    : Bool val
    ```

    #### Parameters

    - x: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)
    - y: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashByteSeq.hash()
  id: collections-hashbyteseq#hash
  summary: null
  belongs_to: HashByteSeq
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L108)

    ``` pony
    fun box hash(
      x: (String box | Array[U8 val] box))
    : USize val
    ```

    #### Parameters

    - x: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [USize](builtin-usize) val
- name: HashByteSeq.hash64()
  id: collections-hashbyteseq#hash64
  summary: null
  belongs_to: HashByteSeq
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L111)

    ``` pony
    fun box hash64(
      x: (String box | Array[U8 val] box))
    : U64 val
    ```

    #### Parameters

    - x: ([String](builtin-string) box \| [Array](builtin-array)\[[U8](builtin-u8) val\] box)

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: HashByteSeq.ne()
  id: collections-hashbyteseq#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashByteSeq
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L108)\n\n``` pony\nfun box ne(\n  that: HashByteSeq val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashByteSeq](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashByteSeq](https://stdlib.ponylang.io/collections-HashByteSeq)"
- name: HashEq
  id: collections-hasheq
  summary: Use the hash function from the type parameter
  description: "# HashEq\\[A: ([Hashable](collections-hashable) \\#read & [Equatable](builtin-equatable)\\[A\\] \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L57)\n\n``` pony\nprimitive val HashEq[A: (Hashable #read & Equatable[A] #read)] is\n  HashFunction[A] val\n```\n\n#### Implements\n\n- [HashFunction](collections-hashfunction)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L57)\n\n``` pony\nnew val create()\n: HashEq[A] val^\n```\n\n#### Returns\n\n- [HashEq](index)\\[A\\] val^\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L58)\n\nUse the hash function from the type parameter.\n\n``` pony\nfun box hash(\n  x: box->A)\n: USize val\n```\n\n#### Parameters\n\n- x: box-\\>A\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L64)\n\nUse the structural equality function from the type parameter.\n\n``` pony\nfun box eq(\n  x: box->A,\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L58)\n\n``` pony\nfun box ne(\n  that: HashEq[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashEq](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashEq](https://stdlib.ponylang.io/collections-HashEq)"
- name: HashEq.create()
  id: collections-hasheq#create
  summary: null
  belongs_to: HashEq
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L57)

    ``` pony
    new val create()
    : HashEq[A] val^
    ```

    #### Returns

    - [HashEq](index)\[A\] val^

    ## Public Functions
- name: HashEq.eq()
  id: collections-hasheq#eq
  summary: Use the structural equality function from the type parameter
  belongs_to: HashEq
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L64)

    Use the structural equality function from the type parameter.

    ``` pony
    fun box eq(
      x: box->A,
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - x: box-\>A
    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashEq.hash()
  id: collections-hasheq#hash
  summary: Use the hash function from the type parameter
  belongs_to: HashEq
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L58)

    Use the hash function from the type parameter.

    ``` pony
    fun box hash(
      x: box->A)
    : USize val
    ```

    #### Parameters

    - x: box-\>A

    #### Returns

    - [USize](builtin-usize) val
- name: HashEq.ne()
  id: collections-hasheq#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashEq
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L58)\n\n``` pony\nfun box ne(\n  that: HashEq[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashEq](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashEq](https://stdlib.ponylang.io/collections-HashEq)"
- name: HashEq64
  id: collections-hasheq64
  summary: Use the hash function from the type parameter
  description: "# HashEq64\\[A: ([Hashable64](collections-hashable64) \\#read & [Equatable](builtin-equatable)\\[A\\] \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L70)\n\n``` pony\nprimitive val HashEq64[A: (Hashable64 #read & Equatable[A] #read)] is\n  HashFunction64[A] val\n```\n\n#### Implements\n\n- [HashFunction64](collections-hashfunction64)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L70)\n\n``` pony\nnew val create()\n: HashEq64[A] val^\n```\n\n#### Returns\n\n- [HashEq64](index)\\[A\\] val^\n\n## Public Functions\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L72)\n\nUse the hash function from the type parameter.\n\n``` pony\nfun box hash64(\n  x: box->A)\n: U64 val\n```\n\n#### Parameters\n\n- x: box-\\>A\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L78)\n\nUse the structural equality function from the type parameter.\n\n``` pony\nfun box eq(\n  x: box->A,\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L72)\n\n``` pony\nfun box ne(\n  that: HashEq64[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashEq64](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashEq64](https://stdlib.ponylang.io/collections-HashEq64)"
- name: HashEq64.create()
  id: collections-hasheq64#create
  summary: null
  belongs_to: HashEq64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L70)

    ``` pony
    new val create()
    : HashEq64[A] val^
    ```

    #### Returns

    - [HashEq64](index)\[A\] val^

    ## Public Functions
- name: HashEq64.eq()
  id: collections-hasheq64#eq
  summary: Use the structural equality function from the type parameter
  belongs_to: HashEq64
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L78)

    Use the structural equality function from the type parameter.

    ``` pony
    fun box eq(
      x: box->A,
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - x: box-\>A
    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashEq64.hash64()
  id: collections-hasheq64#hash64
  summary: Use the hash function from the type parameter
  belongs_to: HashEq64
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L72)

    Use the hash function from the type parameter.

    ``` pony
    fun box hash64(
      x: box->A)
    : U64 val
    ```

    #### Parameters

    - x: box-\>A

    #### Returns

    - [U64](builtin-u64) val
- name: HashEq64.ne()
  id: collections-hasheq64#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashEq64
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L72)\n\n``` pony\nfun box ne(\n  that: HashEq64[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashEq64](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashEq64](https://stdlib.ponylang.io/collections-HashEq64)"
- name: HashFunction
  id: collections-hashfunction
  summary: A pluggable hash function
  description: "# HashFunction\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L13)\n\nA pluggable hash function.\n\n``` pony\ninterface val HashFunction[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L17)\n\nData structures create instances internally. Use a primitive if possible.\n\n``` pony\nnew val create()\n: HashFunction[A] val^\n```\n\n#### Returns\n\n- [HashFunction](index)\\[A\\] val^\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L22)\n\nCalculate the hash of some type. This is an alias of the type parameter to allow data structures to hash things without consuming them.\n\n``` pony\nfun box hash(\n  x: box->A!)\n: USize val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L28)\n\nDetermine equality between two keys with the same hash. This is done with viewpoint adapted aliases to allow data structures to determine equality in a box fun without consuming keys.\n\n``` pony\nfun box eq(\n  x: box->A!,\n  y: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n- y: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashFunction](https://stdlib.ponylang.io/collections-HashFunction)"
- name: HashFunction.create()
  id: collections-hashfunction#create
  summary: Data structures create instances internally
  belongs_to: HashFunction
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L17)

    Data structures create instances internally. Use a primitive if possible.

    ``` pony
    new val create()
    : HashFunction[A] val^
    ```

    #### Returns

    - [HashFunction](index)\[A\] val^

    ## Public Functions
- name: HashFunction.eq()
  id: collections-hashfunction#eq
  summary: Determine equality between two keys with the same hash
  belongs_to: HashFunction
  description: "### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L28)\n\nDetermine equality between two keys with the same hash. This is done with viewpoint adapted aliases to allow data structures to determine equality in a box fun without consuming keys.\n\n``` pony\nfun box eq(\n  x: box->A!,\n  y: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n- y: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashFunction](https://stdlib.ponylang.io/collections-HashFunction)"
- name: HashFunction.hash()
  id: collections-hashfunction#hash
  summary: Calculate the hash of some type
  belongs_to: HashFunction
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L22)

    Calculate the hash of some type. This is an alias of the type parameter to allow data structures to hash things without consuming them.

    ``` pony
    fun box hash(
      x: box->A!)
    : USize val
    ```

    #### Parameters

    - x: box-\>A!

    #### Returns

    - [USize](builtin-usize) val
- name: HashFunction64
  id: collections-hashfunction64
  summary: A pluggable hash function with 64-bit hashes
  description: "# HashFunction64\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L35)\n\nA pluggable hash function with 64-bit hashes.\n\n``` pony\ninterface val HashFunction64[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L39)\n\nData structures create instances internally. Use a primitive if possible.\n\n``` pony\nnew val create()\n: HashFunction64[A] val^\n```\n\n#### Returns\n\n- [HashFunction64](index)\\[A\\] val^\n\n## Public Functions\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L44)\n\nCalculate the hash of some type. This is an alias of the type parameter to allow data structures to hash things without consuming them.\n\n``` pony\nfun box hash64(\n  x: box->A!)\n: U64 val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L50)\n\nDetermine equality between two keys with the same hash. This is done with viewpoint adapted aliases to allow data structures to determine equality in a box fun without consuming keys.\n\n``` pony\nfun box eq(\n  x: box->A!,\n  y: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n- y: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashFunction64](https://stdlib.ponylang.io/collections-HashFunction64)"
- name: HashFunction64.create()
  id: collections-hashfunction64#create
  summary: Data structures create instances internally
  belongs_to: HashFunction64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L39)

    Data structures create instances internally. Use a primitive if possible.

    ``` pony
    new val create()
    : HashFunction64[A] val^
    ```

    #### Returns

    - [HashFunction64](index)\[A\] val^

    ## Public Functions
- name: HashFunction64.eq()
  id: collections-hashfunction64#eq
  summary: Determine equality between two keys with the same hash
  belongs_to: HashFunction64
  description: "### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L50)\n\nDetermine equality between two keys with the same hash. This is done with viewpoint adapted aliases to allow data structures to determine equality in a box fun without consuming keys.\n\n``` pony\nfun box eq(\n  x: box->A!,\n  y: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n- y: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashFunction64](https://stdlib.ponylang.io/collections-HashFunction64)"
- name: HashFunction64.hash64()
  id: collections-hashfunction64#hash64
  summary: Calculate the hash of some type
  belongs_to: HashFunction64
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L44)

    Calculate the hash of some type. This is an alias of the type parameter to allow data structures to hash things without consuming them.

    ``` pony
    fun box hash64(
      x: box->A!)
    : U64 val
    ```

    #### Parameters

    - x: box-\>A!

    #### Returns

    - [U64](builtin-u64) val
- name: HashIs
  id: collections-hashis
  summary: Hash the identity rather than the contents
  description: "# HashIs\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L84)\n\n``` pony\nprimitive val HashIs[A: A] is\n  HashFunction[A] val,\n  HashFunction64[A] val\n```\n\n#### Implements\n\n- [HashFunction](collections-hashfunction)\\[A\\] val\n- [HashFunction64](collections-hashfunction64)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L84)\n\n``` pony\nnew val create()\n: HashIs[A] val^\n```\n\n#### Returns\n\n- [HashIs](index)\\[A\\] val^\n\n## Public Functions\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L85)\n\nHash the identity rather than the contents.\n\n``` pony\nfun box hash(\n  x: box->A!)\n: USize val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L91)\n\nHash the identity rather than the contents.\n\n``` pony\nfun box hash64(\n  x: box->A!)\n: U64 val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L97)\n\nDetermine equality by identity rather than structurally.\n\n``` pony\nfun box eq(\n  x: box->A!,\n  y: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- x: box-\\>A!\n- y: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L85)\n\n``` pony\nfun box ne(\n  that: HashIs[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashIs](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashIs](https://stdlib.ponylang.io/collections-HashIs)"
- name: HashIs.create()
  id: collections-hashis#create
  summary: null
  belongs_to: HashIs
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L84)

    ``` pony
    new val create()
    : HashIs[A] val^
    ```

    #### Returns

    - [HashIs](index)\[A\] val^

    ## Public Functions
- name: HashIs.eq()
  id: collections-hashis#eq
  summary: Determine equality by identity rather than structurally
  belongs_to: HashIs
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L97)

    Determine equality by identity rather than structurally.

    ``` pony
    fun box eq(
      x: box->A!,
      y: box->A!)
    : Bool val
    ```

    #### Parameters

    - x: box-\>A!
    - y: box-\>A!

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashIs.hash()
  id: collections-hashis#hash
  summary: Hash the identity rather than the contents
  belongs_to: HashIs
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L85)

    Hash the identity rather than the contents.

    ``` pony
    fun box hash(
      x: box->A!)
    : USize val
    ```

    #### Parameters

    - x: box-\>A!

    #### Returns

    - [USize](builtin-usize) val
- name: HashIs.hash64()
  id: collections-hashis#hash64
  summary: Hash the identity rather than the contents
  belongs_to: HashIs
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/collections/hashable/#L91)

    Hash the identity rather than the contents.

    ``` pony
    fun box hash64(
      x: box->A!)
    : U64 val
    ```

    #### Parameters

    - x: box-\>A!

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: HashIs.ne()
  id: collections-hashis#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashIs
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/hashable/#L85)\n\n``` pony\nfun box ne(\n  that: HashIs[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashIs](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashIs](https://stdlib.ponylang.io/collections-HashIs)"
- name: HashMap
  id: collections-hashmap
  summary: A quadratic probing hash map
  description: "# HashMap\\[K: K, V: V, H: [HashFunction](collections-hashfunction)\\[K\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L15)\n\nA quadratic probing hash map. Resize occurs at a load factor of 0.75. A resized map has 2 times the space. The hash function can be plugged in to the type to create different kinds of maps.\n\n``` pony\nclass ref HashMap[K: K, V: V, H: HashFunction[K] val]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L24)\n\nCreate an array with space for prealloc elements without triggering a resize. Defaults to 6.\n\n``` pony\nnew ref create(\n  prealloc: USize val = 6)\n: HashMap[K, V, H] ref^\n```\n\n#### Parameters\n\n- prealloc: [USize](builtin-usize) val = 6\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] ref^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L33)\n\nThe number of items in the map.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### space\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L39)\n\nThe available space in the map. Resize will happen when size / space \\>= 0.75.\n\n``` pony\nfun box space()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L46)\n\nGets a value from the map. Raises an error if no such item exists.\n\n``` pony\nfun box apply(\n  key: box->K!)\n: this->V ?\n```\n\n#### Parameters\n\n- key: box-\\>K!\n\n#### Returns\n\n- this-\\>V ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L58)\n\nSets a value in the map. Returns the old value if there was one, otherwise returns None. If there was no previous value, this may trigger a resize.\n\n``` pony\nfun ref update(\n  key: K,\n  value: V)\n: (V^ | None val)\n```\n\n#### Parameters\n\n- key: K\n- value: V\n\n#### Returns\n\n- (V^ \\| [None](builtin-none) val)\n\n### upsert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L78)\n\nCombines a provided value with the current value for the provided key using the provided function. If the provided key has not been added to the map yet, it sets its value to the provided value and ignores the provided function.\n\nAs a simple example, say we had a map with I64 values and we wanted to add 4 to the current value for key \"test\", which let's say is currently 2. We call\n\nm.upsert(\"test\", 4, {(current, provided) =\\> current + provided })\n\nThis changes the value associated with \"test\" to 6.\n\nIf we have not yet added the key \"new-key\" to the map and we call\n\nm.upsert(\"new-key\", 4, {(current, provided) =\\> current + provided })\n\nthen \"new-key\" is added to the map with a value of 4.\n\nReturns the value that we set the key to\n\n``` pony\nfun ref upsert(\n  key: K,\n  value: V,\n  f: {(V, V): V^}[K, V, H] box)\n: V\n```\n\n#### Parameters\n\n- key: K\n- value: V\n- f: {(V, V): V^}\\[K, V, H\\] box\n\n#### Returns\n\n- V\n\n### insert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L132)\n\nSet a value in the map. Returns the new value, allowing reuse.\n\n``` pony\nfun ref insert(\n  key: K,\n  value: V)\n: V!\n```\n\n#### Parameters\n\n- key: K\n- value: V\n\n#### Returns\n\n- V!\n\n### insert_if_absent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L156)\n\nSet a value in the map if the key doesn't already exist in the Map. Saves an extra lookup when doing a pattern like:\n\n``` pony\nif not my_map.contains(my_key) then\n  my_map(my_key) = my_value\nend\n```\n\nReturns the value, the same as `insert`, allowing 'insert_if_absent' to be used as a drop-in replacement for `insert`.\n\n``` pony\nfun ref insert_if_absent(\n  key: K,\n  value: V)\n: V\n```\n\n#### Parameters\n\n- key: K\n- value: V\n\n#### Returns\n\n- V\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L192)\n\nDelete a value from the map and return it. Raises an error if there was no value for the given key.\n\n``` pony\nfun ref remove(\n  key: box->K!)\n: (K^ , V^) ?\n```\n\n#### Parameters\n\n- key: box-\\>K!\n\n#### Returns\n\n- (K^ , V^) ?\n\n### get_or_else\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L211)\n\nGet the value associated with provided key if present. Otherwise, return the provided alternate value.\n\n``` pony\nfun box get_or_else(\n  key: box->K!,\n  alt: this->V)\n: this->V\n```\n\n#### Parameters\n\n- key: box-\\>K!\n- alt: this-\\>V\n\n#### Returns\n\n- this-\\>V\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L230)\n\nChecks whether the map contains the key k\n\n``` pony\nfun box contains(\n  k: box->K!)\n: Bool val\n```\n\n#### Parameters\n\n- k: box-\\>K!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L237)\n\nAdd K, V pairs from the iterator to the map.\n\n``` pony\nfun ref concat(\n  iter: Iterator[(K^ , V^)] ref)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[(K^ , V^)\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### add\\[optional H2: [HashFunction](collections-hashfunction)\\[this-\\>K!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L245)\n\nThis with the new (key, value) mapping.\n\n``` pony\nfun box add[optional H2: HashFunction[this->K!] val](\n  key: this->K!,\n  value: this->V!)\n: HashMap[this->K!, this->V!, H2] ref^\n```\n\n#### Parameters\n\n- key: this-\\>K!\n- value: this-\\>V!\n\n#### Returns\n\n- [HashMap](index)\\[this-\\>K!, this-\\>V!, H2\\] ref^\n\n### sub\\[optional H2: [HashFunction](collections-hashfunction)\\[this-\\>K!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L257)\n\nThis without the given key.\n\n``` pony\nfun box sub[optional H2: HashFunction[this->K!] val](\n  key: this->K!)\n: HashMap[this->K!, this->V!, H2] ref^\n```\n\n#### Parameters\n\n- key: this-\\>K!\n\n#### Returns\n\n- [HashMap](index)\\[this-\\>K!, this-\\>V!, H2\\] ref^\n\n### next_index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L267)\n\nGiven an index, return the next index that has a populated key and value. Raise an error if there is no next populated index.\n\n``` pony\nfun box next_index(\n  prev: USize val = call)\n: USize val ?\n```\n\n#### Parameters\n\n- prev: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L279)\n\nReturns the key and value at a given index. Raise an error if the index is not populated.\n\n``` pony\nfun box index(\n  i: USize val)\n: (this->K , this->V) ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- (this-\\>K , this-\\>V) ?\n\n### compact\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L286)\n\nMinimise the memory used for the map.\n\n``` pony\nfun ref compact()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clone\\[optional H2: [HashFunction](collections-hashfunction)\\[this-\\>K!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L292)\n\nCreate a clone. The key and value types may be different due to aliasing and viewpoint adaptation.\n\n``` pony\nfun box clone[optional H2: HashFunction[this->K!] val]()\n: HashMap[this->K!, this->V!, H2] ref^\n```\n\n#### Returns\n\n- [HashMap](index)\\[this-\\>K!, this-\\>V!, H2\\] ref^\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L306)\n\nRemove all entries.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### keys\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L370)\n\nReturn an iterator over the keys.\n\n``` pony\nfun box keys()\n: MapKeys[K, V, H, this->HashMap[K, V, H] ref] ref^\n```\n\n#### Returns\n\n- [MapKeys](collections-mapkeys)\\[K, V, H, this-\\>[HashMap](index)\\[K, V, H\\] ref\\] ref^\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L376)\n\nReturn an iterator over the values.\n\n``` pony\nfun box values()\n: MapValues[K, V, H, this->HashMap[K, V, H] ref] ref^\n```\n\n#### Returns\n\n- [MapValues](collections-mapvalues)\\[K, V, H, this-\\>[HashMap](index)\\[K, V, H\\] ref\\] ref^\n\n### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L382)\n\nReturn an iterator over the keys and values.\n\n``` pony\nfun box pairs()\n: MapPairs[K, V, H, this->HashMap[K, V, H] ref] ref^\n```\n\n#### Returns\n\n- [MapPairs](collections-mappairs)\\[K, V, H, this-\\>[HashMap](index)\\[K, V, H\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashMap](https://stdlib.ponylang.io/collections-HashMap)"
- name: HashMap
  id: collections-persistent-hashmap
  summary: A persistent map based on the Compressed Hash Array Mapped Prefix-tree from 'Optimizing Hash-Array Mapped Tries for Fast and Lean Immutable JVM Collections' by Michael J
  description: "# HashMap\\[K: [Any](builtin-any) \\#share, V: [Any](builtin-any) \\#share, H: [HashFunction](collections-hashfunction)\\[K\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L14)\n\nA persistent map based on the Compressed Hash Array Mapped Prefix-tree from 'Optimizing Hash-Array Mapped Tries for Fast and Lean Immutable JVM Collections' by Michael J. Steindorfer and Jurgen J. Vinju\n\n## Usage\n\n``` pony\nuse \"collections/persistent\"\n\nactor Main\n  new create(env: Env) =>\n    try\n      let m1 = Map[String, U32] // {}\n      // Update returns a new map with the provided key set\n      // to the provided value. The old map is unchanged.\n      let m2 = m1(\"a\") = 5 // {a: 5}\n      let m3 = m2(\"b\") = 10 // {a: 5, b: 10}\n      let m4 = m3.remove(\"a\")? // {b: 10}\n      // You can create a new map from key value pairs.\n      let m5 = Map[String, U32].concat([(\"a\", 2); (\"b\", 3)].values()) // {a: 2, b: 3}\n    end\n```\n\n``` pony\nclass val HashMap[K: Any #share, V: Any #share, H: HashFunction[K] val]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L41)\n\n``` pony\nnew val create()\n: HashMap[K, V, H] val^\n```\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L49)\n\nAttempt to get the value corresponding to k.\n\n``` pony\nfun val apply(\n  k: K)\n: val->V ?\n```\n\n#### Parameters\n\n- k: K\n\n#### Returns\n\n- val-\\>V ?\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L55)\n\nReturn the amount of key-value pairs in the Map.\n\n``` pony\nfun val size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L61)\n\nUpdate the value associated with the provided key.\n\n``` pony\nfun val update(\n  key: K,\n  value: val->V)\n: HashMap[K, V, H] val\n```\n\n#### Parameters\n\n- key: K\n- value: val-\\>V\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L74)\n\nTry to remove the provided key from the Map.\n\n``` pony\nfun val remove(\n  k: K)\n: HashMap[K, V, H] val ?\n```\n\n#### Parameters\n\n- k: K\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val ?\n\n### get_or_else\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L80)\n\nGet the value associated with provided key if present. Otherwise, return the provided alternate value.\n\n``` pony\nfun val get_or_else(\n  k: K,\n  alt: val->V)\n: val->V\n```\n\n#### Parameters\n\n- k: K\n- alt: val-\\>V\n\n#### Returns\n\n- val-\\>V\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L94)\n\nCheck whether the node contains the provided key.\n\n``` pony\nfun val contains(\n  k: K)\n: Bool val\n```\n\n#### Parameters\n\n- k: K\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L102)\n\nAdd the K, V pairs from the given iterator to the map.\n\n``` pony\nfun val concat(\n  iter: Iterator[(val->K , val->V)] ref)\n: HashMap[K, V, H] val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[(val-\\>K , val-\\>V)\\] ref\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L112)\n\nReturn this Map with the given (key, value) mapping.\n\n``` pony\nfun val add(\n  key: K,\n  value: val->V)\n: HashMap[K, V, H] val\n```\n\n#### Parameters\n\n- key: K\n- value: val-\\>V\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L118)\n\nReturn this Map without the given key.\n\n``` pony\nfun val sub(\n  key: K)\n: HashMap[K, V, H] val\n```\n\n#### Parameters\n\n- key: K\n\n#### Returns\n\n- [HashMap](index)\\[K, V, H\\] val\n\n### keys\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L128)\n\n``` pony\nfun val keys()\n: MapKeys[K, V, H] ref\n```\n\n#### Returns\n\n- [MapKeys](collections-persistent-mapkeys)\\[K, V, H\\] ref\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L130)\n\n``` pony\nfun val values()\n: MapValues[K, V, H] ref\n```\n\n#### Returns\n\n- [MapValues](collections-persistent-mapvalues)\\[K, V, H\\] ref\n\n### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L132)\n\n``` pony\nfun val pairs()\n: MapPairs[K, V, H] ref\n```\n\n#### Returns\n\n- [MapPairs](collections-persistent-mappairs)\\[K, V, H\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-HashMap](https://stdlib.ponylang.io/collections-persistent-HashMap)"
- name: HashMap.add()
  id: collections-hashmap#addoptional-h2-hashfunctionthis-k-val
  summary: This with the new (key, value) mapping
  belongs_to: HashMap
  description: |-
    ### add\[optional H2: [HashFunction](collections-hashfunction)\[this-\>K!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L245)

    This with the new (key, value) mapping.

    ``` pony
    fun box add[optional H2: HashFunction[this->K!] val](
      key: this->K!,
      value: this->V!)
    : HashMap[this->K!, this->V!, H2] ref^
    ```

    #### Parameters

    - key: this-\>K!
    - value: this-\>V!

    #### Returns

    - [HashMap](index)\[this-\>K!, this-\>V!, H2\] ref^

    &nbsp;
- name: HashMap.add()
  id: collections-persistent-hashmap#add
  summary: Return this Map with the given (key, value) mapping
  belongs_to: HashMap
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L112)

    Return this Map with the given (key, value) mapping.

    ``` pony
    fun val add(
      key: K,
      value: val->V)
    : HashMap[K, V, H] val
    ```

    #### Parameters

    - key: K
    - value: val-\>V

    #### Returns

    - [HashMap](index)\[K, V, H\] val

    &nbsp;
- name: HashMap.apply()
  id: collections-hashmap#apply
  summary: Gets a value from the map
  belongs_to: HashMap
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L46)

    Gets a value from the map. Raises an error if no such item exists.

    ``` pony
    fun box apply(
      key: box->K!)
    : this->V ?
    ```

    #### Parameters

    - key: box-\>K!

    #### Returns

    - this-\>V ?

    &nbsp;
- name: HashMap.apply()
  id: collections-persistent-hashmap#apply
  summary: Attempt to get the value corresponding to k
  belongs_to: HashMap
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L49)

    Attempt to get the value corresponding to k.

    ``` pony
    fun val apply(
      k: K)
    : val->V ?
    ```

    #### Parameters

    - k: K

    #### Returns

    - val-\>V ?
- name: HashMap.clear()
  id: collections-hashmap#clear
  summary: Remove all entries
  belongs_to: HashMap
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L306)

    Remove all entries.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashMap.clone()
  id: collections-hashmap#cloneoptional-h2-hashfunctionthis-k-val
  summary: Create a clone
  belongs_to: HashMap
  description: |-
    ### clone\[optional H2: [HashFunction](collections-hashfunction)\[this-\>K!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L292)

    Create a clone. The key and value types may be different due to aliasing and viewpoint adaptation.

    ``` pony
    fun box clone[optional H2: HashFunction[this->K!] val]()
    : HashMap[this->K!, this->V!, H2] ref^
    ```

    #### Returns

    - [HashMap](index)\[this-\>K!, this-\>V!, H2\] ref^

    &nbsp;
- name: HashMap.compact()
  id: collections-hashmap#compact
  summary: Minimise the memory used for the map
  belongs_to: HashMap
  description: |-
    ### compact

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L286)

    Minimise the memory used for the map.

    ``` pony
    fun ref compact()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashMap.concat()
  id: collections-hashmap#concat
  summary: Add K, V pairs from the iterator to the map
  belongs_to: HashMap
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L237)

    Add K, V pairs from the iterator to the map.

    ``` pony
    fun ref concat(
      iter: Iterator[(K^ , V^)] ref)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[(K^ , V^)\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashMap.concat()
  id: collections-persistent-hashmap#concat
  summary: Add the K, V pairs from the given iterator to the map
  belongs_to: HashMap
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L102)

    Add the K, V pairs from the given iterator to the map.

    ``` pony
    fun val concat(
      iter: Iterator[(val->K , val->V)] ref)
    : HashMap[K, V, H] val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[(val-\>K , val-\>V)\] ref

    #### Returns

    - [HashMap](index)\[K, V, H\] val

    &nbsp;
- name: HashMap.contains()
  id: collections-hashmap#contains
  summary: null
  belongs_to: HashMap
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L230)

    Checks whether the map contains the key k

    ``` pony
    fun box contains(
      k: box->K!)
    : Bool val
    ```

    #### Parameters

    - k: box-\>K!

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashMap.contains()
  id: collections-persistent-hashmap#contains
  summary: Check whether the node contains the provided key
  belongs_to: HashMap
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L94)

    Check whether the node contains the provided key.

    ``` pony
    fun val contains(
      k: K)
    : Bool val
    ```

    #### Parameters

    - k: K

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashMap.create()
  id: collections-hashmap#create
  summary: Create an array with space for prealloc elements without triggering a resize
  belongs_to: HashMap
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L24)

    Create an array with space for prealloc elements without triggering a resize. Defaults to 6.

    ``` pony
    new ref create(
      prealloc: USize val = 6)
    : HashMap[K, V, H] ref^
    ```

    #### Parameters

    - prealloc: [USize](builtin-usize) val = 6

    #### Returns

    - [HashMap](index)\[K, V, H\] ref^

    ## Public Functions
- name: HashMap.create()
  id: collections-persistent-hashmap#create
  summary: null
  belongs_to: HashMap
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L41)

    ``` pony
    new val create()
    : HashMap[K, V, H] val^
    ```

    #### Returns

    - [HashMap](index)\[K, V, H\] val^

    ## Public Functions
- name: HashMap.get_or_else()
  id: collections-hashmap#get_or_else
  summary: Get the value associated with provided key if present
  belongs_to: HashMap
  description: |-
    ### get_or_else

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L211)

    Get the value associated with provided key if present. Otherwise, return the provided alternate value.

    ``` pony
    fun box get_or_else(
      key: box->K!,
      alt: this->V)
    : this->V
    ```

    #### Parameters

    - key: box-\>K!
    - alt: this-\>V

    #### Returns

    - this-\>V

    &nbsp;
- name: HashMap.get_or_else()
  id: collections-persistent-hashmap#get_or_else
  summary: Get the value associated with provided key if present
  belongs_to: HashMap
  description: |-
    ### get_or_else

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L80)

    Get the value associated with provided key if present. Otherwise, return the provided alternate value.

    ``` pony
    fun val get_or_else(
      k: K,
      alt: val->V)
    : val->V
    ```

    #### Parameters

    - k: K
    - alt: val-\>V

    #### Returns

    - val-\>V

    &nbsp;
- name: HashMap.index()
  id: collections-hashmap#index
  summary: Returns the key and value at a given index
  belongs_to: HashMap
  description: |-
    ### index

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L279)

    Returns the key and value at a given index. Raise an error if the index is not populated.

    ``` pony
    fun box index(
      i: USize val)
    : (this->K , this->V) ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - (this-\>K , this-\>V) ?

    &nbsp;
- name: HashMap.insert()
  id: collections-hashmap#insert
  summary: Set a value in the map
  belongs_to: HashMap
  description: |-
    ### insert

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L132)

    Set a value in the map. Returns the new value, allowing reuse.

    ``` pony
    fun ref insert(
      key: K,
      value: V)
    : V!
    ```

    #### Parameters

    - key: K
    - value: V

    #### Returns

    - V!

    &nbsp;
- name: HashMap.insert_if_absent()
  id: collections-hashmap#insert_if_absent
  summary: Set a value in the map if the key doesn't already exist in the Map
  belongs_to: HashMap
  description: |-
    ### insert_if_absent

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L156)

    Set a value in the map if the key doesn't already exist in the Map. Saves an extra lookup when doing a pattern like:

    ``` pony
    if not my_map.contains(my_key) then
      my_map(my_key) = my_value
    end
    ```

    Returns the value, the same as `insert`, allowing 'insert_if_absent' to be used as a drop-in replacement for `insert`.

    ``` pony
    fun ref insert_if_absent(
      key: K,
      value: V)
    : V
    ```

    #### Parameters

    - key: K
    - value: V

    #### Returns

    - V

    &nbsp;
- name: HashMap.keys()
  id: collections-hashmap#keys
  summary: Return an iterator over the keys
  belongs_to: HashMap
  description: |-
    ### keys

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L370)

    Return an iterator over the keys.

    ``` pony
    fun box keys()
    : MapKeys[K, V, H, this->HashMap[K, V, H] ref] ref^
    ```

    #### Returns

    - [MapKeys](collections-mapkeys)\[K, V, H, this-\>[HashMap](index)\[K, V, H\] ref\] ref^

    &nbsp;
- name: HashMap.keys()
  id: collections-persistent-hashmap#keys
  summary: null
  belongs_to: HashMap
  description: |-
    ### keys

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L128)

    ``` pony
    fun val keys()
    : MapKeys[K, V, H] ref
    ```

    #### Returns

    - [MapKeys](collections-persistent-mapkeys)\[K, V, H\] ref

    &nbsp;
- name: HashMap.next_index()
  id: collections-hashmap#next_index
  summary: Given an index, return the next index that has a populated key and value
  belongs_to: HashMap
  description: |-
    ### next_index

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L267)

    Given an index, return the next index that has a populated key and value. Raise an error if there is no next populated index.

    ``` pony
    fun box next_index(
      prev: USize val = call)
    : USize val ?
    ```

    #### Parameters

    - prev: [USize](builtin-usize) val = call

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: HashMap.pairs()
  id: collections-hashmap#pairs
  summary: Return an iterator over the keys and values
  belongs_to: HashMap
  description: "### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L382)\n\nReturn an iterator over the keys and values.\n\n``` pony\nfun box pairs()\n: MapPairs[K, V, H, this->HashMap[K, V, H] ref] ref^\n```\n\n#### Returns\n\n- [MapPairs](collections-mappairs)\\[K, V, H, this-\\>[HashMap](index)\\[K, V, H\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashMap](https://stdlib.ponylang.io/collections-HashMap)"
- name: HashMap.pairs()
  id: collections-persistent-hashmap#pairs
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashMap
  description: "### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L132)\n\n``` pony\nfun val pairs()\n: MapPairs[K, V, H] ref\n```\n\n#### Returns\n\n- [MapPairs](collections-persistent-mappairs)\\[K, V, H\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-HashMap](https://stdlib.ponylang.io/collections-persistent-HashMap)"
- name: HashMap.remove()
  id: collections-hashmap#remove
  summary: Delete a value from the map and return it
  belongs_to: HashMap
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L192)

    Delete a value from the map and return it. Raises an error if there was no value for the given key.

    ``` pony
    fun ref remove(
      key: box->K!)
    : (K^ , V^) ?
    ```

    #### Parameters

    - key: box-\>K!

    #### Returns

    - (K^ , V^) ?

    &nbsp;
- name: HashMap.remove()
  id: collections-persistent-hashmap#remove
  summary: Try to remove the provided key from the Map
  belongs_to: HashMap
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L74)

    Try to remove the provided key from the Map.

    ``` pony
    fun val remove(
      k: K)
    : HashMap[K, V, H] val ?
    ```

    #### Parameters

    - k: K

    #### Returns

    - [HashMap](index)\[K, V, H\] val ?

    &nbsp;
- name: HashMap.size()
  id: collections-hashmap#size
  summary: The number of items in the map
  belongs_to: HashMap
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L33)

    The number of items in the map.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: HashMap.size()
  id: collections-persistent-hashmap#size
  summary: Return the amount of key-value pairs in the Map
  belongs_to: HashMap
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L55)

    Return the amount of key-value pairs in the Map.

    ``` pony
    fun val size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: HashMap.space()
  id: collections-hashmap#space
  summary: The available space in the map
  belongs_to: HashMap
  description: |-
    ### space

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L39)

    The available space in the map. Resize will happen when size / space \>= 0.75.

    ``` pony
    fun box space()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: HashMap.sub()
  id: collections-hashmap#suboptional-h2-hashfunctionthis-k-val
  summary: This without the given key
  belongs_to: HashMap
  description: |-
    ### sub\[optional H2: [HashFunction](collections-hashfunction)\[this-\>K!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L257)

    This without the given key.

    ``` pony
    fun box sub[optional H2: HashFunction[this->K!] val](
      key: this->K!)
    : HashMap[this->K!, this->V!, H2] ref^
    ```

    #### Parameters

    - key: this-\>K!

    #### Returns

    - [HashMap](index)\[this-\>K!, this-\>V!, H2\] ref^

    &nbsp;
- name: HashMap.sub()
  id: collections-persistent-hashmap#sub
  summary: Return this Map without the given key
  belongs_to: HashMap
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L118)

    Return this Map without the given key.

    ``` pony
    fun val sub(
      key: K)
    : HashMap[K, V, H] val
    ```

    #### Parameters

    - key: K

    #### Returns

    - [HashMap](index)\[K, V, H\] val

    &nbsp;
- name: HashMap.update()
  id: collections-hashmap#update
  summary: Sets a value in the map
  belongs_to: HashMap
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L58)

    Sets a value in the map. Returns the old value if there was one, otherwise returns None. If there was no previous value, this may trigger a resize.

    ``` pony
    fun ref update(
      key: K,
      value: V)
    : (V^ | None val)
    ```

    #### Parameters

    - key: K
    - value: V

    #### Returns

    - (V^ \| [None](builtin-none) val)

    &nbsp;
- name: HashMap.update()
  id: collections-persistent-hashmap#update
  summary: Update the value associated with the provided key
  belongs_to: HashMap
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L61)

    Update the value associated with the provided key.

    ``` pony
    fun val update(
      key: K,
      value: val->V)
    : HashMap[K, V, H] val
    ```

    #### Parameters

    - key: K
    - value: val-\>V

    #### Returns

    - [HashMap](index)\[K, V, H\] val

    &nbsp;
- name: HashMap.upsert()
  id: collections-hashmap#upsert
  summary: Combines a provided value with the current value for the provided key using the provided function
  belongs_to: HashMap
  description: |-
    ### upsert

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L78)

    Combines a provided value with the current value for the provided key using the provided function. If the provided key has not been added to the map yet, it sets its value to the provided value and ignores the provided function.

    As a simple example, say we had a map with I64 values and we wanted to add 4 to the current value for key "test", which let's say is currently 2. We call

    m.upsert("test", 4, {(current, provided) =\> current + provided })

    This changes the value associated with "test" to 6.

    If we have not yet added the key "new-key" to the map and we call

    m.upsert("new-key", 4, {(current, provided) =\> current + provided })

    then "new-key" is added to the map with a value of 4.

    Returns the value that we set the key to

    ``` pony
    fun ref upsert(
      key: K,
      value: V,
      f: {(V, V): V^}[K, V, H] box)
    : V
    ```

    #### Parameters

    - key: K
    - value: V
    - f: {(V, V): V^}\[K, V, H\] box

    #### Returns

    - V

    &nbsp;
- name: HashMap.values()
  id: collections-hashmap#values
  summary: Return an iterator over the values
  belongs_to: HashMap
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L376)

    Return an iterator over the values.

    ``` pony
    fun box values()
    : MapValues[K, V, H, this->HashMap[K, V, H] ref] ref^
    ```

    #### Returns

    - [MapValues](collections-mapvalues)\[K, V, H, this-\>[HashMap](index)\[K, V, H\] ref\] ref^

    &nbsp;
- name: HashMap.values()
  id: collections-persistent-hashmap#values
  summary: null
  belongs_to: HashMap
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L130)

    ``` pony
    fun val values()
    : MapValues[K, V, H] ref
    ```

    #### Returns

    - [MapValues](collections-persistent-mapvalues)\[K, V, H\] ref

    &nbsp;
- name: HashSet
  id: collections-hashset
  summary: A set, built on top of a HashMap
  description: "# HashSet\\[A: A, H: [HashFunction](collections-hashfunction)\\[A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L5)\n\nA set, built on top of a HashMap. This is implemented as map of an alias of a type to itself\n\n``` pony\nclass ref HashSet[A: A, H: HashFunction[A!] val] is\n  Comparable[HashSet[A, H] box] ref\n```\n\n#### Implements\n\n- [Comparable](builtin-comparable)\\[[HashSet](index)\\[A, H\\] box\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L12)\n\nDefaults to a prealloc of 8.\n\n``` pony\nnew ref create(\n  prealloc: USize val = 8)\n: HashSet[A, H] ref^\n```\n\n#### Parameters\n\n- prealloc: [USize](builtin-usize) val = 8\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] ref^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L18)\n\nThe number of items in the set.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### space\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L24)\n\nThe available space in the set.\n\n``` pony\nfun box space()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L30)\n\nReturn the value if its in the set, otherwise raise an error.\n\n``` pony\nfun box apply(\n  value: box->A!)\n: this->A ?\n```\n\n#### Parameters\n\n- value: box-\\>A!\n\n#### Returns\n\n- this-\\>A ?\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L36)\n\nChecks whether the set contains the value.\n\n``` pony\nfun box contains(\n  value: box->A!)\n: Bool val\n```\n\n#### Parameters\n\n- value: box-\\>A!\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L42)\n\nRemove all elements from the set.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### set\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L48)\n\nAdd a value to the set.\n\n``` pony\nfun ref set(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### unset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L54)\n\nRemove a value from the set.\n\n``` pony\nfun ref unset(\n  value: box->A!)\n: None val\n```\n\n#### Parameters\n\n- value: box-\\>A!\n\n#### Returns\n\n- [None](builtin-none) val\n\n### extract\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L60)\n\nRemove a value from the set and return it. Raises an error if the value wasn't in the set.\n\n``` pony\nfun ref extract(\n  value: box->A!)\n: A^ ?\n```\n\n#### Parameters\n\n- value: box-\\>A!\n\n#### Returns\n\n- A^ ?\n\n### union\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L67)\n\nAdd everything in that to the set.\n\n``` pony\nfun ref union(\n  that: Iterator[A^] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [Iterator](builtin-iterator)\\[A^\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### intersect\\[optional K: [HashFunction](collections-hashfunction)\\[box-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L75)\n\nRemove everything that isn't in that.\n\n``` pony\nfun ref intersect[optional K: HashFunction[box->A!] val](\n  that: HashSet[box->A!, K] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[box-\\>A!, K\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### difference\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L95)\n\nRemove elements in this which are also in that. Add elements in that which are not in this.\n\n``` pony\nfun ref difference(\n  that: Iterator[A^] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [Iterator](builtin-iterator)\\[A^\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L108)\n\nRemove everything that is in that.\n\n``` pony\nfun ref remove(\n  that: Iterator[box->A!] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [Iterator](builtin-iterator)\\[box-\\>A!\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### add\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L116)\n\nAdd a value to the set.\n\n``` pony\nfun box add[optional K: HashFunction[this->A!] val](\n  value: this->A!)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- value: this-\\>A!\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### sub\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L125)\n\nRemove a value from the set.\n\n``` pony\nfun box sub[optional K: HashFunction[this->A!] val](\n  value: box->this->A!)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- value: box-\\>this-\\>A!\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### op_or\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L134)\n\nCreate a set with the elements of both this and that.\n\n``` pony\nfun box op_or[optional K: HashFunction[this->A!] val](\n  that: this->HashSet[A, H] ref)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- that: this-\\>[HashSet](index)\\[A, H\\] ref\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### op_and\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L148)\n\nCreate a set with the elements that are in both this and that.\n\n``` pony\nfun box op_and[optional K: HashFunction[this->A!] val](\n  that: this->HashSet[A, H] ref)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- that: this-\\>[HashSet](index)\\[A, H\\] ref\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### op_xor\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L165)\n\nCreate a set with the elements that are in either set but not both.\n\n``` pony\nfun box op_xor[optional K: HashFunction[this->A!] val](\n  that: this->HashSet[A, H] ref)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- that: this-\\>[HashSet](index)\\[A, H\\] ref\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### without\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L191)\n\nCreate a set with the elements of this that are not in that.\n\n``` pony\nfun box without[optional K: HashFunction[this->A!] val](\n  that: this->HashSet[A, H] ref)\n: HashSet[this->A!, K] ref^\n```\n\n#### Parameters\n\n- that: this-\\>[HashSet](index)\\[A, H\\] ref\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### clone\\[optional K: [HashFunction](collections-hashfunction)\\[this-\\>A!\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L209)\n\nCreate a clone. The element type may be different due to aliasing and viewpoint adaptation.\n\n``` pony\nfun box clone[optional K: HashFunction[this->A!] val]()\n: HashSet[this->A!, K] ref^\n```\n\n#### Returns\n\n- [HashSet](index)\\[this-\\>A!, K\\] ref^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L221)\n\nReturns true if the sets contain the same elements.\n\n``` pony\nfun box eq(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L227)\n\nReturns false if the sets contain the same elements.\n\n``` pony\nfun box ne(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L233)\n\nReturns true if every element in this is also in that, and this has fewer elements than that.\n\n``` pony\nfun box lt(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L240)\n\nReturns true if every element in this is also in that.\n\n``` pony\nfun box le(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L253)\n\nReturns true if every element in that is also in this, and this has more elements than that.\n\n``` pony\nfun box gt(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L260)\n\nReturns true if every element in that is also in this.\n\n``` pony\nfun box ge(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next_index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L266)\n\nGiven an index, return the next index that has a populated value. Raise an error if there is no next populated index.\n\n``` pony\nfun box next_index(\n  prev: USize val = call)\n: USize val ?\n```\n\n#### Parameters\n\n- prev: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L273)\n\nReturns the value at a given index. Raise an error if the index is not populated.\n\n``` pony\nfun box index(\n  i: USize val)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>A ?\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L280)\n\nReturn an iterator over the values.\n\n``` pony\nfun box values()\n: SetValues[A, H, this->HashSet[A, H] ref] ref^\n```\n\n#### Returns\n\n- [SetValues](collections-setvalues)\\[A, H, this-\\>[HashSet](index)\\[A, H\\] ref\\] ref^\n\n### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)\n\n``` pony\nfun box compare(\n  that: HashSet[A, H] box)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashSet](https://stdlib.ponylang.io/collections-HashSet)"
- name: HashSet
  id: collections-persistent-hashset
  summary: A set, built on top of persistent Map
  description: "# HashSet\\[A: [Any](builtin-any) \\#share, H: [HashFunction](collections-hashfunction)\\[A\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L7)\n\nA set, built on top of persistent Map. This is implemented as map of an alias of a type to itself.\n\n``` pony\nclass val HashSet[A: Any #share, H: HashFunction[A] val] is\n  Comparable[HashSet[A, H] box] ref\n```\n\n#### Implements\n\n- [Comparable](builtin-comparable)\\[[HashSet](index)\\[A, H\\] box\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L15)\n\n``` pony\nnew val create()\n: HashSet[A, H] val^\n```\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L21)\n\nReturn the number of elements in the set.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L27)\n\nReturn the value if it is in the set, otherwise raise an error.\n\n``` pony\nfun box apply(\n  value: val->A)\n: val->A ?\n```\n\n#### Parameters\n\n- value: val-\\>A\n\n#### Returns\n\n- val-\\>A ?\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L33)\n\nCheck whether the set contains the value.\n\n``` pony\nfun box contains(\n  value: val->A)\n: Bool val\n```\n\n#### Parameters\n\n- value: val-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L39)\n\nReturn a set with the value added.\n\n``` pony\nfun val add(\n  value: val->A)\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- value: val-\\>A\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L45)\n\nReturn a set with the value removed.\n\n``` pony\nfun val sub(\n  value: val->A)\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- value: val-\\>A\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L51)\n\nReturn a set with the elements of both this and that.\n\n``` pony\nfun val op_or(\n  that: (HashSet[A, H] val | Iterator[A] ref))\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- that: ([HashSet](index)\\[A, H\\] val \\| [Iterator](builtin-iterator)\\[A\\] ref)\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L66)\n\nReturn a set with the elements that are in both this and that.\n\n``` pony\nfun val op_and(\n  that: (HashSet[A, H] val | Iterator[A] ref))\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- that: ([HashSet](index)\\[A, H\\] val \\| [Iterator](builtin-iterator)\\[A\\] ref)\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L83)\n\nReturn a set with elements that are in either this or that, but not both.\n\n``` pony\nfun val op_xor(\n  that: (HashSet[A, H] val | Iterator[A] ref))\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- that: ([HashSet](index)\\[A, H\\] val \\| [Iterator](builtin-iterator)\\[A\\] ref)\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### without\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L102)\n\nReturn a set with the elements of this that are not in that.\n\n``` pony\nfun val without(\n  that: (HashSet[A, H] val | Iterator[A] ref))\n: HashSet[A, H] val\n```\n\n#### Parameters\n\n- that: ([HashSet](index)\\[A, H\\] val \\| [Iterator](builtin-iterator)\\[A\\] ref)\n\n#### Returns\n\n- [HashSet](index)\\[A, H\\] val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L119)\n\nReturn true if this and that contain the same elements.\n\n``` pony\nfun box eq(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L125)\n\nReturn true if every element in this is also in that, and this has fewer elements than that.\n\n``` pony\nfun box lt(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L132)\n\nReturn true if every element in this is also in that.\n\n``` pony\nfun box le(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L141)\n\nReturn true if every element in that is also in this, and this has more elements than that.\n\n``` pony\nfun box gt(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L148)\n\nReturn true if every element in that is also in this.\n\n``` pony\nfun box ge(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L154)\n\nReturn an iterator over the values in the set.\n\n``` pony\nfun box values()\n: Iterator[A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[A\\] ref^\n\n### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)\n\n``` pony\nfun box compare(\n  that: HashSet[A, H] box)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-HashSet](https://stdlib.ponylang.io/collections-persistent-HashSet)"
- name: HashSet.add()
  id: collections-hashset#addoptional-k-hashfunctionthis-a-val
  summary: Add a value to the set
  belongs_to: HashSet
  description: |-
    ### add\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L116)

    Add a value to the set.

    ``` pony
    fun box add[optional K: HashFunction[this->A!] val](
      value: this->A!)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - value: this-\>A!

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.add()
  id: collections-persistent-hashset#add
  summary: Return a set with the value added
  belongs_to: HashSet
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L39)

    Return a set with the value added.

    ``` pony
    fun val add(
      value: val->A)
    : HashSet[A, H] val
    ```

    #### Parameters

    - value: val-\>A

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: HashSet.apply()
  id: collections-hashset#apply
  summary: Return the value if its in the set, otherwise raise an error
  belongs_to: HashSet
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L30)

    Return the value if its in the set, otherwise raise an error.

    ``` pony
    fun box apply(
      value: box->A!)
    : this->A ?
    ```

    #### Parameters

    - value: box-\>A!

    #### Returns

    - this-\>A ?

    &nbsp;
- name: HashSet.apply()
  id: collections-persistent-hashset#apply
  summary: Return the value if it is in the set, otherwise raise an error
  belongs_to: HashSet
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L27)

    Return the value if it is in the set, otherwise raise an error.

    ``` pony
    fun box apply(
      value: val->A)
    : val->A ?
    ```

    #### Parameters

    - value: val-\>A

    #### Returns

    - val-\>A ?

    &nbsp;
- name: HashSet.clear()
  id: collections-hashset#clear
  summary: Remove all elements from the set
  belongs_to: HashSet
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L42)

    Remove all elements from the set.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.clone()
  id: collections-hashset#cloneoptional-k-hashfunctionthis-a-val
  summary: Create a clone
  belongs_to: HashSet
  description: |-
    ### clone\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L209)

    Create a clone. The element type may be different due to aliasing and viewpoint adaptation.

    ``` pony
    fun box clone[optional K: HashFunction[this->A!] val]()
    : HashSet[this->A!, K] ref^
    ```

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.compare()
  id: collections-hashset#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashSet
  description: "### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)\n\n``` pony\nfun box compare(\n  that: HashSet[A, H] box)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-HashSet](https://stdlib.ponylang.io/collections-HashSet)"
- name: HashSet.compare()
  id: collections-persistent-hashset#compare
  summary: null
  belongs_to: HashSet
  description: |-
    ### compare

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L28)

    ``` pony
    fun box compare(
      that: HashSet[A, H] box)
    : (Less val | Equal val | Greater val)
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    &nbsp;
- name: HashSet.contains()
  id: collections-hashset#contains
  summary: Checks whether the set contains the value
  belongs_to: HashSet
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L36)

    Checks whether the set contains the value.

    ``` pony
    fun box contains(
      value: box->A!)
    : Bool val
    ```

    #### Parameters

    - value: box-\>A!

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.contains()
  id: collections-persistent-hashset#contains
  summary: Check whether the set contains the value
  belongs_to: HashSet
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L33)

    Check whether the set contains the value.

    ``` pony
    fun box contains(
      value: val->A)
    : Bool val
    ```

    #### Parameters

    - value: val-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.create()
  id: collections-hashset#create
  summary: Defaults to a prealloc of 8
  belongs_to: HashSet
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L12)

    Defaults to a prealloc of 8.

    ``` pony
    new ref create(
      prealloc: USize val = 8)
    : HashSet[A, H] ref^
    ```

    #### Parameters

    - prealloc: [USize](builtin-usize) val = 8

    #### Returns

    - [HashSet](index)\[A, H\] ref^

    ## Public Functions
- name: HashSet.create()
  id: collections-persistent-hashset#create
  summary: null
  belongs_to: HashSet
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L15)

    ``` pony
    new val create()
    : HashSet[A, H] val^
    ```

    #### Returns

    - [HashSet](index)\[A, H\] val^

    ## Public Functions
- name: HashSet.difference()
  id: collections-hashset#difference
  summary: Remove elements in this which are also in that
  belongs_to: HashSet
  description: |-
    ### difference

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L95)

    Remove elements in this which are also in that. Add elements in that which are not in this.

    ``` pony
    fun ref difference(
      that: Iterator[A^] ref)
    : None val
    ```

    #### Parameters

    - that: [Iterator](builtin-iterator)\[A^\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.eq()
  id: collections-hashset#eq
  summary: Returns true if the sets contain the same elements
  belongs_to: HashSet
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L221)

    Returns true if the sets contain the same elements.

    ``` pony
    fun box eq(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.eq()
  id: collections-persistent-hashset#eq
  summary: Return true if this and that contain the same elements
  belongs_to: HashSet
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L119)

    Return true if this and that contain the same elements.

    ``` pony
    fun box eq(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.extract()
  id: collections-hashset#extract
  summary: Remove a value from the set and return it
  belongs_to: HashSet
  description: |-
    ### extract

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L60)

    Remove a value from the set and return it. Raises an error if the value wasn't in the set.

    ``` pony
    fun ref extract(
      value: box->A!)
    : A^ ?
    ```

    #### Parameters

    - value: box-\>A!

    #### Returns

    - A^ ?

    &nbsp;
- name: HashSet.ge()
  id: collections-hashset#ge
  summary: Returns true if every element in that is also in this
  belongs_to: HashSet
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L260)

    Returns true if every element in that is also in this.

    ``` pony
    fun box ge(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.ge()
  id: collections-persistent-hashset#ge
  summary: Return true if every element in that is also in this
  belongs_to: HashSet
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L148)

    Return true if every element in that is also in this.

    ``` pony
    fun box ge(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.gt()
  id: collections-hashset#gt
  summary: Returns true if every element in that is also in this, and this has more elements than that
  belongs_to: HashSet
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L253)

    Returns true if every element in that is also in this, and this has more elements than that.

    ``` pony
    fun box gt(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.gt()
  id: collections-persistent-hashset#gt
  summary: Return true if every element in that is also in this, and this has more elements than that
  belongs_to: HashSet
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L141)

    Return true if every element in that is also in this, and this has more elements than that.

    ``` pony
    fun box gt(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.index()
  id: collections-hashset#index
  summary: Returns the value at a given index
  belongs_to: HashSet
  description: |-
    ### index

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L273)

    Returns the value at a given index. Raise an error if the index is not populated.

    ``` pony
    fun box index(
      i: USize val)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>A ?

    &nbsp;
- name: HashSet.intersect()
  id: collections-hashset#intersectoptional-k-hashfunctionbox-a-val
  summary: Remove everything that isn't in that
  belongs_to: HashSet
  description: |-
    ### intersect\[optional K: [HashFunction](collections-hashfunction)\[box-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L75)

    Remove everything that isn't in that.

    ``` pony
    fun ref intersect[optional K: HashFunction[box->A!] val](
      that: HashSet[box->A!, K] ref)
    : None val
    ```

    #### Parameters

    - that: [HashSet](index)\[box-\>A!, K\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.le()
  id: collections-hashset#le
  summary: Returns true if every element in this is also in that
  belongs_to: HashSet
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L240)

    Returns true if every element in this is also in that.

    ``` pony
    fun box le(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.le()
  id: collections-persistent-hashset#le
  summary: Return true if every element in this is also in that
  belongs_to: HashSet
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L132)

    Return true if every element in this is also in that.

    ``` pony
    fun box le(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.lt()
  id: collections-hashset#lt
  summary: Returns true if every element in this is also in that, and this has fewer elements than that
  belongs_to: HashSet
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L233)

    Returns true if every element in this is also in that, and this has fewer elements than that.

    ``` pony
    fun box lt(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.lt()
  id: collections-persistent-hashset#lt
  summary: Return true if every element in this is also in that, and this has fewer elements than that
  belongs_to: HashSet
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L125)

    Return true if every element in this is also in that, and this has fewer elements than that.

    ``` pony
    fun box lt(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.ne()
  id: collections-hashset#ne
  summary: Returns false if the sets contain the same elements
  belongs_to: HashSet
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L227)

    Returns false if the sets contain the same elements.

    ``` pony
    fun box ne(
      that: HashSet[A, H] box)
    : Bool val
    ```

    #### Parameters

    - that: [HashSet](index)\[A, H\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: HashSet.ne()
  id: collections-persistent-hashset#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: HashSet
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: HashSet[A, H] box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [HashSet](index)\\[A, H\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-HashSet](https://stdlib.ponylang.io/collections-persistent-HashSet)"
- name: HashSet.next_index()
  id: collections-hashset#next_index
  summary: Given an index, return the next index that has a populated value
  belongs_to: HashSet
  description: |-
    ### next_index

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L266)

    Given an index, return the next index that has a populated value. Raise an error if there is no next populated index.

    ``` pony
    fun box next_index(
      prev: USize val = call)
    : USize val ?
    ```

    #### Parameters

    - prev: [USize](builtin-usize) val = call

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: HashSet.op_and()
  id: collections-hashset#op_andoptional-k-hashfunctionthis-a-val
  summary: Create a set with the elements that are in both this and that
  belongs_to: HashSet
  description: |-
    ### op_and\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L148)

    Create a set with the elements that are in both this and that.

    ``` pony
    fun box op_and[optional K: HashFunction[this->A!] val](
      that: this->HashSet[A, H] ref)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - that: this-\>[HashSet](index)\[A, H\] ref

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.op_and()
  id: collections-persistent-hashset#op_and
  summary: Return a set with the elements that are in both this and that
  belongs_to: HashSet
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L66)

    Return a set with the elements that are in both this and that.

    ``` pony
    fun val op_and(
      that: (HashSet[A, H] val | Iterator[A] ref))
    : HashSet[A, H] val
    ```

    #### Parameters

    - that: ([HashSet](index)\[A, H\] val \| [Iterator](builtin-iterator)\[A\] ref)

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: HashSet.op_or()
  id: collections-hashset#op_oroptional-k-hashfunctionthis-a-val
  summary: Create a set with the elements of both this and that
  belongs_to: HashSet
  description: |-
    ### op_or\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L134)

    Create a set with the elements of both this and that.

    ``` pony
    fun box op_or[optional K: HashFunction[this->A!] val](
      that: this->HashSet[A, H] ref)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - that: this-\>[HashSet](index)\[A, H\] ref

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.op_or()
  id: collections-persistent-hashset#op_or
  summary: Return a set with the elements of both this and that
  belongs_to: HashSet
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L51)

    Return a set with the elements of both this and that.

    ``` pony
    fun val op_or(
      that: (HashSet[A, H] val | Iterator[A] ref))
    : HashSet[A, H] val
    ```

    #### Parameters

    - that: ([HashSet](index)\[A, H\] val \| [Iterator](builtin-iterator)\[A\] ref)

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: HashSet.op_xor()
  id: collections-hashset#op_xoroptional-k-hashfunctionthis-a-val
  summary: Create a set with the elements that are in either set but not both
  belongs_to: HashSet
  description: |-
    ### op_xor\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L165)

    Create a set with the elements that are in either set but not both.

    ``` pony
    fun box op_xor[optional K: HashFunction[this->A!] val](
      that: this->HashSet[A, H] ref)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - that: this-\>[HashSet](index)\[A, H\] ref

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.op_xor()
  id: collections-persistent-hashset#op_xor
  summary: Return a set with elements that are in either this or that, but not both
  belongs_to: HashSet
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L83)

    Return a set with elements that are in either this or that, but not both.

    ``` pony
    fun val op_xor(
      that: (HashSet[A, H] val | Iterator[A] ref))
    : HashSet[A, H] val
    ```

    #### Parameters

    - that: ([HashSet](index)\[A, H\] val \| [Iterator](builtin-iterator)\[A\] ref)

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: HashSet.remove()
  id: collections-hashset#remove
  summary: Remove everything that is in that
  belongs_to: HashSet
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L108)

    Remove everything that is in that.

    ``` pony
    fun ref remove(
      that: Iterator[box->A!] ref)
    : None val
    ```

    #### Parameters

    - that: [Iterator](builtin-iterator)\[box-\>A!\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.set()
  id: collections-hashset#set
  summary: Add a value to the set
  belongs_to: HashSet
  description: |-
    ### set

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L48)

    Add a value to the set.

    ``` pony
    fun ref set(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.size()
  id: collections-hashset#size
  summary: The number of items in the set
  belongs_to: HashSet
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L18)

    The number of items in the set.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: HashSet.size()
  id: collections-persistent-hashset#size
  summary: Return the number of elements in the set
  belongs_to: HashSet
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L21)

    Return the number of elements in the set.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: HashSet.space()
  id: collections-hashset#space
  summary: The available space in the set
  belongs_to: HashSet
  description: |-
    ### space

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L24)

    The available space in the set.

    ``` pony
    fun box space()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: HashSet.sub()
  id: collections-hashset#suboptional-k-hashfunctionthis-a-val
  summary: Remove a value from the set
  belongs_to: HashSet
  description: |-
    ### sub\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L125)

    Remove a value from the set.

    ``` pony
    fun box sub[optional K: HashFunction[this->A!] val](
      value: box->this->A!)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - value: box-\>this-\>A!

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.sub()
  id: collections-persistent-hashset#sub
  summary: Return a set with the value removed
  belongs_to: HashSet
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L45)

    Return a set with the value removed.

    ``` pony
    fun val sub(
      value: val->A)
    : HashSet[A, H] val
    ```

    #### Parameters

    - value: val-\>A

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: HashSet.union()
  id: collections-hashset#union
  summary: Add everything in that to the set
  belongs_to: HashSet
  description: |-
    ### union

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L67)

    Add everything in that to the set.

    ``` pony
    fun ref union(
      that: Iterator[A^] ref)
    : None val
    ```

    #### Parameters

    - that: [Iterator](builtin-iterator)\[A^\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.unset()
  id: collections-hashset#unset
  summary: Remove a value from the set
  belongs_to: HashSet
  description: |-
    ### unset

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L54)

    Remove a value from the set.

    ``` pony
    fun ref unset(
      value: box->A!)
    : None val
    ```

    #### Parameters

    - value: box-\>A!

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: HashSet.values()
  id: collections-hashset#values
  summary: Return an iterator over the values
  belongs_to: HashSet
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L280)

    Return an iterator over the values.

    ``` pony
    fun box values()
    : SetValues[A, H, this->HashSet[A, H] ref] ref^
    ```

    #### Returns

    - [SetValues](collections-setvalues)\[A, H, this-\>[HashSet](index)\[A, H\] ref\] ref^

    &nbsp;
- name: HashSet.values()
  id: collections-persistent-hashset#values
  summary: Return an iterator over the values in the set
  belongs_to: HashSet
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L154)

    Return an iterator over the values in the set.

    ``` pony
    fun box values()
    : Iterator[A] ref^
    ```

    #### Returns

    - [Iterator](builtin-iterator)\[A\] ref^

    &nbsp;
- name: HashSet.without()
  id: collections-hashset#withoutoptional-k-hashfunctionthis-a-val
  summary: Create a set with the elements of this that are not in that
  belongs_to: HashSet
  description: |-
    ### without\[optional K: [HashFunction](collections-hashfunction)\[this-\>A!\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L191)

    Create a set with the elements of this that are not in that.

    ``` pony
    fun box without[optional K: HashFunction[this->A!] val](
      that: this->HashSet[A, H] ref)
    : HashSet[this->A!, K] ref^
    ```

    #### Parameters

    - that: this-\>[HashSet](index)\[A, H\] ref

    #### Returns

    - [HashSet](index)\[this-\>A!, K\] ref^

    &nbsp;
- name: HashSet.without()
  id: collections-persistent-hashset#without
  summary: Return a set with the elements of this that are not in that
  belongs_to: HashSet
  description: |-
    ### without

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L102)

    Return a set with the elements of this that are not in that.

    ``` pony
    fun val without(
      that: (HashSet[A, H] val | Iterator[A] ref))
    : HashSet[A, H] val
    ```

    #### Parameters

    - that: ([HashSet](index)\[A, H\] val \| [Iterator](builtin-iterator)\[A\] ref)

    #### Returns

    - [HashSet](index)\[A, H\] val

    &nbsp;
- name: Help
  id: cli-help
  summary: Creates a command help that can print a general program help message
  description: "# Help\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L3)\n\n``` pony\nprimitive val Help\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L3)\n\n``` pony\nnew val create()\n: Help val^\n```\n\n#### Returns\n\n- [Help](index) val^\n\n## Public Functions\n\n### general\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)\n\nCreates a command help that can print a general program help message.\n\n``` pony\nfun box general(\n  cs: CommandSpec box)\n: CommandHelp box\n```\n\n#### Parameters\n\n- cs: [CommandSpec](cli-commandspec) box\n\n#### Returns\n\n- [CommandHelp](cli-commandhelp) box\n\n### for_command\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L10)\n\nCreates a command help for a specific command that can print a detailed help message.\n\n``` pony\nfun box for_command(\n  cs: CommandSpec box,\n  argv: Array[String val] box)\n: (CommandHelp box | SyntaxError val)\n```\n\n#### Parameters\n\n- cs: [CommandSpec](cli-commandspec) box\n- argv: [Array](builtin-array)\\[[String](builtin-string) val\\] box\n\n#### Returns\n\n- ([CommandHelp](cli-commandhelp) box \\| [SyntaxError](cli-syntaxerror) val)\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)\n\n``` pony\nfun box eq(\n  that: Help val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Help](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)\n\n``` pony\nfun box ne(\n  that: Help val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Help](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Help](https://stdlib.ponylang.io/cli-Help)"
- name: Help.create()
  id: cli-help#create
  summary: null
  belongs_to: Help
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L3)

    ``` pony
    new val create()
    : Help val^
    ```

    #### Returns

    - [Help](index) val^

    ## Public Functions
- name: Help.eq()
  id: cli-help#eq
  summary: null
  belongs_to: Help
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)

    ``` pony
    fun box eq(
      that: Help val)
    : Bool val
    ```

    #### Parameters

    - that: [Help](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Help.for_command()
  id: cli-help#for_command
  summary: Creates a command help for a specific command that can print a detailed help message
  belongs_to: Help
  description: |-
    ### for_command

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L10)

    Creates a command help for a specific command that can print a detailed help message.

    ``` pony
    fun box for_command(
      cs: CommandSpec box,
      argv: Array[String val] box)
    : (CommandHelp box | SyntaxError val)
    ```

    #### Parameters

    - cs: [CommandSpec](cli-commandspec) box
    - argv: [Array](builtin-array)\[[String](builtin-string) val\] box

    #### Returns

    - ([CommandHelp](cli-commandhelp) box \| [SyntaxError](cli-syntaxerror) val)

    &nbsp;
- name: Help.general()
  id: cli-help#general
  summary: Creates a command help that can print a general program help message
  belongs_to: Help
  description: |-
    ### general

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)

    Creates a command help that can print a general program help message.

    ``` pony
    fun box general(
      cs: CommandSpec box)
    : CommandHelp box
    ```

    #### Parameters

    - cs: [CommandSpec](cli-commandspec) box

    #### Returns

    - [CommandHelp](cli-commandhelp) box
- name: Help.ne()
  id: cli-help#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Help
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_help/#L4)\n\n``` pony\nfun box ne(\n  that: Help val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Help](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Help](https://stdlib.ponylang.io/cli-Help)"
- name: I128
  id: builtin-i128
  summary: Unsafe operation
  description: "# I128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L664)\n\n``` pony\nprimitive val I128 is\n  SignedInteger[I128 val, U128 val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[I128](index) val, [U128](builtin-u128) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L665)\n\n``` pony\nnew val create(\n  value: I128 val)\n: I128 val^\n```\n\n#### Parameters\n\n- value: [I128](index) val\n\n#### Returns\n\n- [I128](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](index) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L666)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I128 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I128](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L668)\n\n``` pony\nnew val min_value()\n: I128 val^\n```\n\n#### Returns\n\n- [I128](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L669)\n\n``` pony\nnew val max_value()\n: I128 val^\n```\n\n#### Returns\n\n- [I128](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L671)\n\n``` pony\nfun box abs()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L672)\n\n``` pony\nfun box bit_reverse()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L673)\n\n``` pony\nfun box bswap()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L674)\n\n``` pony\nfun box popcount()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L675)\n\n``` pony\nfun box clz()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L676)\n\n``` pony\nfun box ctz()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L678)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L685)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L692)\n\n``` pony\nfun box bitwidth()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L694)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L696)\n\n``` pony\nfun box min(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L697)\n\n``` pony\nfun box max(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L699)\n\n``` pony\nfun box fld(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L701)\n\n``` pony\nfun box fld_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L704)\n\n``` pony\nfun box mod(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L707)\n\n``` pony\nfun box mod_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L710)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L711)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L713)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L716)\n\n``` pony\nfun box mul(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L719)\n\n``` pony\nfun box divrem(\n  y: I128 val)\n: (I128 val , I128 val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [I128](index) val)\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L746)\n\n``` pony\nfun box div(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L754)\n\n``` pony\nfun box rem(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L762)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box mul_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L773)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box divrem_unsafe(\n  y: I128 val)\n: (I128 val , I128 val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [I128](index) val)\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L785)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box div_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L797)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box rem_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L809)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L812)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L819)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L826)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L833)\n\n``` pony\nfun box addc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L847)\n\n``` pony\nfun box subc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L861)\n\n``` pony\nfun box mulc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L869)\n\n``` pony\nfun box divc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L872)\n\n``` pony\nfun box remc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L875)\n\n``` pony\nfun box fldc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L878)\n\n``` pony\nfun box modc(\n  y: I128 val)\n: (I128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L881)\n\n``` pony\nfun box add_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L884)\n\n``` pony\nfun box sub_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L887)\n\n``` pony\nfun box mul_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L890)\n\n``` pony\nfun box div_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L893)\n\n``` pony\nfun box rem_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L896)\n\n``` pony\nfun box divrem_partial(\n  y: I128 val)\n: (I128 val , I128 val) ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- ([I128](index) val , [I128](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L899)\n\n``` pony\nfun box fld_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L902)\n\n``` pony\nfun box mod_partial(\n  y: I128 val)\n: I128 val ?\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [U128](builtin-u128) val\n\n#### Returns\n\n- [I128](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [U128](builtin-u128) val\n\n#### Returns\n\n- [I128](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [U128](builtin-u128) val\n\n#### Returns\n\n- [I128](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [U128](builtin-u128) val\n\n#### Returns\n\n- [I128](index) val\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: I128 val)\n: I128 val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [I128](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: I128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](index) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: I128 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I128](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I128](https://stdlib.ponylang.io/builtin-I128)"
- name: I128.abs()
  id: builtin-i128#abs
  summary: null
  belongs_to: I128
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L671)

    ``` pony
    fun box abs()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.add()
  id: builtin-i128#add
  summary: null
  belongs_to: I128
  description: |-
    ### add

    ``` pony
    fun box add(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.add_partial()
  id: builtin-i128#add_partial
  summary: null
  belongs_to: I128
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L881)

    ``` pony
    fun box add_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.add_unsafe()
  id: builtin-i128#add_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.addc()
  id: builtin-i128#addc
  summary: null
  belongs_to: I128
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L833)

    ``` pony
    fun box addc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.bit_reverse()
  id: builtin-i128#bit_reverse
  summary: null
  belongs_to: I128
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L672)

    ``` pony
    fun box bit_reverse()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.bitwidth()
  id: builtin-i128#bitwidth
  summary: null
  belongs_to: I128
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L692)

    ``` pony
    fun box bitwidth()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.bswap()
  id: builtin-i128#bswap
  summary: null
  belongs_to: I128
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L673)

    ``` pony
    fun box bswap()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.bytewidth()
  id: builtin-i128#bytewidth
  summary: null
  belongs_to: I128
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L694)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I128.clz()
  id: builtin-i128#clz
  summary: null
  belongs_to: I128
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L675)

    ``` pony
    fun box clz()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.clz_unsafe()
  id: builtin-i128#clz_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L678)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.compare()
  id: builtin-i128#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I128
  description: "### compare\n\n``` pony\nfun box compare(\n  that: I128 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I128](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I128](https://stdlib.ponylang.io/builtin-I128)"
- name: I128.create()
  id: builtin-i128#create
  summary: null
  belongs_to: I128
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L665)

    ``` pony
    new val create(
      value: I128 val)
    : I128 val^
    ```

    #### Parameters

    - value: [I128](index) val

    #### Returns

    - [I128](index) val^
- name: I128.ctz()
  id: builtin-i128#ctz
  summary: null
  belongs_to: I128
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L676)

    ``` pony
    fun box ctz()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.ctz_unsafe()
  id: builtin-i128#ctz_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L685)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.div()
  id: builtin-i128#div
  summary: null
  belongs_to: I128
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L746)

    ``` pony
    fun box div(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.div_partial()
  id: builtin-i128#div_partial
  summary: null
  belongs_to: I128
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L890)

    ``` pony
    fun box div_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.div_unsafe()
  id: builtin-i128#div_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L785)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box div_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.divc()
  id: builtin-i128#divc
  summary: null
  belongs_to: I128
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L869)

    ``` pony
    fun box divc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.divrem()
  id: builtin-i128#divrem
  summary: null
  belongs_to: I128
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L719)

    ``` pony
    fun box divrem(
      y: I128 val)
    : (I128 val , I128 val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [I128](index) val)

    &nbsp;
- name: I128.divrem_partial()
  id: builtin-i128#divrem_partial
  summary: null
  belongs_to: I128
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L896)

    ``` pony
    fun box divrem_partial(
      y: I128 val)
    : (I128 val , I128 val) ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [I128](index) val) ?

    &nbsp;
- name: I128.divrem_unsafe()
  id: builtin-i128#divrem_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L773)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box divrem_unsafe(
      y: I128 val)
    : (I128 val , I128 val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [I128](index) val)

    &nbsp;
- name: I128.eq()
  id: builtin-i128#eq
  summary: null
  belongs_to: I128
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.f32()
  id: builtin-i128#f32
  summary: null
  belongs_to: I128
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L809)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I128.f32_unsafe()
  id: builtin-i128#f32_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L819)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I128.f64()
  id: builtin-i128#f64
  summary: null
  belongs_to: I128
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L812)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I128.f64_unsafe()
  id: builtin-i128#f64_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L826)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I128.fld()
  id: builtin-i128#fld
  summary: null
  belongs_to: I128
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L699)

    ``` pony
    fun box fld(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.fld_partial()
  id: builtin-i128#fld_partial
  summary: null
  belongs_to: I128
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L899)

    ``` pony
    fun box fld_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.fld_unsafe()
  id: builtin-i128#fld_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L701)

    ``` pony
    fun box fld_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.fldc()
  id: builtin-i128#fldc
  summary: null
  belongs_to: I128
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L875)

    ``` pony
    fun box fldc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.from()
  id: builtin-i128#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: I128
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](index) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L666)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I128 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I128](index) val^\n\n&nbsp;"
- name: I128.ge()
  id: builtin-i128#ge
  summary: null
  belongs_to: I128
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.gt()
  id: builtin-i128#gt
  summary: null
  belongs_to: I128
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.hash()
  id: builtin-i128#hash
  summary: null
  belongs_to: I128
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L710)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I128.hash64()
  id: builtin-i128#hash64
  summary: null
  belongs_to: I128
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L711)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I128.i128()
  id: builtin-i128#i128_1
  summary: null
  belongs_to: I128
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.i128_unsafe()
  id: builtin-i128#i128_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.i16()
  id: builtin-i128#i16
  summary: null
  belongs_to: I128
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I128.i16_unsafe()
  id: builtin-i128#i16_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I128.i32()
  id: builtin-i128#i32
  summary: null
  belongs_to: I128
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I128.i32_unsafe()
  id: builtin-i128#i32_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I128.i64()
  id: builtin-i128#i64
  summary: null
  belongs_to: I128
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I128.i64_unsafe()
  id: builtin-i128#i64_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I128.i8()
  id: builtin-i128#i8
  summary: null
  belongs_to: I128
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I128.i8_unsafe()
  id: builtin-i128#i8_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I128.ilong()
  id: builtin-i128#ilong
  summary: null
  belongs_to: I128
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I128.ilong_unsafe()
  id: builtin-i128#ilong_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I128.isize()
  id: builtin-i128#isize
  summary: null
  belongs_to: I128
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I128.isize_unsafe()
  id: builtin-i128#isize_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I128.le()
  id: builtin-i128#le
  summary: null
  belongs_to: I128
  description: |-
    ### le

    ``` pony
    fun box le(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.lt()
  id: builtin-i128#lt
  summary: null
  belongs_to: I128
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.max()
  id: builtin-i128#max
  summary: null
  belongs_to: I128
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L697)

    ``` pony
    fun box max(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.max_value()
  id: builtin-i128#max_value
  summary: null
  belongs_to: I128
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L669)

    ``` pony
    new val max_value()
    : I128 val^
    ```

    #### Returns

    - [I128](index) val^

    ## Public Functions
- name: I128.min()
  id: builtin-i128#min
  summary: null
  belongs_to: I128
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L696)

    ``` pony
    fun box min(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.min_value()
  id: builtin-i128#min_value
  summary: null
  belongs_to: I128
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L668)

    ``` pony
    new val min_value()
    : I128 val^
    ```

    #### Returns

    - [I128](index) val^

    &nbsp;
- name: I128.mod()
  id: builtin-i128#mod
  summary: null
  belongs_to: I128
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L704)

    ``` pony
    fun box mod(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.mod_partial()
  id: builtin-i128#mod_partial
  summary: null
  belongs_to: I128
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L902)

    ``` pony
    fun box mod_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.mod_unsafe()
  id: builtin-i128#mod_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L707)

    ``` pony
    fun box mod_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.modc()
  id: builtin-i128#modc
  summary: null
  belongs_to: I128
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L878)

    ``` pony
    fun box modc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.mul()
  id: builtin-i128#mul
  summary: null
  belongs_to: I128
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L716)

    ``` pony
    fun box mul(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.mul_partial()
  id: builtin-i128#mul_partial
  summary: null
  belongs_to: I128
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L887)

    ``` pony
    fun box mul_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.mul_unsafe()
  id: builtin-i128#mul_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L762)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box mul_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.mulc()
  id: builtin-i128#mulc
  summary: null
  belongs_to: I128
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L861)

    ``` pony
    fun box mulc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.ne()
  id: builtin-i128#ne
  summary: null
  belongs_to: I128
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: I128 val)
    : Bool val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I128.neg()
  id: builtin-i128#neg
  summary: null
  belongs_to: I128
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.neg_unsafe()
  id: builtin-i128#neg_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.op_and()
  id: builtin-i128#op_and
  summary: null
  belongs_to: I128
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.op_not()
  id: builtin-i128#op_not
  summary: null
  belongs_to: I128
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : I128 val
    ```

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.op_or()
  id: builtin-i128#op_or
  summary: null
  belongs_to: I128
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.op_xor()
  id: builtin-i128#op_xor
  summary: null
  belongs_to: I128
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.popcount()
  id: builtin-i128#popcount
  summary: null
  belongs_to: I128
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L674)

    ``` pony
    fun box popcount()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.rem()
  id: builtin-i128#rem
  summary: null
  belongs_to: I128
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L754)

    ``` pony
    fun box rem(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.rem_partial()
  id: builtin-i128#rem_partial
  summary: null
  belongs_to: I128
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L893)

    ``` pony
    fun box rem_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.rem_unsafe()
  id: builtin-i128#rem_unsafe
  summary: Unsafe operation
  belongs_to: I128
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L797)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box rem_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.remc()
  id: builtin-i128#remc
  summary: null
  belongs_to: I128
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L872)

    ``` pony
    fun box remc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.shl()
  id: builtin-i128#shl
  summary: null
  belongs_to: I128
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U128 val)
    : I128 val
    ```

    #### Parameters

    - y: [U128](builtin-u128) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.shl_unsafe()
  id: builtin-i128#shl_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U128 val)
    : I128 val
    ```

    #### Parameters

    - y: [U128](builtin-u128) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.shr()
  id: builtin-i128#shr
  summary: null
  belongs_to: I128
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U128 val)
    : I128 val
    ```

    #### Parameters

    - y: [U128](builtin-u128) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.shr_unsafe()
  id: builtin-i128#shr_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U128 val)
    : I128 val
    ```

    #### Parameters

    - y: [U128](builtin-u128) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.string()
  id: builtin-i128#string
  summary: null
  belongs_to: I128
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L713)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: I128.sub()
  id: builtin-i128#sub
  summary: null
  belongs_to: I128
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.sub_partial()
  id: builtin-i128#sub_partial
  summary: null
  belongs_to: I128
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L884)

    ``` pony
    fun box sub_partial(
      y: I128 val)
    : I128 val ?
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val ?

    &nbsp;
- name: I128.sub_unsafe()
  id: builtin-i128#sub_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: I128 val)
    : I128 val
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - [I128](index) val

    &nbsp;
- name: I128.subc()
  id: builtin-i128#subc
  summary: null
  belongs_to: I128
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L847)

    ``` pony
    fun box subc(
      y: I128 val)
    : (I128 val , Bool val)
    ```

    #### Parameters

    - y: [I128](index) val

    #### Returns

    - ([I128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I128.u128()
  id: builtin-i128#u128
  summary: null
  belongs_to: I128
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.u128_unsafe()
  id: builtin-i128#u128_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I128.u16()
  id: builtin-i128#u16
  summary: null
  belongs_to: I128
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I128.u16_unsafe()
  id: builtin-i128#u16_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I128.u32()
  id: builtin-i128#u32
  summary: null
  belongs_to: I128
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I128.u32_unsafe()
  id: builtin-i128#u32_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I128.u64()
  id: builtin-i128#u64
  summary: null
  belongs_to: I128
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I128.u64_unsafe()
  id: builtin-i128#u64_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I128.u8()
  id: builtin-i128#u8
  summary: null
  belongs_to: I128
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I128.u8_unsafe()
  id: builtin-i128#u8_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I128.ulong()
  id: builtin-i128#ulong
  summary: null
  belongs_to: I128
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I128.ulong_unsafe()
  id: builtin-i128#ulong_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I128.usize()
  id: builtin-i128#usize
  summary: null
  belongs_to: I128
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I128.usize_unsafe()
  id: builtin-i128#usize_unsafe
  summary: null
  belongs_to: I128
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I16
  id: builtin-i16
  summary: Unsafe operation
  description: "# I16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L93)\n\n``` pony\nprimitive val I16 is\n  SignedInteger[I16 val, U16 val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[I16](index) val, [U16](builtin-u16) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L94)\n\n``` pony\nnew val create(\n  value: I16 val)\n: I16 val^\n```\n\n#### Parameters\n\n- value: [I16](index) val\n\n#### Returns\n\n- [I16](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](index) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L95)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I16 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I16](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L97)\n\n``` pony\nnew val min_value()\n: I16 val^\n```\n\n#### Returns\n\n- [I16](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L98)\n\n``` pony\nnew val max_value()\n: I16 val^\n```\n\n#### Returns\n\n- [I16](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L100)\n\n``` pony\nfun box abs()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L101)\n\n``` pony\nfun box bit_reverse()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L102)\n\n``` pony\nfun box bswap()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L103)\n\n``` pony\nfun box popcount()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L104)\n\n``` pony\nfun box clz()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L105)\n\n``` pony\nfun box ctz()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L107)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L114)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L121)\n\n``` pony\nfun box bitwidth()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L123)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L125)\n\n``` pony\nfun box min(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L126)\n\n``` pony\nfun box max(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L128)\n\n``` pony\nfun box fld(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L131)\n\n``` pony\nfun box fld_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L134)\n\n``` pony\nfun box mod(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L137)\n\n``` pony\nfun box mod_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L140)\n\n``` pony\nfun box addc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L143)\n\n``` pony\nfun box subc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L146)\n\n``` pony\nfun box mulc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L149)\n\n``` pony\nfun box divc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L152)\n\n``` pony\nfun box remc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L155)\n\n``` pony\nfun box fldc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L158)\n\n``` pony\nfun box modc(\n  y: I16 val)\n: (I16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L161)\n\n``` pony\nfun box add_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L164)\n\n``` pony\nfun box sub_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L167)\n\n``` pony\nfun box mul_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L170)\n\n``` pony\nfun box div_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L173)\n\n``` pony\nfun box rem_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L176)\n\n``` pony\nfun box divrem_partial(\n  y: I16 val)\n: (I16 val , I16 val) ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [I16](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L179)\n\n``` pony\nfun box fld_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L182)\n\n``` pony\nfun box mod_partial(\n  y: I16 val)\n: I16 val ?\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [U16](builtin-u16) val\n\n#### Returns\n\n- [I16](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [U16](builtin-u16) val\n\n#### Returns\n\n- [I16](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [U16](builtin-u16) val\n\n#### Returns\n\n- [I16](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [U16](builtin-u16) val\n\n#### Returns\n\n- [I16](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: I16 val)\n: (I16 val , I16 val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [I16](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: I16 val)\n: (I16 val , I16 val)\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- ([I16](index) val , [I16](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: I16 val)\n: I16 val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [I16](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: I16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](index) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: I16 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I16](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I16](https://stdlib.ponylang.io/builtin-I16)"
- name: I16.abs()
  id: builtin-i16#abs
  summary: null
  belongs_to: I16
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L100)

    ``` pony
    fun box abs()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.add()
  id: builtin-i16#add
  summary: null
  belongs_to: I16
  description: |-
    ### add

    ``` pony
    fun box add(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.add_partial()
  id: builtin-i16#add_partial
  summary: null
  belongs_to: I16
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L161)

    ``` pony
    fun box add_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.add_unsafe()
  id: builtin-i16#add_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.addc()
  id: builtin-i16#addc
  summary: null
  belongs_to: I16
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L140)

    ``` pony
    fun box addc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.bit_reverse()
  id: builtin-i16#bit_reverse
  summary: null
  belongs_to: I16
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L101)

    ``` pony
    fun box bit_reverse()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.bitwidth()
  id: builtin-i16#bitwidth
  summary: null
  belongs_to: I16
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L121)

    ``` pony
    fun box bitwidth()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.bswap()
  id: builtin-i16#bswap
  summary: null
  belongs_to: I16
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L102)

    ``` pony
    fun box bswap()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.bytewidth()
  id: builtin-i16#bytewidth
  summary: null
  belongs_to: I16
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L123)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I16.clz()
  id: builtin-i16#clz
  summary: null
  belongs_to: I16
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L104)

    ``` pony
    fun box clz()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.clz_unsafe()
  id: builtin-i16#clz_unsafe
  summary: Unsafe operation
  belongs_to: I16
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L107)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.compare()
  id: builtin-i16#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I16
  description: "### compare\n\n``` pony\nfun box compare(\n  that: I16 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I16](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I16](https://stdlib.ponylang.io/builtin-I16)"
- name: I16.create()
  id: builtin-i16#create
  summary: null
  belongs_to: I16
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L94)

    ``` pony
    new val create(
      value: I16 val)
    : I16 val^
    ```

    #### Parameters

    - value: [I16](index) val

    #### Returns

    - [I16](index) val^
- name: I16.ctz()
  id: builtin-i16#ctz
  summary: null
  belongs_to: I16
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L105)

    ``` pony
    fun box ctz()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.ctz_unsafe()
  id: builtin-i16#ctz_unsafe
  summary: Unsafe operation
  belongs_to: I16
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L114)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.div()
  id: builtin-i16#div
  summary: null
  belongs_to: I16
  description: |-
    ### div

    ``` pony
    fun box div(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.div_partial()
  id: builtin-i16#div_partial
  summary: null
  belongs_to: I16
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L170)

    ``` pony
    fun box div_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.div_unsafe()
  id: builtin-i16#div_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.divc()
  id: builtin-i16#divc
  summary: null
  belongs_to: I16
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L149)

    ``` pony
    fun box divc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.divrem()
  id: builtin-i16#divrem
  summary: null
  belongs_to: I16
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: I16 val)
    : (I16 val , I16 val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [I16](index) val)

    &nbsp;
- name: I16.divrem_partial()
  id: builtin-i16#divrem_partial
  summary: null
  belongs_to: I16
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L176)

    ``` pony
    fun box divrem_partial(
      y: I16 val)
    : (I16 val , I16 val) ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [I16](index) val) ?

    &nbsp;
- name: I16.divrem_unsafe()
  id: builtin-i16#divrem_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: I16 val)
    : (I16 val , I16 val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [I16](index) val)

    &nbsp;
- name: I16.eq()
  id: builtin-i16#eq
  summary: null
  belongs_to: I16
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.f32()
  id: builtin-i16#f32
  summary: null
  belongs_to: I16
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I16.f32_unsafe()
  id: builtin-i16#f32_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I16.f64()
  id: builtin-i16#f64
  summary: null
  belongs_to: I16
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I16.f64_unsafe()
  id: builtin-i16#f64_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I16.fld()
  id: builtin-i16#fld
  summary: null
  belongs_to: I16
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L128)

    ``` pony
    fun box fld(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.fld_partial()
  id: builtin-i16#fld_partial
  summary: null
  belongs_to: I16
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L179)

    ``` pony
    fun box fld_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.fld_unsafe()
  id: builtin-i16#fld_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L131)

    ``` pony
    fun box fld_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.fldc()
  id: builtin-i16#fldc
  summary: null
  belongs_to: I16
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L155)

    ``` pony
    fun box fldc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.from()
  id: builtin-i16#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: I16
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](index) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L95)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I16 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I16](index) val^\n\n&nbsp;"
- name: I16.ge()
  id: builtin-i16#ge
  summary: null
  belongs_to: I16
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.gt()
  id: builtin-i16#gt
  summary: null
  belongs_to: I16
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.hash()
  id: builtin-i16#hash
  summary: null
  belongs_to: I16
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I16.hash64()
  id: builtin-i16#hash64
  summary: null
  belongs_to: I16
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I16.i128()
  id: builtin-i16#i128
  summary: null
  belongs_to: I16
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I16.i128_unsafe()
  id: builtin-i16#i128_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I16.i16()
  id: builtin-i16#i16_1
  summary: null
  belongs_to: I16
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.i16_unsafe()
  id: builtin-i16#i16_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.i32()
  id: builtin-i16#i32
  summary: null
  belongs_to: I16
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I16.i32_unsafe()
  id: builtin-i16#i32_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I16.i64()
  id: builtin-i16#i64
  summary: null
  belongs_to: I16
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I16.i64_unsafe()
  id: builtin-i16#i64_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I16.i8()
  id: builtin-i16#i8
  summary: null
  belongs_to: I16
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I16.i8_unsafe()
  id: builtin-i16#i8_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I16.ilong()
  id: builtin-i16#ilong
  summary: null
  belongs_to: I16
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I16.ilong_unsafe()
  id: builtin-i16#ilong_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I16.isize()
  id: builtin-i16#isize
  summary: null
  belongs_to: I16
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I16.isize_unsafe()
  id: builtin-i16#isize_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I16.le()
  id: builtin-i16#le
  summary: null
  belongs_to: I16
  description: |-
    ### le

    ``` pony
    fun box le(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.lt()
  id: builtin-i16#lt
  summary: null
  belongs_to: I16
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.max()
  id: builtin-i16#max
  summary: null
  belongs_to: I16
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L126)

    ``` pony
    fun box max(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.max_value()
  id: builtin-i16#max_value
  summary: null
  belongs_to: I16
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L98)

    ``` pony
    new val max_value()
    : I16 val^
    ```

    #### Returns

    - [I16](index) val^

    ## Public Functions
- name: I16.min()
  id: builtin-i16#min
  summary: null
  belongs_to: I16
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L125)

    ``` pony
    fun box min(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.min_value()
  id: builtin-i16#min_value
  summary: null
  belongs_to: I16
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L97)

    ``` pony
    new val min_value()
    : I16 val^
    ```

    #### Returns

    - [I16](index) val^

    &nbsp;
- name: I16.mod()
  id: builtin-i16#mod
  summary: null
  belongs_to: I16
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L134)

    ``` pony
    fun box mod(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.mod_partial()
  id: builtin-i16#mod_partial
  summary: null
  belongs_to: I16
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L182)

    ``` pony
    fun box mod_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.mod_unsafe()
  id: builtin-i16#mod_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L137)

    ``` pony
    fun box mod_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.modc()
  id: builtin-i16#modc
  summary: null
  belongs_to: I16
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L158)

    ``` pony
    fun box modc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.mul()
  id: builtin-i16#mul
  summary: null
  belongs_to: I16
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.mul_partial()
  id: builtin-i16#mul_partial
  summary: null
  belongs_to: I16
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L167)

    ``` pony
    fun box mul_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.mul_unsafe()
  id: builtin-i16#mul_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.mulc()
  id: builtin-i16#mulc
  summary: null
  belongs_to: I16
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L146)

    ``` pony
    fun box mulc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.ne()
  id: builtin-i16#ne
  summary: null
  belongs_to: I16
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: I16 val)
    : Bool val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I16.neg()
  id: builtin-i16#neg
  summary: null
  belongs_to: I16
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.neg_unsafe()
  id: builtin-i16#neg_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.op_and()
  id: builtin-i16#op_and
  summary: null
  belongs_to: I16
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.op_not()
  id: builtin-i16#op_not
  summary: null
  belongs_to: I16
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : I16 val
    ```

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.op_or()
  id: builtin-i16#op_or
  summary: null
  belongs_to: I16
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.op_xor()
  id: builtin-i16#op_xor
  summary: null
  belongs_to: I16
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.popcount()
  id: builtin-i16#popcount
  summary: null
  belongs_to: I16
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L103)

    ``` pony
    fun box popcount()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.rem()
  id: builtin-i16#rem
  summary: null
  belongs_to: I16
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.rem_partial()
  id: builtin-i16#rem_partial
  summary: null
  belongs_to: I16
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L173)

    ``` pony
    fun box rem_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.rem_unsafe()
  id: builtin-i16#rem_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.remc()
  id: builtin-i16#remc
  summary: null
  belongs_to: I16
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L152)

    ``` pony
    fun box remc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.shl()
  id: builtin-i16#shl
  summary: null
  belongs_to: I16
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U16 val)
    : I16 val
    ```

    #### Parameters

    - y: [U16](builtin-u16) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.shl_unsafe()
  id: builtin-i16#shl_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U16 val)
    : I16 val
    ```

    #### Parameters

    - y: [U16](builtin-u16) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.shr()
  id: builtin-i16#shr
  summary: null
  belongs_to: I16
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U16 val)
    : I16 val
    ```

    #### Parameters

    - y: [U16](builtin-u16) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.shr_unsafe()
  id: builtin-i16#shr_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U16 val)
    : I16 val
    ```

    #### Parameters

    - y: [U16](builtin-u16) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.string()
  id: builtin-i16#string
  summary: null
  belongs_to: I16
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: I16.sub()
  id: builtin-i16#sub
  summary: null
  belongs_to: I16
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.sub_partial()
  id: builtin-i16#sub_partial
  summary: null
  belongs_to: I16
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L164)

    ``` pony
    fun box sub_partial(
      y: I16 val)
    : I16 val ?
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val ?

    &nbsp;
- name: I16.sub_unsafe()
  id: builtin-i16#sub_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: I16 val)
    : I16 val
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - [I16](index) val

    &nbsp;
- name: I16.subc()
  id: builtin-i16#subc
  summary: null
  belongs_to: I16
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L143)

    ``` pony
    fun box subc(
      y: I16 val)
    : (I16 val , Bool val)
    ```

    #### Parameters

    - y: [I16](index) val

    #### Returns

    - ([I16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I16.u128()
  id: builtin-i16#u128
  summary: null
  belongs_to: I16
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I16.u128_unsafe()
  id: builtin-i16#u128_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I16.u16()
  id: builtin-i16#u16
  summary: null
  belongs_to: I16
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.u16_unsafe()
  id: builtin-i16#u16_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I16.u32()
  id: builtin-i16#u32
  summary: null
  belongs_to: I16
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I16.u32_unsafe()
  id: builtin-i16#u32_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I16.u64()
  id: builtin-i16#u64
  summary: null
  belongs_to: I16
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I16.u64_unsafe()
  id: builtin-i16#u64_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I16.u8()
  id: builtin-i16#u8
  summary: null
  belongs_to: I16
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I16.u8_unsafe()
  id: builtin-i16#u8_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I16.ulong()
  id: builtin-i16#ulong
  summary: null
  belongs_to: I16
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I16.ulong_unsafe()
  id: builtin-i16#ulong_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I16.usize()
  id: builtin-i16#usize
  summary: null
  belongs_to: I16
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I16.usize_unsafe()
  id: builtin-i16#usize_unsafe
  summary: null
  belongs_to: I16
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I32
  id: builtin-i32
  summary: Unsafe operation
  description: "# I32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L186)\n\n``` pony\nprimitive val I32 is\n  SignedInteger[I32 val, U32 val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[I32](index) val, [U32](builtin-u32) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L187)\n\n``` pony\nnew val create(\n  value: I32 val)\n: I32 val^\n```\n\n#### Parameters\n\n- value: [I32](index) val\n\n#### Returns\n\n- [I32](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](index) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L188)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I32 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I32](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L190)\n\n``` pony\nnew val min_value()\n: I32 val^\n```\n\n#### Returns\n\n- [I32](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L191)\n\n``` pony\nnew val max_value()\n: I32 val^\n```\n\n#### Returns\n\n- [I32](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L193)\n\n``` pony\nfun box abs()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L194)\n\n``` pony\nfun box bit_reverse()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L195)\n\n``` pony\nfun box bswap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L196)\n\n``` pony\nfun box popcount()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L197)\n\n``` pony\nfun box clz()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L198)\n\n``` pony\nfun box ctz()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L200)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L207)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L214)\n\n``` pony\nfun box bitwidth()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L216)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L218)\n\n``` pony\nfun box min(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L219)\n\n``` pony\nfun box max(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L221)\n\n``` pony\nfun box fld(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L224)\n\n``` pony\nfun box fld_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L227)\n\n``` pony\nfun box mod(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L230)\n\n``` pony\nfun box mod_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L233)\n\n``` pony\nfun box addc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L236)\n\n``` pony\nfun box subc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L239)\n\n``` pony\nfun box mulc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L242)\n\n``` pony\nfun box divc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L245)\n\n``` pony\nfun box remc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L248)\n\n``` pony\nfun box fldc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L251)\n\n``` pony\nfun box modc(\n  y: I32 val)\n: (I32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L254)\n\n``` pony\nfun box add_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L257)\n\n``` pony\nfun box sub_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L260)\n\n``` pony\nfun box mul_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L263)\n\n``` pony\nfun box div_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L266)\n\n``` pony\nfun box rem_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L269)\n\n``` pony\nfun box divrem_partial(\n  y: I32 val)\n: (I32 val , I32 val) ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [I32](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L272)\n\n``` pony\nfun box fld_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L275)\n\n``` pony\nfun box mod_partial(\n  y: I32 val)\n: I32 val ?\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [U32](builtin-u32) val\n\n#### Returns\n\n- [I32](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [U32](builtin-u32) val\n\n#### Returns\n\n- [I32](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [U32](builtin-u32) val\n\n#### Returns\n\n- [I32](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [U32](builtin-u32) val\n\n#### Returns\n\n- [I32](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: I32 val)\n: (I32 val , I32 val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [I32](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: I32 val)\n: (I32 val , I32 val)\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- ([I32](index) val , [I32](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: I32 val)\n: I32 val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [I32](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: I32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](index) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: I32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I32](https://stdlib.ponylang.io/builtin-I32)"
- name: I32.abs()
  id: builtin-i32#abs
  summary: null
  belongs_to: I32
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L193)

    ``` pony
    fun box abs()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.add()
  id: builtin-i32#add
  summary: null
  belongs_to: I32
  description: |-
    ### add

    ``` pony
    fun box add(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.add_partial()
  id: builtin-i32#add_partial
  summary: null
  belongs_to: I32
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L254)

    ``` pony
    fun box add_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.add_unsafe()
  id: builtin-i32#add_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.addc()
  id: builtin-i32#addc
  summary: null
  belongs_to: I32
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L233)

    ``` pony
    fun box addc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.bit_reverse()
  id: builtin-i32#bit_reverse
  summary: null
  belongs_to: I32
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L194)

    ``` pony
    fun box bit_reverse()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.bitwidth()
  id: builtin-i32#bitwidth
  summary: null
  belongs_to: I32
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L214)

    ``` pony
    fun box bitwidth()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.bswap()
  id: builtin-i32#bswap
  summary: null
  belongs_to: I32
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L195)

    ``` pony
    fun box bswap()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.bytewidth()
  id: builtin-i32#bytewidth
  summary: null
  belongs_to: I32
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L216)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I32.clz()
  id: builtin-i32#clz
  summary: null
  belongs_to: I32
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L197)

    ``` pony
    fun box clz()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.clz_unsafe()
  id: builtin-i32#clz_unsafe
  summary: Unsafe operation
  belongs_to: I32
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L200)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.compare()
  id: builtin-i32#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I32
  description: "### compare\n\n``` pony\nfun box compare(\n  that: I32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I32](https://stdlib.ponylang.io/builtin-I32)"
- name: I32.create()
  id: builtin-i32#create
  summary: null
  belongs_to: I32
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L187)

    ``` pony
    new val create(
      value: I32 val)
    : I32 val^
    ```

    #### Parameters

    - value: [I32](index) val

    #### Returns

    - [I32](index) val^
- name: I32.ctz()
  id: builtin-i32#ctz
  summary: null
  belongs_to: I32
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L198)

    ``` pony
    fun box ctz()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.ctz_unsafe()
  id: builtin-i32#ctz_unsafe
  summary: Unsafe operation
  belongs_to: I32
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L207)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.div()
  id: builtin-i32#div
  summary: null
  belongs_to: I32
  description: |-
    ### div

    ``` pony
    fun box div(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.div_partial()
  id: builtin-i32#div_partial
  summary: null
  belongs_to: I32
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L263)

    ``` pony
    fun box div_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.div_unsafe()
  id: builtin-i32#div_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.divc()
  id: builtin-i32#divc
  summary: null
  belongs_to: I32
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L242)

    ``` pony
    fun box divc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.divrem()
  id: builtin-i32#divrem
  summary: null
  belongs_to: I32
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: I32 val)
    : (I32 val , I32 val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [I32](index) val)

    &nbsp;
- name: I32.divrem_partial()
  id: builtin-i32#divrem_partial
  summary: null
  belongs_to: I32
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L269)

    ``` pony
    fun box divrem_partial(
      y: I32 val)
    : (I32 val , I32 val) ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [I32](index) val) ?

    &nbsp;
- name: I32.divrem_unsafe()
  id: builtin-i32#divrem_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: I32 val)
    : (I32 val , I32 val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [I32](index) val)

    &nbsp;
- name: I32.eq()
  id: builtin-i32#eq
  summary: null
  belongs_to: I32
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.f32()
  id: builtin-i32#f32
  summary: null
  belongs_to: I32
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I32.f32_unsafe()
  id: builtin-i32#f32_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I32.f64()
  id: builtin-i32#f64
  summary: null
  belongs_to: I32
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I32.f64_unsafe()
  id: builtin-i32#f64_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I32.fld()
  id: builtin-i32#fld
  summary: null
  belongs_to: I32
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L221)

    ``` pony
    fun box fld(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.fld_partial()
  id: builtin-i32#fld_partial
  summary: null
  belongs_to: I32
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L272)

    ``` pony
    fun box fld_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.fld_unsafe()
  id: builtin-i32#fld_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L224)

    ``` pony
    fun box fld_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.fldc()
  id: builtin-i32#fldc
  summary: null
  belongs_to: I32
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L248)

    ``` pony
    fun box fldc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.from()
  id: builtin-i32#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: I32
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](index) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L188)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I32 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I32](index) val^\n\n&nbsp;"
- name: I32.ge()
  id: builtin-i32#ge
  summary: null
  belongs_to: I32
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.gt()
  id: builtin-i32#gt
  summary: null
  belongs_to: I32
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.hash()
  id: builtin-i32#hash
  summary: null
  belongs_to: I32
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I32.hash64()
  id: builtin-i32#hash64
  summary: null
  belongs_to: I32
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I32.i128()
  id: builtin-i32#i128
  summary: null
  belongs_to: I32
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I32.i128_unsafe()
  id: builtin-i32#i128_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I32.i16()
  id: builtin-i32#i16
  summary: null
  belongs_to: I32
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I32.i16_unsafe()
  id: builtin-i32#i16_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I32.i32()
  id: builtin-i32#i32_1
  summary: null
  belongs_to: I32
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.i32_unsafe()
  id: builtin-i32#i32_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.i64()
  id: builtin-i32#i64
  summary: null
  belongs_to: I32
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I32.i64_unsafe()
  id: builtin-i32#i64_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I32.i8()
  id: builtin-i32#i8
  summary: null
  belongs_to: I32
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I32.i8_unsafe()
  id: builtin-i32#i8_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I32.ilong()
  id: builtin-i32#ilong
  summary: null
  belongs_to: I32
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I32.ilong_unsafe()
  id: builtin-i32#ilong_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I32.isize()
  id: builtin-i32#isize
  summary: null
  belongs_to: I32
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I32.isize_unsafe()
  id: builtin-i32#isize_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I32.le()
  id: builtin-i32#le
  summary: null
  belongs_to: I32
  description: |-
    ### le

    ``` pony
    fun box le(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.lt()
  id: builtin-i32#lt
  summary: null
  belongs_to: I32
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.max()
  id: builtin-i32#max
  summary: null
  belongs_to: I32
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L219)

    ``` pony
    fun box max(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.max_value()
  id: builtin-i32#max_value
  summary: null
  belongs_to: I32
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L191)

    ``` pony
    new val max_value()
    : I32 val^
    ```

    #### Returns

    - [I32](index) val^

    ## Public Functions
- name: I32.min()
  id: builtin-i32#min
  summary: null
  belongs_to: I32
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L218)

    ``` pony
    fun box min(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.min_value()
  id: builtin-i32#min_value
  summary: null
  belongs_to: I32
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L190)

    ``` pony
    new val min_value()
    : I32 val^
    ```

    #### Returns

    - [I32](index) val^

    &nbsp;
- name: I32.mod()
  id: builtin-i32#mod
  summary: null
  belongs_to: I32
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L227)

    ``` pony
    fun box mod(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.mod_partial()
  id: builtin-i32#mod_partial
  summary: null
  belongs_to: I32
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L275)

    ``` pony
    fun box mod_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.mod_unsafe()
  id: builtin-i32#mod_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L230)

    ``` pony
    fun box mod_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.modc()
  id: builtin-i32#modc
  summary: null
  belongs_to: I32
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L251)

    ``` pony
    fun box modc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.mul()
  id: builtin-i32#mul
  summary: null
  belongs_to: I32
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.mul_partial()
  id: builtin-i32#mul_partial
  summary: null
  belongs_to: I32
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L260)

    ``` pony
    fun box mul_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.mul_unsafe()
  id: builtin-i32#mul_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.mulc()
  id: builtin-i32#mulc
  summary: null
  belongs_to: I32
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L239)

    ``` pony
    fun box mulc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.ne()
  id: builtin-i32#ne
  summary: null
  belongs_to: I32
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: I32 val)
    : Bool val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I32.neg()
  id: builtin-i32#neg
  summary: null
  belongs_to: I32
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.neg_unsafe()
  id: builtin-i32#neg_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.op_and()
  id: builtin-i32#op_and
  summary: null
  belongs_to: I32
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.op_not()
  id: builtin-i32#op_not
  summary: null
  belongs_to: I32
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : I32 val
    ```

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.op_or()
  id: builtin-i32#op_or
  summary: null
  belongs_to: I32
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.op_xor()
  id: builtin-i32#op_xor
  summary: null
  belongs_to: I32
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.popcount()
  id: builtin-i32#popcount
  summary: null
  belongs_to: I32
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L196)

    ``` pony
    fun box popcount()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.rem()
  id: builtin-i32#rem
  summary: null
  belongs_to: I32
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.rem_partial()
  id: builtin-i32#rem_partial
  summary: null
  belongs_to: I32
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L266)

    ``` pony
    fun box rem_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.rem_unsafe()
  id: builtin-i32#rem_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.remc()
  id: builtin-i32#remc
  summary: null
  belongs_to: I32
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L245)

    ``` pony
    fun box remc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.shl()
  id: builtin-i32#shl
  summary: null
  belongs_to: I32
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U32 val)
    : I32 val
    ```

    #### Parameters

    - y: [U32](builtin-u32) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.shl_unsafe()
  id: builtin-i32#shl_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U32 val)
    : I32 val
    ```

    #### Parameters

    - y: [U32](builtin-u32) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.shr()
  id: builtin-i32#shr
  summary: null
  belongs_to: I32
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U32 val)
    : I32 val
    ```

    #### Parameters

    - y: [U32](builtin-u32) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.shr_unsafe()
  id: builtin-i32#shr_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U32 val)
    : I32 val
    ```

    #### Parameters

    - y: [U32](builtin-u32) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.string()
  id: builtin-i32#string
  summary: null
  belongs_to: I32
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: I32.sub()
  id: builtin-i32#sub
  summary: null
  belongs_to: I32
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.sub_partial()
  id: builtin-i32#sub_partial
  summary: null
  belongs_to: I32
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L257)

    ``` pony
    fun box sub_partial(
      y: I32 val)
    : I32 val ?
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val ?

    &nbsp;
- name: I32.sub_unsafe()
  id: builtin-i32#sub_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: I32 val)
    : I32 val
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - [I32](index) val

    &nbsp;
- name: I32.subc()
  id: builtin-i32#subc
  summary: null
  belongs_to: I32
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L236)

    ``` pony
    fun box subc(
      y: I32 val)
    : (I32 val , Bool val)
    ```

    #### Parameters

    - y: [I32](index) val

    #### Returns

    - ([I32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I32.u128()
  id: builtin-i32#u128
  summary: null
  belongs_to: I32
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I32.u128_unsafe()
  id: builtin-i32#u128_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I32.u16()
  id: builtin-i32#u16
  summary: null
  belongs_to: I32
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I32.u16_unsafe()
  id: builtin-i32#u16_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I32.u32()
  id: builtin-i32#u32
  summary: null
  belongs_to: I32
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.u32_unsafe()
  id: builtin-i32#u32_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I32.u64()
  id: builtin-i32#u64
  summary: null
  belongs_to: I32
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I32.u64_unsafe()
  id: builtin-i32#u64_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I32.u8()
  id: builtin-i32#u8
  summary: null
  belongs_to: I32
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I32.u8_unsafe()
  id: builtin-i32#u8_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I32.ulong()
  id: builtin-i32#ulong
  summary: null
  belongs_to: I32
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I32.ulong_unsafe()
  id: builtin-i32#ulong_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I32.usize()
  id: builtin-i32#usize
  summary: null
  belongs_to: I32
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I32.usize_unsafe()
  id: builtin-i32#usize_unsafe
  summary: null
  belongs_to: I32
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I64
  id: builtin-i64
  summary: Unsafe operation
  description: "# I64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L278)\n\n``` pony\nprimitive val I64 is\n  SignedInteger[I64 val, U64 val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[I64](index) val, [U64](builtin-u64) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L279)\n\n``` pony\nnew val create(\n  value: I64 val)\n: I64 val^\n```\n\n#### Parameters\n\n- value: [I64](index) val\n\n#### Returns\n\n- [I64](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](index) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L280)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I64 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I64](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L282)\n\n``` pony\nnew val min_value()\n: I64 val^\n```\n\n#### Returns\n\n- [I64](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L283)\n\n``` pony\nnew val max_value()\n: I64 val^\n```\n\n#### Returns\n\n- [I64](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L285)\n\n``` pony\nfun box abs()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L286)\n\n``` pony\nfun box bit_reverse()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L287)\n\n``` pony\nfun box bswap()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L288)\n\n``` pony\nfun box popcount()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L289)\n\n``` pony\nfun box clz()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L290)\n\n``` pony\nfun box ctz()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L292)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L299)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L306)\n\n``` pony\nfun box bitwidth()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L308)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L310)\n\n``` pony\nfun box min(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L311)\n\n``` pony\nfun box max(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L313)\n\n``` pony\nfun box fld(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L316)\n\n``` pony\nfun box fld_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L319)\n\n``` pony\nfun box mod(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L322)\n\n``` pony\nfun box mod_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L325)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L327)\n\n``` pony\nfun box addc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L330)\n\n``` pony\nfun box subc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L333)\n\n``` pony\nfun box mulc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L336)\n\n``` pony\nfun box divc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L339)\n\n``` pony\nfun box remc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L342)\n\n``` pony\nfun box fldc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L345)\n\n``` pony\nfun box modc(\n  y: I64 val)\n: (I64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L348)\n\n``` pony\nfun box add_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L351)\n\n``` pony\nfun box sub_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L354)\n\n``` pony\nfun box mul_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L357)\n\n``` pony\nfun box div_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L360)\n\n``` pony\nfun box rem_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L363)\n\n``` pony\nfun box divrem_partial(\n  y: I64 val)\n: (I64 val , I64 val) ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [I64](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L366)\n\n``` pony\nfun box fld_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L369)\n\n``` pony\nfun box mod_partial(\n  y: I64 val)\n: I64 val ?\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [U64](builtin-u64) val\n\n#### Returns\n\n- [I64](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [U64](builtin-u64) val\n\n#### Returns\n\n- [I64](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [U64](builtin-u64) val\n\n#### Returns\n\n- [I64](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [U64](builtin-u64) val\n\n#### Returns\n\n- [I64](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: I64 val)\n: (I64 val , I64 val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [I64](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: I64 val)\n: (I64 val , I64 val)\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- ([I64](index) val , [I64](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: I64 val)\n: I64 val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [I64](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: I64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](index) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: I64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I64](https://stdlib.ponylang.io/builtin-I64)"
- name: I64.abs()
  id: builtin-i64#abs
  summary: null
  belongs_to: I64
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L285)

    ``` pony
    fun box abs()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.add()
  id: builtin-i64#add
  summary: null
  belongs_to: I64
  description: |-
    ### add

    ``` pony
    fun box add(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.add_partial()
  id: builtin-i64#add_partial
  summary: null
  belongs_to: I64
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L348)

    ``` pony
    fun box add_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.add_unsafe()
  id: builtin-i64#add_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.addc()
  id: builtin-i64#addc
  summary: null
  belongs_to: I64
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L327)

    ``` pony
    fun box addc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.bit_reverse()
  id: builtin-i64#bit_reverse
  summary: null
  belongs_to: I64
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L286)

    ``` pony
    fun box bit_reverse()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.bitwidth()
  id: builtin-i64#bitwidth
  summary: null
  belongs_to: I64
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L306)

    ``` pony
    fun box bitwidth()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.bswap()
  id: builtin-i64#bswap
  summary: null
  belongs_to: I64
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L287)

    ``` pony
    fun box bswap()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.bytewidth()
  id: builtin-i64#bytewidth
  summary: null
  belongs_to: I64
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L308)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I64.clz()
  id: builtin-i64#clz
  summary: null
  belongs_to: I64
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L289)

    ``` pony
    fun box clz()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.clz_unsafe()
  id: builtin-i64#clz_unsafe
  summary: Unsafe operation
  belongs_to: I64
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L292)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.compare()
  id: builtin-i64#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I64
  description: "### compare\n\n``` pony\nfun box compare(\n  that: I64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I64](https://stdlib.ponylang.io/builtin-I64)"
- name: I64.create()
  id: builtin-i64#create
  summary: null
  belongs_to: I64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L279)

    ``` pony
    new val create(
      value: I64 val)
    : I64 val^
    ```

    #### Parameters

    - value: [I64](index) val

    #### Returns

    - [I64](index) val^
- name: I64.ctz()
  id: builtin-i64#ctz
  summary: null
  belongs_to: I64
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L290)

    ``` pony
    fun box ctz()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.ctz_unsafe()
  id: builtin-i64#ctz_unsafe
  summary: Unsafe operation
  belongs_to: I64
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L299)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.div()
  id: builtin-i64#div
  summary: null
  belongs_to: I64
  description: |-
    ### div

    ``` pony
    fun box div(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.div_partial()
  id: builtin-i64#div_partial
  summary: null
  belongs_to: I64
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L357)

    ``` pony
    fun box div_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.div_unsafe()
  id: builtin-i64#div_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.divc()
  id: builtin-i64#divc
  summary: null
  belongs_to: I64
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L336)

    ``` pony
    fun box divc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.divrem()
  id: builtin-i64#divrem
  summary: null
  belongs_to: I64
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: I64 val)
    : (I64 val , I64 val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [I64](index) val)

    &nbsp;
- name: I64.divrem_partial()
  id: builtin-i64#divrem_partial
  summary: null
  belongs_to: I64
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L363)

    ``` pony
    fun box divrem_partial(
      y: I64 val)
    : (I64 val , I64 val) ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [I64](index) val) ?

    &nbsp;
- name: I64.divrem_unsafe()
  id: builtin-i64#divrem_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: I64 val)
    : (I64 val , I64 val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [I64](index) val)

    &nbsp;
- name: I64.eq()
  id: builtin-i64#eq
  summary: null
  belongs_to: I64
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.f32()
  id: builtin-i64#f32
  summary: null
  belongs_to: I64
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I64.f32_unsafe()
  id: builtin-i64#f32_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I64.f64()
  id: builtin-i64#f64
  summary: null
  belongs_to: I64
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I64.f64_unsafe()
  id: builtin-i64#f64_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I64.fld()
  id: builtin-i64#fld
  summary: null
  belongs_to: I64
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L313)

    ``` pony
    fun box fld(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.fld_partial()
  id: builtin-i64#fld_partial
  summary: null
  belongs_to: I64
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L366)

    ``` pony
    fun box fld_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.fld_unsafe()
  id: builtin-i64#fld_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L316)

    ``` pony
    fun box fld_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.fldc()
  id: builtin-i64#fldc
  summary: null
  belongs_to: I64
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L342)

    ``` pony
    fun box fldc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.from()
  id: builtin-i64#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: I64
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](index) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L280)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I64 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I64](index) val^\n\n&nbsp;"
- name: I64.ge()
  id: builtin-i64#ge
  summary: null
  belongs_to: I64
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.gt()
  id: builtin-i64#gt
  summary: null
  belongs_to: I64
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.hash()
  id: builtin-i64#hash
  summary: null
  belongs_to: I64
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L325)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I64.hash64()
  id: builtin-i64#hash64
  summary: null
  belongs_to: I64
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.i128()
  id: builtin-i64#i128
  summary: null
  belongs_to: I64
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I64.i128_unsafe()
  id: builtin-i64#i128_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I64.i16()
  id: builtin-i64#i16
  summary: null
  belongs_to: I64
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I64.i16_unsafe()
  id: builtin-i64#i16_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I64.i32()
  id: builtin-i64#i32
  summary: null
  belongs_to: I64
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I64.i32_unsafe()
  id: builtin-i64#i32_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I64.i64()
  id: builtin-i64#i64_1
  summary: null
  belongs_to: I64
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.i64_unsafe()
  id: builtin-i64#i64_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.i8()
  id: builtin-i64#i8
  summary: null
  belongs_to: I64
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I64.i8_unsafe()
  id: builtin-i64#i8_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: I64.ilong()
  id: builtin-i64#ilong
  summary: null
  belongs_to: I64
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I64.ilong_unsafe()
  id: builtin-i64#ilong_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I64.isize()
  id: builtin-i64#isize
  summary: null
  belongs_to: I64
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I64.isize_unsafe()
  id: builtin-i64#isize_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I64.le()
  id: builtin-i64#le
  summary: null
  belongs_to: I64
  description: |-
    ### le

    ``` pony
    fun box le(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.lt()
  id: builtin-i64#lt
  summary: null
  belongs_to: I64
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.max()
  id: builtin-i64#max
  summary: null
  belongs_to: I64
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L311)

    ``` pony
    fun box max(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.max_value()
  id: builtin-i64#max_value
  summary: null
  belongs_to: I64
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L283)

    ``` pony
    new val max_value()
    : I64 val^
    ```

    #### Returns

    - [I64](index) val^

    ## Public Functions
- name: I64.min()
  id: builtin-i64#min
  summary: null
  belongs_to: I64
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L310)

    ``` pony
    fun box min(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.min_value()
  id: builtin-i64#min_value
  summary: null
  belongs_to: I64
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L282)

    ``` pony
    new val min_value()
    : I64 val^
    ```

    #### Returns

    - [I64](index) val^

    &nbsp;
- name: I64.mod()
  id: builtin-i64#mod
  summary: null
  belongs_to: I64
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L319)

    ``` pony
    fun box mod(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.mod_partial()
  id: builtin-i64#mod_partial
  summary: null
  belongs_to: I64
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L369)

    ``` pony
    fun box mod_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.mod_unsafe()
  id: builtin-i64#mod_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L322)

    ``` pony
    fun box mod_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.modc()
  id: builtin-i64#modc
  summary: null
  belongs_to: I64
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L345)

    ``` pony
    fun box modc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.mul()
  id: builtin-i64#mul
  summary: null
  belongs_to: I64
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.mul_partial()
  id: builtin-i64#mul_partial
  summary: null
  belongs_to: I64
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L354)

    ``` pony
    fun box mul_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.mul_unsafe()
  id: builtin-i64#mul_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.mulc()
  id: builtin-i64#mulc
  summary: null
  belongs_to: I64
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L333)

    ``` pony
    fun box mulc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.ne()
  id: builtin-i64#ne
  summary: null
  belongs_to: I64
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: I64 val)
    : Bool val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I64.neg()
  id: builtin-i64#neg
  summary: null
  belongs_to: I64
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.neg_unsafe()
  id: builtin-i64#neg_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.op_and()
  id: builtin-i64#op_and
  summary: null
  belongs_to: I64
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.op_not()
  id: builtin-i64#op_not
  summary: null
  belongs_to: I64
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : I64 val
    ```

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.op_or()
  id: builtin-i64#op_or
  summary: null
  belongs_to: I64
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.op_xor()
  id: builtin-i64#op_xor
  summary: null
  belongs_to: I64
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.popcount()
  id: builtin-i64#popcount
  summary: null
  belongs_to: I64
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L288)

    ``` pony
    fun box popcount()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.rem()
  id: builtin-i64#rem
  summary: null
  belongs_to: I64
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.rem_partial()
  id: builtin-i64#rem_partial
  summary: null
  belongs_to: I64
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L360)

    ``` pony
    fun box rem_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.rem_unsafe()
  id: builtin-i64#rem_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.remc()
  id: builtin-i64#remc
  summary: null
  belongs_to: I64
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L339)

    ``` pony
    fun box remc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.shl()
  id: builtin-i64#shl
  summary: null
  belongs_to: I64
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U64 val)
    : I64 val
    ```

    #### Parameters

    - y: [U64](builtin-u64) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.shl_unsafe()
  id: builtin-i64#shl_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U64 val)
    : I64 val
    ```

    #### Parameters

    - y: [U64](builtin-u64) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.shr()
  id: builtin-i64#shr
  summary: null
  belongs_to: I64
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U64 val)
    : I64 val
    ```

    #### Parameters

    - y: [U64](builtin-u64) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.shr_unsafe()
  id: builtin-i64#shr_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U64 val)
    : I64 val
    ```

    #### Parameters

    - y: [U64](builtin-u64) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.string()
  id: builtin-i64#string
  summary: null
  belongs_to: I64
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: I64.sub()
  id: builtin-i64#sub
  summary: null
  belongs_to: I64
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.sub_partial()
  id: builtin-i64#sub_partial
  summary: null
  belongs_to: I64
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L351)

    ``` pony
    fun box sub_partial(
      y: I64 val)
    : I64 val ?
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val ?

    &nbsp;
- name: I64.sub_unsafe()
  id: builtin-i64#sub_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: I64 val)
    : I64 val
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - [I64](index) val

    &nbsp;
- name: I64.subc()
  id: builtin-i64#subc
  summary: null
  belongs_to: I64
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L330)

    ``` pony
    fun box subc(
      y: I64 val)
    : (I64 val , Bool val)
    ```

    #### Parameters

    - y: [I64](index) val

    #### Returns

    - ([I64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I64.u128()
  id: builtin-i64#u128
  summary: null
  belongs_to: I64
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I64.u128_unsafe()
  id: builtin-i64#u128_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I64.u16()
  id: builtin-i64#u16
  summary: null
  belongs_to: I64
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I64.u16_unsafe()
  id: builtin-i64#u16_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I64.u32()
  id: builtin-i64#u32
  summary: null
  belongs_to: I64
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I64.u32_unsafe()
  id: builtin-i64#u32_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I64.u64()
  id: builtin-i64#u64
  summary: null
  belongs_to: I64
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.u64_unsafe()
  id: builtin-i64#u64_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I64.u8()
  id: builtin-i64#u8
  summary: null
  belongs_to: I64
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I64.u8_unsafe()
  id: builtin-i64#u8_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I64.ulong()
  id: builtin-i64#ulong
  summary: null
  belongs_to: I64
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I64.ulong_unsafe()
  id: builtin-i64#ulong_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I64.usize()
  id: builtin-i64#usize
  summary: null
  belongs_to: I64
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I64.usize_unsafe()
  id: builtin-i64#usize_unsafe
  summary: null
  belongs_to: I64
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I64Argument
  id: options-i64argument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# I64Argument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L70)\n\n``` pony\nprimitive val I64Argument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L70)\n\n``` pony\nnew val create()\n: I64Argument val^\n```\n\n#### Returns\n\n- [I64Argument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L71)\n\n``` pony\nfun box eq(\n  that: I64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [I64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L71)\n\n``` pony\nfun box ne(\n  that: I64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [I64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-I64Argument](https://stdlib.ponylang.io/options-I64Argument)"
- name: I64Argument.create()
  id: options-i64argument#create
  summary: null
  belongs_to: I64Argument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L70)

    ``` pony
    new val create()
    : I64Argument val^
    ```

    #### Returns

    - [I64Argument](index) val^

    ## Public Functions
- name: I64Argument.eq()
  id: options-i64argument#eq
  summary: null
  belongs_to: I64Argument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L71)

    ``` pony
    fun box eq(
      that: I64Argument val)
    : Bool val
    ```

    #### Parameters

    - that: [I64Argument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: I64Argument.ne()
  id: options-i64argument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I64Argument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L71)\n\n``` pony\nfun box ne(\n  that: I64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [I64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-I64Argument](https://stdlib.ponylang.io/options-I64Argument)"
- name: I8
  id: builtin-i8
  summary: Unsafe operation
  description: "# I8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L1)\n\n``` pony\nprimitive val I8 is\n  SignedInteger[I8 val, U8 val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[I8](index) val, [U8](builtin-u8) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L2)\n\n``` pony\nnew val create(\n  value: I8 val)\n: I8 val^\n```\n\n#### Parameters\n\n- value: [I8](index) val\n\n#### Returns\n\n- [I8](index) val^\n\n### from\\[A: (([I8](index) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L3)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I8 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I8](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L5)\n\n``` pony\nnew val min_value()\n: I8 val^\n```\n\n#### Returns\n\n- [I8](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L6)\n\n``` pony\nnew val max_value()\n: I8 val^\n```\n\n#### Returns\n\n- [I8](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L8)\n\n``` pony\nfun box abs()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L9)\n\n``` pony\nfun box bit_reverse()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L10)\n\n``` pony\nfun box bswap()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L11)\n\n``` pony\nfun box popcount()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L12)\n\n``` pony\nfun box clz()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L13)\n\n``` pony\nfun box ctz()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L15)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L22)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L29)\n\n``` pony\nfun box bitwidth()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L31)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L33)\n\n``` pony\nfun box min(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L34)\n\n``` pony\nfun box max(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L36)\n\n``` pony\nfun box fld(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L39)\n\n``` pony\nfun box fld_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L42)\n\n``` pony\nfun box mod(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L45)\n\n``` pony\nfun box mod_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L48)\n\n``` pony\nfun box addc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L51)\n\n``` pony\nfun box subc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L54)\n\n``` pony\nfun box mulc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L57)\n\n``` pony\nfun box divc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L60)\n\n``` pony\nfun box remc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L63)\n\n``` pony\nfun box fldc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L66)\n\n``` pony\nfun box modc(\n  y: I8 val)\n: (I8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L69)\n\n``` pony\nfun box add_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L72)\n\n``` pony\nfun box sub_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L75)\n\n``` pony\nfun box mul_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L78)\n\n``` pony\nfun box div_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L81)\n\n``` pony\nfun box rem_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L84)\n\n``` pony\nfun box divrem_partial(\n  y: I8 val)\n: (I8 val , I8 val) ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [I8](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L87)\n\n``` pony\nfun box fld_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L90)\n\n``` pony\nfun box mod_partial(\n  y: I8 val)\n: I8 val ?\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [U8](builtin-u8) val\n\n#### Returns\n\n- [I8](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [U8](builtin-u8) val\n\n#### Returns\n\n- [I8](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [U8](builtin-u8) val\n\n#### Returns\n\n- [I8](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [U8](builtin-u8) val\n\n#### Returns\n\n- [I8](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: I8 val)\n: (I8 val , I8 val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [I8](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: I8 val)\n: (I8 val , I8 val)\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- ([I8](index) val , [I8](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: I8 val)\n: I8 val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [I8](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: I8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [I8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](index) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: I8 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I8](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I8](https://stdlib.ponylang.io/builtin-I8)"
- name: I8.abs()
  id: builtin-i8#abs
  summary: null
  belongs_to: I8
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L8)

    ``` pony
    fun box abs()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.add()
  id: builtin-i8#add
  summary: null
  belongs_to: I8
  description: |-
    ### add

    ``` pony
    fun box add(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.add_partial()
  id: builtin-i8#add_partial
  summary: null
  belongs_to: I8
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L69)

    ``` pony
    fun box add_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.add_unsafe()
  id: builtin-i8#add_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.addc()
  id: builtin-i8#addc
  summary: null
  belongs_to: I8
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L48)

    ``` pony
    fun box addc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.bit_reverse()
  id: builtin-i8#bit_reverse
  summary: null
  belongs_to: I8
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L9)

    ``` pony
    fun box bit_reverse()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.bitwidth()
  id: builtin-i8#bitwidth
  summary: null
  belongs_to: I8
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L29)

    ``` pony
    fun box bitwidth()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.bswap()
  id: builtin-i8#bswap
  summary: null
  belongs_to: I8
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L10)

    ``` pony
    fun box bswap()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.bytewidth()
  id: builtin-i8#bytewidth
  summary: null
  belongs_to: I8
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L31)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I8.clz()
  id: builtin-i8#clz
  summary: null
  belongs_to: I8
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L12)

    ``` pony
    fun box clz()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.clz_unsafe()
  id: builtin-i8#clz_unsafe
  summary: Unsafe operation
  belongs_to: I8
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L15)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.compare()
  id: builtin-i8#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: I8
  description: "### compare\n\n``` pony\nfun box compare(\n  that: I8 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [I8](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-I8](https://stdlib.ponylang.io/builtin-I8)"
- name: I8.create()
  id: builtin-i8#create
  summary: null
  belongs_to: I8
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L2)

    ``` pony
    new val create(
      value: I8 val)
    : I8 val^
    ```

    #### Parameters

    - value: [I8](index) val

    #### Returns

    - [I8](index) val^
- name: I8.ctz()
  id: builtin-i8#ctz
  summary: null
  belongs_to: I8
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L13)

    ``` pony
    fun box ctz()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.ctz_unsafe()
  id: builtin-i8#ctz_unsafe
  summary: Unsafe operation
  belongs_to: I8
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L22)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.div()
  id: builtin-i8#div
  summary: null
  belongs_to: I8
  description: |-
    ### div

    ``` pony
    fun box div(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.div_partial()
  id: builtin-i8#div_partial
  summary: null
  belongs_to: I8
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L78)

    ``` pony
    fun box div_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.div_unsafe()
  id: builtin-i8#div_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.divc()
  id: builtin-i8#divc
  summary: null
  belongs_to: I8
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L57)

    ``` pony
    fun box divc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.divrem()
  id: builtin-i8#divrem
  summary: null
  belongs_to: I8
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: I8 val)
    : (I8 val , I8 val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [I8](index) val)

    &nbsp;
- name: I8.divrem_partial()
  id: builtin-i8#divrem_partial
  summary: null
  belongs_to: I8
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L84)

    ``` pony
    fun box divrem_partial(
      y: I8 val)
    : (I8 val , I8 val) ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [I8](index) val) ?

    &nbsp;
- name: I8.divrem_unsafe()
  id: builtin-i8#divrem_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: I8 val)
    : (I8 val , I8 val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [I8](index) val)

    &nbsp;
- name: I8.eq()
  id: builtin-i8#eq
  summary: null
  belongs_to: I8
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.f32()
  id: builtin-i8#f32
  summary: null
  belongs_to: I8
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I8.f32_unsafe()
  id: builtin-i8#f32_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: I8.f64()
  id: builtin-i8#f64
  summary: null
  belongs_to: I8
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I8.f64_unsafe()
  id: builtin-i8#f64_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: I8.fld()
  id: builtin-i8#fld
  summary: null
  belongs_to: I8
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L36)

    ``` pony
    fun box fld(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.fld_partial()
  id: builtin-i8#fld_partial
  summary: null
  belongs_to: I8
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L87)

    ``` pony
    fun box fld_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.fld_unsafe()
  id: builtin-i8#fld_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L39)

    ``` pony
    fun box fld_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.fldc()
  id: builtin-i8#fldc
  summary: null
  belongs_to: I8
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L63)

    ``` pony
    fun box fldc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.from()
  id: builtin-i8#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: I8
  description: "### from\\[A: (([I8](index) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L3)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: I8 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [I8](index) val^\n\n&nbsp;"
- name: I8.ge()
  id: builtin-i8#ge
  summary: null
  belongs_to: I8
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.gt()
  id: builtin-i8#gt
  summary: null
  belongs_to: I8
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.hash()
  id: builtin-i8#hash
  summary: null
  belongs_to: I8
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I8.hash64()
  id: builtin-i8#hash64
  summary: null
  belongs_to: I8
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I8.i128()
  id: builtin-i8#i128
  summary: null
  belongs_to: I8
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I8.i128_unsafe()
  id: builtin-i8#i128_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: I8.i16()
  id: builtin-i8#i16
  summary: null
  belongs_to: I8
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I8.i16_unsafe()
  id: builtin-i8#i16_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: I8.i32()
  id: builtin-i8#i32
  summary: null
  belongs_to: I8
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I8.i32_unsafe()
  id: builtin-i8#i32_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: I8.i64()
  id: builtin-i8#i64
  summary: null
  belongs_to: I8
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I8.i64_unsafe()
  id: builtin-i8#i64_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: I8.i8()
  id: builtin-i8#i8_1
  summary: null
  belongs_to: I8
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.i8_unsafe()
  id: builtin-i8#i8_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.ilong()
  id: builtin-i8#ilong
  summary: null
  belongs_to: I8
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I8.ilong_unsafe()
  id: builtin-i8#ilong_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: I8.isize()
  id: builtin-i8#isize
  summary: null
  belongs_to: I8
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I8.isize_unsafe()
  id: builtin-i8#isize_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: I8.le()
  id: builtin-i8#le
  summary: null
  belongs_to: I8
  description: |-
    ### le

    ``` pony
    fun box le(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.lt()
  id: builtin-i8#lt
  summary: null
  belongs_to: I8
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.max()
  id: builtin-i8#max
  summary: null
  belongs_to: I8
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L34)

    ``` pony
    fun box max(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.max_value()
  id: builtin-i8#max_value
  summary: null
  belongs_to: I8
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L6)

    ``` pony
    new val max_value()
    : I8 val^
    ```

    #### Returns

    - [I8](index) val^

    ## Public Functions
- name: I8.min()
  id: builtin-i8#min
  summary: null
  belongs_to: I8
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L33)

    ``` pony
    fun box min(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.min_value()
  id: builtin-i8#min_value
  summary: null
  belongs_to: I8
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L5)

    ``` pony
    new val min_value()
    : I8 val^
    ```

    #### Returns

    - [I8](index) val^

    &nbsp;
- name: I8.mod()
  id: builtin-i8#mod
  summary: null
  belongs_to: I8
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L42)

    ``` pony
    fun box mod(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.mod_partial()
  id: builtin-i8#mod_partial
  summary: null
  belongs_to: I8
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L90)

    ``` pony
    fun box mod_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.mod_unsafe()
  id: builtin-i8#mod_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L45)

    ``` pony
    fun box mod_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.modc()
  id: builtin-i8#modc
  summary: null
  belongs_to: I8
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L66)

    ``` pony
    fun box modc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.mul()
  id: builtin-i8#mul
  summary: null
  belongs_to: I8
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.mul_partial()
  id: builtin-i8#mul_partial
  summary: null
  belongs_to: I8
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L75)

    ``` pony
    fun box mul_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.mul_unsafe()
  id: builtin-i8#mul_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.mulc()
  id: builtin-i8#mulc
  summary: null
  belongs_to: I8
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L54)

    ``` pony
    fun box mulc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.ne()
  id: builtin-i8#ne
  summary: null
  belongs_to: I8
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: I8 val)
    : Bool val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: I8.neg()
  id: builtin-i8#neg
  summary: null
  belongs_to: I8
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.neg_unsafe()
  id: builtin-i8#neg_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.op_and()
  id: builtin-i8#op_and
  summary: null
  belongs_to: I8
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.op_not()
  id: builtin-i8#op_not
  summary: null
  belongs_to: I8
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : I8 val
    ```

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.op_or()
  id: builtin-i8#op_or
  summary: null
  belongs_to: I8
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.op_xor()
  id: builtin-i8#op_xor
  summary: null
  belongs_to: I8
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.popcount()
  id: builtin-i8#popcount
  summary: null
  belongs_to: I8
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L11)

    ``` pony
    fun box popcount()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.rem()
  id: builtin-i8#rem
  summary: null
  belongs_to: I8
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.rem_partial()
  id: builtin-i8#rem_partial
  summary: null
  belongs_to: I8
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L81)

    ``` pony
    fun box rem_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.rem_unsafe()
  id: builtin-i8#rem_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.remc()
  id: builtin-i8#remc
  summary: null
  belongs_to: I8
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L60)

    ``` pony
    fun box remc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.shl()
  id: builtin-i8#shl
  summary: null
  belongs_to: I8
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U8 val)
    : I8 val
    ```

    #### Parameters

    - y: [U8](builtin-u8) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.shl_unsafe()
  id: builtin-i8#shl_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U8 val)
    : I8 val
    ```

    #### Parameters

    - y: [U8](builtin-u8) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.shr()
  id: builtin-i8#shr
  summary: null
  belongs_to: I8
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U8 val)
    : I8 val
    ```

    #### Parameters

    - y: [U8](builtin-u8) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.shr_unsafe()
  id: builtin-i8#shr_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U8 val)
    : I8 val
    ```

    #### Parameters

    - y: [U8](builtin-u8) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.string()
  id: builtin-i8#string
  summary: null
  belongs_to: I8
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: I8.sub()
  id: builtin-i8#sub
  summary: null
  belongs_to: I8
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.sub_partial()
  id: builtin-i8#sub_partial
  summary: null
  belongs_to: I8
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L72)

    ``` pony
    fun box sub_partial(
      y: I8 val)
    : I8 val ?
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val ?

    &nbsp;
- name: I8.sub_unsafe()
  id: builtin-i8#sub_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: I8 val)
    : I8 val
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - [I8](index) val

    &nbsp;
- name: I8.subc()
  id: builtin-i8#subc
  summary: null
  belongs_to: I8
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L51)

    ``` pony
    fun box subc(
      y: I8 val)
    : (I8 val , Bool val)
    ```

    #### Parameters

    - y: [I8](index) val

    #### Returns

    - ([I8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: I8.u128()
  id: builtin-i8#u128
  summary: null
  belongs_to: I8
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I8.u128_unsafe()
  id: builtin-i8#u128_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: I8.u16()
  id: builtin-i8#u16
  summary: null
  belongs_to: I8
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I8.u16_unsafe()
  id: builtin-i8#u16_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: I8.u32()
  id: builtin-i8#u32
  summary: null
  belongs_to: I8
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I8.u32_unsafe()
  id: builtin-i8#u32_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: I8.u64()
  id: builtin-i8#u64
  summary: null
  belongs_to: I8
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I8.u64_unsafe()
  id: builtin-i8#u64_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: I8.u8()
  id: builtin-i8#u8
  summary: null
  belongs_to: I8
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.u8_unsafe()
  id: builtin-i8#u8_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: I8.ulong()
  id: builtin-i8#ulong
  summary: null
  belongs_to: I8
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I8.ulong_unsafe()
  id: builtin-i8#ulong_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: I8.usize()
  id: builtin-i8#usize
  summary: null
  belongs_to: I8
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: I8.usize_unsafe()
  id: builtin-i8#usize_unsafe
  summary: null
  belongs_to: I8
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ILong
  id: builtin-ilong
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ILong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L372)\n\n``` pony\nprimitive val ILong is\n  SignedInteger[ILong val, ULong val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[ILong](index) val, [ULong](builtin-ulong) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L373)\n\n``` pony\nnew val create(\n  value: ILong val)\n: ILong val^\n```\n\n#### Parameters\n\n- value: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](index) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L374)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ILong val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ILong](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L376)\n\n``` pony\nnew val min_value()\n: ILong val^\n```\n\n#### Returns\n\n- [ILong](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L383)\n\n``` pony\nnew val max_value()\n: ILong val^\n```\n\n#### Returns\n\n- [ILong](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L390)\n\n``` pony\nfun box abs()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L392)\n\n``` pony\nfun box bit_reverse()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L399)\n\n``` pony\nfun box bswap()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L406)\n\n``` pony\nfun box popcount()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L413)\n\n``` pony\nfun box clz()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L420)\n\n``` pony\nfun box ctz()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L427)\n\n``` pony\nfun box clz_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L434)\n\n``` pony\nfun box ctz_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L441)\n\n``` pony\nfun box bitwidth()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L443)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L445)\n\n``` pony\nfun box min(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L446)\n\n``` pony\nfun box max(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L448)\n\n``` pony\nfun box fld(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L451)\n\n``` pony\nfun box fld_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L454)\n\n``` pony\nfun box mod(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L457)\n\n``` pony\nfun box mod_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L460)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L462)\n\n``` pony\nfun box addc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L469)\n\n``` pony\nfun box subc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L476)\n\n``` pony\nfun box mulc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L483)\n\n``` pony\nfun box divc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L486)\n\n``` pony\nfun box remc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L489)\n\n``` pony\nfun box fldc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L492)\n\n``` pony\nfun box modc(\n  y: ILong val)\n: (ILong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L495)\n\n``` pony\nfun box add_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L498)\n\n``` pony\nfun box sub_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L501)\n\n``` pony\nfun box mul_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L504)\n\n``` pony\nfun box div_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L507)\n\n``` pony\nfun box rem_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L510)\n\n``` pony\nfun box divrem_partial(\n  y: ILong val)\n: (ILong val , ILong val) ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [ILong](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L513)\n\n``` pony\nfun box fld_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L516)\n\n``` pony\nfun box mod_partial(\n  y: ILong val)\n: ILong val ?\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: ULong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ULong](builtin-ulong) val\n\n#### Returns\n\n- [ILong](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: ULong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ULong](builtin-ulong) val\n\n#### Returns\n\n- [ILong](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: ULong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ULong](builtin-ulong) val\n\n#### Returns\n\n- [ILong](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: ULong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ULong](builtin-ulong) val\n\n#### Returns\n\n- [ILong](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: ILong val)\n: (ILong val , ILong val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [ILong](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: ILong val)\n: (ILong val , ILong val)\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- ([ILong](index) val , [ILong](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: ILong val)\n: ILong val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [ILong](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: ILong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ILong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](index) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: ILong val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ILong](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ILong](https://stdlib.ponylang.io/builtin-ILong)"
- name: ILong.abs()
  id: builtin-ilong#abs
  summary: null
  belongs_to: ILong
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L390)

    ``` pony
    fun box abs()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.add()
  id: builtin-ilong#add
  summary: null
  belongs_to: ILong
  description: |-
    ### add

    ``` pony
    fun box add(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.add_partial()
  id: builtin-ilong#add_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L495)

    ``` pony
    fun box add_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.add_unsafe()
  id: builtin-ilong#add_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.addc()
  id: builtin-ilong#addc
  summary: null
  belongs_to: ILong
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L462)

    ``` pony
    fun box addc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.bit_reverse()
  id: builtin-ilong#bit_reverse
  summary: null
  belongs_to: ILong
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L392)

    ``` pony
    fun box bit_reverse()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.bitwidth()
  id: builtin-ilong#bitwidth
  summary: null
  belongs_to: ILong
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L441)

    ``` pony
    fun box bitwidth()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.bswap()
  id: builtin-ilong#bswap
  summary: null
  belongs_to: ILong
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L399)

    ``` pony
    fun box bswap()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.bytewidth()
  id: builtin-ilong#bytewidth
  summary: null
  belongs_to: ILong
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L443)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ILong.clz()
  id: builtin-ilong#clz
  summary: null
  belongs_to: ILong
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L413)

    ``` pony
    fun box clz()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.clz_unsafe()
  id: builtin-ilong#clz_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L427)

    ``` pony
    fun box clz_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.compare()
  id: builtin-ilong#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ILong
  description: "### compare\n\n``` pony\nfun box compare(\n  that: ILong val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ILong](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ILong](https://stdlib.ponylang.io/builtin-ILong)"
- name: ILong.create()
  id: builtin-ilong#create
  summary: null
  belongs_to: ILong
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L373)

    ``` pony
    new val create(
      value: ILong val)
    : ILong val^
    ```

    #### Parameters

    - value: [ILong](index) val

    #### Returns

    - [ILong](index) val^
- name: ILong.ctz()
  id: builtin-ilong#ctz
  summary: null
  belongs_to: ILong
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L420)

    ``` pony
    fun box ctz()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.ctz_unsafe()
  id: builtin-ilong#ctz_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L434)

    ``` pony
    fun box ctz_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.div()
  id: builtin-ilong#div
  summary: null
  belongs_to: ILong
  description: |-
    ### div

    ``` pony
    fun box div(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.div_partial()
  id: builtin-ilong#div_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L504)

    ``` pony
    fun box div_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.div_unsafe()
  id: builtin-ilong#div_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.divc()
  id: builtin-ilong#divc
  summary: null
  belongs_to: ILong
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L483)

    ``` pony
    fun box divc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.divrem()
  id: builtin-ilong#divrem
  summary: null
  belongs_to: ILong
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: ILong val)
    : (ILong val , ILong val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [ILong](index) val)

    &nbsp;
- name: ILong.divrem_partial()
  id: builtin-ilong#divrem_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L510)

    ``` pony
    fun box divrem_partial(
      y: ILong val)
    : (ILong val , ILong val) ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [ILong](index) val) ?

    &nbsp;
- name: ILong.divrem_unsafe()
  id: builtin-ilong#divrem_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: ILong val)
    : (ILong val , ILong val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [ILong](index) val)

    &nbsp;
- name: ILong.eq()
  id: builtin-ilong#eq
  summary: null
  belongs_to: ILong
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.f32()
  id: builtin-ilong#f32
  summary: null
  belongs_to: ILong
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ILong.f32_unsafe()
  id: builtin-ilong#f32_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ILong.f64()
  id: builtin-ilong#f64
  summary: null
  belongs_to: ILong
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ILong.f64_unsafe()
  id: builtin-ilong#f64_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ILong.fld()
  id: builtin-ilong#fld
  summary: null
  belongs_to: ILong
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L448)

    ``` pony
    fun box fld(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.fld_partial()
  id: builtin-ilong#fld_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L513)

    ``` pony
    fun box fld_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.fld_unsafe()
  id: builtin-ilong#fld_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L451)

    ``` pony
    fun box fld_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.fldc()
  id: builtin-ilong#fldc
  summary: null
  belongs_to: ILong
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L489)

    ``` pony
    fun box fldc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.from()
  id: builtin-ilong#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: ILong
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](index) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L374)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ILong val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ILong](index) val^\n\n&nbsp;"
- name: ILong.ge()
  id: builtin-ilong#ge
  summary: null
  belongs_to: ILong
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.gt()
  id: builtin-ilong#gt
  summary: null
  belongs_to: ILong
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.hash()
  id: builtin-ilong#hash
  summary: null
  belongs_to: ILong
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L460)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ILong.hash64()
  id: builtin-ilong#hash64
  summary: null
  belongs_to: ILong
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ILong.i128()
  id: builtin-ilong#i128
  summary: null
  belongs_to: ILong
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ILong.i128_unsafe()
  id: builtin-ilong#i128_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ILong.i16()
  id: builtin-ilong#i16
  summary: null
  belongs_to: ILong
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ILong.i16_unsafe()
  id: builtin-ilong#i16_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ILong.i32()
  id: builtin-ilong#i32
  summary: null
  belongs_to: ILong
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ILong.i32_unsafe()
  id: builtin-ilong#i32_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ILong.i64()
  id: builtin-ilong#i64
  summary: null
  belongs_to: ILong
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ILong.i64_unsafe()
  id: builtin-ilong#i64_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ILong.i8()
  id: builtin-ilong#i8
  summary: null
  belongs_to: ILong
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ILong.i8_unsafe()
  id: builtin-ilong#i8_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ILong.ilong()
  id: builtin-ilong#ilong_1
  summary: null
  belongs_to: ILong
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.ilong_unsafe()
  id: builtin-ilong#ilong_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.isize()
  id: builtin-ilong#isize
  summary: null
  belongs_to: ILong
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: ILong.isize_unsafe()
  id: builtin-ilong#isize_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: ILong.le()
  id: builtin-ilong#le
  summary: null
  belongs_to: ILong
  description: |-
    ### le

    ``` pony
    fun box le(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.lt()
  id: builtin-ilong#lt
  summary: null
  belongs_to: ILong
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.max()
  id: builtin-ilong#max
  summary: null
  belongs_to: ILong
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L446)

    ``` pony
    fun box max(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.max_value()
  id: builtin-ilong#max_value
  summary: null
  belongs_to: ILong
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L383)

    ``` pony
    new val max_value()
    : ILong val^
    ```

    #### Returns

    - [ILong](index) val^

    ## Public Functions
- name: ILong.min()
  id: builtin-ilong#min
  summary: null
  belongs_to: ILong
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L445)

    ``` pony
    fun box min(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.min_value()
  id: builtin-ilong#min_value
  summary: null
  belongs_to: ILong
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L376)

    ``` pony
    new val min_value()
    : ILong val^
    ```

    #### Returns

    - [ILong](index) val^

    &nbsp;
- name: ILong.mod()
  id: builtin-ilong#mod
  summary: null
  belongs_to: ILong
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L454)

    ``` pony
    fun box mod(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.mod_partial()
  id: builtin-ilong#mod_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L516)

    ``` pony
    fun box mod_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.mod_unsafe()
  id: builtin-ilong#mod_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L457)

    ``` pony
    fun box mod_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.modc()
  id: builtin-ilong#modc
  summary: null
  belongs_to: ILong
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L492)

    ``` pony
    fun box modc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.mul()
  id: builtin-ilong#mul
  summary: null
  belongs_to: ILong
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.mul_partial()
  id: builtin-ilong#mul_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L501)

    ``` pony
    fun box mul_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.mul_unsafe()
  id: builtin-ilong#mul_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.mulc()
  id: builtin-ilong#mulc
  summary: null
  belongs_to: ILong
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L476)

    ``` pony
    fun box mulc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.ne()
  id: builtin-ilong#ne
  summary: null
  belongs_to: ILong
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: ILong val)
    : Bool val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ILong.neg()
  id: builtin-ilong#neg
  summary: null
  belongs_to: ILong
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.neg_unsafe()
  id: builtin-ilong#neg_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.op_and()
  id: builtin-ilong#op_and
  summary: null
  belongs_to: ILong
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.op_not()
  id: builtin-ilong#op_not
  summary: null
  belongs_to: ILong
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : ILong val
    ```

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.op_or()
  id: builtin-ilong#op_or
  summary: null
  belongs_to: ILong
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.op_xor()
  id: builtin-ilong#op_xor
  summary: null
  belongs_to: ILong
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.popcount()
  id: builtin-ilong#popcount
  summary: null
  belongs_to: ILong
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L406)

    ``` pony
    fun box popcount()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.rem()
  id: builtin-ilong#rem
  summary: null
  belongs_to: ILong
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.rem_partial()
  id: builtin-ilong#rem_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L507)

    ``` pony
    fun box rem_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.rem_unsafe()
  id: builtin-ilong#rem_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.remc()
  id: builtin-ilong#remc
  summary: null
  belongs_to: ILong
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L486)

    ``` pony
    fun box remc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.shl()
  id: builtin-ilong#shl
  summary: null
  belongs_to: ILong
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: ULong val)
    : ILong val
    ```

    #### Parameters

    - y: [ULong](builtin-ulong) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.shl_unsafe()
  id: builtin-ilong#shl_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: ULong val)
    : ILong val
    ```

    #### Parameters

    - y: [ULong](builtin-ulong) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.shr()
  id: builtin-ilong#shr
  summary: null
  belongs_to: ILong
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: ULong val)
    : ILong val
    ```

    #### Parameters

    - y: [ULong](builtin-ulong) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.shr_unsafe()
  id: builtin-ilong#shr_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: ULong val)
    : ILong val
    ```

    #### Parameters

    - y: [ULong](builtin-ulong) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.string()
  id: builtin-ilong#string
  summary: null
  belongs_to: ILong
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: ILong.sub()
  id: builtin-ilong#sub
  summary: null
  belongs_to: ILong
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.sub_partial()
  id: builtin-ilong#sub_partial
  summary: null
  belongs_to: ILong
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L498)

    ``` pony
    fun box sub_partial(
      y: ILong val)
    : ILong val ?
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val ?

    &nbsp;
- name: ILong.sub_unsafe()
  id: builtin-ilong#sub_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: ILong val)
    : ILong val
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - [ILong](index) val

    &nbsp;
- name: ILong.subc()
  id: builtin-ilong#subc
  summary: null
  belongs_to: ILong
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L469)

    ``` pony
    fun box subc(
      y: ILong val)
    : (ILong val , Bool val)
    ```

    #### Parameters

    - y: [ILong](index) val

    #### Returns

    - ([ILong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ILong.u128()
  id: builtin-ilong#u128
  summary: null
  belongs_to: ILong
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ILong.u128_unsafe()
  id: builtin-ilong#u128_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ILong.u16()
  id: builtin-ilong#u16
  summary: null
  belongs_to: ILong
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ILong.u16_unsafe()
  id: builtin-ilong#u16_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ILong.u32()
  id: builtin-ilong#u32
  summary: null
  belongs_to: ILong
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ILong.u32_unsafe()
  id: builtin-ilong#u32_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ILong.u64()
  id: builtin-ilong#u64
  summary: null
  belongs_to: ILong
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ILong.u64_unsafe()
  id: builtin-ilong#u64_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ILong.u8()
  id: builtin-ilong#u8
  summary: null
  belongs_to: ILong
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ILong.u8_unsafe()
  id: builtin-ilong#u8_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ILong.ulong()
  id: builtin-ilong#ulong
  summary: null
  belongs_to: ILong
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.ulong_unsafe()
  id: builtin-ilong#ulong_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ILong.usize()
  id: builtin-ilong#usize
  summary: null
  belongs_to: ILong
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ILong.usize_unsafe()
  id: builtin-ilong#usize_unsafe
  summary: null
  belongs_to: ILong
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Info
  id: logger-info
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L101)\n\n``` pony\nprimitive val Info\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L101)\n\n``` pony\nnew val create()\n: Info val^\n```\n\n#### Returns\n\n- [Info](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L102)\n\n``` pony\nfun box apply()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L102)\n\n``` pony\nfun box eq(\n  that: Info val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Info](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L102)\n\n``` pony\nfun box ne(\n  that: Info val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Info](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Info](https://stdlib.ponylang.io/logger-Info)"
- name: Info.apply()
  id: logger-info#apply
  summary: null
  belongs_to: Info
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L102)

    ``` pony
    fun box apply()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Info.create()
  id: logger-info#create
  summary: null
  belongs_to: Info
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L101)

    ``` pony
    new val create()
    : Info val^
    ```

    #### Returns

    - [Info](index) val^

    ## Public Functions
- name: Info.eq()
  id: logger-info#eq
  summary: null
  belongs_to: Info
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L102)

    ``` pony
    fun box eq(
      that: Info val)
    : Bool val
    ```

    #### Parameters

    - that: [Info](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Info.ne()
  id: logger-info#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Info
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L102)\n\n``` pony\nfun box ne(\n  that: Info val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Info](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Info](https://stdlib.ponylang.io/logger-Info)"
- name: Ini
  id: ini-ini
  summary: A streaming parser for INI formatted lines of test
  description: "# Ini\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L63)\n\nA streaming parser for INI formatted lines of test.\n\n``` pony\nprimitive val Ini\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L63)\n\n``` pony\nnew val create()\n: Ini val^\n```\n\n#### Returns\n\n- [Ini](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L67)\n\nThis accepts a string iterator and calls the IniNotify for each new entry. If any errors are encountered, this will return false. Otherwise, it returns true.\n\n``` pony\nfun box apply(\n  lines: Iterator[String box] ref,\n  f: IniNotify ref)\n: Bool val\n```\n\n#### Parameters\n\n- lines: [Iterator](builtin-iterator)\\[[String](builtin-string) box\\] ref\n- f: [IniNotify](ini-ininotify) ref\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L67)\n\n``` pony\nfun box eq(\n  that: Ini val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Ini](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L67)\n\n``` pony\nfun box ne(\n  that: Ini val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Ini](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-Ini](https://stdlib.ponylang.io/ini-Ini)"
- name: Ini.apply()
  id: ini-ini#apply
  summary: This accepts a string iterator and calls the IniNotify for each new entry
  belongs_to: Ini
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L67)

    This accepts a string iterator and calls the IniNotify for each new entry. If any errors are encountered, this will return false. Otherwise, it returns true.

    ``` pony
    fun box apply(
      lines: Iterator[String box] ref,
      f: IniNotify ref)
    : Bool val
    ```

    #### Parameters

    - lines: [Iterator](builtin-iterator)\[[String](builtin-string) box\] ref
    - f: [IniNotify](ini-ininotify) ref

    #### Returns

    - [Bool](builtin-bool) val
- name: Ini.create()
  id: ini-ini#create
  summary: null
  belongs_to: Ini
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L63)

    ``` pony
    new val create()
    : Ini val^
    ```

    #### Returns

    - [Ini](index) val^

    ## Public Functions
- name: Ini.eq()
  id: ini-ini#eq
  summary: null
  belongs_to: Ini
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L67)

    ``` pony
    fun box eq(
      that: Ini val)
    : Bool val
    ```

    #### Parameters

    - that: [Ini](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Ini.ne()
  id: ini-ini#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Ini
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L67)\n\n``` pony\nfun box ne(\n  that: Ini val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Ini](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-Ini](https://stdlib.ponylang.io/ini-Ini)"
- name: IniError
  id: ini-inierror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# IniError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L34)\n\n``` pony\ntype IniError is\n  (IniIncompleteSection val | IniNoDelimiter val)\n```\n\n#### Type Alias For\n\n- ([IniIncompleteSection](ini-iniincompletesection) val \\| [IniNoDelimiter](ini-ininodelimiter) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniError](https://stdlib.ponylang.io/ini-IniError)"
- name: IniIncompleteSection
  id: ini-iniincompletesection
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# IniIncompleteSection\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L31)\n\n``` pony\nprimitive val IniIncompleteSection\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L31)\n\n``` pony\nnew val create()\n: IniIncompleteSection val^\n```\n\n#### Returns\n\n- [IniIncompleteSection](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L32)\n\n``` pony\nfun box eq(\n  that: IniIncompleteSection val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniIncompleteSection](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L32)\n\n``` pony\nfun box ne(\n  that: IniIncompleteSection val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniIncompleteSection](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniIncompleteSection](https://stdlib.ponylang.io/ini-IniIncompleteSection)"
- name: IniIncompleteSection.create()
  id: ini-iniincompletesection#create
  summary: null
  belongs_to: IniIncompleteSection
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L31)

    ``` pony
    new val create()
    : IniIncompleteSection val^
    ```

    #### Returns

    - [IniIncompleteSection](index) val^

    ## Public Functions
- name: IniIncompleteSection.eq()
  id: ini-iniincompletesection#eq
  summary: null
  belongs_to: IniIncompleteSection
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L32)

    ``` pony
    fun box eq(
      that: IniIncompleteSection val)
    : Bool val
    ```

    #### Parameters

    - that: [IniIncompleteSection](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: IniIncompleteSection.ne()
  id: ini-iniincompletesection#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: IniIncompleteSection
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L32)\n\n``` pony\nfun box ne(\n  that: IniIncompleteSection val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniIncompleteSection](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniIncompleteSection](https://stdlib.ponylang.io/ini-IniIncompleteSection)"
- name: IniMap
  id: ini-inimap
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# IniMap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L3)\n\n``` pony\ntype IniMap is\n  HashMap[String val, HashMap[String val, String val, HashEq[String val] val] ref, HashEq[String val] val] ref\n```\n\n#### Type Alias For\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [HashMap](collections-hashmap)\\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniMap](https://stdlib.ponylang.io/ini-IniMap)"
- name: IniNoDelimiter
  id: ini-ininodelimiter
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# IniNoDelimiter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L32)\n\n``` pony\nprimitive val IniNoDelimiter\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L32)\n\n``` pony\nnew val create()\n: IniNoDelimiter val^\n```\n\n#### Returns\n\n- [IniNoDelimiter](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L34)\n\n``` pony\nfun box eq(\n  that: IniNoDelimiter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniNoDelimiter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L34)\n\n``` pony\nfun box ne(\n  that: IniNoDelimiter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniNoDelimiter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniNoDelimiter](https://stdlib.ponylang.io/ini-IniNoDelimiter)"
- name: IniNoDelimiter.create()
  id: ini-ininodelimiter#create
  summary: null
  belongs_to: IniNoDelimiter
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L32)

    ``` pony
    new val create()
    : IniNoDelimiter val^
    ```

    #### Returns

    - [IniNoDelimiter](index) val^

    ## Public Functions
- name: IniNoDelimiter.eq()
  id: ini-ininodelimiter#eq
  summary: null
  belongs_to: IniNoDelimiter
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L34)

    ``` pony
    fun box eq(
      that: IniNoDelimiter val)
    : Bool val
    ```

    #### Parameters

    - that: [IniNoDelimiter](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: IniNoDelimiter.ne()
  id: ini-ininodelimiter#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: IniNoDelimiter
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L34)\n\n``` pony\nfun box ne(\n  that: IniNoDelimiter val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniNoDelimiter](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniNoDelimiter](https://stdlib.ponylang.io/ini-IniNoDelimiter)"
- name: IniNotify
  id: ini-ininotify
  summary: Notifications for INI parsing
  description: "# IniNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L39)\n\nNotifications for INI parsing.\n\n``` pony\ninterface ref IniNotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L43)\n\nThis is called for every valid entry in the INI file. If key/value pairs occur before a section name, the section can be an empty string. Return false to halt processing.\n\n``` pony\nfun ref apply(\n  section: String val,\n  key: String val,\n  value: String val)\n: Bool val\n```\n\n#### Parameters\n\n- section: [String](builtin-string) val\n- key: [String](builtin-string) val\n- value: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### add_section\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L50)\n\nThis is called for every valid section in the INI file. Return false to halt processing.\n\n``` pony\nfun ref add_section(\n  section: String val)\n: Bool val\n```\n\n#### Parameters\n\n- section: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### errors\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L57)\n\nThis is called for each error encountered. Return false to halt processing.\n\n``` pony\nfun ref errors(\n  line: USize val,\n  err: (IniIncompleteSection val | IniNoDelimiter val))\n: Bool val\n```\n\n#### Parameters\n\n- line: [USize](builtin-usize) val\n- err: ([IniIncompleteSection](ini-iniincompletesection) val \\| [IniNoDelimiter](ini-ininodelimiter) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniNotify](https://stdlib.ponylang.io/ini-IniNotify)"
- name: IniNotify.add_section()
  id: ini-ininotify#add_section
  summary: This is called for every valid section in the INI file
  belongs_to: IniNotify
  description: |-
    ### add_section

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L50)

    This is called for every valid section in the INI file. Return false to halt processing.

    ``` pony
    fun ref add_section(
      section: String val)
    : Bool val
    ```

    #### Parameters

    - section: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: IniNotify.apply()
  id: ini-ininotify#apply
  summary: This is called for every valid entry in the INI file
  belongs_to: IniNotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini/#L43)

    This is called for every valid entry in the INI file. If key/value pairs occur before a section name, the section can be an empty string. Return false to halt processing.

    ``` pony
    fun ref apply(
      section: String val,
      key: String val,
      value: String val)
    : Bool val
    ```

    #### Parameters

    - section: [String](builtin-string) val
    - key: [String](builtin-string) val
    - value: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val
- name: IniNotify.errors()
  id: ini-ininotify#errors
  summary: This is called for each error encountered
  belongs_to: IniNotify
  description: "### errors\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini/#L57)\n\nThis is called for each error encountered. Return false to halt processing.\n\n``` pony\nfun ref errors(\n  line: USize val,\n  err: (IniIncompleteSection val | IniNoDelimiter val))\n: Bool val\n```\n\n#### Parameters\n\n- line: [USize](builtin-usize) val\n- err: ([IniIncompleteSection](ini-iniincompletesection) val \\| [IniNoDelimiter](ini-ininodelimiter) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniNotify](https://stdlib.ponylang.io/ini-IniNotify)"
- name: IniParse
  id: ini-iniparse
  summary: This is used to parse INI formatted text as a nested map of strings
  description: "# IniParse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L5)\n\nThis is used to parse INI formatted text as a nested map of strings.\n\n``` pony\nprimitive val IniParse\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L5)\n\n``` pony\nnew val create()\n: IniParse val^\n```\n\n#### Returns\n\n- [IniParse](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)\n\nThis accepts a string iterator and returns a nested map of strings. If parsing fails, an error is raised.\n\n``` pony\nfun box apply(\n  lines: Iterator[String val] ref)\n: HashMap[String val, HashMap[String val, String val, HashEq[String val] val] ref, HashEq[String val] val] ref^ ?\n```\n\n#### Parameters\n\n- lines: [Iterator](builtin-iterator)\\[[String](builtin-string) val\\] ref\n\n#### Returns\n\n- [HashMap](collections-hashmap)\\[[String](builtin-string) val, [HashMap](collections-hashmap)\\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref, [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref^ ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)\n\n``` pony\nfun box eq(\n  that: IniParse val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniParse](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)\n\n``` pony\nfun box ne(\n  that: IniParse val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniParse](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniParse](https://stdlib.ponylang.io/ini-IniParse)"
- name: IniParse.apply()
  id: ini-iniparse#apply
  summary: This accepts a string iterator and returns a nested map of strings
  belongs_to: IniParse
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)

    This accepts a string iterator and returns a nested map of strings. If parsing fails, an error is raised.

    ``` pony
    fun box apply(
      lines: Iterator[String val] ref)
    : HashMap[String val, HashMap[String val, String val, HashEq[String val] val] ref, HashEq[String val] val] ref^ ?
    ```

    #### Parameters

    - lines: [Iterator](builtin-iterator)\[[String](builtin-string) val\] ref

    #### Returns

    - [HashMap](collections-hashmap)\[[String](builtin-string) val, [HashMap](collections-hashmap)\[[String](builtin-string) val, [String](builtin-string) val, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] ref, [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] ref^ ?
- name: IniParse.create()
  id: ini-iniparse#create
  summary: null
  belongs_to: IniParse
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini_map/#L5)

    ``` pony
    new val create()
    : IniParse val^
    ```

    #### Returns

    - [IniParse](index) val^

    ## Public Functions
- name: IniParse.eq()
  id: ini-iniparse#eq
  summary: null
  belongs_to: IniParse
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)

    ``` pony
    fun box eq(
      that: IniParse val)
    : Bool val
    ```

    #### Parameters

    - that: [IniParse](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: IniParse.ne()
  id: ini-iniparse#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: IniParse
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ini/ini_map/#L9)\n\n``` pony\nfun box ne(\n  that: IniParse val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [IniParse](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ini-IniParse](https://stdlib.ponylang.io/ini-IniParse)"
- name: InputNotify
  id: builtin-inputnotify
  summary: Notification for data arriving via an input stream
  description: "# InputNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L11)\n\nNotification for data arriving via an input stream.\n\n``` pony\ninterface ref InputNotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L15)\n\nCalled when data is available on the stream.\n\n``` pony\nfun ref apply(\n  data: Array[U8 val] iso)\n: None val\n```\n\n#### Parameters\n\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n\n#### Returns\n\n- [None](builtin-none) val\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L21)\n\nCalled when no more data will arrive on the stream.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-InputNotify](https://stdlib.ponylang.io/builtin-InputNotify)"
- name: InputNotify.apply()
  id: builtin-inputnotify#apply
  summary: Called when data is available on the stream
  belongs_to: InputNotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/stdin/#L15)

    Called when data is available on the stream.

    ``` pony
    fun ref apply(
      data: Array[U8 val] iso)
    : None val
    ```

    #### Parameters

    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso

    #### Returns

    - [None](builtin-none) val
- name: InputNotify.dispose()
  id: builtin-inputnotify#dispose
  summary: Called when no more data will arrive on the stream
  belongs_to: InputNotify
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L21)\n\nCalled when no more data will arrive on the stream.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-InputNotify](https://stdlib.ponylang.io/builtin-InputNotify)"
- name: InputSerialisedAuth
  id: serialise-inputserialisedauth
  summary: This is a capability token that allows the holder to treat data arbitrary bytes as serialised data
  description: "# InputSerialisedAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L68)\n\nThis is a capability token that allows the holder to treat data arbitrary bytes as serialised data. This is the most dangerous capability, as currently it is possible for a malformed chunk of data to crash your program if it is deserialised.\n\n``` pony\nprimitive val InputSerialisedAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)\n\n``` pony\nnew val create(\n  auth: AmbientAuth val)\n: InputSerialisedAuth val^\n```\n\n#### Parameters\n\n- auth: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [InputSerialisedAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)\n\n``` pony\nfun box eq(\n  that: InputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)\n\n``` pony\nfun box ne(\n  that: InputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-InputSerialisedAuth](https://stdlib.ponylang.io/serialise-InputSerialisedAuth)"
- name: InputSerialisedAuth.create()
  id: serialise-inputserialisedauth#create
  summary: null
  belongs_to: InputSerialisedAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)

    ``` pony
    new val create(
      auth: AmbientAuth val)
    : InputSerialisedAuth val^
    ```

    #### Parameters

    - auth: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [InputSerialisedAuth](index) val^

    ## Public Functions
- name: InputSerialisedAuth.eq()
  id: serialise-inputserialisedauth#eq
  summary: null
  belongs_to: InputSerialisedAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)

    ``` pony
    fun box eq(
      that: InputSerialisedAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [InputSerialisedAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: InputSerialisedAuth.ne()
  id: serialise-inputserialisedauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: InputSerialisedAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L75)\n\n``` pony\nfun box ne(\n  that: InputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-InputSerialisedAuth](https://stdlib.ponylang.io/serialise-InputSerialisedAuth)"
- name: InputStream
  id: builtin-inputstream
  summary: Asynchronous access to some input stream
  description: "# InputStream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L27)\n\nAsynchronous access to some input stream.\n\n``` pony\ninterface tag InputStream\n```\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L31)\n\nSet the notifier. Optionally, also sets the chunk size, dictating the maximum number of bytes of each chunk that will be passed to the notifier.\n\n``` pony\nbe apply(\n  notify: (InputNotify iso | None val),\n  chunk_size: USize val = 32)\n```\n\n#### Parameters\n\n- notify: ([InputNotify](builtin-inputnotify) iso \\| [None](builtin-none) val)\n- chunk_size: [USize](builtin-usize) val = 32\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L37)\n\nClear the notifier in order to shut down input.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-InputStream](https://stdlib.ponylang.io/builtin-InputStream)"
- name: InputStream.apply()
  id: builtin-inputstream#apply
  summary: Set the notifier
  belongs_to: InputStream
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/stdin/#L31)

    Set the notifier. Optionally, also sets the chunk size, dictating the maximum number of bytes of each chunk that will be passed to the notifier.

    ``` pony
    be apply(
      notify: (InputNotify iso | None val),
      chunk_size: USize val = 32)
    ```

    #### Parameters

    - notify: ([InputNotify](builtin-inputnotify) iso \| [None](builtin-none) val)
    - chunk_size: [USize](builtin-usize) val = 32
- name: InputStream.dispose()
  id: builtin-inputstream#dispose
  summary: Clear the notifier in order to shut down input
  belongs_to: InputStream
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L37)\n\nClear the notifier in order to shut down input.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-InputStream](https://stdlib.ponylang.io/builtin-InputStream)"
- name: Int
  id: builtin-int
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Int\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L716)\n\n``` pony\ntype Int is\n  (I8 val | I16 val | I32 val | I64 val | I128 val | ILong val | ISize val | U8 val | U16 val | U32 val | U64 val | U128 val | ULong val | USize val)\n```\n\n#### Type Alias For\n\n- ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Int](https://stdlib.ponylang.io/builtin-Int)"
- name: Integer
  id: builtin-integer
  summary: Unsafe operation
  description: "# Integer\\[A: [Integer](index)\\[A\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L213)\n\n``` pony\ntrait val Integer[A: Integer[A] val] is\n  Real[A] val\n```\n\n#### Implements\n\n- [Real](builtin-real)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L135)\n\n``` pony\nnew val create(\n  value: A)\n: Real[A] val^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L138)\n\n``` pony\nnew val min_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L139)\n\n``` pony\nnew val max_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n## Public Functions\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L214)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box add_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L221)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box sub_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L228)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box mul_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L235)\n\nInteger division, rounded towards zero.\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box div_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L245)\n\nCalculates the quotient of this number and `y` and the remainder.\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box divrem_unsafe(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L255)\n\nCalculates the remainder of this number divided by `y`.\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box rem_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L265)\n\nFloored division, rounded towards negative infinity, as opposed to `div` which rounds towards zero.\n\n*Unsafe Operation*\n\nIf y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box fld_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L276)\n\nCalculates the modulo of this number after floored division by `y`.\n\n*Unsafe Operation.*\n\nIf y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box mod_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L286)\n\nAdd y to this number.\n\nIf the operation overflows this function errors.\n\n``` pony\nfun box add_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L293)\n\nSubtract y from this number.\n\nIf the operation overflows/underflows this function errors.\n\n``` pony\nfun box sub_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L300)\n\nMultiply y with this number.\n\nIf the operation overflows this function errors.\n\n``` pony\nfun box mul_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L307)\n\nDivides this number by `y`, rounds the result towards zero.\n\nIf y is `0` or the operation overflows, this function errors.\n\n``` pony\nfun box div_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L314)\n\nCalculates the remainder of this number divided by y. The result has the sign of the dividend.\n\nIf y is `0` or the operation overflows, this function errors.\n\n``` pony\nfun box rem_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L322)\n\nDivides this number by y and calculates the remainder of the operation.\n\nIf y is `0` or the operation overflows, this function errors.\n\n``` pony\nfun box divrem_partial(\n  y: A)\n: (A , A) ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L329)\n\nFloored integer division, rounded towards negative infinity.\n\nIf y is `0` or the operation overflows, this function errors\n\n``` pony\nfun box fld_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L336)\n\nCalculates the modulo of this number and `y` after floored division (`fld`). The result has the sign of the divisor.\n\nIf y is `0` or the operation overflows, this function errors.\n\n``` pony\nfun box mod_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L344)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box neg_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L351)\n\nAdd `y` to this integer and return the result and a flag indicating overflow.\n\n``` pony\nfun box addc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L355)\n\nSubtract `y` from this integer and return the result and a flag indicating overflow.\n\n``` pony\nfun box subc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L359)\n\nMultiply `y` with this integer and return the result and a flag indicating overflow.\n\n``` pony\nfun box mulc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L363)\n\nDivide this integer by `y` and return the result and a flag indicating overflow or division by zero.\n\n``` pony\nfun box divc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L367)\n\nCalculate the remainder of this number divided by `y` and return the result and a flag indicating division by zero or overflow.\n\nThe result will have the sign of the dividend.\n\n``` pony\nfun box remc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L373)\n\nDivide this integer by `y` and return the result, rounded towards negative infinity and a flag indicating overflow or division by zero.\n\n``` pony\nfun box fldc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L377)\n\nCalculate the modulo of this number after floored division by `y` and return the result and a flag indicating division by zero or overflow.\n\nThe result will have the sign of the divisor.\n\n``` pony\nfun box modc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L384)\n\n``` pony\nfun box op_and(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L385)\n\n``` pony\nfun box op_or(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L386)\n\n``` pony\nfun box op_xor(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_not\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L387)\n\n``` pony\nfun box op_not()\n: A\n```\n\n#### Returns\n\n- A\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L389)\n\nReverse the order of the bits within the integer. For example, 0b11101101 (237) would return 0b10110111 (183).\n\n``` pony\nfun box bit_reverse()\n: A\n```\n\n#### Returns\n\n- A\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L395)\n\n``` pony\nfun box bswap()\n: A\n```\n\n#### Returns\n\n- A\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: A\n```\n\n#### Returns\n\n- A\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L161)\n\n``` pony\nfun box fld(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L165)\n\n``` pony\nfun box mod(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L179)\n\n``` pony\nfun box min(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L180)\n\n``` pony\nfun box max(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L182)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L198)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L6)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L14)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L49)\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L98)\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Integer](https://stdlib.ponylang.io/builtin-Integer)"
- name: Integer.add()
  id: builtin-integer#add
  summary: null
  belongs_to: Integer
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.add_partial()
  id: builtin-integer#add_partial
  summary: Add y to this number
  belongs_to: Integer
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L286)

    Add y to this number.

    If the operation overflows this function errors.

    ``` pony
    fun box add_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.add_unsafe()
  id: builtin-integer#add_unsafe
  summary: Unsafe operation
  belongs_to: Integer
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L214)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box add_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.addc()
  id: builtin-integer#addc
  summary: Add y to this integer and return the result and a flag indicating overflow
  belongs_to: Integer
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L351)

    Add `y` to this integer and return the result and a flag indicating overflow.

    ``` pony
    fun box addc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.bit_reverse()
  id: builtin-integer#bit_reverse
  summary: Reverse the order of the bits within the integer
  belongs_to: Integer
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L389)

    Reverse the order of the bits within the integer. For example, 0b11101101 (237) would return 0b10110111 (183).

    ``` pony
    fun box bit_reverse()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Integer.bswap()
  id: builtin-integer#bswap
  summary: null
  belongs_to: Integer
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L395)

    ``` pony
    fun box bswap()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Integer.compare()
  id: builtin-integer#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Integer
  description: "### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Integer](https://stdlib.ponylang.io/builtin-Integer)"
- name: Integer.create()
  id: builtin-integer#create
  summary: null
  belongs_to: Integer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L135)

    ``` pony
    new val create(
      value: A)
    : Real[A] val^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Real](builtin-real)\[A\] val^
- name: Integer.div()
  id: builtin-integer#div
  summary: null
  belongs_to: Integer
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.div_partial()
  id: builtin-integer#div_partial
  summary: Divides this number by y, rounds the result towards zero
  belongs_to: Integer
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L307)

    Divides this number by `y`, rounds the result towards zero.

    If y is `0` or the operation overflows, this function errors.

    ``` pony
    fun box div_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.div_unsafe()
  id: builtin-integer#div_unsafe
  summary: Integer division, rounded towards zero
  belongs_to: Integer
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L235)

    Integer division, rounded towards zero.

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box div_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.divc()
  id: builtin-integer#divc
  summary: Divide this integer by y and return the result and a flag indicating overflow or division by zero
  belongs_to: Integer
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L363)

    Divide this integer by `y` and return the result and a flag indicating overflow or division by zero.

    ``` pony
    fun box divc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.divrem()
  id: builtin-integer#divrem
  summary: null
  belongs_to: Integer
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: Integer.divrem_partial()
  id: builtin-integer#divrem_partial
  summary: Divides this number by y and calculates the remainder of the operation
  belongs_to: Integer
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L322)

    Divides this number by y and calculates the remainder of the operation.

    If y is `0` or the operation overflows, this function errors.

    ``` pony
    fun box divrem_partial(
      y: A)
    : (A , A) ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A) ?

    &nbsp;
- name: Integer.divrem_unsafe()
  id: builtin-integer#divrem_unsafe
  summary: Calculates the quotient of this number and y and the remainder
  belongs_to: Integer
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L245)

    Calculates the quotient of this number and `y` and the remainder.

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box divrem_unsafe(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: Integer.eq()
  id: builtin-integer#eq
  summary: null
  belongs_to: Integer
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.f32()
  id: builtin-integer#f32
  summary: null
  belongs_to: Integer
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: Integer.f32_unsafe()
  id: builtin-integer#f32_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: Integer.f64()
  id: builtin-integer#f64
  summary: null
  belongs_to: Integer
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Integer.f64_unsafe()
  id: builtin-integer#f64_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Integer.fld()
  id: builtin-integer#fld
  summary: null
  belongs_to: Integer
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L161)

    ``` pony
    fun box fld(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.fld_partial()
  id: builtin-integer#fld_partial
  summary: Floored integer division, rounded towards negative infinity
  belongs_to: Integer
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L329)

    Floored integer division, rounded towards negative infinity.

    If y is `0` or the operation overflows, this function errors

    ``` pony
    fun box fld_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.fld_unsafe()
  id: builtin-integer#fld_unsafe
  summary: Floored division, rounded towards negative infinity, as opposed to div which rounds towards zero
  belongs_to: Integer
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L265)

    Floored division, rounded towards negative infinity, as opposed to `div` which rounds towards zero.

    *Unsafe Operation*

    If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box fld_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.fldc()
  id: builtin-integer#fldc
  summary: Divide this integer by y and return the result, rounded towards negative infinity and a flag indicating overflow or division by zero
  belongs_to: Integer
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L373)

    Divide this integer by `y` and return the result, rounded towards negative infinity and a flag indicating overflow or division by zero.

    ``` pony
    fun box fldc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.from()
  id: builtin-integer#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: Integer
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n&nbsp;"
- name: Integer.ge()
  id: builtin-integer#ge
  summary: null
  belongs_to: Integer
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.gt()
  id: builtin-integer#gt
  summary: null
  belongs_to: Integer
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.hash()
  id: builtin-integer#hash
  summary: null
  belongs_to: Integer
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L182)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Integer.hash64()
  id: builtin-integer#hash64
  summary: null
  belongs_to: Integer
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L198)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Integer.i128()
  id: builtin-integer#i128
  summary: null
  belongs_to: Integer
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L6)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: Integer.i128_unsafe()
  id: builtin-integer#i128_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L49)

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: Integer.i16()
  id: builtin-integer#i16
  summary: null
  belongs_to: Integer
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: Integer.i16_unsafe()
  id: builtin-integer#i16_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: Integer.i32()
  id: builtin-integer#i32
  summary: null
  belongs_to: Integer
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: Integer.i32_unsafe()
  id: builtin-integer#i32_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: Integer.i64()
  id: builtin-integer#i64
  summary: null
  belongs_to: Integer
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Integer.i64_unsafe()
  id: builtin-integer#i64_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Integer.i8()
  id: builtin-integer#i8
  summary: null
  belongs_to: Integer
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: Integer.i8_unsafe()
  id: builtin-integer#i8_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: Integer.ilong()
  id: builtin-integer#ilong
  summary: null
  belongs_to: Integer
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: Integer.ilong_unsafe()
  id: builtin-integer#ilong_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: Integer.isize()
  id: builtin-integer#isize
  summary: null
  belongs_to: Integer
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: Integer.isize_unsafe()
  id: builtin-integer#isize_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: Integer.le()
  id: builtin-integer#le
  summary: null
  belongs_to: Integer
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.lt()
  id: builtin-integer#lt
  summary: null
  belongs_to: Integer
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.max()
  id: builtin-integer#max
  summary: null
  belongs_to: Integer
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L180)

    ``` pony
    fun box max(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.max_value()
  id: builtin-integer#max_value
  summary: null
  belongs_to: Integer
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L139)

    ``` pony
    new val max_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    ## Public Functions
- name: Integer.min()
  id: builtin-integer#min
  summary: null
  belongs_to: Integer
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L179)

    ``` pony
    fun box min(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.min_value()
  id: builtin-integer#min_value
  summary: null
  belongs_to: Integer
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L138)

    ``` pony
    new val min_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    &nbsp;
- name: Integer.mod()
  id: builtin-integer#mod
  summary: null
  belongs_to: Integer
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L165)

    ``` pony
    fun box mod(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.mod_partial()
  id: builtin-integer#mod_partial
  summary: Calculates the modulo of this number and y after floored division (fld)
  belongs_to: Integer
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L336)

    Calculates the modulo of this number and `y` after floored division (`fld`). The result has the sign of the divisor.

    If y is `0` or the operation overflows, this function errors.

    ``` pony
    fun box mod_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.mod_unsafe()
  id: builtin-integer#mod_unsafe
  summary: Calculates the modulo of this number after floored division by y
  belongs_to: Integer
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L276)

    Calculates the modulo of this number after floored division by `y`.

    *Unsafe Operation.*

    If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box mod_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.modc()
  id: builtin-integer#modc
  summary: Calculate the modulo of this number after floored division by y and return the result and a flag indicating division by zero or overflow
  belongs_to: Integer
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L377)

    Calculate the modulo of this number after floored division by `y` and return the result and a flag indicating division by zero or overflow.

    The result will have the sign of the divisor.

    ``` pony
    fun box modc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.mul()
  id: builtin-integer#mul
  summary: null
  belongs_to: Integer
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.mul_partial()
  id: builtin-integer#mul_partial
  summary: Multiply y with this number
  belongs_to: Integer
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L300)

    Multiply y with this number.

    If the operation overflows this function errors.

    ``` pony
    fun box mul_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.mul_unsafe()
  id: builtin-integer#mul_unsafe
  summary: Unsafe operation
  belongs_to: Integer
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L228)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box mul_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.mulc()
  id: builtin-integer#mulc
  summary: Multiply y with this integer and return the result and a flag indicating overflow
  belongs_to: Integer
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L359)

    Multiply `y` with this integer and return the result and a flag indicating overflow.

    ``` pony
    fun box mulc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.ne()
  id: builtin-integer#ne
  summary: null
  belongs_to: Integer
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Integer.neg()
  id: builtin-integer#neg
  summary: null
  belongs_to: Integer
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Integer.neg_unsafe()
  id: builtin-integer#neg_unsafe
  summary: Unsafe operation
  belongs_to: Integer
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L344)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box neg_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Integer.op_and()
  id: builtin-integer#op_and
  summary: null
  belongs_to: Integer
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L384)

    ``` pony
    fun box op_and(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.op_not()
  id: builtin-integer#op_not
  summary: null
  belongs_to: Integer
  description: |-
    ### op_not

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L387)

    ``` pony
    fun box op_not()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Integer.op_or()
  id: builtin-integer#op_or
  summary: null
  belongs_to: Integer
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L385)

    ``` pony
    fun box op_or(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.op_xor()
  id: builtin-integer#op_xor
  summary: null
  belongs_to: Integer
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L386)

    ``` pony
    fun box op_xor(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.rem()
  id: builtin-integer#rem
  summary: null
  belongs_to: Integer
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.rem_partial()
  id: builtin-integer#rem_partial
  summary: Calculates the remainder of this number divided by y
  belongs_to: Integer
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L314)

    Calculates the remainder of this number divided by y. The result has the sign of the dividend.

    If y is `0` or the operation overflows, this function errors.

    ``` pony
    fun box rem_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.rem_unsafe()
  id: builtin-integer#rem_unsafe
  summary: Calculates the remainder of this number divided by y
  belongs_to: Integer
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L255)

    Calculates the remainder of this number divided by `y`.

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box rem_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.remc()
  id: builtin-integer#remc
  summary: Calculate the remainder of this number divided by y and return the result and a flag indicating division by zero or overflow
  belongs_to: Integer
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L367)

    Calculate the remainder of this number divided by `y` and return the result and a flag indicating division by zero or overflow.

    The result will have the sign of the dividend.

    ``` pony
    fun box remc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.string()
  id: builtin-integer#string
  summary: null
  belongs_to: Integer
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: Integer.sub()
  id: builtin-integer#sub
  summary: null
  belongs_to: Integer
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.sub_partial()
  id: builtin-integer#sub_partial
  summary: Subtract y from this number
  belongs_to: Integer
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L293)

    Subtract y from this number.

    If the operation overflows/underflows this function errors.

    ``` pony
    fun box sub_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: Integer.sub_unsafe()
  id: builtin-integer#sub_unsafe
  summary: Unsafe operation
  belongs_to: Integer
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L221)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box sub_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Integer.subc()
  id: builtin-integer#subc
  summary: Subtract y from this integer and return the result and a flag indicating overflow
  belongs_to: Integer
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L355)

    Subtract `y` from this integer and return the result and a flag indicating overflow.

    ``` pony
    fun box subc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: Integer.u128()
  id: builtin-integer#u128
  summary: null
  belongs_to: Integer
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L14)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: Integer.u128_unsafe()
  id: builtin-integer#u128_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L98)

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: Integer.u16()
  id: builtin-integer#u16
  summary: null
  belongs_to: Integer
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: Integer.u16_unsafe()
  id: builtin-integer#u16_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: Integer.u32()
  id: builtin-integer#u32
  summary: null
  belongs_to: Integer
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Integer.u32_unsafe()
  id: builtin-integer#u32_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Integer.u64()
  id: builtin-integer#u64
  summary: null
  belongs_to: Integer
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Integer.u64_unsafe()
  id: builtin-integer#u64_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Integer.u8()
  id: builtin-integer#u8
  summary: null
  belongs_to: Integer
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: Integer.u8_unsafe()
  id: builtin-integer#u8_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: Integer.ulong()
  id: builtin-integer#ulong
  summary: null
  belongs_to: Integer
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: Integer.ulong_unsafe()
  id: builtin-integer#ulong_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: Integer.usize()
  id: builtin-integer#usize
  summary: null
  belongs_to: Integer
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Integer.usize_unsafe()
  id: builtin-integer#usize_unsafe
  summary: null
  belongs_to: Integer
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: InvalidArgument
  id: options-invalidargument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# InvalidArgument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L79)\n\n``` pony\nprimitive val InvalidArgument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L79)\n\n``` pony\nnew val create()\n: InvalidArgument val^\n```\n\n#### Returns\n\n- [InvalidArgument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L81)\n\n``` pony\nfun box eq(\n  that: InvalidArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InvalidArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L81)\n\n``` pony\nfun box ne(\n  that: InvalidArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InvalidArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-InvalidArgument](https://stdlib.ponylang.io/options-InvalidArgument)"
- name: InvalidArgument.create()
  id: options-invalidargument#create
  summary: null
  belongs_to: InvalidArgument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L79)

    ``` pony
    new val create()
    : InvalidArgument val^
    ```

    #### Returns

    - [InvalidArgument](index) val^

    ## Public Functions
- name: InvalidArgument.eq()
  id: options-invalidargument#eq
  summary: null
  belongs_to: InvalidArgument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L81)

    ``` pony
    fun box eq(
      that: InvalidArgument val)
    : Bool val
    ```

    #### Parameters

    - that: [InvalidArgument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: InvalidArgument.ne()
  id: options-invalidargument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: InvalidArgument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L81)\n\n``` pony\nfun box ne(\n  that: InvalidArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [InvalidArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-InvalidArgument](https://stdlib.ponylang.io/options-InvalidArgument)"
- name: ISize
  id: builtin-isize
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ISize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L519)\n\n``` pony\nprimitive val ISize is\n  SignedInteger[ISize val, USize val] val\n```\n\n#### Implements\n\n- [SignedInteger](builtin-signedinteger)\\[[ISize](index) val, [USize](builtin-usize) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L520)\n\n``` pony\nnew val create(\n  value: ISize val)\n: ISize val^\n```\n\n#### Parameters\n\n- value: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](index) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L521)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ISize val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ISize](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L523)\n\n``` pony\nnew val min_value()\n: ISize val^\n```\n\n#### Returns\n\n- [ISize](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L530)\n\n``` pony\nnew val max_value()\n: ISize val^\n```\n\n#### Returns\n\n- [ISize](index) val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L537)\n\n``` pony\nfun box abs()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L539)\n\n``` pony\nfun box bit_reverse()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L546)\n\n``` pony\nfun box bswap()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L553)\n\n``` pony\nfun box popcount()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L560)\n\n``` pony\nfun box clz()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L567)\n\n``` pony\nfun box ctz()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L574)\n\n``` pony\nfun box clz_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L581)\n\n``` pony\nfun box ctz_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L588)\n\n``` pony\nfun box bitwidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L590)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L592)\n\n``` pony\nfun box min(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L593)\n\n``` pony\nfun box max(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L595)\n\n``` pony\nfun box fld(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L598)\n\n``` pony\nfun box fld_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L601)\n\n``` pony\nfun box mod(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L604)\n\n``` pony\nfun box mod_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L607)\n\n``` pony\nfun box addc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L614)\n\n``` pony\nfun box subc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L621)\n\n``` pony\nfun box mulc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L628)\n\n``` pony\nfun box divc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L631)\n\n``` pony\nfun box remc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L634)\n\n``` pony\nfun box fldc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L637)\n\n``` pony\nfun box modc(\n  y: ISize val)\n: (ISize val , Bool val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L640)\n\n``` pony\nfun box add_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L643)\n\n``` pony\nfun box sub_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L646)\n\n``` pony\nfun box mul_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L649)\n\n``` pony\nfun box div_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L652)\n\n``` pony\nfun box rem_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L655)\n\n``` pony\nfun box divrem_partial(\n  y: ISize val)\n: (ISize val , ISize val) ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [ISize](index) val) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L658)\n\n``` pony\nfun box fld_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L661)\n\n``` pony\nfun box mod_partial(\n  y: ISize val)\n: ISize val ?\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: USize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [USize](builtin-usize) val\n\n#### Returns\n\n- [ISize](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: USize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [USize](builtin-usize) val\n\n#### Returns\n\n- [ISize](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: USize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [USize](builtin-usize) val\n\n#### Returns\n\n- [ISize](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: USize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [USize](builtin-usize) val\n\n#### Returns\n\n- [ISize](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: ISize val)\n: (ISize val , ISize val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [ISize](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: ISize val)\n: (ISize val , ISize val)\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- ([ISize](index) val , [ISize](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: ISize val)\n: ISize val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [ISize](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: ISize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ISize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](index) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: ISize val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ISize](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ISize](https://stdlib.ponylang.io/builtin-ISize)"
- name: ISize.abs()
  id: builtin-isize#abs
  summary: null
  belongs_to: ISize
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L537)

    ``` pony
    fun box abs()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.add()
  id: builtin-isize#add
  summary: null
  belongs_to: ISize
  description: |-
    ### add

    ``` pony
    fun box add(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.add_partial()
  id: builtin-isize#add_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L640)

    ``` pony
    fun box add_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.add_unsafe()
  id: builtin-isize#add_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.addc()
  id: builtin-isize#addc
  summary: null
  belongs_to: ISize
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L607)

    ``` pony
    fun box addc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.bit_reverse()
  id: builtin-isize#bit_reverse
  summary: null
  belongs_to: ISize
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L539)

    ``` pony
    fun box bit_reverse()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.bitwidth()
  id: builtin-isize#bitwidth
  summary: null
  belongs_to: ISize
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L588)

    ``` pony
    fun box bitwidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.bswap()
  id: builtin-isize#bswap
  summary: null
  belongs_to: ISize
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L546)

    ``` pony
    fun box bswap()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.bytewidth()
  id: builtin-isize#bytewidth
  summary: null
  belongs_to: ISize
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L590)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.clz()
  id: builtin-isize#clz
  summary: null
  belongs_to: ISize
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L560)

    ``` pony
    fun box clz()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.clz_unsafe()
  id: builtin-isize#clz_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L574)

    ``` pony
    fun box clz_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.compare()
  id: builtin-isize#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ISize
  description: "### compare\n\n``` pony\nfun box compare(\n  that: ISize val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ISize](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ISize](https://stdlib.ponylang.io/builtin-ISize)"
- name: ISize.create()
  id: builtin-isize#create
  summary: null
  belongs_to: ISize
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L520)

    ``` pony
    new val create(
      value: ISize val)
    : ISize val^
    ```

    #### Parameters

    - value: [ISize](index) val

    #### Returns

    - [ISize](index) val^
- name: ISize.ctz()
  id: builtin-isize#ctz
  summary: null
  belongs_to: ISize
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L567)

    ``` pony
    fun box ctz()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.ctz_unsafe()
  id: builtin-isize#ctz_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L581)

    ``` pony
    fun box ctz_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.div()
  id: builtin-isize#div
  summary: null
  belongs_to: ISize
  description: |-
    ### div

    ``` pony
    fun box div(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.div_partial()
  id: builtin-isize#div_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L649)

    ``` pony
    fun box div_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.div_unsafe()
  id: builtin-isize#div_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.divc()
  id: builtin-isize#divc
  summary: null
  belongs_to: ISize
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L628)

    ``` pony
    fun box divc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.divrem()
  id: builtin-isize#divrem
  summary: null
  belongs_to: ISize
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: ISize val)
    : (ISize val , ISize val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [ISize](index) val)

    &nbsp;
- name: ISize.divrem_partial()
  id: builtin-isize#divrem_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L655)

    ``` pony
    fun box divrem_partial(
      y: ISize val)
    : (ISize val , ISize val) ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [ISize](index) val) ?

    &nbsp;
- name: ISize.divrem_unsafe()
  id: builtin-isize#divrem_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: ISize val)
    : (ISize val , ISize val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [ISize](index) val)

    &nbsp;
- name: ISize.eq()
  id: builtin-isize#eq
  summary: null
  belongs_to: ISize
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.f32()
  id: builtin-isize#f32
  summary: null
  belongs_to: ISize
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ISize.f32_unsafe()
  id: builtin-isize#f32_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ISize.f64()
  id: builtin-isize#f64
  summary: null
  belongs_to: ISize
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ISize.f64_unsafe()
  id: builtin-isize#f64_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ISize.fld()
  id: builtin-isize#fld
  summary: null
  belongs_to: ISize
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L595)

    ``` pony
    fun box fld(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.fld_partial()
  id: builtin-isize#fld_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L658)

    ``` pony
    fun box fld_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.fld_unsafe()
  id: builtin-isize#fld_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L598)

    ``` pony
    fun box fld_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.fldc()
  id: builtin-isize#fldc
  summary: null
  belongs_to: ISize
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L634)

    ``` pony
    fun box fldc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.from()
  id: builtin-isize#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: ISize
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](index) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L521)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ISize val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ISize](index) val^\n\n&nbsp;"
- name: ISize.ge()
  id: builtin-isize#ge
  summary: null
  belongs_to: ISize
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.gt()
  id: builtin-isize#gt
  summary: null
  belongs_to: ISize
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.hash()
  id: builtin-isize#hash
  summary: null
  belongs_to: ISize
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.hash64()
  id: builtin-isize#hash64
  summary: null
  belongs_to: ISize
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ISize.i128()
  id: builtin-isize#i128
  summary: null
  belongs_to: ISize
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ISize.i128_unsafe()
  id: builtin-isize#i128_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ISize.i16()
  id: builtin-isize#i16
  summary: null
  belongs_to: ISize
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ISize.i16_unsafe()
  id: builtin-isize#i16_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ISize.i32()
  id: builtin-isize#i32
  summary: null
  belongs_to: ISize
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ISize.i32_unsafe()
  id: builtin-isize#i32_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ISize.i64()
  id: builtin-isize#i64
  summary: null
  belongs_to: ISize
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ISize.i64_unsafe()
  id: builtin-isize#i64_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ISize.i8()
  id: builtin-isize#i8
  summary: null
  belongs_to: ISize
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ISize.i8_unsafe()
  id: builtin-isize#i8_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ISize.ilong()
  id: builtin-isize#ilong
  summary: null
  belongs_to: ISize
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: ISize.ilong_unsafe()
  id: builtin-isize#ilong_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: ISize.isize()
  id: builtin-isize#isize_1
  summary: null
  belongs_to: ISize
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.isize_unsafe()
  id: builtin-isize#isize_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.le()
  id: builtin-isize#le
  summary: null
  belongs_to: ISize
  description: |-
    ### le

    ``` pony
    fun box le(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.lt()
  id: builtin-isize#lt
  summary: null
  belongs_to: ISize
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.max()
  id: builtin-isize#max
  summary: null
  belongs_to: ISize
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L593)

    ``` pony
    fun box max(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.max_value()
  id: builtin-isize#max_value
  summary: null
  belongs_to: ISize
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L530)

    ``` pony
    new val max_value()
    : ISize val^
    ```

    #### Returns

    - [ISize](index) val^

    ## Public Functions
- name: ISize.min()
  id: builtin-isize#min
  summary: null
  belongs_to: ISize
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L592)

    ``` pony
    fun box min(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.min_value()
  id: builtin-isize#min_value
  summary: null
  belongs_to: ISize
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L523)

    ``` pony
    new val min_value()
    : ISize val^
    ```

    #### Returns

    - [ISize](index) val^

    &nbsp;
- name: ISize.mod()
  id: builtin-isize#mod
  summary: null
  belongs_to: ISize
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L601)

    ``` pony
    fun box mod(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.mod_partial()
  id: builtin-isize#mod_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L661)

    ``` pony
    fun box mod_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.mod_unsafe()
  id: builtin-isize#mod_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L604)

    ``` pony
    fun box mod_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.modc()
  id: builtin-isize#modc
  summary: null
  belongs_to: ISize
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L637)

    ``` pony
    fun box modc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.mul()
  id: builtin-isize#mul
  summary: null
  belongs_to: ISize
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.mul_partial()
  id: builtin-isize#mul_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L646)

    ``` pony
    fun box mul_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.mul_unsafe()
  id: builtin-isize#mul_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.mulc()
  id: builtin-isize#mulc
  summary: null
  belongs_to: ISize
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L621)

    ``` pony
    fun box mulc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.ne()
  id: builtin-isize#ne
  summary: null
  belongs_to: ISize
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: ISize val)
    : Bool val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ISize.neg()
  id: builtin-isize#neg
  summary: null
  belongs_to: ISize
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.neg_unsafe()
  id: builtin-isize#neg_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.op_and()
  id: builtin-isize#op_and
  summary: null
  belongs_to: ISize
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.op_not()
  id: builtin-isize#op_not
  summary: null
  belongs_to: ISize
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : ISize val
    ```

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.op_or()
  id: builtin-isize#op_or
  summary: null
  belongs_to: ISize
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.op_xor()
  id: builtin-isize#op_xor
  summary: null
  belongs_to: ISize
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.popcount()
  id: builtin-isize#popcount
  summary: null
  belongs_to: ISize
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L553)

    ``` pony
    fun box popcount()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.rem()
  id: builtin-isize#rem
  summary: null
  belongs_to: ISize
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.rem_partial()
  id: builtin-isize#rem_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L652)

    ``` pony
    fun box rem_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.rem_unsafe()
  id: builtin-isize#rem_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.remc()
  id: builtin-isize#remc
  summary: null
  belongs_to: ISize
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L631)

    ``` pony
    fun box remc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.shl()
  id: builtin-isize#shl
  summary: null
  belongs_to: ISize
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: USize val)
    : ISize val
    ```

    #### Parameters

    - y: [USize](builtin-usize) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.shl_unsafe()
  id: builtin-isize#shl_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: USize val)
    : ISize val
    ```

    #### Parameters

    - y: [USize](builtin-usize) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.shr()
  id: builtin-isize#shr
  summary: null
  belongs_to: ISize
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: USize val)
    : ISize val
    ```

    #### Parameters

    - y: [USize](builtin-usize) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.shr_unsafe()
  id: builtin-isize#shr_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: USize val)
    : ISize val
    ```

    #### Parameters

    - y: [USize](builtin-usize) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.string()
  id: builtin-isize#string
  summary: null
  belongs_to: ISize
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: ISize.sub()
  id: builtin-isize#sub
  summary: null
  belongs_to: ISize
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.sub_partial()
  id: builtin-isize#sub_partial
  summary: null
  belongs_to: ISize
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L643)

    ``` pony
    fun box sub_partial(
      y: ISize val)
    : ISize val ?
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val ?

    &nbsp;
- name: ISize.sub_unsafe()
  id: builtin-isize#sub_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: ISize val)
    : ISize val
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - [ISize](index) val

    &nbsp;
- name: ISize.subc()
  id: builtin-isize#subc
  summary: null
  belongs_to: ISize
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/signed/#L614)

    ``` pony
    fun box subc(
      y: ISize val)
    : (ISize val , Bool val)
    ```

    #### Parameters

    - y: [ISize](index) val

    #### Returns

    - ([ISize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ISize.u128()
  id: builtin-isize#u128
  summary: null
  belongs_to: ISize
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ISize.u128_unsafe()
  id: builtin-isize#u128_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ISize.u16()
  id: builtin-isize#u16
  summary: null
  belongs_to: ISize
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ISize.u16_unsafe()
  id: builtin-isize#u16_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ISize.u32()
  id: builtin-isize#u32
  summary: null
  belongs_to: ISize
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ISize.u32_unsafe()
  id: builtin-isize#u32_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ISize.u64()
  id: builtin-isize#u64
  summary: null
  belongs_to: ISize
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ISize.u64_unsafe()
  id: builtin-isize#u64_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ISize.u8()
  id: builtin-isize#u8
  summary: null
  belongs_to: ISize
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ISize.u8_unsafe()
  id: builtin-isize#u8_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ISize.ulong()
  id: builtin-isize#ulong
  summary: null
  belongs_to: ISize
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ISize.ulong_unsafe()
  id: builtin-isize#ulong_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: ISize.usize()
  id: builtin-isize#usize
  summary: null
  belongs_to: ISize
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ISize.usize_unsafe()
  id: builtin-isize#usize_unsafe
  summary: null
  belongs_to: ISize
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Iter
  id: itertools-iter
  summary: Wrapper class containing methods to modify iterators
  description: "# Iter\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L3)\n\nWrapper class containing methods to modify iterators.\n\n``` pony\nclass ref Iter[A: A] is\n  Iterator[A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L9)\n\n``` pony\nnew ref create(\n  iter: Iterator[A] ref)\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[A\\] ref\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n### maybe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L18)\n\n``` pony\nnew ref maybe(\n  value: (A | None val))\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- value: (A \\| [None](builtin-none) val)\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n### chain\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L28)\n\nTake an iterator of iterators and return an Iter containing the items of the first one, then the second one, and so on.\n\n## Example\n\n``` pony\nlet xs = [as I64: 1; 2].values()\nlet ys = [as I64: 3; 4].values()\n\nIter[I64].chain([xs; ys].values())\n```\n\n`1 2 3 4`\n\n``` pony\nnew ref chain(\n  outer_iterator: Iterator[Iterator[A] ref] ref)\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- outer_iterator: [Iterator](builtin-iterator)\\[[Iterator](builtin-iterator)\\[A\\] ref\\] ref\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n### repeat_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L82)\n\nCreate an iterator that returns the given value forever.\n\n## Example\n\n``` pony\nIter[U32].repeat_value(7)\n```\n\n`7 7 7 7 7 7 7 7 7 ...`\n\n``` pony\nnew ref repeat_value(\n  value: A)\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L12)\n\n``` pony\nfun ref has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L15)\n\n``` pony\nfun ref next()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n### next_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L102)\n\nReturn the next value, or the given default.\n\n## Example\n\n``` pony\nlet x: (U64 | None) = 42\nIter[U64].maybe(x).next_or(0)\n```\n\n`42`\n\n``` pony\nfun ref next_or(\n  default: A)\n: A\n```\n\n#### Parameters\n\n- default: A\n\n#### Returns\n\n- A\n\n### map_stateful\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L120)\n\nAllows stateful transformation of each element from the iterator, similar to `map`.\n\n``` pony\nfun ref map_stateful[B: B](\n  f: {ref(A!): B^ ?}[A, B] ref)\n: Iter[B] ref^\n```\n\n#### Parameters\n\n- f: {ref(A!): B^ ?}\\[A, B\\] ref\n\n#### Returns\n\n- [Iter](index)\\[B\\] ref^\n\n### filter_stateful\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L134)\n\nAllows filtering of elements based on a stateful adapter, similar to `filter`.\n\n``` pony\nfun ref filter_stateful(\n  f: {ref(A!): Bool ?}[A] ref)\n: Iter[A!] ref^\n```\n\n#### Parameters\n\n- f: {ref(A!): Bool ?}\\[A\\] ref\n\n#### Returns\n\n- [Iter](index)\\[A!\\] ref^\n\n### filter_map_stateful\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L184)\n\nAllows stateful modification to the stream of elements from an iterator, similar to `filter_map`.\n\n``` pony\nfun ref filter_map_stateful[B: B](\n  f: {ref(A!): (B^ | None) ?}[A, B] ref)\n: Iter[B] ref^\n```\n\n#### Parameters\n\n- f: {ref(A!): (B^ \\| None) ?}\\[A, B\\] ref\n\n#### Returns\n\n- [Iter](index)\\[B\\] ref^\n\n### all\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L233)\n\nReturn false if at least one value of the iterator fails to match the predicate `f`. This method short-circuits at the first value where the predicate returns false, otherwise true is returned.\n\n## Examples\n\n``` pony\nIter[I64]([2; 4; 6].values())\n  .all({(x) => (x % 2) == 0 })\n```\n\n`true`\n\n``` pony\nIter[I64]([2; 3; 4].values())\n  .all({(x) => (x % 2) == 0 })\n```\n\n`false`\n\n``` pony\nfun ref all(\n  f: {(A!): Bool ?}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### any\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L260)\n\nReturn true if at least one value of the iterator matches the predicate `f`. This method short-circuits at the first value where the predicate returns true, otherwise false is returned.\n\n## Examples\n\n``` pony\nIter[I64]([2; 4; 6].values())\n  .any({(I64) => (x % 2) == 1 })\n```\n\n`false`\n\n``` pony\nIter[I64]([2; 3; 4].values())\n  .any({(I64) => (x % 2) == 1 })\n```\n\n`true`\n\n``` pony\nfun ref any(\n  f: {(A!): Bool ?}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### collect\\[optional B: [Seq](builtin-seq)\\[A!\\] ref\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L287)\n\nPush each value from the iterator into the collection `coll`.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .collect(Array[I64](3))\n```\n\n`[1, 2, 3]`\n\n``` pony\nfun ref collect[optional B: Seq[A!] ref](\n  coll: B)\n: B^\n```\n\n#### Parameters\n\n- coll: B\n\n#### Returns\n\n- B^\n\n### count\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L304)\n\nReturn the number of values in the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .count()\n```\n\n`3`\n\n``` pony\nfun ref count()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### cycle\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L322)\n\nRepeatedly cycle through the values from the iterator.\n\nWARNING: The values returned by the original iterator are cached, so the input iterator should be finite.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .cycle()\n```\n\n`1 2 3 1 2 3 1 2 3 ...`\n\n``` pony\nfun ref cycle()\n: Iter[A!] ref^\n```\n\n#### Returns\n\n- [Iter](index)\\[A!\\] ref^\n\n### enum\\[optional B: ([Real](builtin-real)\\[B\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L379)\n\nAn iterator which yields the current iteration count as well as the next value from the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .enum()\n```\n\n`(0, 1) (1, 2) (2, 3)`\n\n``` pony\nfun ref enum[optional B: (Real[B] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))]()\n: Iter[(B , A)] ref^\n```\n\n#### Returns\n\n- [Iter](index)\\[(B , A)\\] ref^\n\n### filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L402)\n\nReturn an iterator that only returns items that match the predicate `f`.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5; 6].values())\n  .filter({(x) => (x % 2) == 0 })\n```\n\n`2 4 6`\n\n``` pony\nfun ref filter(\n  f: {(A!): Bool ?}[A] box)\n: Iter[A!] ref^\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n\n#### Returns\n\n- [Iter](index)\\[A!\\] ref^\n\n### find\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L416)\n\nReturn the nth value in the iterator that satisfies the predicate `f`.\n\n## Examples\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .find({(x) => (x % 2) == 0 })\n```\n\n`2`\n\n``` pony\nIter[I64]([1; 2; 3; 4].values())\n  .find({(x) => (x % 2) == 0 }, 2)\n```\n\n`4`\n\n``` pony\nfun ref find(\n  f: {(A!): Bool ?}[A] box,\n  n: USize val = 1)\n: A! ?\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n- n: [USize](builtin-usize) val = 1\n\n#### Returns\n\n- A! ?\n\n### filter_map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L446)\n\nReturn an iterator which applies `f` to each element. If `None` is returned, then the iterator will try again by applying `f` to the next element. Otherwise, the value of type `B` is returned.\n\n## Example\n\n``` pony\nIter[I64]([as I64: 1; -2; 4; 7; -5])\n  .filter_map[USize](\n    {(i: I64): (USize | None) => if i >= 0 then i.usize() end })\n```\n\n`1 4 7`\n\n``` pony\n\n```pony\nfun ref filter_map[B: B](\n  f: {(A!): (B^ | None) ?}[A, B] box)\n: Iter[B] ref^\n```\n\n#### Parameters\n\n- f: {(A!): (B^ \\| None) ?}\\[A, B\\] box\n\n#### Returns\n\n- [Iter](index)\\[B\\] ref^\n\n### flat_map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L463)\n\nReturn an iterator over the values of the iterators produced from the application of the given function.\n\n## Example\n\n``` pony\nIter[String]([\"alpha\"; \"beta\"; \"gamma\"])\n  .flat_map[U8]({(s: String): Iterator[U8] => s.values() })\n```\n\n`a l p h a b e t a g a m m a`\n\n``` pony\nfun ref flat_map[B: B](\n  f: {(A!): Iterator[B] ?}[A, B] box)\n: Iter[B] ref^\n```\n\n#### Parameters\n\n- f: {(A!): Iterator\\[B\\] ?}\\[A, B\\] box\n\n#### Returns\n\n- [Iter](index)\\[B\\] ref^\n\n### fold\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L505)\n\nApply a function to every element, producing an accumulated value.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .fold[I64](0, {(sum, x) => sum + x })\n```\n\n`6`\n\n``` pony\nfun ref fold[B: B](\n  acc: B,\n  f: {(B, A!): B^}[A, B] box)\n: B^\n```\n\n#### Parameters\n\n- acc: B\n- f: {(B, A!): B^}\\[A, B\\] box\n\n#### Returns\n\n- B^\n\n### fold_partial\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L523)\n\nA partial version of `fold`.\n\n``` pony\nfun ref fold_partial[B: B](\n  acc: B,\n  f: {(B, A!): B^ ?}[A, B] box)\n: B^ ?\n```\n\n#### Parameters\n\n- acc: B\n- f: {(B, A!): B^ ?}\\[A, B\\] box\n\n#### Returns\n\n- B^ ?\n\n### last\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L576)\n\nReturn the last value of the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .last()\n```\n\n`3`\n\n``` pony\nfun ref last()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n### map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L592)\n\nReturn an iterator where each item's value is the application of the given function to the value in the original iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .map[I64]({(x) => x * x })\n```\n\n`1 4 9`\n\n``` pony\nfun ref map[B: B](\n  f: {(A!): B^ ?}[A, B] box)\n: Iter[B] ref^\n```\n\n#### Parameters\n\n- f: {(A!): B^ ?}\\[A, B\\] box\n\n#### Returns\n\n- [Iter](index)\\[B\\] ref^\n\n### nth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L607)\n\nReturn the nth value of the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .nth(2)\n```\n\n`2`\n\n``` pony\nfun ref nth(\n  n: USize val)\n: A ?\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- A ?\n\n### run\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L630)\n\nIterate through the values of the iterator without a for loop. The function `on_error` will be called if the iterator's `has_next` method returns true but its `next` method throws an error.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .map[None]({(x) => env.out.print(x.string()) })\n  .run()\n```\n\n``` pony\n1\n2\n3\n```\n\n``` pony\nfun ref run(\n  on_error: {ref()}[A] ref = lambda)\n: None val\n```\n\n#### Parameters\n\n- on_error: {ref()}\\[A\\] ref = lambda\n\n#### Returns\n\n- [None](builtin-none) val\n\n### skip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L657)\n\nSkip the first n values of the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5; 6].values())\n  .skip(3)\n```\n\n`4 5 6`\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .skip(3)\n  .has_next()\n```\n\n`false`\n\n``` pony\nfun ref skip(\n  n: USize val)\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n### skip_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L685)\n\nSkip values of the iterator while the predicate `f` returns true.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5; 6].values())\n  .skip_while({(x) => x < 4 })\n```\n\n`4 5 6`\n\n``` pony\nfun ref skip_while(\n  f: {(A!): Bool ?}[A] box)\n: Iter[A!] ref^\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n\n#### Returns\n\n- [Iter](index)\\[A!\\] ref^\n\n### take\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L711)\n\nReturn an iterator for the first n elements.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5; 6].values())\n  .take(3)\n```\n\n`1 2 3`\n\n``` pony\nfun ref take(\n  n: USize val)\n: Iter[A] ref^\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Iter](index)\\[A\\] ref^\n\n### take_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L739)\n\nReturn an iterator that returns values while the predicate `f` returns true. This iterator short-circuits the first time that `f` returns false or raises an error.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3; 4; 5; 6].values())\n  .take_while({(x) => x < 4 })\n```\n\n`1 2 3`\n\n``` pony\nfun ref take_while(\n  f: {(A!): Bool ?}[A] box)\n: Iter[A!] ref^\n```\n\n#### Parameters\n\n- f: {(A!): Bool ?}\\[A\\] box\n\n#### Returns\n\n- [Iter](index)\\[A!\\] ref^\n\n### zip\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L802)\n\nZip two iterators together so that each call to next() results in a tuple with the next value of the first iterator and the next value of the second iterator. The number of items returned is the minimum of the number of items returned by the two iterators.\n\n## Example\n\n``` pony\nIter[I64]([1; 2].values())\n  .zip[I64]([3; 4].values())\n```\n\n`(1, 3) (2, 4)`\n\n``` pony\nfun ref zip[B: B](\n  i2: Iterator[B] ref)\n: Iter[(A , B)] ref^\n```\n\n#### Parameters\n\n- i2: [Iterator](builtin-iterator)\\[B\\] ref\n\n#### Returns\n\n- [Iter](index)\\[(A , B)\\] ref^\n\n### zip2\\[B: B, C: C\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L829)\n\nZip three iterators together so that each call to next() results in a tuple with the next value of the first iterator, the next value of the second iterator, and the value of the third iterator. The number of items returned is the minimum of the number of items returned by the three iterators.\n\n``` pony\nfun ref zip2[B: B, C: C](\n  i2: Iterator[B] ref,\n  i3: Iterator[C] ref)\n: Iter[(A , B , C)] ref^\n```\n\n#### Parameters\n\n- i2: [Iterator](builtin-iterator)\\[B\\] ref\n- i3: [Iterator](builtin-iterator)\\[C\\] ref\n\n#### Returns\n\n- [Iter](index)\\[(A , B , C)\\] ref^\n\n### zip3\\[B: B, C: C, D: D\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L850)\n\nZip four iterators together so that each call to next() results in a tuple with the next value of each of the iterators. The number of items returned is the minimum of the number of items returned by the iterators.\n\n``` pony\nfun ref zip3[B: B, C: C, D: D](\n  i2: Iterator[B] ref,\n  i3: Iterator[C] ref,\n  i4: Iterator[D] ref)\n: Iter[(A , B , C , D)] ref^\n```\n\n#### Parameters\n\n- i2: [Iterator](builtin-iterator)\\[B\\] ref\n- i3: [Iterator](builtin-iterator)\\[C\\] ref\n- i4: [Iterator](builtin-iterator)\\[D\\] ref\n\n#### Returns\n\n- [Iter](index)\\[(A , B , C , D)\\] ref^\n\n### zip4\\[B: B, C: C, D: D, E: E\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L876)\n\nZip five iterators together so that each call to next() results in a tuple with the next value of each of the iterators. The number of items returned is the minimum of the number of items returned by the iterators.\n\n``` pony\nfun ref zip4[B: B, C: C, D: D, E: E](\n  i2: Iterator[B] ref,\n  i3: Iterator[C] ref,\n  i4: Iterator[D] ref,\n  i5: Iterator[E] ref)\n: Iter[(A , B , C , D , E)] ref^\n```\n\n#### Parameters\n\n- i2: [Iterator](builtin-iterator)\\[B\\] ref\n- i3: [Iterator](builtin-iterator)\\[C\\] ref\n- i4: [Iterator](builtin-iterator)\\[D\\] ref\n- i5: [Iterator](builtin-iterator)\\[E\\] ref\n\n#### Returns\n\n- [Iter](index)\\[(A , B , C , D , E)\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/itertools-Iter](https://stdlib.ponylang.io/itertools-Iter)"
- name: Iter.all()
  id: itertools-iter#all
  summary: Return false if at least one value of the iterator fails to match the predicate f
  belongs_to: Iter
  description: |-
    ### all

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L233)

    Return false if at least one value of the iterator fails to match the predicate `f`. This method short-circuits at the first value where the predicate returns false, otherwise true is returned.

    ## Examples

    ``` pony
    Iter[I64]([2; 4; 6].values())
      .all({(x) => (x % 2) == 0 })
    ```

    `true`

    ``` pony
    Iter[I64]([2; 3; 4].values())
      .all({(x) => (x % 2) == 0 })
    ```

    `false`

    ``` pony
    fun ref all(
      f: {(A!): Bool ?}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Iter.any()
  id: itertools-iter#any
  summary: Return true if at least one value of the iterator matches the predicate f
  belongs_to: Iter
  description: |-
    ### any

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L260)

    Return true if at least one value of the iterator matches the predicate `f`. This method short-circuits at the first value where the predicate returns true, otherwise false is returned.

    ## Examples

    ``` pony
    Iter[I64]([2; 4; 6].values())
      .any({(I64) => (x % 2) == 1 })
    ```

    `false`

    ``` pony
    Iter[I64]([2; 3; 4].values())
      .any({(I64) => (x % 2) == 1 })
    ```

    `true`

    ``` pony
    fun ref any(
      f: {(A!): Bool ?}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Iter.chain()
  id: itertools-iter#chain
  summary: Take an iterator of iterators and return an Iter containing the items of the first one, then the second one, and so on
  belongs_to: Iter
  description: |-
    ### chain

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L28)

    Take an iterator of iterators and return an Iter containing the items of the first one, then the second one, and so on.

    ## Example

    ``` pony
    let xs = [as I64: 1; 2].values()
    let ys = [as I64: 3; 4].values()

    Iter[I64].chain([xs; ys].values())
    ```

    `1 2 3 4`

    ``` pony
    new ref chain(
      outer_iterator: Iterator[Iterator[A] ref] ref)
    : Iter[A] ref^
    ```

    #### Parameters

    - outer_iterator: [Iterator](builtin-iterator)\[[Iterator](builtin-iterator)\[A\] ref\] ref

    #### Returns

    - [Iter](index)\[A\] ref^

    &nbsp;
- name: Iter.collect()
  id: itertools-iter#collectoptional-b-seqa-ref
  summary: Push each value from the iterator into the collection coll
  belongs_to: Iter
  description: |-
    ### collect\[optional B: [Seq](builtin-seq)\[A!\] ref\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L287)

    Push each value from the iterator into the collection `coll`.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .collect(Array[I64](3))
    ```

    `[1, 2, 3]`

    ``` pony
    fun ref collect[optional B: Seq[A!] ref](
      coll: B)
    : B^
    ```

    #### Parameters

    - coll: B

    #### Returns

    - B^

    &nbsp;
- name: Iter.count()
  id: itertools-iter#count
  summary: Return the number of values in the iterator
  belongs_to: Iter
  description: |-
    ### count

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L304)

    Return the number of values in the iterator.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .count()
    ```

    `3`

    ``` pony
    fun ref count()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Iter.create()
  id: itertools-iter#create
  summary: null
  belongs_to: Iter
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L9)

    ``` pony
    new ref create(
      iter: Iterator[A] ref)
    : Iter[A] ref^
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[A\] ref

    #### Returns

    - [Iter](index)\[A\] ref^
- name: Iter.cycle()
  id: itertools-iter#cycle
  summary: Repeatedly cycle through the values from the iterator
  belongs_to: Iter
  description: |-
    ### cycle

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L322)

    Repeatedly cycle through the values from the iterator.

    WARNING: The values returned by the original iterator are cached, so the input iterator should be finite.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .cycle()
    ```

    `1 2 3 1 2 3 1 2 3 ...`

    ``` pony
    fun ref cycle()
    : Iter[A!] ref^
    ```

    #### Returns

    - [Iter](index)\[A!\] ref^

    &nbsp;
- name: Iter.enum()
  id: itertools-iter#enumoptional-b-realb-val-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val
  summary: An iterator which yields the current iteration count as well as the next value from the iterator
  belongs_to: Iter
  description: "### enum\\[optional B: ([Real](builtin-real)\\[B\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L379)\n\nAn iterator which yields the current iteration count as well as the next value from the iterator.\n\n## Example\n\n``` pony\nIter[I64]([1; 2; 3].values())\n  .enum()\n```\n\n`(0, 1) (1, 2) (2, 3)`\n\n``` pony\nfun ref enum[optional B: (Real[B] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))]()\n: Iter[(B , A)] ref^\n```\n\n#### Returns\n\n- [Iter](index)\\[(B , A)\\] ref^\n\n&nbsp;"
- name: Iter.filter()
  id: itertools-iter#filter
  summary: Return an iterator that only returns items that match the predicate f
  belongs_to: Iter
  description: |-
    ### filter

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L402)

    Return an iterator that only returns items that match the predicate `f`.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3; 4; 5; 6].values())
      .filter({(x) => (x % 2) == 0 })
    ```

    `2 4 6`

    ``` pony
    fun ref filter(
      f: {(A!): Bool ?}[A] box)
    : Iter[A!] ref^
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box

    #### Returns

    - [Iter](index)\[A!\] ref^

    &nbsp;
- name: Iter.filter_map()
  id: itertools-iter#filter_mapb-b
  summary: Return an iterator which applies f to each element
  belongs_to: Iter
  description: |-
    ### filter_map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L446)

    Return an iterator which applies `f` to each element. If `None` is returned, then the iterator will try again by applying `f` to the next element. Otherwise, the value of type `B` is returned.

    ## Example

    ``` pony
    Iter[I64]([as I64: 1; -2; 4; 7; -5])
      .filter_map[USize](
        {(i: I64): (USize | None) => if i >= 0 then i.usize() end })
    ```

    `1 4 7`

    ``` pony

    ```pony
    fun ref filter_map[B: B](
      f: {(A!): (B^ | None) ?}[A, B] box)
    : Iter[B] ref^
    ```

    #### Parameters

    - f: {(A!): (B^ \| None) ?}\[A, B\] box

    #### Returns

    - [Iter](index)\[B\] ref^

    &nbsp;
- name: Iter.filter_map_stateful()
  id: itertools-iter#filter_map_statefulb-b
  summary: Allows stateful modification to the stream of elements from an iterator, similar to filter_map
  belongs_to: Iter
  description: |-
    ### filter_map_stateful\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L184)

    Allows stateful modification to the stream of elements from an iterator, similar to `filter_map`.

    ``` pony
    fun ref filter_map_stateful[B: B](
      f: {ref(A!): (B^ | None) ?}[A, B] ref)
    : Iter[B] ref^
    ```

    #### Parameters

    - f: {ref(A!): (B^ \| None) ?}\[A, B\] ref

    #### Returns

    - [Iter](index)\[B\] ref^

    &nbsp;
- name: Iter.filter_stateful()
  id: itertools-iter#filter_stateful
  summary: Allows filtering of elements based on a stateful adapter, similar to filter
  belongs_to: Iter
  description: |-
    ### filter_stateful

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L134)

    Allows filtering of elements based on a stateful adapter, similar to `filter`.

    ``` pony
    fun ref filter_stateful(
      f: {ref(A!): Bool ?}[A] ref)
    : Iter[A!] ref^
    ```

    #### Parameters

    - f: {ref(A!): Bool ?}\[A\] ref

    #### Returns

    - [Iter](index)\[A!\] ref^

    &nbsp;
- name: Iter.find()
  id: itertools-iter#find
  summary: Return the nth value in the iterator that satisfies the predicate f
  belongs_to: Iter
  description: |-
    ### find

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L416)

    Return the nth value in the iterator that satisfies the predicate `f`.

    ## Examples

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .find({(x) => (x % 2) == 0 })
    ```

    `2`

    ``` pony
    Iter[I64]([1; 2; 3; 4].values())
      .find({(x) => (x % 2) == 0 }, 2)
    ```

    `4`

    ``` pony
    fun ref find(
      f: {(A!): Bool ?}[A] box,
      n: USize val = 1)
    : A! ?
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box
    - n: [USize](builtin-usize) val = 1

    #### Returns

    - A! ?

    &nbsp;
- name: Iter.flat_map()
  id: itertools-iter#flat_mapb-b
  summary: Return an iterator over the values of the iterators produced from the application of the given function
  belongs_to: Iter
  description: |-
    ### flat_map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L463)

    Return an iterator over the values of the iterators produced from the application of the given function.

    ## Example

    ``` pony
    Iter[String](["alpha"; "beta"; "gamma"])
      .flat_map[U8]({(s: String): Iterator[U8] => s.values() })
    ```

    `a l p h a b e t a g a m m a`

    ``` pony
    fun ref flat_map[B: B](
      f: {(A!): Iterator[B] ?}[A, B] box)
    : Iter[B] ref^
    ```

    #### Parameters

    - f: {(A!): Iterator\[B\] ?}\[A, B\] box

    #### Returns

    - [Iter](index)\[B\] ref^

    &nbsp;
- name: Iter.fold()
  id: itertools-iter#foldb-b
  summary: Apply a function to every element, producing an accumulated value
  belongs_to: Iter
  description: |-
    ### fold\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L505)

    Apply a function to every element, producing an accumulated value.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .fold[I64](0, {(sum, x) => sum + x })
    ```

    `6`

    ``` pony
    fun ref fold[B: B](
      acc: B,
      f: {(B, A!): B^}[A, B] box)
    : B^
    ```

    #### Parameters

    - acc: B
    - f: {(B, A!): B^}\[A, B\] box

    #### Returns

    - B^

    &nbsp;
- name: Iter.fold_partial()
  id: itertools-iter#fold_partialb-b
  summary: A partial version of fold
  belongs_to: Iter
  description: |-
    ### fold_partial\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L523)

    A partial version of `fold`.

    ``` pony
    fun ref fold_partial[B: B](
      acc: B,
      f: {(B, A!): B^ ?}[A, B] box)
    : B^ ?
    ```

    #### Parameters

    - acc: B
    - f: {(B, A!): B^ ?}\[A, B\] box

    #### Returns

    - B^ ?

    &nbsp;
- name: Iter.has_next()
  id: itertools-iter#has_next
  summary: null
  belongs_to: Iter
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L12)

    ``` pony
    fun ref has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Iter.last()
  id: itertools-iter#last
  summary: Return the last value of the iterator
  belongs_to: Iter
  description: |-
    ### last

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L576)

    Return the last value of the iterator.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .last()
    ```

    `3`

    ``` pony
    fun ref last()
    : A ?
    ```

    #### Returns

    - A ?

    &nbsp;
- name: Iter.map()
  id: itertools-iter#mapb-b
  summary: Return an iterator where each item's value is the application of the given function to the value in the original iterator
  belongs_to: Iter
  description: |-
    ### map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L592)

    Return an iterator where each item's value is the application of the given function to the value in the original iterator.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .map[I64]({(x) => x * x })
    ```

    `1 4 9`

    ``` pony
    fun ref map[B: B](
      f: {(A!): B^ ?}[A, B] box)
    : Iter[B] ref^
    ```

    #### Parameters

    - f: {(A!): B^ ?}\[A, B\] box

    #### Returns

    - [Iter](index)\[B\] ref^

    &nbsp;
- name: Iter.map_stateful()
  id: itertools-iter#map_statefulb-b
  summary: Allows stateful transformation of each element from the iterator, similar to map
  belongs_to: Iter
  description: |-
    ### map_stateful\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L120)

    Allows stateful transformation of each element from the iterator, similar to `map`.

    ``` pony
    fun ref map_stateful[B: B](
      f: {ref(A!): B^ ?}[A, B] ref)
    : Iter[B] ref^
    ```

    #### Parameters

    - f: {ref(A!): B^ ?}\[A, B\] ref

    #### Returns

    - [Iter](index)\[B\] ref^

    &nbsp;
- name: Iter.maybe()
  id: itertools-iter#maybe
  summary: null
  belongs_to: Iter
  description: |-
    ### maybe

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L18)

    ``` pony
    new ref maybe(
      value: (A | None val))
    : Iter[A] ref^
    ```

    #### Parameters

    - value: (A \| [None](builtin-none) val)

    #### Returns

    - [Iter](index)\[A\] ref^

    &nbsp;
- name: Iter.next()
  id: itertools-iter#next
  summary: null
  belongs_to: Iter
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L15)

    ``` pony
    fun ref next()
    : A ?
    ```

    #### Returns

    - A ?

    &nbsp;
- name: Iter.next_or()
  id: itertools-iter#next_or
  summary: Return the next value, or the given default
  belongs_to: Iter
  description: |-
    ### next_or

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L102)

    Return the next value, or the given default.

    ## Example

    ``` pony
    let x: (U64 | None) = 42
    Iter[U64].maybe(x).next_or(0)
    ```

    `42`

    ``` pony
    fun ref next_or(
      default: A)
    : A
    ```

    #### Parameters

    - default: A

    #### Returns

    - A

    &nbsp;
- name: Iter.nth()
  id: itertools-iter#nth
  summary: Return the nth value of the iterator
  belongs_to: Iter
  description: |-
    ### nth

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L607)

    Return the nth value of the iterator.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .nth(2)
    ```

    `2`

    ``` pony
    fun ref nth(
      n: USize val)
    : A ?
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - A ?

    &nbsp;
- name: Iter.repeat_value()
  id: itertools-iter#repeat_value
  summary: Create an iterator that returns the given value forever
  belongs_to: Iter
  description: |-
    ### repeat_value

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L82)

    Create an iterator that returns the given value forever.

    ## Example

    ``` pony
    Iter[U32].repeat_value(7)
    ```

    `7 7 7 7 7 7 7 7 7 ...`

    ``` pony
    new ref repeat_value(
      value: A)
    : Iter[A] ref^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Iter](index)\[A\] ref^

    ## Public Functions
- name: Iter.run()
  id: itertools-iter#run
  summary: Iterate through the values of the iterator without a for loop
  belongs_to: Iter
  description: |-
    ### run

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L630)

    Iterate through the values of the iterator without a for loop. The function `on_error` will be called if the iterator's `has_next` method returns true but its `next` method throws an error.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .map[None]({(x) => env.out.print(x.string()) })
      .run()
    ```

    ``` pony
    1
    2
    3
    ```

    ``` pony
    fun ref run(
      on_error: {ref()}[A] ref = lambda)
    : None val
    ```

    #### Parameters

    - on_error: {ref()}\[A\] ref = lambda

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Iter.skip()
  id: itertools-iter#skip
  summary: Skip the first n values of the iterator
  belongs_to: Iter
  description: |-
    ### skip

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L657)

    Skip the first n values of the iterator.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3; 4; 5; 6].values())
      .skip(3)
    ```

    `4 5 6`

    ``` pony
    Iter[I64]([1; 2; 3].values())
      .skip(3)
      .has_next()
    ```

    `false`

    ``` pony
    fun ref skip(
      n: USize val)
    : Iter[A] ref^
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [Iter](index)\[A\] ref^

    &nbsp;
- name: Iter.skip_while()
  id: itertools-iter#skip_while
  summary: Skip values of the iterator while the predicate f returns true
  belongs_to: Iter
  description: |-
    ### skip_while

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L685)

    Skip values of the iterator while the predicate `f` returns true.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3; 4; 5; 6].values())
      .skip_while({(x) => x < 4 })
    ```

    `4 5 6`

    ``` pony
    fun ref skip_while(
      f: {(A!): Bool ?}[A] box)
    : Iter[A!] ref^
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box

    #### Returns

    - [Iter](index)\[A!\] ref^

    &nbsp;
- name: Iter.take()
  id: itertools-iter#take
  summary: Return an iterator for the first n elements
  belongs_to: Iter
  description: |-
    ### take

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L711)

    Return an iterator for the first n elements.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3; 4; 5; 6].values())
      .take(3)
    ```

    `1 2 3`

    ``` pony
    fun ref take(
      n: USize val)
    : Iter[A] ref^
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [Iter](index)\[A\] ref^

    &nbsp;
- name: Iter.take_while()
  id: itertools-iter#take_while
  summary: Return an iterator that returns values while the predicate f returns true
  belongs_to: Iter
  description: |-
    ### take_while

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L739)

    Return an iterator that returns values while the predicate `f` returns true. This iterator short-circuits the first time that `f` returns false or raises an error.

    ## Example

    ``` pony
    Iter[I64]([1; 2; 3; 4; 5; 6].values())
      .take_while({(x) => x < 4 })
    ```

    `1 2 3`

    ``` pony
    fun ref take_while(
      f: {(A!): Bool ?}[A] box)
    : Iter[A!] ref^
    ```

    #### Parameters

    - f: {(A!): Bool ?}\[A\] box

    #### Returns

    - [Iter](index)\[A!\] ref^

    &nbsp;
- name: Iter.zip()
  id: itertools-iter#zipb-b
  summary: Zip two iterators together so that each call to next() results in a tuple with the next value of the first iterator and the next value of the second iterator
  belongs_to: Iter
  description: |-
    ### zip\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L802)

    Zip two iterators together so that each call to next() results in a tuple with the next value of the first iterator and the next value of the second iterator. The number of items returned is the minimum of the number of items returned by the two iterators.

    ## Example

    ``` pony
    Iter[I64]([1; 2].values())
      .zip[I64]([3; 4].values())
    ```

    `(1, 3) (2, 4)`

    ``` pony
    fun ref zip[B: B](
      i2: Iterator[B] ref)
    : Iter[(A , B)] ref^
    ```

    #### Parameters

    - i2: [Iterator](builtin-iterator)\[B\] ref

    #### Returns

    - [Iter](index)\[(A , B)\] ref^

    &nbsp;
- name: Iter.zip2()
  id: itertools-iter#zip2b-b-c-c
  summary: Zip three iterators together so that each call to next() results in a tuple with the next value of the first iterator, the next value of the second iterator, and the value of the third iterator
  belongs_to: Iter
  description: |-
    ### zip2\[B: B, C: C\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L829)

    Zip three iterators together so that each call to next() results in a tuple with the next value of the first iterator, the next value of the second iterator, and the value of the third iterator. The number of items returned is the minimum of the number of items returned by the three iterators.

    ``` pony
    fun ref zip2[B: B, C: C](
      i2: Iterator[B] ref,
      i3: Iterator[C] ref)
    : Iter[(A , B , C)] ref^
    ```

    #### Parameters

    - i2: [Iterator](builtin-iterator)\[B\] ref
    - i3: [Iterator](builtin-iterator)\[C\] ref

    #### Returns

    - [Iter](index)\[(A , B , C)\] ref^

    &nbsp;
- name: Iter.zip3()
  id: itertools-iter#zip3b-b-c-c-d-d
  summary: Zip four iterators together so that each call to next() results in a tuple with the next value of each of the iterators
  belongs_to: Iter
  description: |-
    ### zip3\[B: B, C: C, D: D\]

    [\[Source\]](https://stdlib.ponylang.io/src/itertools/iter/#L850)

    Zip four iterators together so that each call to next() results in a tuple with the next value of each of the iterators. The number of items returned is the minimum of the number of items returned by the iterators.

    ``` pony
    fun ref zip3[B: B, C: C, D: D](
      i2: Iterator[B] ref,
      i3: Iterator[C] ref,
      i4: Iterator[D] ref)
    : Iter[(A , B , C , D)] ref^
    ```

    #### Parameters

    - i2: [Iterator](builtin-iterator)\[B\] ref
    - i3: [Iterator](builtin-iterator)\[C\] ref
    - i4: [Iterator](builtin-iterator)\[D\] ref

    #### Returns

    - [Iter](index)\[(A , B , C , D)\] ref^

    &nbsp;
- name: Iter.zip4()
  id: itertools-iter#zip4b-b-c-c-d-d-e-e
  summary: Zip five iterators together so that each call to next() results in a tuple with the next value of each of the iterators
  belongs_to: Iter
  description: "### zip4\\[B: B, C: C, D: D, E: E\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/itertools/iter/#L876)\n\nZip five iterators together so that each call to next() results in a tuple with the next value of each of the iterators. The number of items returned is the minimum of the number of items returned by the iterators.\n\n``` pony\nfun ref zip4[B: B, C: C, D: D, E: E](\n  i2: Iterator[B] ref,\n  i3: Iterator[C] ref,\n  i4: Iterator[D] ref,\n  i5: Iterator[E] ref)\n: Iter[(A , B , C , D , E)] ref^\n```\n\n#### Parameters\n\n- i2: [Iterator](builtin-iterator)\\[B\\] ref\n- i3: [Iterator](builtin-iterator)\\[C\\] ref\n- i4: [Iterator](builtin-iterator)\\[D\\] ref\n- i5: [Iterator](builtin-iterator)\\[E\\] ref\n\n#### Returns\n\n- [Iter](index)\\[(A , B , C , D , E)\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/itertools-Iter](https://stdlib.ponylang.io/itertools-Iter)"
- name: Iterator
  id: builtin-iterator
  summary: Iterators generate a series of values, one value at a time on each call to next()
  description: "# Iterator\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/iterator/#L1)\n\nIterators generate a series of values, one value at a time on each call to `next()`.\n\nAn Iterator is considered exhausted, once its `has_next()` method returns `false`. Thus every call to `next()` should be preceeded with a call to `has_next()` to check for exhaustiveness.\n\n## Usage\n\nGiven the rules for using Iterators mentioned above, basic usage of an iterator looks like this:\n\n``` pony\nwhile iterator.has_next() do\n  let elem = iterator.next()?\n  // do something with elem\nend\n```\n\nThe `For`-loop provides a more concise way of iteration:\n\n``` pony\nfor elem in iterator do\n  // do something with elem\nend\n```\n\nIteration using `While` is more flexible as it allows to continue iterating if a call to `next()` errors. The `For`-loop does not allow this.\n\n## Implementing Iterators\n\nIterator implementations need to adhere to the following rules to be considered well-behaved:\n\n- If the Iterator is exhausted, `has_next()` needs to return `false`.\n- Once `has_next()` returned `false` it is not allowed to switch back to `true` (Unless the Iterator supports rewinding)\n- `has_next()` does not change its returned value if `next()` has not been called. That means, that between two calls to `next()` any number of calls to `has_next()` need to return the same value. (Unless the Iterator supports rewinding)\n- A call to `next()` erroring does not necessarily denote exhaustiveness.\n\n### Example\n\n``` pony\n// Generates values from `from` to 0\nclass ref Countdown is Iterator[USize]\n  var _cur: USize\n  var _has_next: Bool = true\n\n  new ref create(from: USize) =>\n    _cur = from\n\n  fun ref has_next(): Bool =>\n    _has_next\n\n  fun ref next(): USize =>\n    let elem = _cur = _cur - 1\n    if elem == 0 then\n      _has_next = false\n    end\n    elem\n```\n\n``` pony\ninterface ref Iterator[A: A]\n```\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/iterator/#L69)\n\nReturns `true` if this Iterator is not yet exhausted. That means that a value returned from a subsequent call to `next()` is a valid part of this iterator.\n\nReturns `false` if this Iterator is exhausted.\n\nThe behavior of `next()` after this function returned `false` is undefined, it might throw an error or return values which are not part of this Iterator.\n\n``` pony\nfun ref has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/iterator/#L81)\n\nGenerate the next value.\n\nThis might error, which does not necessarily mean that the Iterator is exhausted.\n\n``` pony\nfun ref next()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Iterator](https://stdlib.ponylang.io/builtin-Iterator)"
- name: Iterator.Example()
  id: builtin-iterator#example
  summary: null
  belongs_to: Iterator
  description: |-
    ### Example

    ``` pony
    // Generates values from `from` to 0
    class ref Countdown is Iterator[USize]
      var _cur: USize
      var _has_next: Bool = true

      new ref create(from: USize) =>
        _cur = from

      fun ref has_next(): Bool =>
        _has_next

      fun ref next(): USize =>
        let elem = _cur = _cur - 1
        if elem == 0 then
          _has_next = false
        end
        elem
    ```

    ``` pony
    interface ref Iterator[A: A]
    ```

    ## Public Functions
- name: Iterator.has_next()
  id: builtin-iterator#has_next
  summary: Returns true if this Iterator is not yet exhausted
  belongs_to: Iterator
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/iterator/#L69)

    Returns `true` if this Iterator is not yet exhausted. That means that a value returned from a subsequent call to `next()` is a valid part of this iterator.

    Returns `false` if this Iterator is exhausted.

    The behavior of `next()` after this function returned `false` is undefined, it might throw an error or return values which are not part of this Iterator.

    ``` pony
    fun ref has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Iterator.next()
  id: builtin-iterator#next
  summary: Generate the next value
  belongs_to: Iterator
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/iterator/#L81)\n\nGenerate the next value.\n\nThis might error, which does not necessarily mean that the Iterator is exhausted.\n\n``` pony\nfun ref next()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Iterator](https://stdlib.ponylang.io/builtin-Iterator)"
- name: ITest
  id: ponytest-itest
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ITest\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L1)\n\n``` pony\ninterface ref ITest\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L2)\n\n``` pony\nfun box apply()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-ITest](https://stdlib.ponylang.io/ponytest-ITest)"
- name: ITest.apply()
  id: ponytest-itest#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ITest
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L2)\n\n``` pony\nfun box apply()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-ITest](https://stdlib.ponylang.io/ponytest-ITest)"
- name: JsonArray
  id: json-jsonarray
  summary: Create an array with zero elements, but space for len elements
  description: "# JsonArray\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L8)\n\n``` pony\nclass ref JsonArray\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L14)\n\nCreate an array with zero elements, but space for len elements.\n\n``` pony\nnew ref create(\n  len: USize val = 0)\n: JsonArray ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [JsonArray](index) ref^\n\n### from_array\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L20)\n\nCreate a Json array from an actual array.\n\n``` pony\nnew ref from_array(\n  data': Array[(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)] ref)\n: JsonArray ref^\n```\n\n#### Parameters\n\n- data': [Array](builtin-array)\\[([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\| [None](builtin-none) val \\| [String](builtin-string) val \\| [JsonArray](index) ref \\| [JsonObject](json-jsonobject) ref)\\] ref\n\n#### Returns\n\n- [JsonArray](index) ref^\n\n## Public fields\n\n### var data: [Array](builtin-array)\\[([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\| [None](builtin-none) val \\| [String](builtin-string) val \\| [JsonArray](index) ref \\| [JsonObject](json-jsonobject) ref)\\] ref\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L9)\n\nThe actual array containing JSON structures.\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L26)\n\nGenerate string representation of this array.\n\n``` pony\nfun box string(\n  indent: String val = \"\",\n  pretty_print: Bool val = false)\n: String val\n```\n\n#### Parameters\n\n- indent: [String](builtin-string) val = \"\"\n- pretty_print: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonArray](https://stdlib.ponylang.io/json-JsonArray)"
- name: JsonArray.create()
  id: json-jsonarray#create
  summary: Create an array with zero elements, but space for len elements
  belongs_to: JsonArray
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L14)

    Create an array with zero elements, but space for len elements.

    ``` pony
    new ref create(
      len: USize val = 0)
    : JsonArray ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 0

    #### Returns

    - [JsonArray](index) ref^
- name: JsonArray.from_array()
  id: json-jsonarray#from_array
  summary: Create a Json array from an actual array
  belongs_to: JsonArray
  description: |-
    ### from_array

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L20)

    Create a Json array from an actual array.

    ``` pony
    new ref from_array(
      data': Array[(F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)] ref)
    : JsonArray ref^
    ```

    #### Parameters

    - data': [Array](builtin-array)\[([F64](builtin-f64) val \| [I64](builtin-i64) val \| [Bool](builtin-bool) val \| [None](builtin-none) val \| [String](builtin-string) val \| [JsonArray](index) ref \| [JsonObject](json-jsonobject) ref)\] ref

    #### Returns

    - [JsonArray](index) ref^

    ## Public fields
- name: JsonArray.string()
  id: json-jsonarray#string
  summary: Generate string representation of this array
  belongs_to: JsonArray
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L26)\n\nGenerate string representation of this array.\n\n``` pony\nfun box string(\n  indent: String val = \"\",\n  pretty_print: Bool val = false)\n: String val\n```\n\n#### Parameters\n\n- indent: [String](builtin-string) val = \"\"\n- pretty_print: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonArray](https://stdlib.ponylang.io/json-JsonArray)"
- name: JsonArray.var()
  id: json-jsonarray#var-data-arrayf64-val-i64-val-bool-val-none-val-string-val-jsonarray-ref-jsonobject-ref-ref
  summary: The actual array containing JSON structures
  belongs_to: JsonArray
  description: |-
    ### var data: [Array](builtin-array)\[([F64](builtin-f64) val \| [I64](builtin-i64) val \| [Bool](builtin-bool) val \| [None](builtin-none) val \| [String](builtin-string) val \| [JsonArray](index) ref \| [JsonObject](json-jsonobject) ref)\] ref

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L9)

    The actual array containing JSON structures.

    ## Public Functions
- name: JsonDoc
  id: json-jsondoc
  summary: Top level JSON type containing an entire document
  description: "# JsonDoc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L4)\n\nTop level JSON type containing an entire document. A JSON document consists of exactly 1 value.\n\n``` pony\nclass ref JsonDoc\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L24)\n\nDefault constructor building a document containing a single null.\n\n``` pony\nnew ref create()\n: JsonDoc ref^\n```\n\n#### Returns\n\n- [JsonDoc](index) ref^\n\n## Public fields\n\n### var data: ([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\|\n\n``` pony\n[None](builtin-None.md) val | [String](builtin-String.md) val | [JsonArray](json-JsonArray.md) ref | \n[JsonObject](json-JsonObject.md) ref)\n```\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L9)\n\nThe parsed JSON structure.\n\nWill be a `None` if `parse(source: String)` has not been called yet.\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L30)\n\nGenerate string representation of this document.\n\n``` pony\nfun box string(\n  indent: String val = \"\",\n  pretty_print: Bool val = false)\n: String val\n```\n\n#### Parameters\n\n- indent: [String](builtin-string) val = \"\"\n- pretty_print: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) val\n\n### parse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L40)\n\nParse the given string as a JSON file, building a document. Raise error on invalid JSON in given source.\n\n``` pony\nfun ref parse(\n  source: String val)\n: None val ?\n```\n\n#### Parameters\n\n- source: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### parse_report\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L62)\n\nGive details of the error that occurred last time we attempted to parse. If parse was successful returns (0, \"\").\n\n``` pony\nfun box parse_report()\n: (USize val , String val)\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , [String](builtin-string) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonDoc](https://stdlib.ponylang.io/json-JsonDoc)"
- name: JsonDoc.create()
  id: json-jsondoc#create
  summary: Default constructor building a document containing a single null
  belongs_to: JsonDoc
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_doc/#L24)

    Default constructor building a document containing a single null.

    ``` pony
    new ref create()
    : JsonDoc ref^
    ```

    #### Returns

    - [JsonDoc](index) ref^

    ## Public fields
- name: JsonDoc.parse()
  id: json-jsondoc#parse
  summary: Parse the given string as a JSON file, building a document
  belongs_to: JsonDoc
  description: |-
    ### parse

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_doc/#L40)

    Parse the given string as a JSON file, building a document. Raise error on invalid JSON in given source.

    ``` pony
    fun ref parse(
      source: String val)
    : None val ?
    ```

    #### Parameters

    - source: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: JsonDoc.parse_report()
  id: json-jsondoc#parse_report
  summary: Give details of the error that occurred last time we attempted to parse
  belongs_to: JsonDoc
  description: "### parse_report\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L62)\n\nGive details of the error that occurred last time we attempted to parse. If parse was successful returns (0, \"\").\n\n``` pony\nfun box parse_report()\n: (USize val , String val)\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , [String](builtin-string) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonDoc](https://stdlib.ponylang.io/json-JsonDoc)"
- name: JsonDoc.string()
  id: json-jsondoc#string
  summary: Generate string representation of this document
  belongs_to: JsonDoc
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_doc/#L30)

    Generate string representation of this document.

    ``` pony
    fun box string(
      indent: String val = "",
      pretty_print: Bool val = false)
    : String val
    ```

    #### Parameters

    - indent: [String](builtin-string) val = ""
    - pretty_print: [Bool](builtin-bool) val = false

    #### Returns

    - [String](builtin-string) val
- name: JsonDoc.var()
  id: json-jsondoc#var-data-f64-val-i64-val-bool-val
  summary: The parsed JSON structure
  belongs_to: JsonDoc
  description: "### var data: ([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\|\n\n``` pony\n[None](builtin-None.md) val | [String](builtin-String.md) val | [JsonArray](json-JsonArray.md) ref | \n[JsonObject](json-JsonObject.md) ref)\n```\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_doc/#L9)\n\nThe parsed JSON structure.\n\nWill be a `None` if `parse(source: String)` has not been called yet.\n\n## Public Functions"
- name: JsonObject
  id: json-jsonobject
  summary: Create a map with space for prealloc elements without triggering a resize
  description: "# JsonObject\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L77)\n\n``` pony\nclass ref JsonObject\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L84)\n\nCreate a map with space for prealloc elements without triggering a resize. Defaults to 6.\n\n``` pony\nnew ref create(\n  prealloc: USize val = 6)\n: JsonObject ref^\n```\n\n#### Parameters\n\n- prealloc: [USize](builtin-usize) val = 6\n\n#### Returns\n\n- [JsonObject](index) ref^\n\n### from_map\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L91)\n\nCreate a Json object from a map.\n\n``` pony\nnew ref from_map(\n  data': HashMap[String val, (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref), HashEq[String val] val] ref)\n: JsonObject ref^\n```\n\n#### Parameters\n\n- data': [HashMap](collections-hashmap)\\[[String](builtin-string) val, ([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\| [None](builtin-none) val \\| [String](builtin-string) val \\| [JsonArray](json-jsonarray) ref \\| [JsonObject](index) ref), [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref\n\n#### Returns\n\n- [JsonObject](index) ref^\n\n## Public fields\n\n### var data: [HashMap](collections-hashmap)\\[[String](builtin-string) val, ([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\| [None](builtin-none) val \\| [String](builtin-string) val \\| [JsonArray](json-jsonarray) ref \\| [JsonObject](index) ref), [HashEq](collections-hasheq)\\[[String](builtin-string) val\\] val\\] ref\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L78)\n\nThe actual JSON object structure, mapping `String` keys to other JSON structures.\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L97)\n\nGenerate string representation of this object.\n\n``` pony\nfun box string(\n  indent: String val = \"\",\n  pretty_print: Bool val = false)\n: String val\n```\n\n#### Parameters\n\n- indent: [String](builtin-string) val = \"\"\n- pretty_print: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonObject](https://stdlib.ponylang.io/json-JsonObject)"
- name: JsonObject.create()
  id: json-jsonobject#create
  summary: Create a map with space for prealloc elements without triggering a resize
  belongs_to: JsonObject
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L84)

    Create a map with space for prealloc elements without triggering a resize. Defaults to 6.

    ``` pony
    new ref create(
      prealloc: USize val = 6)
    : JsonObject ref^
    ```

    #### Parameters

    - prealloc: [USize](builtin-usize) val = 6

    #### Returns

    - [JsonObject](index) ref^
- name: JsonObject.from_map()
  id: json-jsonobject#from_map
  summary: Create a Json object from a map
  belongs_to: JsonObject
  description: |-
    ### from_map

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L91)

    Create a Json object from a map.

    ``` pony
    new ref from_map(
      data': HashMap[String val, (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref), HashEq[String val] val] ref)
    : JsonObject ref^
    ```

    #### Parameters

    - data': [HashMap](collections-hashmap)\[[String](builtin-string) val, ([F64](builtin-f64) val \| [I64](builtin-i64) val \| [Bool](builtin-bool) val \| [None](builtin-none) val \| [String](builtin-string) val \| [JsonArray](json-jsonarray) ref \| [JsonObject](index) ref), [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] ref

    #### Returns

    - [JsonObject](index) ref^

    ## Public fields
- name: JsonObject.string()
  id: json-jsonobject#string
  summary: Generate string representation of this object
  belongs_to: JsonObject
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L97)\n\nGenerate string representation of this object.\n\n``` pony\nfun box string(\n  indent: String val = \"\",\n  pretty_print: Bool val = false)\n: String val\n```\n\n#### Parameters\n\n- indent: [String](builtin-string) val = \"\"\n- pretty_print: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonObject](https://stdlib.ponylang.io/json-JsonObject)"
- name: JsonObject.var()
  id: json-jsonobject#var-data-hashmapstring-val-f64-val-i64-val-bool-val-none-val-string-val-jsonarray-ref-jsonobject-ref-hasheqstring-val-val-ref
  summary: The actual JSON object structure, mapping String keys to other JSON structures
  belongs_to: JsonObject
  description: |-
    ### var data: [HashMap](collections-hashmap)\[[String](builtin-string) val, ([F64](builtin-f64) val \| [I64](builtin-i64) val \| [Bool](builtin-bool) val \| [None](builtin-none) val \| [String](builtin-string) val \| [JsonArray](json-jsonarray) ref \| [JsonObject](index) ref), [HashEq](collections-hasheq)\[[String](builtin-string) val\] val\] ref

    [\[Source\]](https://stdlib.ponylang.io/src/json/json_type/#L78)

    The actual JSON object structure, mapping `String` keys to other JSON structures.

    ## Public Functions
- name: JsonType
  id: json-jsontype
  summary: All JSON data types
  description: "# JsonType\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/json/json_type/#L3)\n\nAll JSON data types.\n\n``` pony\ntype JsonType is\n  (F64 val | I64 val | Bool val | None val | String val | JsonArray ref | JsonObject ref)\n```\n\n#### Type Alias For\n\n- ([F64](builtin-f64) val \\| [I64](builtin-i64) val \\| [Bool](builtin-bool) val \\| [None](builtin-none) val \\| [String](builtin-string) val \\| [JsonArray](json-jsonarray) ref \\| [JsonObject](json-jsonobject) ref)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/json-JsonType](https://stdlib.ponylang.io/json-JsonType)"
- name: KillError
  id: process-killerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# KillError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L53)\n\n``` pony\nprimitive val KillError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L53)\n\n``` pony\nnew val create()\n: KillError val^\n```\n\n#### Returns\n\n- [KillError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L54)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L54)\n\n``` pony\nfun box eq(\n  that: KillError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [KillError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L54)\n\n``` pony\nfun box ne(\n  that: KillError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [KillError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-KillError](https://stdlib.ponylang.io/process-KillError)"
- name: KillError.create()
  id: process-killerror#create
  summary: null
  belongs_to: KillError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L53)

    ``` pony
    new val create()
    : KillError val^
    ```

    #### Returns

    - [KillError](index) val^

    ## Public Functions
- name: KillError.eq()
  id: process-killerror#eq
  summary: null
  belongs_to: KillError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L54)

    ``` pony
    fun box eq(
      that: KillError val)
    : Bool val
    ```

    #### Parameters

    - that: [KillError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: KillError.ne()
  id: process-killerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: KillError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L54)\n\n``` pony\nfun box ne(\n  that: KillError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [KillError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-KillError](https://stdlib.ponylang.io/process-KillError)"
- name: KillError.string()
  id: process-killerror#string
  summary: null
  belongs_to: KillError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L54)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Less
  id: builtin-less
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Less\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L1)\n\n``` pony\nprimitive val Less is\n  Equatable[(Less val | Equal val | Greater val)] ref\n```\n\n#### Implements\n\n- [Equatable](builtin-equatable)\\[([Less](index) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L1)\n\n``` pony\nnew val create()\n: Less val^\n```\n\n#### Returns\n\n- [Less](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L2)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)\n\n``` pony\nfun box eq(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](index) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](index) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Less](https://stdlib.ponylang.io/builtin-Less)"
- name: Less.create()
  id: builtin-less#create
  summary: null
  belongs_to: Less
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L1)

    ``` pony
    new val create()
    : Less val^
    ```

    #### Returns

    - [Less](index) val^

    ## Public Functions
- name: Less.eq()
  id: builtin-less#eq
  summary: null
  belongs_to: Less
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L19)

    ``` pony
    fun box eq(
      that: (Less val | Equal val | Greater val))
    : Bool val
    ```

    #### Parameters

    - that: ([Less](index) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Less.ne()
  id: builtin-less#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Less
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Less val | Equal val | Greater val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Less](index) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Less](https://stdlib.ponylang.io/builtin-Less)"
- name: Less.string()
  id: builtin-less#string
  summary: null
  belongs_to: Less
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/compare/#L2)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: List
  id: collections-list
  summary: A doubly linked list
  description: "# List\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L1)\n\nA doubly linked list.\n\n(The following is paraphrased from [Wikipedia](https://en.wikipedia.org/wiki/Doubly_linked_list).)\n\nA doubly linked list is a linked data structure that consists of a set of sequentially linked records called nodes. (Implemented in Ponylang via the collections.ListNode class.) Each node contains four fields: two link fields (references to the previous and to the next node in the sequence of nodes), one data field, and the reference to the in which it resides. A doubly linked list can be conceptualized as two singly linked lists formed from the same data items, but in opposite sequential orders.\n\nAs you would expect. functions are provided to perform all the common list operations such as creation, traversal, node addition and removal, iteration, mapping, filtering, etc.\n\n## Example program\n\nThere are a *lot* of functions in List. The following code picks out a few common examples.\n\nIt outputs:\n\n``` pony\nA new empty list has 0 nodes.\nAdding one node to our empty list means it now has a size of 1.\nThe first (index 0) node has the value: A single String\nA list created by appending our second single-node list onto our first has size: 2\nThe List nodes of our first list are now:\n  A single String\n  Another String\nAppend *moves* the nodes from the second list so that now has 0 nodes.\nA list created from an array of three strings has size: 3\n  First\n  Second\n  Third\nMapping over our three-node list produces a new list of size: 3\nEach node-value in the resulting list is now far more exciting:\n  First BOOM!\n  Second BOOM!\n  Third BOOM!\nFiltering our three-node list produces a new list of size: 2\n  Second BOOM!\n  Third BOOM!\nThe size of our first partitioned list (matches predicate): 1\nThe size of our second partitioned list (doesn't match predicate): 1\nOur matching partition elements are:\n  Second BOOM!\n```\n\n``` pony\n  use \"collections\"\n\n  actor Main\n    new create(env:Env) =>\n\n      // Create a new empty List of type String\n      let my_list = List[String]()\n\n      env.out.print(\"A new empty list has \" + my_list.size().string() + \" nodes.\") // 0\n\n      // Push a String literal onto our empty List\n      my_list.push(\"A single String\")\n      env.out.print(\"Adding one node to our empty list means it now has a size of \"\n                    + my_list.size().string() + \".\") // 1\n\n      // Get the first element of our List\n      try env.out.print(\"The first (index 0) node has the value: \"\n                        + my_list.index(0)?()?.string()) end // A single String\n\n      // Create a second List from a single String literal\n      let my_second_list = List[String].unit(\"Another String\")\n\n      // Append the second List to the first\n      my_list.append_list(my_second_list)\n      env.out.print(\"A list created by appending our second single-node list onto our first has size: \"\n                    + my_list.size().string()) // 2\n      env.out.print(\"The List nodes of our first list are now:\")\n      for n in my_list.values() do\n        env.out.print(\"\\t\" + n.string())\n      end\n      // NOTE: this _moves_ the elements so second_list consequently ends up empty\n      env.out.print(\"Append *moves* the nodes from the second list so that now has \"\n                    + my_second_list.size().string() + \" nodes.\") // 0\n\n      // Create a third List from a Seq(ence)\n      // (In this case a literal array of Strings)\n      let my_third_list = List[String].from([\"First\"; \"Second\"; \"Third\"])\n      env.out.print(\"A list created from an array of three strings has size: \"\n                    + my_third_list.size().string()) // 3\n      for n in my_third_list.values() do\n        env.out.print(\"\\t\" + n.string())\n      end\n\n      // Map over the third List, concatenating some \"BOOM!'s\" into a new List\n      let new_list = my_third_list.map[String]({ (n) => n + \" BOOM!\" })\n      env.out.print(\"Mapping over our three-node list produces a new list of size: \"\n                    + new_list.size().string()) // 3\n      env.out.print(\"Each node-value in the resulting list is now far more exciting:\")\n      for n in new_list.values() do\n        env.out.print(\"\\t\" + n.string())\n      end\n\n      // Filter the new list to extract 2 elements\n      let filtered_list = new_list.filter({ (n) => n.string().contains(\"d BOOM!\") })\n      env.out.print(\"Filtering our three-node list produces a new list of size: \"\n                        + filtered_list.size().string()) // 2\n      for n in filtered_list.values() do\n        env.out.print(\"\\t\" + n.string()) // Second BOOM!\\nThird BOOM!\n      end\n\n      // Partition the filtered list\n      let partitioned_lists = filtered_list.partition({ (n) => n.string().contains(\"Second\") })\n      env.out.print(\"The size of our first partitioned list (matches predicate): \" + partitioned_lists._1.size().string())        // 1\n      env.out.print(\"The size of our second partitioned list (doesn't match predicate): \" + partitioned_lists._2.size().string())  // 1\n      env.out.print(\"Our matching partition elements are:\")\n      for n in partitioned_lists._1.values() do\n        env.out.print(\"\\t\" + n.string()) // Second BOOM!\n      end\n```\n\n``` pony\nclass ref List[A: A] is\n  Seq[A] ref\n```\n\n#### Implements\n\n- [Seq](builtin-seq)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L123)\n\nDo nothing, but be compatible with Seq.\n\n``` pony\nnew ref create(\n  len: USize val = 0)\n: List[A] ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [List](index)\\[A\\] ref^\n\n### unit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L129)\n\nBuilds a new list from an element.\n\n``` pony\nnew ref unit(\n  a: A)\n: List[A] ref^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [List](index)\\[A\\] ref^\n\n### from\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L135)\n\nBuilds a new list from the sequence passed in.\n\n``` pony\nnew ref from(\n  seq: Array[A^] ref)\n: List[A] ref^\n```\n\n#### Parameters\n\n- seq: [Array](builtin-array)\\[A^\\] ref\n\n#### Returns\n\n- [List](index)\\[A\\] ref^\n\n## Public Functions\n\n### reserve\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L143)\n\nDo nothing, but be compatible with Seq.\n\n``` pony\nfun ref reserve(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L149)\n\nReturns the number of items in the list.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L155)\n\nGet the i-th element, raising an error if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val = 0)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- this-\\>A ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L161)\n\nChange the i-th element, raising an error if the index is out of bounds. Returns the previous value, which may be None if the node has been popped but left on the list.\n\n``` pony\nfun ref update(\n  i: USize val,\n  value: A)\n: A^ ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: A\n\n#### Returns\n\n- A^ ?\n\n### index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L169)\n\nGets the i-th node, raising an error if the index is out of bounds.\n\n``` pony\nfun box index(\n  i: USize val)\n: this->ListNode[A] ref ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>[ListNode](collections-listnode)\\[A\\] ref ?\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L187)\n\nRemove the i-th node, raising an error if the index is out of bounds. The removed node is returned.\n\n``` pony\nfun ref remove(\n  i: USize val)\n: ListNode[A] ref ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- [ListNode](collections-listnode)\\[A\\] ref ?\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L194)\n\nEmpties the list.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### head\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L202)\n\nGet the head of the list.\n\n``` pony\nfun box head()\n: this->ListNode[A] ref ?\n```\n\n#### Returns\n\n- this-\\>[ListNode](collections-listnode)\\[A\\] ref ?\n\n### tail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L208)\n\nGet the tail of the list.\n\n``` pony\nfun box tail()\n: this->ListNode[A] ref ?\n```\n\n#### Returns\n\n- this-\\>[ListNode](collections-listnode)\\[A\\] ref ?\n\n### prepend_node\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L214)\n\nAdds a node to the head of the list.\n\n``` pony\nfun ref prepend_node(\n  node: ListNode[A] ref)\n: None val\n```\n\n#### Parameters\n\n- node: [ListNode](collections-listnode)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### append_node\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L225)\n\nAdds a node to the tail of the list.\n\n``` pony\nfun ref append_node(\n  node: ListNode[A] ref)\n: None val\n```\n\n#### Parameters\n\n- node: [ListNode](collections-listnode)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### append_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L236)\n\nRemove all nodes from that and append them to this.\n\n``` pony\nfun ref append_list(\n  that: List[A] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [List](index)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### prepend_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L246)\n\nRemove all nodes from that and prepend them to this.\n\n``` pony\nfun ref prepend_list(\n  that: List[A] ref)\n: None val\n```\n\n#### Parameters\n\n- that: [List](index)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L256)\n\nAdds a value to the tail of the list.\n\n``` pony\nfun ref push(\n  a: A)\n: None val\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L262)\n\nRemoves a value from the tail of the list.\n\n``` pony\nfun ref pop()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### unshift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L268)\n\nAdds a value to the head of the list.\n\n``` pony\nfun ref unshift(\n  a: A)\n: None val\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### shift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L274)\n\nRemoves a value from the head of the list.\n\n``` pony\nfun ref shift()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L280)\n\nAppend len elements from a sequence, starting from the given offset.\n\n``` pony\nfun ref append(\n  seq: (ReadSeq[A] box & ReadElement[A^] box),\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- seq: ([ReadSeq](builtin-readseq)\\[A\\] box & [ReadElement](builtin-readelement)\\[A^\\] box)\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L305)\n\nAdd len iterated elements to the end of the list, starting from the given offset.\n\n``` pony\nfun ref concat(\n  iter: Iterator[A^] ref,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[A^\\] ref\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### truncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L328)\n\nTruncate the list to the given length, discarding excess elements. If the list is already smaller than len, do nothing.\n\n``` pony\nfun ref truncate(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L339)\n\nClone the list.\n\n``` pony\nfun box clone()\n: List[this->A!] ref^\n```\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref^\n\n### map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L350)\n\nBuilds a new list by applying a function to every member of the list.\n\n``` pony\nfun box map[B: B](\n  f: {(this->A!): B^}[A, B] box)\n: List[B] ref^\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): B^}\\[A, B\\] box\n\n#### Returns\n\n- [List](index)\\[B\\] ref^\n\n### flat_map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L377)\n\nBuilds a new list by applying a function to every member of the list and using the elements of the resulting lists.\n\n``` pony\nfun box flat_map[B: B](\n  f: {(this->A!): List[B]}[A, B] box)\n: List[B] ref^\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): List\\[B\\]}\\[A, B\\] box\n\n#### Returns\n\n- [List](index)\\[B\\] ref^\n\n### filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L404)\n\nBuilds a new list with those elements that satisfy a provided predicate.\n\n``` pony\nfun box filter(\n  f: {(this->A!): Bool}[A] box)\n: List[this->A!] ref^\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): Bool}\\[A\\] box\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref^\n\n### fold\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L433)\n\nFolds the elements of the list using the supplied function.\n\n``` pony\nfun box fold[B: B](\n  f: {(B!, this->A!): B^}[A, B] box,\n  acc: B)\n: B\n```\n\n#### Parameters\n\n- f: {(B!, this-\\>A!): B^}\\[A, B\\] box\n- acc: B\n\n#### Returns\n\n- B\n\n### every\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L463)\n\nReturns true if every element satisfies the provided predicate, false otherwise.\n\n``` pony\nfun box every(\n  f: {(this->A!): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### exists\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L488)\n\nReturns true if at least one element satisfies the provided predicate, false otherwise.\n\n``` pony\nfun box exists(\n  f: {(this->A!): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### partition\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L513)\n\nBuilds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not.\n\n``` pony\nfun box partition(\n  f: {(this->A!): Bool}[A] box)\n: (List[this->A!] ref^ , List[this->A!] ref^)\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): Bool}\\[A\\] box\n\n#### Returns\n\n- ([List](index)\\[this-\\>A!\\] ref^ , [List](index)\\[this-\\>A!\\] ref^)\n\n### drop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L529)\n\nBuilds a list by dropping the first n elements.\n\n``` pony\nfun box drop(\n  n: USize val)\n: List[this->A!] ref^\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref^\n\n### take\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L547)\n\nBuilds a list of the first n elements.\n\n``` pony\nfun box take(\n  n: USize val)\n: List[this->A!] ref\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref\n\n### take_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L565)\n\nBuilds a list of elements satisfying the provided predicate until one does not.\n\n``` pony\nfun box take_while(\n  f: {(this->A!): Bool}[A] box)\n: List[this->A!] ref^\n```\n\n#### Parameters\n\n- f: {(this-\\>A!): Bool}\\[A\\] box\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref^\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L585)\n\nBuilds a new list by reversing the elements in the list.\n\n``` pony\nfun box reverse()\n: List[this->A!] ref^\n```\n\n#### Returns\n\n- [List](index)\\[this-\\>A!\\] ref^\n\n### contains\\[optional B: (A & [HasEq](builtin-haseq)\\[A!\\] \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L607)\n\nReturns true if the list contains the provided element, false otherwise.\n\n``` pony\nfun box contains[optional B: (A & HasEq[A!] #read)](\n  a: box->B)\n: Bool val\n```\n\n#### Parameters\n\n- a: box-\\>B\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### nodes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L635)\n\nReturn an iterator on the nodes in the list.\n\n``` pony\nfun box nodes()\n: ListNodes[A, this->ListNode[A] ref] ref^\n```\n\n#### Returns\n\n- [ListNodes](collections-listnodes)\\[A, this-\\>[ListNode](collections-listnode)\\[A\\] ref\\] ref^\n\n### rnodes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L641)\n\nReturn an iterator on the nodes in the list.\n\n``` pony\nfun box rnodes()\n: ListNodes[A, this->ListNode[A] ref] ref^\n```\n\n#### Returns\n\n- [ListNodes](collections-listnodes)\\[A, this-\\>[ListNode](collections-listnode)\\[A\\] ref\\] ref^\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L647)\n\nReturn an iterator on the values in the list.\n\n``` pony\nfun box values()\n: ListValues[A, this->ListNode[A] ref] ref^\n```\n\n#### Returns\n\n- [ListValues](collections-listvalues)\\[A, this-\\>[ListNode](collections-listnode)\\[A\\] ref\\] ref^\n\n### rvalues\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L653)\n\nReturn an iterator on the values in the list.\n\n``` pony\nfun box rvalues()\n: ListValues[A, this->ListNode[A] ref] ref^\n```\n\n#### Returns\n\n- [ListValues](collections-listvalues)\\[A, this-\\>[ListNode](collections-listnode)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-List](https://stdlib.ponylang.io/collections-List)"
- name: List
  id: collections-persistent-list
  summary: A persistent list with functional transformations
  description: "# List\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L1)\n\nA persistent list with functional transformations.\n\n## Usage\n\n``` pony\nuse \"collections/persistent\"\n\nactor Main\n  new create(env: Env) =>\n    try\n      let l1 = Lists[U32]([2; 4; 6; 8]) // List(2, 4, 6, 8)\n\n      let empty = Lists[U32].empty() // List()\n\n      // prepend() returns a new List, leaving the\n      // old list unchanged\n      let l2 = empty.prepend(3) // List(3)\n      let l3 = l2.prepend(2) // List(2, 3)\n      let l4 = l3.prepend(1) // List(1, 2, 3)\n      let l4_head = l4.head() // 1\n      let l4_tail = l4.tail() // List(2, 3)\n\n      l4_head == 1\n      Lists[U32].eq(l4, Lists[U32]([1; 2; 3]))?\n      Lists[U32].eq(l4_tail, Lists[U32]([2; 3]))?\n\n      let doubled = l4.map[U32]({(x) => x * 2 })\n\n      Lists[U32].eq(doubled, Lists[U32]([2; 4; 6]))?\n    end\n```\n\n``` pony\ntype List[A: A] is\n  (Cons[A] val | Nil[A] val)\n```\n\n#### Type Alias For\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-List](https://stdlib.ponylang.io/collections-persistent-List)"
- name: List.append()
  id: collections-list#append
  summary: Append len elements from a sequence, starting from the given offset
  belongs_to: List
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L280)

    Append len elements from a sequence, starting from the given offset.

    ``` pony
    fun ref append(
      seq: (ReadSeq[A] box & ReadElement[A^] box),
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - seq: ([ReadSeq](builtin-readseq)\[A\] box & [ReadElement](builtin-readelement)\[A^\] box)
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.append_list()
  id: collections-list#append_list
  summary: Remove all nodes from that and append them to this
  belongs_to: List
  description: |-
    ### append_list

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L236)

    Remove all nodes from that and append them to this.

    ``` pony
    fun ref append_list(
      that: List[A] ref)
    : None val
    ```

    #### Parameters

    - that: [List](index)\[A\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.append_node()
  id: collections-list#append_node
  summary: Adds a node to the tail of the list
  belongs_to: List
  description: |-
    ### append_node

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L225)

    Adds a node to the tail of the list.

    ``` pony
    fun ref append_node(
      node: ListNode[A] ref)
    : None val
    ```

    #### Parameters

    - node: [ListNode](collections-listnode)\[A\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.apply()
  id: collections-list#apply
  summary: Get the i-th element, raising an error if the index is out of bounds
  belongs_to: List
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L155)

    Get the i-th element, raising an error if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val = 0)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val = 0

    #### Returns

    - this-\>A ?

    &nbsp;
- name: List.clear()
  id: collections-list#clear
  summary: Empties the list
  belongs_to: List
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L194)

    Empties the list.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.clone()
  id: collections-list#clone
  summary: Clone the list
  belongs_to: List
  description: |-
    ### clone

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L339)

    Clone the list.

    ``` pony
    fun box clone()
    : List[this->A!] ref^
    ```

    #### Returns

    - [List](index)\[this-\>A!\] ref^

    &nbsp;
- name: List.concat()
  id: collections-list#concat
  summary: Add len iterated elements to the end of the list, starting from the given offset
  belongs_to: List
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L305)

    Add len iterated elements to the end of the list, starting from the given offset.

    ``` pony
    fun ref concat(
      iter: Iterator[A^] ref,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[A^\] ref
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.contains()
  id: collections-list#containsoptional-b-a-haseqa-read
  summary: Returns true if the list contains the provided element, false otherwise
  belongs_to: List
  description: |-
    ### contains\[optional B: (A & [HasEq](builtin-haseq)\[A!\] \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L607)

    Returns true if the list contains the provided element, false otherwise.

    ``` pony
    fun box contains[optional B: (A & HasEq[A!] #read)](
      a: box->B)
    : Bool val
    ```

    #### Parameters

    - a: box-\>B

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: List.create()
  id: collections-list#create
  summary: Do nothing, but be compatible with Seq
  belongs_to: List
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L123)

    Do nothing, but be compatible with Seq.

    ``` pony
    new ref create(
      len: USize val = 0)
    : List[A] ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 0

    #### Returns

    - [List](index)\[A\] ref^
- name: List.drop()
  id: collections-list#drop
  summary: Builds a list by dropping the first n elements
  belongs_to: List
  description: |-
    ### drop

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L529)

    Builds a list by dropping the first n elements.

    ``` pony
    fun box drop(
      n: USize val)
    : List[this->A!] ref^
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [List](index)\[this-\>A!\] ref^

    &nbsp;
- name: List.every()
  id: collections-list#every
  summary: Returns true if every element satisfies the provided predicate, false otherwise
  belongs_to: List
  description: |-
    ### every

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L463)

    Returns true if every element satisfies the provided predicate, false otherwise.

    ``` pony
    fun box every(
      f: {(this->A!): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(this-\>A!): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: List.exists()
  id: collections-list#exists
  summary: Returns true if at least one element satisfies the provided predicate, false otherwise
  belongs_to: List
  description: |-
    ### exists

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L488)

    Returns true if at least one element satisfies the provided predicate, false otherwise.

    ``` pony
    fun box exists(
      f: {(this->A!): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(this-\>A!): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: List.filter()
  id: collections-list#filter
  summary: Builds a new list with those elements that satisfy a provided predicate
  belongs_to: List
  description: |-
    ### filter

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L404)

    Builds a new list with those elements that satisfy a provided predicate.

    ``` pony
    fun box filter(
      f: {(this->A!): Bool}[A] box)
    : List[this->A!] ref^
    ```

    #### Parameters

    - f: {(this-\>A!): Bool}\[A\] box

    #### Returns

    - [List](index)\[this-\>A!\] ref^

    &nbsp;
- name: List.flat_map()
  id: collections-list#flat_mapb-b
  summary: Builds a new list by applying a function to every member of the list and using the elements of the resulting lists
  belongs_to: List
  description: |-
    ### flat_map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L377)

    Builds a new list by applying a function to every member of the list and using the elements of the resulting lists.

    ``` pony
    fun box flat_map[B: B](
      f: {(this->A!): List[B]}[A, B] box)
    : List[B] ref^
    ```

    #### Parameters

    - f: {(this-\>A!): List\[B\]}\[A, B\] box

    #### Returns

    - [List](index)\[B\] ref^

    &nbsp;
- name: List.fold()
  id: collections-list#foldb-b
  summary: Folds the elements of the list using the supplied function
  belongs_to: List
  description: |-
    ### fold\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L433)

    Folds the elements of the list using the supplied function.

    ``` pony
    fun box fold[B: B](
      f: {(B!, this->A!): B^}[A, B] box,
      acc: B)
    : B
    ```

    #### Parameters

    - f: {(B!, this-\>A!): B^}\[A, B\] box
    - acc: B

    #### Returns

    - B

    &nbsp;
- name: List.from()
  id: collections-list#from
  summary: Builds a new list from the sequence passed in
  belongs_to: List
  description: |-
    ### from

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L135)

    Builds a new list from the sequence passed in.

    ``` pony
    new ref from(
      seq: Array[A^] ref)
    : List[A] ref^
    ```

    #### Parameters

    - seq: [Array](builtin-array)\[A^\] ref

    #### Returns

    - [List](index)\[A\] ref^

    ## Public Functions
- name: List.head()
  id: collections-list#head
  summary: Get the head of the list
  belongs_to: List
  description: |-
    ### head

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L202)

    Get the head of the list.

    ``` pony
    fun box head()
    : this->ListNode[A] ref ?
    ```

    #### Returns

    - this-\>[ListNode](collections-listnode)\[A\] ref ?

    &nbsp;
- name: List.index()
  id: collections-list#index
  summary: Gets the i-th node, raising an error if the index is out of bounds
  belongs_to: List
  description: |-
    ### index

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L169)

    Gets the i-th node, raising an error if the index is out of bounds.

    ``` pony
    fun box index(
      i: USize val)
    : this->ListNode[A] ref ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>[ListNode](collections-listnode)\[A\] ref ?

    &nbsp;
- name: List.map()
  id: collections-list#mapb-b
  summary: Builds a new list by applying a function to every member of the list
  belongs_to: List
  description: |-
    ### map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L350)

    Builds a new list by applying a function to every member of the list.

    ``` pony
    fun box map[B: B](
      f: {(this->A!): B^}[A, B] box)
    : List[B] ref^
    ```

    #### Parameters

    - f: {(this-\>A!): B^}\[A, B\] box

    #### Returns

    - [List](index)\[B\] ref^

    &nbsp;
- name: List.nodes()
  id: collections-list#nodes
  summary: Return an iterator on the nodes in the list
  belongs_to: List
  description: |-
    ### nodes

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L635)

    Return an iterator on the nodes in the list.

    ``` pony
    fun box nodes()
    : ListNodes[A, this->ListNode[A] ref] ref^
    ```

    #### Returns

    - [ListNodes](collections-listnodes)\[A, this-\>[ListNode](collections-listnode)\[A\] ref\] ref^

    &nbsp;
- name: List.partition()
  id: collections-list#partition
  summary: Builds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not
  belongs_to: List
  description: |-
    ### partition

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L513)

    Builds a pair of lists, the first of which is made up of the elements satisfying the supplied predicate and the second of which is made up of those that do not.

    ``` pony
    fun box partition(
      f: {(this->A!): Bool}[A] box)
    : (List[this->A!] ref^ , List[this->A!] ref^)
    ```

    #### Parameters

    - f: {(this-\>A!): Bool}\[A\] box

    #### Returns

    - ([List](index)\[this-\>A!\] ref^ , [List](index)\[this-\>A!\] ref^)

    &nbsp;
- name: List.pop()
  id: collections-list#pop
  summary: Removes a value from the tail of the list
  belongs_to: List
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L262)

    Removes a value from the tail of the list.

    ``` pony
    fun ref pop()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: List.prepend_list()
  id: collections-list#prepend_list
  summary: Remove all nodes from that and prepend them to this
  belongs_to: List
  description: |-
    ### prepend_list

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L246)

    Remove all nodes from that and prepend them to this.

    ``` pony
    fun ref prepend_list(
      that: List[A] ref)
    : None val
    ```

    #### Parameters

    - that: [List](index)\[A\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.prepend_node()
  id: collections-list#prepend_node
  summary: Adds a node to the head of the list
  belongs_to: List
  description: |-
    ### prepend_node

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L214)

    Adds a node to the head of the list.

    ``` pony
    fun ref prepend_node(
      node: ListNode[A] ref)
    : None val
    ```

    #### Parameters

    - node: [ListNode](collections-listnode)\[A\] ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.push()
  id: collections-list#push
  summary: Adds a value to the tail of the list
  belongs_to: List
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L256)

    Adds a value to the tail of the list.

    ``` pony
    fun ref push(
      a: A)
    : None val
    ```

    #### Parameters

    - a: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.remove()
  id: collections-list#remove
  summary: Remove the i-th node, raising an error if the index is out of bounds
  belongs_to: List
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L187)

    Remove the i-th node, raising an error if the index is out of bounds. The removed node is returned.

    ``` pony
    fun ref remove(
      i: USize val)
    : ListNode[A] ref ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - [ListNode](collections-listnode)\[A\] ref ?

    &nbsp;
- name: List.reserve()
  id: collections-list#reserve
  summary: Do nothing, but be compatible with Seq
  belongs_to: List
  description: |-
    ### reserve

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L143)

    Do nothing, but be compatible with Seq.

    ``` pony
    fun ref reserve(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.reverse()
  id: collections-list#reverse
  summary: Builds a new list by reversing the elements in the list
  belongs_to: List
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L585)

    Builds a new list by reversing the elements in the list.

    ``` pony
    fun box reverse()
    : List[this->A!] ref^
    ```

    #### Returns

    - [List](index)\[this-\>A!\] ref^

    &nbsp;
- name: List.rnodes()
  id: collections-list#rnodes
  summary: Return an iterator on the nodes in the list
  belongs_to: List
  description: |-
    ### rnodes

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L641)

    Return an iterator on the nodes in the list.

    ``` pony
    fun box rnodes()
    : ListNodes[A, this->ListNode[A] ref] ref^
    ```

    #### Returns

    - [ListNodes](collections-listnodes)\[A, this-\>[ListNode](collections-listnode)\[A\] ref\] ref^

    &nbsp;
- name: List.rvalues()
  id: collections-list#rvalues
  summary: Return an iterator on the values in the list
  belongs_to: List
  description: "### rvalues\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L653)\n\nReturn an iterator on the values in the list.\n\n``` pony\nfun box rvalues()\n: ListValues[A, this->ListNode[A] ref] ref^\n```\n\n#### Returns\n\n- [ListValues](collections-listvalues)\\[A, this-\\>[ListNode](collections-listnode)\\[A\\] ref\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-List](https://stdlib.ponylang.io/collections-List)"
- name: List.shift()
  id: collections-list#shift
  summary: Removes a value from the head of the list
  belongs_to: List
  description: |-
    ### shift

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L274)

    Removes a value from the head of the list.

    ``` pony
    fun ref shift()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: List.size()
  id: collections-list#size
  summary: Returns the number of items in the list
  belongs_to: List
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L149)

    Returns the number of items in the list.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: List.tail()
  id: collections-list#tail
  summary: Get the tail of the list
  belongs_to: List
  description: |-
    ### tail

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L208)

    Get the tail of the list.

    ``` pony
    fun box tail()
    : this->ListNode[A] ref ?
    ```

    #### Returns

    - this-\>[ListNode](collections-listnode)\[A\] ref ?

    &nbsp;
- name: List.take()
  id: collections-list#take
  summary: Builds a list of the first n elements
  belongs_to: List
  description: |-
    ### take

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L547)

    Builds a list of the first n elements.

    ``` pony
    fun box take(
      n: USize val)
    : List[this->A!] ref
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [List](index)\[this-\>A!\] ref

    &nbsp;
- name: List.take_while()
  id: collections-list#take_while
  summary: Builds a list of elements satisfying the provided predicate until one does not
  belongs_to: List
  description: |-
    ### take_while

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L565)

    Builds a list of elements satisfying the provided predicate until one does not.

    ``` pony
    fun box take_while(
      f: {(this->A!): Bool}[A] box)
    : List[this->A!] ref^
    ```

    #### Parameters

    - f: {(this-\>A!): Bool}\[A\] box

    #### Returns

    - [List](index)\[this-\>A!\] ref^

    &nbsp;
- name: List.truncate()
  id: collections-list#truncate
  summary: Truncate the list to the given length, discarding excess elements
  belongs_to: List
  description: |-
    ### truncate

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L328)

    Truncate the list to the given length, discarding excess elements. If the list is already smaller than len, do nothing.

    ``` pony
    fun ref truncate(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.unit()
  id: collections-list#unit
  summary: Builds a new list from an element
  belongs_to: List
  description: |-
    ### unit

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L129)

    Builds a new list from an element.

    ``` pony
    new ref unit(
      a: A)
    : List[A] ref^
    ```

    #### Parameters

    - a: A

    #### Returns

    - [List](index)\[A\] ref^

    &nbsp;
- name: List.unshift()
  id: collections-list#unshift
  summary: Adds a value to the head of the list
  belongs_to: List
  description: |-
    ### unshift

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L268)

    Adds a value to the head of the list.

    ``` pony
    fun ref unshift(
      a: A)
    : None val
    ```

    #### Parameters

    - a: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: List.update()
  id: collections-list#update
  summary: Change the i-th element, raising an error if the index is out of bounds
  belongs_to: List
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L161)

    Change the i-th element, raising an error if the index is out of bounds. Returns the previous value, which may be None if the node has been popped but left on the list.

    ``` pony
    fun ref update(
      i: USize val,
      value: A)
    : A^ ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: A

    #### Returns

    - A^ ?

    &nbsp;
- name: List.values()
  id: collections-list#values
  summary: Return an iterator on the values in the list
  belongs_to: List
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L647)

    Return an iterator on the values in the list.

    ``` pony
    fun box values()
    : ListValues[A, this->ListNode[A] ref] ref^
    ```

    #### Returns

    - [ListValues](collections-listvalues)\[A, this-\>[ListNode](collections-listnode)\[A\] ref\] ref^

    &nbsp;
- name: ListNode
  id: collections-listnode
  summary: A node in a doubly linked list
  description: "# ListNode\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L1)\n\nA node in a doubly linked list.\n\n(See Ponylang [collections.List](collections-list) class for usage examples.)\n\nEach node contains four fields: two link fields (references to the previous and to the next node in the sequence of nodes), one data field, and the reference to the in which it resides.\n\nAs you would expect functions are provided to create a ListNode, update a ListNode's contained item, and pop the item from the ListNode.\n\nAdditional functions are provided to operate on a ListNode as part of a Linked List. These provide for prepending, appending, removal, and safe traversal in both directions. The Ponylang [collections.List](collections-list) class is the correct way to create these. *Do not attempt to create a Linked List using only ListNodes.*\n\n## Example program\n\nThe functions which are illustrated below are only those which operate on an individual ListNode.\n\nIt outputs:\n\nMy node has the item value: My Node item My node has the updated item value: My updated Node item Popped the item from the ListNode The ListNode has no (None) item.\n\n``` pony\n  use \"collections\"\n  actor Main\n    new create(env:Env) =>\n\n      // Create a new ListNode of type String\n      let my_list_node = ListNode[String](\"My Node item\")\n      try \n        env.out.print(\"My node has the item value: \"\n                      + my_list_node.apply()?) // My Node item\n      end\n\n      // Update the item contained in the ListNode\n      try\n        my_list_node.update(\"My updated Node item\")?\n        env.out.print(\"My node has the updated item value: \"\n                      + my_list_node.apply()?) // My updated Node item\n      end\n      // Pop the item from the ListNode\n      try\n        my_list_node.pop()?\n        env.out.print(\"Popped the item from the ListNode\")\n        my_list_node.apply()? // This will error as the item is now None\n      else\n        env.out.print(\"The ListNode has no (None) item.\")\n      end\n...\n\n\n```pony\nclass ref ListNode[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L66)\n\nCreate a node. Initially, it is not in any list.\n\n``` pony\nnew ref create(\n  item: (A | None val) = reference)\n: ListNode[A] ref^\n```\n\n#### Parameters\n\n- item: (A \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ListNode](index)\\[A\\] ref^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L72)\n\nReturn the item, if we have one, otherwise raise an error.\n\n``` pony\nfun box apply()\n: this->A ?\n```\n\n#### Returns\n\n- this-\\>A ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L78)\n\nReplace the item and return the previous one. Raise an error if we have no previous value.\n\n``` pony\nfun ref update(\n  value: (A | None val))\n: A^ ?\n```\n\n#### Parameters\n\n- value: (A \\| [None](builtin-none) val)\n\n#### Returns\n\n- A^ ?\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L85)\n\nRemove the item from the node, if we have one, otherwise raise an error.\n\n``` pony\nfun ref pop()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### prepend\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L91)\n\nPrepend a node to this one. If `that` is already in a list, it is removed before it is prepended. Returns true if `that` was removed from another list. If the ListNode is not contained within a List the prepend will fail.\n\n``` pony\nfun ref prepend(\n  that: ListNode[A] ref)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ListNode](index)\\[A\\] ref\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L124)\n\nAppend a node to this one. If `that` is already in a list, it is removed before it is appended. Returns true if `that` was removed from another list.\n\nIf the ListNode is not contained within a List the append will fail.\n\n``` pony\nfun ref append(\n  that: ListNode[A] ref)\n: Bool val\n```\n\n#### Parameters\n\n- that: [ListNode](index)\\[A\\] ref\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L158)\n\nRemove a node from a list.\n\nThe ListNode must be contained within a List for this to succeed.\n\n``` pony\nfun ref remove()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### has_prev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L193)\n\nReturn true if there is a previous node.\n\n``` pony\nfun box has_prev()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L199)\n\nReturn true if there is a next node.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### prev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L205)\n\nReturn the previous node.\n\n``` pony\nfun box prev()\n: (this->ListNode[A] ref | None val)\n```\n\n#### Returns\n\n- (this-\\>[ListNode](index)\\[A\\] ref \\| [None](builtin-none) val)\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L211)\n\nReturn the next node.\n\n``` pony\nfun box next()\n: (this->ListNode[A] ref | None val)\n```\n\n#### Returns\n\n- (this-\\>[ListNode](index)\\[A\\] ref \\| [None](builtin-none) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListNode](https://stdlib.ponylang.io/collections-ListNode)"
- name: ListNode.append()
  id: collections-listnode#append
  summary: Append a node to this one
  belongs_to: ListNode
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L124)

    Append a node to this one. If `that` is already in a list, it is removed before it is appended. Returns true if `that` was removed from another list.

    If the ListNode is not contained within a List the append will fail.

    ``` pony
    fun ref append(
      that: ListNode[A] ref)
    : Bool val
    ```

    #### Parameters

    - that: [ListNode](index)\[A\] ref

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ListNode.apply()
  id: collections-listnode#apply
  summary: Return the item, if we have one, otherwise raise an error
  belongs_to: ListNode
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L72)

    Return the item, if we have one, otherwise raise an error.

    ``` pony
    fun box apply()
    : this->A ?
    ```

    #### Returns

    - this-\>A ?
- name: ListNode.create()
  id: collections-listnode#create
  summary: Create a node
  belongs_to: ListNode
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L66)

    Create a node. Initially, it is not in any list.

    ``` pony
    new ref create(
      item: (A | None val) = reference)
    : ListNode[A] ref^
    ```

    #### Parameters

    - item: (A \| [None](builtin-none) val) = reference

    #### Returns

    - [ListNode](index)\[A\] ref^

    ## Public Functions
- name: ListNode.has_next()
  id: collections-listnode#has_next
  summary: Return true if there is a next node
  belongs_to: ListNode
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L199)

    Return true if there is a next node.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ListNode.has_prev()
  id: collections-listnode#has_prev
  summary: Return true if there is a previous node
  belongs_to: ListNode
  description: |-
    ### has_prev

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L193)

    Return true if there is a previous node.

    ``` pony
    fun box has_prev()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ListNode.next()
  id: collections-listnode#next
  summary: Return the next node
  belongs_to: ListNode
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list_node/#L211)\n\nReturn the next node.\n\n``` pony\nfun box next()\n: (this->ListNode[A] ref | None val)\n```\n\n#### Returns\n\n- (this-\\>[ListNode](index)\\[A\\] ref \\| [None](builtin-none) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListNode](https://stdlib.ponylang.io/collections-ListNode)"
- name: ListNode.pop()
  id: collections-listnode#pop
  summary: Remove the item from the node, if we have one, otherwise raise an error
  belongs_to: ListNode
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L85)

    Remove the item from the node, if we have one, otherwise raise an error.

    ``` pony
    fun ref pop()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: ListNode.prepend()
  id: collections-listnode#prepend
  summary: Prepend a node to this one
  belongs_to: ListNode
  description: |-
    ### prepend

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L91)

    Prepend a node to this one. If `that` is already in a list, it is removed before it is prepended. Returns true if `that` was removed from another list. If the ListNode is not contained within a List the prepend will fail.

    ``` pony
    fun ref prepend(
      that: ListNode[A] ref)
    : Bool val
    ```

    #### Parameters

    - that: [ListNode](index)\[A\] ref

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ListNode.prev()
  id: collections-listnode#prev
  summary: Return the previous node
  belongs_to: ListNode
  description: |-
    ### prev

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L205)

    Return the previous node.

    ``` pony
    fun box prev()
    : (this->ListNode[A] ref | None val)
    ```

    #### Returns

    - (this-\>[ListNode](index)\[A\] ref \| [None](builtin-none) val)

    &nbsp;
- name: ListNode.remove()
  id: collections-listnode#remove
  summary: Remove a node from a list
  belongs_to: ListNode
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L158)

    Remove a node from a list.

    The ListNode must be contained within a List for this to succeed.

    ``` pony
    fun ref remove()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ListNode.update()
  id: collections-listnode#update
  summary: Replace the item and return the previous one
  belongs_to: ListNode
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list_node/#L78)

    Replace the item and return the previous one. Raise an error if we have no previous value.

    ``` pony
    fun ref update(
      value: (A | None val))
    : A^ ?
    ```

    #### Parameters

    - value: (A \| [None](builtin-none) val)

    #### Returns

    - A^ ?

    &nbsp;
- name: ListNodes
  id: collections-listnodes
  summary: Iterate over the nodes in a list
  description: "# ListNodes\\[A: A, N: [ListNode](collections-listnode)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L677)\n\nIterate over the nodes in a list.\n\n``` pony\nclass ref ListNodes[A: A, N: ListNode[A] #read] is\n  Iterator[N] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[N\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L684)\n\nKeep the next list node to be examined.\n\n``` pony\nnew ref create(\n  head: (N | None val),\n  reverse: Bool val = false)\n: ListNodes[A, N] ref^\n```\n\n#### Parameters\n\n- head: (N \\| [None](builtin-none) val)\n- reverse: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [ListNodes](index)\\[A, N\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L691)\n\nIf we have a list node, we have more values.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L697)\n\nGet the list node and replace it with the next one.\n\n``` pony\nfun ref next()\n: N ?\n```\n\n#### Returns\n\n- N ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListNodes](https://stdlib.ponylang.io/collections-ListNodes)"
- name: ListNodes.create()
  id: collections-listnodes#create
  summary: Keep the next list node to be examined
  belongs_to: ListNodes
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L684)

    Keep the next list node to be examined.

    ``` pony
    new ref create(
      head: (N | None val),
      reverse: Bool val = false)
    : ListNodes[A, N] ref^
    ```

    #### Parameters

    - head: (N \| [None](builtin-none) val)
    - reverse: [Bool](builtin-bool) val = false

    #### Returns

    - [ListNodes](index)\[A, N\] ref^

    ## Public Functions
- name: ListNodes.has_next()
  id: collections-listnodes#has_next
  summary: If we have a list node, we have more values
  belongs_to: ListNodes
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L691)

    If we have a list node, we have more values.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: ListNodes.next()
  id: collections-listnodes#next
  summary: Get the list node and replace it with the next one
  belongs_to: ListNodes
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L697)\n\nGet the list node and replace it with the next one.\n\n``` pony\nfun ref next()\n: N ?\n```\n\n#### Returns\n\n- N ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListNodes](https://stdlib.ponylang.io/collections-ListNodes)"
- name: Lists
  id: collections-persistent-lists
  summary: A primitive containing helper functions for constructing and testing Lists
  description: "# Lists\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L36)\n\nA primitive containing helper functions for constructing and testing Lists.\n\n``` pony\nprimitive val Lists[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L36)\n\n``` pony\nnew val create()\n: Lists[A] val^\n```\n\n#### Returns\n\n- [Lists](index)\\[A\\] val^\n\n## Public Functions\n\n### empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L42)\n\nReturns an empty list.\n\n``` pony\nfun box empty()\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### cons\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L48)\n\nReturns a list that has h as a head and t as a tail.\n\n``` pony\nfun box cons(\n  h: val->A,\n  t: (Cons[A] val | Nil[A] val))\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- h: val-\\>A\n- t: ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L54)\n\nBuilds a new list from an Array\n\n``` pony\nfun box apply(\n  arr: Array[val->A] ref)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- arr: [Array](builtin-array)\\[val-\\>A\\] ref\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### from\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L60)\n\nBuilds a new list from an iterator\n\n``` pony\nfun box from(\n  iter: Iterator[val->A] ref)\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[val-\\>A\\] ref\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](collections-persistent-nil)\\[A\\] val)\n\n### eq\\[optional T: [Equatable](builtin-equatable)\\[T\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L71)\n\nChecks whether two lists are equal.\n\n``` pony\nfun box eq[optional T: Equatable[T] val](\n  l1: (Cons[T] val | Nil[T] val),\n  l2: (Cons[T] val | Nil[T] val))\n: Bool val ?\n```\n\n#### Parameters\n\n- l1: ([Cons](collections-persistent-cons)\\[T\\] val \\| [Nil](collections-persistent-nil)\\[T\\] val)\n- l2: ([Cons](collections-persistent-cons)\\[T\\] val \\| [Nil](collections-persistent-nil)\\[T\\] val)\n\n#### Returns\n\n- [Bool](builtin-bool) val ?\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L42)\n\n``` pony\nfun box ne(\n  that: Lists[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Lists](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Lists](https://stdlib.ponylang.io/collections-persistent-Lists)"
- name: Lists.apply()
  id: collections-persistent-lists#apply
  summary: null
  belongs_to: Lists
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L54)

    Builds a new list from an Array

    ``` pony
    fun box apply(
      arr: Array[val->A] ref)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - arr: [Array](builtin-array)\[val-\>A\] ref

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Lists.cons()
  id: collections-persistent-lists#cons
  summary: Returns a list that has h as a head and t as a tail
  belongs_to: Lists
  description: |-
    ### cons

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L48)

    Returns a list that has h as a head and t as a tail.

    ``` pony
    fun box cons(
      h: val->A,
      t: (Cons[A] val | Nil[A] val))
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - h: val-\>A
    - t: ([Cons](collections-persistent-cons)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Lists.create()
  id: collections-persistent-lists#create
  summary: null
  belongs_to: Lists
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L36)

    ``` pony
    new val create()
    : Lists[A] val^
    ```

    #### Returns

    - [Lists](index)\[A\] val^

    ## Public Functions
- name: Lists.empty()
  id: collections-persistent-lists#empty
  summary: Returns an empty list
  belongs_to: Lists
  description: |-
    ### empty

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L42)

    Returns an empty list.

    ``` pony
    fun box empty()
    : (Cons[A] val | Nil[A] val)
    ```

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)
- name: Lists.eq()
  id: collections-persistent-lists#eqoptional-t-equatablet-val
  summary: Checks whether two lists are equal
  belongs_to: Lists
  description: |-
    ### eq\[optional T: [Equatable](builtin-equatable)\[T\] val\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L71)

    Checks whether two lists are equal.

    ``` pony
    fun box eq[optional T: Equatable[T] val](
      l1: (Cons[T] val | Nil[T] val),
      l2: (Cons[T] val | Nil[T] val))
    : Bool val ?
    ```

    #### Parameters

    - l1: ([Cons](collections-persistent-cons)\[T\] val \| [Nil](collections-persistent-nil)\[T\] val)
    - l2: ([Cons](collections-persistent-cons)\[T\] val \| [Nil](collections-persistent-nil)\[T\] val)

    #### Returns

    - [Bool](builtin-bool) val ?

    &nbsp;
- name: Lists.from()
  id: collections-persistent-lists#from
  summary: null
  belongs_to: Lists
  description: |-
    ### from

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L60)

    Builds a new list from an iterator

    ``` pony
    fun box from(
      iter: Iterator[val->A] ref)
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[val-\>A\] ref

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](collections-persistent-nil)\[A\] val)

    &nbsp;
- name: Lists.ne()
  id: collections-persistent-lists#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Lists
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L42)\n\n``` pony\nfun box ne(\n  that: Lists[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Lists](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Lists](https://stdlib.ponylang.io/collections-persistent-Lists)"
- name: ListValues
  id: collections-listvalues
  summary: Iterate over the values in a list
  description: "# ListValues\\[A: A, N: [ListNode](collections-listnode)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L714)\n\nIterate over the values in a list.\n\n``` pony\nclass ref ListValues[A: A, N: ListNode[A] #read] is\n  Iterator[N->A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[N-\\>A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L721)\n\nKeep the next list node to be examined.\n\n``` pony\nnew ref create(\n  head: (N | None val),\n  reverse: Bool val = false)\n: ListValues[A, N] ref^\n```\n\n#### Parameters\n\n- head: (N \\| [None](builtin-none) val)\n- reverse: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [ListValues](index)\\[A, N\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L728)\n\nIf we have a list node, we have more values.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L734)\n\nGet the value of the list node and replace it with the next one.\n\n``` pony\nfun ref next()\n: N->A ?\n```\n\n#### Returns\n\n- N-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListValues](https://stdlib.ponylang.io/collections-ListValues)"
- name: ListValues.create()
  id: collections-listvalues#create
  summary: Keep the next list node to be examined
  belongs_to: ListValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L721)

    Keep the next list node to be examined.

    ``` pony
    new ref create(
      head: (N | None val),
      reverse: Bool val = false)
    : ListValues[A, N] ref^
    ```

    #### Parameters

    - head: (N \| [None](builtin-none) val)
    - reverse: [Bool](builtin-bool) val = false

    #### Returns

    - [ListValues](index)\[A, N\] ref^

    ## Public Functions
- name: ListValues.has_next()
  id: collections-listvalues#has_next
  summary: If we have a list node, we have more values
  belongs_to: ListValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/list/#L728)

    If we have a list node, we have more values.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: ListValues.next()
  id: collections-listvalues#next
  summary: Get the value of the list node and replace it with the next one
  belongs_to: ListValues
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/list/#L734)\n\nGet the value of the list node and replace it with the next one.\n\n``` pony\nfun ref next()\n: N->A ?\n```\n\n#### Returns\n\n- N-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-ListValues](https://stdlib.ponylang.io/collections-ListValues)"
- name: LogFormatter
  id: logger-logformatter
  summary: Interface required to implement custom log formatting
  description: "# LogFormatter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L143)\n\nInterface required to implement custom log formatting.\n\n- `msg` is the logged message\n- `loc` is the location log was called from\n\nSee `DefaultLogFormatter` for an example of how to implement a LogFormatter.\n\n``` pony\ninterface val LogFormatter\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L152)\n\n``` pony\nfun box apply(\n  msg: String val,\n  loc: SourceLoc val)\n: String val\n```\n\n#### Parameters\n\n- msg: [String](builtin-string) val\n- loc: [SourceLoc](builtin-sourceloc) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-LogFormatter](https://stdlib.ponylang.io/logger-LogFormatter)"
- name: LogFormatter.apply()
  id: logger-logformatter#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: LogFormatter
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L152)\n\n``` pony\nfun box apply(\n  msg: String val,\n  loc: SourceLoc val)\n: String val\n```\n\n#### Parameters\n\n- msg: [String](builtin-string) val\n- loc: [SourceLoc](builtin-sourceloc) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-LogFormatter](https://stdlib.ponylang.io/logger-LogFormatter)"
- name: Logger
  id: logger-logger
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Logger\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L110)\n\n``` pony\nclass val Logger[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L116)\n\n``` pony\nnew val create(\n  level: (Fine val | Info val | Warn val | \n    Error val),\n  out: OutStream tag,\n  f: {(A): String}[A] val,\n  formatter: LogFormatter val = reference)\n: Logger[A] val^\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n- out: [OutStream](builtin-outstream) tag\n- f: {(A): String}\\[A\\] val\n- formatter: [LogFormatter](logger-logformatter) val = reference\n\n#### Returns\n\n- [Logger](index)\\[A\\] val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L127)\n\n``` pony\nfun box apply(\n  level: (Fine val | Info val | Warn val | \n    Error val))\n: Bool val\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L130)\n\n``` pony\nfun box log(\n  value: A,\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- value: A\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Logger](https://stdlib.ponylang.io/logger-Logger)"
- name: Logger.apply()
  id: logger-logger#apply
  summary: null
  belongs_to: Logger
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L127)\n\n``` pony\nfun box apply(\n  level: (Fine val | Info val | Warn val | \n    Error val))\n: Bool val\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val"
- name: Logger.create()
  id: logger-logger#create
  summary: null
  belongs_to: Logger
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L116)\n\n``` pony\nnew val create(\n  level: (Fine val | Info val | Warn val | \n    Error val),\n  out: OutStream tag,\n  f: {(A): String}[A] val,\n  formatter: LogFormatter val = reference)\n: Logger[A] val^\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n- out: [OutStream](builtin-outstream) tag\n- f: {(A): String}\\[A\\] val\n- formatter: [LogFormatter](logger-logformatter) val = reference\n\n#### Returns\n\n- [Logger](index)\\[A\\] val^\n\n## Public Functions"
- name: Logger.log()
  id: logger-logger#log
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Logger
  description: "### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L130)\n\n``` pony\nfun box log(\n  value: A,\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- value: A\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Logger](https://stdlib.ponylang.io/logger-Logger)"
- name: LogLevel
  id: logger-loglevel
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# LogLevel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L91)\n\n``` pony\ntype LogLevel is\n  (Fine val | Info val | Warn val | Error val)\n```\n\n#### Type Alias For\n\n- ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-LogLevel](https://stdlib.ponylang.io/logger-LogLevel)"
- name: Map
  id: collections-map
  summary: This is a map that uses structural equality on the key
  description: "# Map\\[K: ([Hashable](collections-hashable) \\#read & [Equatable](builtin-equatable)\\[K\\] \\#read), V: V\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L4)\n\nThis is a map that uses structural equality on the key.\n\n``` pony\ntype Map[K: (Hashable #read & Equatable[K] #read), V: V] is\n  HashMap[K, V, HashEq[K] val] ref\n```\n\n#### Type Alias For\n\n- [HashMap](collections-hashmap)\\[K, V, [HashEq](collections-hasheq)\\[K\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Map](https://stdlib.ponylang.io/collections-Map)"
- name: Map
  id: collections-persistent-map
  summary: A map that uses structural equality on the key
  description: "# Map\\[K: ([Hashable](collections-hashable) val & [Equatable](builtin-equatable)\\[K\\]), V: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L3)\n\nA map that uses structural equality on the key.\n\n``` pony\ntype Map[K: (Hashable val & Equatable[K]), V: Any #share] is\n  HashMap[K, V, HashEq[K] val] val\n```\n\n#### Type Alias For\n\n- [HashMap](collections-persistent-hashmap)\\[K, V, [HashEq](collections-hasheq)\\[K\\] val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Map](https://stdlib.ponylang.io/collections-persistent-Map)"
- name: MapIs
  id: collections-mapis
  summary: This is a map that uses identity comparison on the key
  description: "# MapIs\\[K: K, V: V\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L10)\n\nThis is a map that uses identity comparison on the key.\n\n``` pony\ntype MapIs[K: K, V: V] is\n  HashMap[K, V, HashIs[K] val] ref\n```\n\n#### Type Alias For\n\n- [HashMap](collections-hashmap)\\[K, V, [HashIs](collections-hashis)\\[K\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapIs](https://stdlib.ponylang.io/collections-MapIs)"
- name: MapIs
  id: collections-persistent-mapis
  summary: A map that uses identity comparison on the key
  description: "# MapIs\\[K: [Any](builtin-any) \\#share, V: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L9)\n\nA map that uses identity comparison on the key.\n\n``` pony\ntype MapIs[K: Any #share, V: Any #share] is\n  HashMap[K, V, HashIs[K] val] val\n```\n\n#### Type Alias For\n\n- [HashMap](collections-persistent-hashmap)\\[K, V, [HashIs](collections-hashis)\\[K\\] val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapIs](https://stdlib.ponylang.io/collections-persistent-MapIs)"
- name: MapKeys
  id: collections-mapkeys
  summary: An iterator over the keys in a map
  description: "# MapKeys\\[K: K, V: V, H: [HashFunction](collections-hashfunction)\\[K\\] val, M: [HashMap](collections-hashmap)\\[K, V, H\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L388)\n\nAn iterator over the keys in a map.\n\n``` pony\nclass ref MapKeys[K: K, V: V, H: HashFunction[K] val, M: HashMap[K, V, H] #read] is\n  Iterator[M->K] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[M-\\>K\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L397)\n\nCreates an iterator for the given map.\n\n``` pony\nnew ref create(\n  map: M)\n: MapKeys[K, V, H, M] ref^\n```\n\n#### Parameters\n\n- map: M\n\n#### Returns\n\n- [MapKeys](index)\\[K, V, H, M\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L403)\n\nTrue if it believes there are remaining entries. May not be right if values were added or removed from the map.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L410)\n\nReturns the next key, or raises an error if there isn't one. If keys are added during iteration, this may not return all keys.\n\n``` pony\nfun ref next()\n: M->K ?\n```\n\n#### Returns\n\n- M-\\>K ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapKeys](https://stdlib.ponylang.io/collections-MapKeys)"
- name: MapKeys
  id: collections-persistent-mapkeys
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MapKeys\\[K: [Any](builtin-any) \\#share, V: [Any](builtin-any) \\#share, H: [HashFunction](collections-hashfunction)\\[K\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L136)\n\n``` pony\nclass ref MapKeys[K: Any #share, V: Any #share, H: HashFunction[K] val]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L139)\n\n``` pony\nnew ref create(\n  m: HashMap[K, V, H] val)\n: MapKeys[K, V, H] ref^\n```\n\n#### Parameters\n\n- m: [HashMap](collections-persistent-hashmap)\\[K, V, H\\] val\n\n#### Returns\n\n- [MapKeys](index)\\[K, V, H\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L141)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L143)\n\n``` pony\nfun ref next()\n: K ?\n```\n\n#### Returns\n\n- K ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapKeys](https://stdlib.ponylang.io/collections-persistent-MapKeys)"
- name: MapKeys.create()
  id: collections-mapkeys#create
  summary: Creates an iterator for the given map
  belongs_to: MapKeys
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L397)

    Creates an iterator for the given map.

    ``` pony
    new ref create(
      map: M)
    : MapKeys[K, V, H, M] ref^
    ```

    #### Parameters

    - map: M

    #### Returns

    - [MapKeys](index)\[K, V, H, M\] ref^

    ## Public Functions
- name: MapKeys.create()
  id: collections-persistent-mapkeys#create
  summary: null
  belongs_to: MapKeys
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L139)

    ``` pony
    new ref create(
      m: HashMap[K, V, H] val)
    : MapKeys[K, V, H] ref^
    ```

    #### Parameters

    - m: [HashMap](collections-persistent-hashmap)\[K, V, H\] val

    #### Returns

    - [MapKeys](index)\[K, V, H\] ref^

    ## Public Functions
- name: MapKeys.has_next()
  id: collections-mapkeys#has_next
  summary: True if it believes there are remaining entries
  belongs_to: MapKeys
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L403)

    True if it believes there are remaining entries. May not be right if values were added or removed from the map.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapKeys.has_next()
  id: collections-persistent-mapkeys#has_next
  summary: null
  belongs_to: MapKeys
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L141)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapKeys.next()
  id: collections-mapkeys#next
  summary: Returns the next key, or raises an error if there isn't one
  belongs_to: MapKeys
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L410)\n\nReturns the next key, or raises an error if there isn't one. If keys are added during iteration, this may not return all keys.\n\n``` pony\nfun ref next()\n: M->K ?\n```\n\n#### Returns\n\n- M-\\>K ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapKeys](https://stdlib.ponylang.io/collections-MapKeys)"
- name: MapKeys.next()
  id: collections-persistent-mapkeys#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MapKeys
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L143)\n\n``` pony\nfun ref next()\n: K ?\n```\n\n#### Returns\n\n- K ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapKeys](https://stdlib.ponylang.io/collections-persistent-MapKeys)"
- name: MapPairs
  id: collections-mappairs
  summary: An iterator over the keys and values in a map
  description: "# MapPairs\\[K: K, V: V, H: [HashFunction](collections-hashfunction)\\[K\\] val, M: [HashMap](collections-hashmap)\\[K, V, H\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L450)\n\nAn iterator over the keys and values in a map.\n\n``` pony\nclass ref MapPairs[K: K, V: V, H: HashFunction[K] val, M: HashMap[K, V, H] #read] is\n  Iterator[(M->K , M->V)] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[(M-\\>K , M-\\>V)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L459)\n\nCreates an iterator for the given map.\n\n``` pony\nnew ref create(\n  map: M)\n: MapPairs[K, V, H, M] ref^\n```\n\n#### Parameters\n\n- map: M\n\n#### Returns\n\n- [MapPairs](index)\\[K, V, H, M\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L465)\n\nTrue if it believes there are remaining entries. May not be right if values were added or removed from the map.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L472)\n\nReturns the next entry, or raises an error if there isn't one. If entries are added during iteration, this may not return all entries.\n\n``` pony\nfun ref next()\n: (M->K , M->V) ?\n```\n\n#### Returns\n\n- (M-\\>K , M-\\>V) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapPairs](https://stdlib.ponylang.io/collections-MapPairs)"
- name: MapPairs
  id: collections-persistent-mappairs
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MapPairs\\[K: [Any](builtin-any) \\#share, V: [Any](builtin-any) \\#share, H: [HashFunction](collections-hashfunction)\\[K\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L157)\n\n``` pony\nclass ref MapPairs[K: Any #share, V: Any #share, H: HashFunction[K] val]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L160)\n\n``` pony\nnew ref create(\n  m: HashMap[K, V, H] val)\n: MapPairs[K, V, H] ref^\n```\n\n#### Parameters\n\n- m: [HashMap](collections-persistent-hashmap)\\[K, V, H\\] val\n\n#### Returns\n\n- [MapPairs](index)\\[K, V, H\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L163)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L166)\n\n``` pony\nfun ref next()\n: (K , V) ?\n```\n\n#### Returns\n\n- (K , V) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapPairs](https://stdlib.ponylang.io/collections-persistent-MapPairs)"
- name: MapPairs.create()
  id: collections-mappairs#create
  summary: Creates an iterator for the given map
  belongs_to: MapPairs
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L459)

    Creates an iterator for the given map.

    ``` pony
    new ref create(
      map: M)
    : MapPairs[K, V, H, M] ref^
    ```

    #### Parameters

    - map: M

    #### Returns

    - [MapPairs](index)\[K, V, H, M\] ref^

    ## Public Functions
- name: MapPairs.create()
  id: collections-persistent-mappairs#create
  summary: null
  belongs_to: MapPairs
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L160)

    ``` pony
    new ref create(
      m: HashMap[K, V, H] val)
    : MapPairs[K, V, H] ref^
    ```

    #### Parameters

    - m: [HashMap](collections-persistent-hashmap)\[K, V, H\] val

    #### Returns

    - [MapPairs](index)\[K, V, H\] ref^

    ## Public Functions
- name: MapPairs.has_next()
  id: collections-mappairs#has_next
  summary: True if it believes there are remaining entries
  belongs_to: MapPairs
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L465)

    True if it believes there are remaining entries. May not be right if values were added or removed from the map.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapPairs.has_next()
  id: collections-persistent-mappairs#has_next
  summary: null
  belongs_to: MapPairs
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L163)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapPairs.next()
  id: collections-mappairs#next
  summary: Returns the next entry, or raises an error if there isn't one
  belongs_to: MapPairs
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L472)\n\nReturns the next entry, or raises an error if there isn't one. If entries are added during iteration, this may not return all entries.\n\n``` pony\nfun ref next()\n: (M->K , M->V) ?\n```\n\n#### Returns\n\n- (M-\\>K , M-\\>V) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapPairs](https://stdlib.ponylang.io/collections-MapPairs)"
- name: MapPairs.next()
  id: collections-persistent-mappairs#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MapPairs
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L166)\n\n``` pony\nfun ref next()\n: (K , V) ?\n```\n\n#### Returns\n\n- (K , V) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapPairs](https://stdlib.ponylang.io/collections-persistent-MapPairs)"
- name: MapValues
  id: collections-mapvalues
  summary: An iterator over the values in a map
  description: "# MapValues\\[K: K, V: V, H: [HashFunction](collections-hashfunction)\\[K\\] val, M: [HashMap](collections-hashmap)\\[K, V, H\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L419)\n\nAn iterator over the values in a map.\n\n``` pony\nclass ref MapValues[K: K, V: V, H: HashFunction[K] val, M: HashMap[K, V, H] #read] is\n  Iterator[M->V] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[M-\\>V\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L428)\n\nCreates an iterator for the given map.\n\n``` pony\nnew ref create(\n  map: M)\n: MapValues[K, V, H, M] ref^\n```\n\n#### Parameters\n\n- map: M\n\n#### Returns\n\n- [MapValues](index)\\[K, V, H, M\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L434)\n\nTrue if it believes there are remaining entries. May not be right if values were added or removed from the map.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L441)\n\nReturns the next value, or raises an error if there isn't one. If values are added during iteration, this may not return all values.\n\n``` pony\nfun ref next()\n: M->V ?\n```\n\n#### Returns\n\n- M-\\>V ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapValues](https://stdlib.ponylang.io/collections-MapValues)"
- name: MapValues
  id: collections-persistent-mapvalues
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MapValues\\[K: [Any](builtin-any) \\#share, V: [Any](builtin-any) \\#share, H: [HashFunction](collections-hashfunction)\\[K\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L145)\n\n``` pony\nclass ref MapValues[K: Any #share, V: Any #share, H: HashFunction[K] val]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L148)\n\n``` pony\nnew ref create(\n  m: HashMap[K, V, H] val)\n: MapValues[K, V, H] ref^\n```\n\n#### Parameters\n\n- m: [HashMap](collections-persistent-hashmap)\\[K, V, H\\] val\n\n#### Returns\n\n- [MapValues](index)\\[K, V, H\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L150)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L152)\n\n``` pony\nfun ref next()\n: val->V ?\n```\n\n#### Returns\n\n- val-\\>V ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapValues](https://stdlib.ponylang.io/collections-persistent-MapValues)"
- name: MapValues.create()
  id: collections-mapvalues#create
  summary: Creates an iterator for the given map
  belongs_to: MapValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L428)

    Creates an iterator for the given map.

    ``` pony
    new ref create(
      map: M)
    : MapValues[K, V, H, M] ref^
    ```

    #### Parameters

    - map: M

    #### Returns

    - [MapValues](index)\[K, V, H, M\] ref^

    ## Public Functions
- name: MapValues.create()
  id: collections-persistent-mapvalues#create
  summary: null
  belongs_to: MapValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L148)

    ``` pony
    new ref create(
      m: HashMap[K, V, H] val)
    : MapValues[K, V, H] ref^
    ```

    #### Parameters

    - m: [HashMap](collections-persistent-hashmap)\[K, V, H\] val

    #### Returns

    - [MapValues](index)\[K, V, H\] ref^

    ## Public Functions
- name: MapValues.has_next()
  id: collections-mapvalues#has_next
  summary: True if it believes there are remaining entries
  belongs_to: MapValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/map/#L434)

    True if it believes there are remaining entries. May not be right if values were added or removed from the map.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapValues.has_next()
  id: collections-persistent-mapvalues#has_next
  summary: null
  belongs_to: MapValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L150)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: MapValues.next()
  id: collections-mapvalues#next
  summary: Returns the next value, or raises an error if there isn't one
  belongs_to: MapValues
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/map/#L441)\n\nReturns the next value, or raises an error if there isn't one. If values are added during iteration, this may not return all values.\n\n``` pony\nfun ref next()\n: M->V ?\n```\n\n#### Returns\n\n- M-\\>V ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MapValues](https://stdlib.ponylang.io/collections-MapValues)"
- name: MapValues.next()
  id: collections-persistent-mapvalues#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MapValues
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/map/#L152)\n\n``` pony\nfun ref next()\n: val->V ?\n```\n\n#### Returns\n\n- val-\\>V ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-MapValues](https://stdlib.ponylang.io/collections-persistent-MapValues)"
- name: MaxHeap
  id: collections-maxheap
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MaxHeap\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L3)\n\n``` pony\ntype MaxHeap[A: Comparable[A] #read] is\n  BinaryHeap[A, MaxHeapPriority[A] val] ref\n```\n\n#### Type Alias For\n\n- [BinaryHeap](collections-binaryheap)\\[A, [MaxHeapPriority](collections-maxheappriority)\\[A\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MaxHeap](https://stdlib.ponylang.io/collections-MaxHeap)"
- name: MaxHeapPriority
  id: collections-maxheappriority
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MaxHeapPriority\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L143)\n\n``` pony\nprimitive val MaxHeapPriority[A: Comparable[A] #read] is\n  _BinaryHeapPriority[A] val\n```\n\n#### Implements\n\n- \\_BinaryHeapPriority\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L143)\n\n``` pony\nnew val create()\n: MaxHeapPriority[A] val^\n```\n\n#### Returns\n\n- [MaxHeapPriority](index)\\[A\\] val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L144)\n\n``` pony\nfun box apply(\n  x: A,\n  y: A)\n: Bool val\n```\n\n#### Parameters\n\n- x: A\n- y: A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L144)\n\n``` pony\nfun box eq(\n  that: MaxHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MaxHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L144)\n\n``` pony\nfun box ne(\n  that: MaxHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MaxHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MaxHeapPriority](https://stdlib.ponylang.io/collections-MaxHeapPriority)"
- name: MaxHeapPriority.apply()
  id: collections-maxheappriority#apply
  summary: null
  belongs_to: MaxHeapPriority
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L144)

    ``` pony
    fun box apply(
      x: A,
      y: A)
    : Bool val
    ```

    #### Parameters

    - x: A
    - y: A

    #### Returns

    - [Bool](builtin-bool) val
- name: MaxHeapPriority.create()
  id: collections-maxheappriority#create
  summary: null
  belongs_to: MaxHeapPriority
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L143)

    ``` pony
    new val create()
    : MaxHeapPriority[A] val^
    ```

    #### Returns

    - [MaxHeapPriority](index)\[A\] val^

    ## Public Functions
- name: MaxHeapPriority.eq()
  id: collections-maxheappriority#eq
  summary: null
  belongs_to: MaxHeapPriority
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L144)

    ``` pony
    fun box eq(
      that: MaxHeapPriority[A] val)
    : Bool val
    ```

    #### Parameters

    - that: [MaxHeapPriority](index)\[A\] val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: MaxHeapPriority.ne()
  id: collections-maxheappriority#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MaxHeapPriority
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L144)\n\n``` pony\nfun box ne(\n  that: MaxHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MaxHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MaxHeapPriority](https://stdlib.ponylang.io/collections-MaxHeapPriority)"
- name: MicroBenchmark
  id: ponybench-microbenchmark
  summary: Synchronous benchmarks must provide this trait
  description: "# MicroBenchmark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L9)\n\nSynchronous benchmarks must provide this trait. The `apply` method defines a single iteration in a sample. Setup and Teardown are defined by the `before` and `after` methods respectively. The `before` method runs before a sample of benchmarks and `after` runs after the all iterations in the sample have completed. If your benchmark requires setup and/or teardown to occur beween each iteration of the benchmark, then you can use `before_iteration` and `after_iteration` methods respectively that run before/after each iteration.\n\n``` pony\ntrait iso MicroBenchmark\n```\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L19)\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L20)\n\n``` pony\nfun box config()\n: BenchConfig val\n```\n\n#### Returns\n\n- [BenchConfig](ponybench-benchconfig) val\n\n### overhead\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L21)\n\n``` pony\nfun box overhead()\n: MicroBenchmark iso^\n```\n\n#### Returns\n\n- [MicroBenchmark](index) iso^\n\n### before\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L22)\n\n``` pony\nfun ref before()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### before_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L23)\n\n``` pony\nfun ref before_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L24)\n\n``` pony\nfun ref apply()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### after\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L25)\n\n``` pony\nfun ref after()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L26)\n\n``` pony\nfun ref after_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-MicroBenchmark](https://stdlib.ponylang.io/ponybench-MicroBenchmark)"
- name: MicroBenchmark.after()
  id: ponybench-microbenchmark#after
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### after

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L25)

    ``` pony
    fun ref after()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: MicroBenchmark.after_iteration()
  id: ponybench-microbenchmark#after_iteration
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MicroBenchmark
  description: "### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L26)\n\n``` pony\nfun ref after_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-MicroBenchmark](https://stdlib.ponylang.io/ponybench-MicroBenchmark)"
- name: MicroBenchmark.apply()
  id: ponybench-microbenchmark#apply
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L24)

    ``` pony
    fun ref apply()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: MicroBenchmark.before()
  id: ponybench-microbenchmark#before
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### before

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L22)

    ``` pony
    fun ref before()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: MicroBenchmark.before_iteration()
  id: ponybench-microbenchmark#before_iteration
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### before_iteration

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L23)

    ``` pony
    fun ref before_iteration()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: MicroBenchmark.config()
  id: ponybench-microbenchmark#config
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### config

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L20)

    ``` pony
    fun box config()
    : BenchConfig val
    ```

    #### Returns

    - [BenchConfig](ponybench-benchconfig) val

    &nbsp;
- name: MicroBenchmark.name()
  id: ponybench-microbenchmark#name
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L19)

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: MicroBenchmark.overhead()
  id: ponybench-microbenchmark#overhead
  summary: null
  belongs_to: MicroBenchmark
  description: |-
    ### overhead

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L21)

    ``` pony
    fun box overhead()
    : MicroBenchmark iso^
    ```

    #### Returns

    - [MicroBenchmark](index) iso^

    &nbsp;
- name: MinHeap
  id: collections-minheap
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MinHeap\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L2)\n\n``` pony\ntype MinHeap[A: Comparable[A] #read] is\n  BinaryHeap[A, MinHeapPriority[A] val] ref\n```\n\n#### Type Alias For\n\n- [BinaryHeap](collections-binaryheap)\\[A, [MinHeapPriority](collections-minheappriority)\\[A\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MinHeap](https://stdlib.ponylang.io/collections-MinHeap)"
- name: MinHeapPriority
  id: collections-minheappriority
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MinHeapPriority\\[A: [Comparable](builtin-comparable)\\[A\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L139)\n\n``` pony\nprimitive val MinHeapPriority[A: Comparable[A] #read] is\n  _BinaryHeapPriority[A] val\n```\n\n#### Implements\n\n- \\_BinaryHeapPriority\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L139)\n\n``` pony\nnew val create()\n: MinHeapPriority[A] val^\n```\n\n#### Returns\n\n- [MinHeapPriority](index)\\[A\\] val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L140)\n\n``` pony\nfun box apply(\n  x: A,\n  y: A)\n: Bool val\n```\n\n#### Parameters\n\n- x: A\n- y: A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L140)\n\n``` pony\nfun box eq(\n  that: MinHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MinHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L140)\n\n``` pony\nfun box ne(\n  that: MinHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MinHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MinHeapPriority](https://stdlib.ponylang.io/collections-MinHeapPriority)"
- name: MinHeapPriority.apply()
  id: collections-minheappriority#apply
  summary: null
  belongs_to: MinHeapPriority
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L140)

    ``` pony
    fun box apply(
      x: A,
      y: A)
    : Bool val
    ```

    #### Parameters

    - x: A
    - y: A

    #### Returns

    - [Bool](builtin-bool) val
- name: MinHeapPriority.create()
  id: collections-minheappriority#create
  summary: null
  belongs_to: MinHeapPriority
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L139)

    ``` pony
    new val create()
    : MinHeapPriority[A] val^
    ```

    #### Returns

    - [MinHeapPriority](index)\[A\] val^

    ## Public Functions
- name: MinHeapPriority.eq()
  id: collections-minheappriority#eq
  summary: null
  belongs_to: MinHeapPriority
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/heap/#L140)

    ``` pony
    fun box eq(
      that: MinHeapPriority[A] val)
    : Bool val
    ```

    #### Parameters

    - that: [MinHeapPriority](index)\[A\] val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: MinHeapPriority.ne()
  id: collections-minheappriority#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MinHeapPriority
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/heap/#L140)\n\n``` pony\nfun box ne(\n  that: MinHeapPriority[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MinHeapPriority](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-MinHeapPriority](https://stdlib.ponylang.io/collections-MinHeapPriority)"
- name: MissingArgument
  id: options-missingargument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# MissingArgument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L78)\n\n``` pony\nprimitive val MissingArgument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L78)\n\n``` pony\nnew val create()\n: MissingArgument val^\n```\n\n#### Returns\n\n- [MissingArgument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L79)\n\n``` pony\nfun box eq(\n  that: MissingArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MissingArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L79)\n\n``` pony\nfun box ne(\n  that: MissingArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MissingArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-MissingArgument](https://stdlib.ponylang.io/options-MissingArgument)"
- name: MissingArgument.create()
  id: options-missingargument#create
  summary: null
  belongs_to: MissingArgument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L78)

    ``` pony
    new val create()
    : MissingArgument val^
    ```

    #### Returns

    - [MissingArgument](index) val^

    ## Public Functions
- name: MissingArgument.eq()
  id: options-missingargument#eq
  summary: null
  belongs_to: MissingArgument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L79)

    ``` pony
    fun box eq(
      that: MissingArgument val)
    : Bool val
    ```

    #### Parameters

    - that: [MissingArgument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: MissingArgument.ne()
  id: options-missingargument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MissingArgument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L79)\n\n``` pony\nfun box ne(\n  that: MissingArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [MissingArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-MissingArgument](https://stdlib.ponylang.io/options-MissingArgument)"
- name: MT
  id: random-mt
  summary: A Mersenne Twister
  description: "# MT\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/mt/#L1)\n\nA Mersenne Twister. This is a non-cryptographic random number generator. This should only be used for legacy applications that require a Mersenne Twister, otherwise use Rand.\n\n``` pony\nclass ref MT is\n  Random ref\n```\n\n#### Implements\n\n- [Random](random-random) ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/mt/#L10)\n\nCreate with the specified seed. Returned values are deterministic for a given seed.\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: MT ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [MT](index) ref^\n\n## Public Functions\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/mt/#L29)\n\nA random integer in \\[0, 2^64)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L34)\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L45)\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L51)\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L57)\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L63)\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L69)\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L75)\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L85)\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L95)\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L101)\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L107)\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L113)\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L119)\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L125)\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L131)\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L137)\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L143)\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L159)\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L195)\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L201)\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-MT](https://stdlib.ponylang.io/random-MT)"
- name: MT.create()
  id: random-mt#create
  summary: Create with the specified seed
  belongs_to: MT
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/mt/#L10)

    Create with the specified seed. Returned values are deterministic for a given seed.

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : MT ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [MT](index) ref^

    ## Public Functions
- name: MT.has_next()
  id: random-mt#has_next
  summary: null
  belongs_to: MT
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L34)

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: MT.i128()
  id: random-mt#i128
  summary: null
  belongs_to: MT
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L119)

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: MT.i16()
  id: random-mt#i16
  summary: null
  belongs_to: MT
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L101)

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: MT.i32()
  id: random-mt#i32
  summary: null
  belongs_to: MT
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L107)

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: MT.i64()
  id: random-mt#i64
  summary: null
  belongs_to: MT
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L113)

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: MT.i8()
  id: random-mt#i8
  summary: null
  belongs_to: MT
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L95)

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: MT.ilong()
  id: random-mt#ilong
  summary: null
  belongs_to: MT
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L125)

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: MT.int()
  id: random-mt#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: MT
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L143)\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: MT.int_fp_mult()
  id: random-mt#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: MT
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L137)\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: MT.int_unbiased()
  id: random-mt#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: MT
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L159)\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: MT.isize()
  id: random-mt#isize
  summary: null
  belongs_to: MT
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L131)

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: MT.next()
  id: random-mt#next
  summary: null
  belongs_to: MT
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/mt/#L29)

    A random integer in \[0, 2^64)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val
- name: MT.real()
  id: random-mt#real
  summary: null
  belongs_to: MT
  description: |-
    ### real

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L195)

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: MT.shuffle()
  id: random-mt#shufflea-a
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: MT
  description: "### shuffle\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L201)\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-MT](https://stdlib.ponylang.io/random-MT)"
- name: MT.u128()
  id: random-mt#u128
  summary: null
  belongs_to: MT
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L69)

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: MT.u16()
  id: random-mt#u16
  summary: null
  belongs_to: MT
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L51)

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: MT.u32()
  id: random-mt#u32
  summary: null
  belongs_to: MT
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L57)

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: MT.u64()
  id: random-mt#u64
  summary: null
  belongs_to: MT
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L63)

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: MT.u8()
  id: random-mt#u8
  summary: null
  belongs_to: MT
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L45)

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: MT.ulong()
  id: random-mt#ulong
  summary: null
  belongs_to: MT
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L75)

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: MT.usize()
  id: random-mt#usize
  summary: null
  belongs_to: MT
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L85)

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Nanos
  id: time-nanos
  summary: Collection of utility functions for converting various durations of time to nanoseconds, for passing to other functions in the time package
  description: "# Nanos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L2)\n\nCollection of utility functions for converting various durations of time to nanoseconds, for passing to other functions in the time package.\n\n``` pony\nprimitive val Nanos\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L2)\n\n``` pony\nnew val create()\n: Nanos val^\n```\n\n#### Returns\n\n- [Nanos](index) val^\n\n## Public Functions\n\n### from_seconds\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L7)\n\n``` pony\nfun box from_seconds(\n  t: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_millis\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L10)\n\n``` pony\nfun box from_millis(\n  t: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_micros\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L13)\n\n``` pony\nfun box from_micros(\n  t: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [U64](builtin-u64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_seconds_f\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L16)\n\n``` pony\nfun box from_seconds_f(\n  t: F64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [F64](builtin-f64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_millis_f\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L19)\n\n``` pony\nfun box from_millis_f(\n  t: F64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [F64](builtin-f64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_micros_f\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L22)\n\n``` pony\nfun box from_micros_f(\n  t: F64 val)\n: U64 val\n```\n\n#### Parameters\n\n- t: [F64](builtin-f64) val\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### from_wall_clock\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L25)\n\n``` pony\nfun box from_wall_clock(\n  wall: (I64 val , I64 val))\n: U64 val\n```\n\n#### Parameters\n\n- wall: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L7)\n\n``` pony\nfun box eq(\n  that: Nanos val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nanos](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L7)\n\n``` pony\nfun box ne(\n  that: Nanos val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nanos](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Nanos](https://stdlib.ponylang.io/time-Nanos)"
- name: Nanos.create()
  id: time-nanos#create
  summary: null
  belongs_to: Nanos
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L2)

    ``` pony
    new val create()
    : Nanos val^
    ```

    #### Returns

    - [Nanos](index) val^

    ## Public Functions
- name: Nanos.eq()
  id: time-nanos#eq
  summary: null
  belongs_to: Nanos
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L7)

    ``` pony
    fun box eq(
      that: Nanos val)
    : Bool val
    ```

    #### Parameters

    - that: [Nanos](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nanos.from_micros()
  id: time-nanos#from_micros
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_micros

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L13)

    ``` pony
    fun box from_micros(
      t: U64 val)
    : U64 val
    ```

    #### Parameters

    - t: [U64](builtin-u64) val

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.from_micros_f()
  id: time-nanos#from_micros_f
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_micros_f

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L22)

    ``` pony
    fun box from_micros_f(
      t: F64 val)
    : U64 val
    ```

    #### Parameters

    - t: [F64](builtin-f64) val

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.from_millis()
  id: time-nanos#from_millis
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_millis

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L10)

    ``` pony
    fun box from_millis(
      t: U64 val)
    : U64 val
    ```

    #### Parameters

    - t: [U64](builtin-u64) val

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.from_millis_f()
  id: time-nanos#from_millis_f
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_millis_f

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L19)

    ``` pony
    fun box from_millis_f(
      t: F64 val)
    : U64 val
    ```

    #### Parameters

    - t: [F64](builtin-f64) val

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.from_seconds()
  id: time-nanos#from_seconds
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_seconds

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L7)

    ``` pony
    fun box from_seconds(
      t: U64 val)
    : U64 val
    ```

    #### Parameters

    - t: [U64](builtin-u64) val

    #### Returns

    - [U64](builtin-u64) val
- name: Nanos.from_seconds_f()
  id: time-nanos#from_seconds_f
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_seconds_f

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L16)

    ``` pony
    fun box from_seconds_f(
      t: F64 val)
    : U64 val
    ```

    #### Parameters

    - t: [F64](builtin-f64) val

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.from_wall_clock()
  id: time-nanos#from_wall_clock
  summary: null
  belongs_to: Nanos
  description: |-
    ### from_wall_clock

    [\[Source\]](https://stdlib.ponylang.io/src/time/nanos/#L25)

    ``` pony
    fun box from_wall_clock(
      wall: (I64 val , I64 val))
    : U64 val
    ```

    #### Parameters

    - wall: ([I64](builtin-i64) val , [I64](builtin-i64) val)

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Nanos.ne()
  id: time-nanos#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Nanos
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/nanos/#L7)\n\n``` pony\nfun box ne(\n  that: Nanos val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nanos](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Nanos](https://stdlib.ponylang.io/time-Nanos)"
- name: NetAddress
  id: net-netaddress
  summary: Represents an IPv4 or IPv6 address
  description: "# NetAddress\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L1)\n\nRepresents an IPv4 or IPv6 address. The family field indicates the address type. The addr field is either the IPv4 address or the IPv6 flow info. The addr1-4 fields are the IPv6 address, or invalid for an IPv4 address. The scope field is the IPv6 scope, or invalid for an IPv4 address.\n\nThis class is modelled after the C data structure for holding socket addresses for both IPv4 and IPv6 `sockaddr_storage`.\n\nUse the `name` method to obtain address/hostname and port/service as Strings.\n\n``` pony\nclass val NetAddress is\n  Equatable[NetAddress val] ref\n```\n\n#### Implements\n\n- [Equatable](builtin-equatable)\\[[NetAddress](index) val\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L1)\n\n``` pony\nnew iso create()\n: NetAddress iso^\n```\n\n#### Returns\n\n- [NetAddress](index) iso^\n\n## Public Functions\n\n### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L55)\n\nReturns true for an IPv4 address.\n\n``` pony\nfun box ip4()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L61)\n\nReturns true for an IPv6 address.\n\n``` pony\nfun box ip6()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L67)\n\nReturns the host and service name.\n\nIf `reversedns` is an instance of `DNSLookupAuth` a DNS lookup will be executed and the hostname for this address is returned as first element of the result tuple. If no hostname could be found, an error is raised. If `reversedns` is `None` the plain IP address is given and no DNS lookup is executed.\n\nIf `servicename` is `false` the numeric port is returned as second element of the result tuple. If it is `true` the port is translated into its corresponding servicename (e.g. port 80 is returned as `\"http\"`).\n\nInternally this method uses the POSIX C function `getnameinfo`.\n\n``` pony\nfun box name(\n  reversedns: (AmbientAuth val | NetAuth val | DNSAuth val | \n    None val) = reference,\n  servicename: Bool val = false)\n: (String val , String val) ?\n```\n\n#### Parameters\n\n- reversedns: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val \\| [None](builtin-none) val) = reference\n- servicename: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- ([String](builtin-string) val , [String](builtin-string) val) ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L103)\n\n``` pony\nfun box eq(\n  that: NetAddress box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAddress](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### host_eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L109)\n\n``` pony\nfun box host_eq(\n  that: NetAddress box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAddress](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### length\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L119)\n\nFor platforms (OSX/FreeBSD) with `length` field as part of its `struct sockaddr` definition, returns the `length`. Else (Linux/Windows) returns the size of `sockaddr_in` or `sockaddr_in6`.\n\n``` pony\nfun box length()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### family\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L136)\n\nReturns the `family`.\n\n``` pony\nfun box family()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L155)\n\nReturns port number in host byte order.\n\n``` pony\nfun box port()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### scope\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L161)\n\nReturns IPv6 scope identifier: Unicast, Anycast, Multicast and unassigned scopes.\n\n``` pony\nfun box scope()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ipv4_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L169)\n\nReturns IPV4 address (`_addr` field in the class) if `ip4()` is `True`. If `ip4()` is `False` then the contents are invalid.\n\n``` pony\nfun box ipv4_addr()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ipv6_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L176)\n\nReturns IPV6 address as the 4-tuple (say `a`). `a._1 = _addr1` // Bits 0-32 of the IPv6 address in host byte order. `a._2 = _addr2 // Bits 33-64 of the IPv6 address in host byte order.`a.\\_3 = \\_addr3 // Bits 65-96 of the IPv6 address in host byte order. \\`a.\\_4 = \\_addr4 // Bits 97-128 of the IPv6 address in host byte order.\n\nThe contents of the 4-tuple returned are valid only if `ip6()` is `True`.\n\n``` pony\nfun box ipv6_addr()\n: (U32 val , U32 val , U32 val , \n    U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val , [U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: NetAddress val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAddress](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NetAddress](https://stdlib.ponylang.io/net-NetAddress)"
- name: NetAddress.create()
  id: net-netaddress#create
  summary: null
  belongs_to: NetAddress
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L1)

    ``` pony
    new iso create()
    : NetAddress iso^
    ```

    #### Returns

    - [NetAddress](index) iso^

    ## Public Functions
- name: NetAddress.eq()
  id: net-netaddress#eq
  summary: null
  belongs_to: NetAddress
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L103)

    ``` pony
    fun box eq(
      that: NetAddress box)
    : Bool val
    ```

    #### Parameters

    - that: [NetAddress](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: NetAddress.family()
  id: net-netaddress#family
  summary: Returns the family
  belongs_to: NetAddress
  description: |-
    ### family

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L136)

    Returns the `family`.

    ``` pony
    fun box family()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: NetAddress.host_eq()
  id: net-netaddress#host_eq
  summary: null
  belongs_to: NetAddress
  description: |-
    ### host_eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L109)

    ``` pony
    fun box host_eq(
      that: NetAddress box)
    : Bool val
    ```

    #### Parameters

    - that: [NetAddress](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: NetAddress.ip4()
  id: net-netaddress#ip4
  summary: Returns true for an IPv4 address
  belongs_to: NetAddress
  description: |-
    ### ip4

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L55)

    Returns true for an IPv4 address.

    ``` pony
    fun box ip4()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: NetAddress.ip6()
  id: net-netaddress#ip6
  summary: Returns true for an IPv6 address
  belongs_to: NetAddress
  description: |-
    ### ip6

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L61)

    Returns true for an IPv6 address.

    ``` pony
    fun box ip6()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: NetAddress.ipv4_addr()
  id: net-netaddress#ipv4_addr
  summary: Returns IPV4 address (_addr field in the class) if ip4() is True
  belongs_to: NetAddress
  description: |-
    ### ipv4_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L169)

    Returns IPV4 address (`_addr` field in the class) if `ip4()` is `True`. If `ip4()` is `False` then the contents are invalid.

    ``` pony
    fun box ipv4_addr()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: NetAddress.ipv6_addr()
  id: net-netaddress#ipv6_addr
  summary: Returns IPV6 address as the 4-tuple (say a)
  belongs_to: NetAddress
  description: "### ipv6_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L176)\n\nReturns IPV6 address as the 4-tuple (say `a`). `a._1 = _addr1` // Bits 0-32 of the IPv6 address in host byte order. `a._2 = _addr2 // Bits 33-64 of the IPv6 address in host byte order.`a.\\_3 = \\_addr3 // Bits 65-96 of the IPv6 address in host byte order. \\`a.\\_4 = \\_addr4 // Bits 97-128 of the IPv6 address in host byte order.\n\nThe contents of the 4-tuple returned are valid only if `ip6()` is `True`.\n\n``` pony\nfun box ipv6_addr()\n: (U32 val , U32 val , U32 val , \n    U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val , [U32](builtin-u32) val , [U32](builtin-u32) val)\n\n&nbsp;"
- name: NetAddress.length()
  id: net-netaddress#length
  summary: For platforms (OSX/FreeBSD) with length field as part of its struct sockaddr definition, returns the length
  belongs_to: NetAddress
  description: |-
    ### length

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L119)

    For platforms (OSX/FreeBSD) with `length` field as part of its `struct sockaddr` definition, returns the `length`. Else (Linux/Windows) returns the size of `sockaddr_in` or `sockaddr_in6`.

    ``` pony
    fun box length()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: NetAddress.name()
  id: net-netaddress#name
  summary: Returns the host and service name
  belongs_to: NetAddress
  description: "### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/net_address/#L67)\n\nReturns the host and service name.\n\nIf `reversedns` is an instance of `DNSLookupAuth` a DNS lookup will be executed and the hostname for this address is returned as first element of the result tuple. If no hostname could be found, an error is raised. If `reversedns` is `None` the plain IP address is given and no DNS lookup is executed.\n\nIf `servicename` is `false` the numeric port is returned as second element of the result tuple. If it is `true` the port is translated into its corresponding servicename (e.g. port 80 is returned as `\"http\"`).\n\nInternally this method uses the POSIX C function `getnameinfo`.\n\n``` pony\nfun box name(\n  reversedns: (AmbientAuth val | NetAuth val | DNSAuth val | \n    None val) = reference,\n  servicename: Bool val = false)\n: (String val , String val) ?\n```\n\n#### Parameters\n\n- reversedns: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [DNSAuth](net-dnsauth) val \\| [None](builtin-none) val) = reference\n- servicename: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- ([String](builtin-string) val , [String](builtin-string) val) ?\n\n&nbsp;"
- name: NetAddress.ne()
  id: net-netaddress#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: NetAddress
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: NetAddress val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAddress](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NetAddress](https://stdlib.ponylang.io/net-NetAddress)"
- name: NetAddress.port()
  id: net-netaddress#port
  summary: Returns port number in host byte order
  belongs_to: NetAddress
  description: |-
    ### port

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L155)

    Returns port number in host byte order.

    ``` pony
    fun box port()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: NetAddress.scope()
  id: net-netaddress#scope
  summary: 'Returns IPv6 scope identifier: Unicast, Anycast, Multicast and unassigned scopes'
  belongs_to: NetAddress
  description: |-
    ### scope

    [\[Source\]](https://stdlib.ponylang.io/src/net/net_address/#L161)

    Returns IPv6 scope identifier: Unicast, Anycast, Multicast and unassigned scopes.

    ``` pony
    fun box scope()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: NetAuth
  id: net-netauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# NetAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L1)\n\n``` pony\nprimitive val NetAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L2)\n\n``` pony\nnew val create(\n  from: AmbientAuth val)\n: NetAuth val^\n```\n\n#### Parameters\n\n- from: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [NetAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L2)\n\n``` pony\nfun box eq(\n  that: NetAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L2)\n\n``` pony\nfun box ne(\n  that: NetAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NetAuth](https://stdlib.ponylang.io/net-NetAuth)"
- name: NetAuth.create()
  id: net-netauth#create
  summary: null
  belongs_to: NetAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L2)

    ``` pony
    new val create(
      from: AmbientAuth val)
    : NetAuth val^
    ```

    #### Parameters

    - from: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [NetAuth](index) val^

    ## Public Functions
- name: NetAuth.eq()
  id: net-netauth#eq
  summary: null
  belongs_to: NetAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L2)

    ``` pony
    fun box eq(
      that: NetAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [NetAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: NetAuth.ne()
  id: net-netauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: NetAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L2)\n\n``` pony\nfun box ne(\n  that: NetAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [NetAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NetAuth](https://stdlib.ponylang.io/net-NetAuth)"
- name: Nil
  id: collections-persistent-nil
  summary: The empty list of As
  description: "# Nil\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L87)\n\nThe empty list of As.\n\n``` pony\nprimitive val Nil[A: A] is\n  ReadSeq[val->A] box\n```\n\n#### Implements\n\n- [ReadSeq](builtin-readseq)\\[val-\\>A\\] box\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L87)\n\n``` pony\nnew val create()\n: Nil[A] val^\n```\n\n#### Returns\n\n- [Nil](index)\\[A\\] val^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)\n\nReturns the size of the list.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L98)\n\nReturns the i-th element of the sequence. For the empty list this call will always error because any index will be out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: val->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- val-\\>A ?\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L105)\n\nReturns an empty iterator over the elements of the empty list.\n\n``` pony\nfun box values()\n: Iterator[val->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[val-\\>A\\] ref^\n\n### is_empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L114)\n\nReturns a Bool indicating if the list is empty.\n\n``` pony\nfun box is_empty()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### is_non_empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L120)\n\nReturns a Bool indicating if the list is non-empty.\n\n``` pony\nfun box is_non_empty()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### head\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L126)\n\nReturns an error, since Nil has no head.\n\n``` pony\nfun box head()\n: val->A ?\n```\n\n#### Returns\n\n- val-\\>A ?\n\n### tail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L132)\n\nReturns an error, since Nil has no tail.\n\n``` pony\nfun box tail()\n: (Cons[A] val | Nil[A] val) ?\n```\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](index)\\[A\\] val) ?\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L138)\n\nThe reverse of the empty list is the empty list.\n\n``` pony\nfun box reverse()\n: Nil[A] val\n```\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### prepend\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L144)\n\nBuilds a new list with an element added to the front of this list.\n\n``` pony\nfun box prepend(\n  a: val->A!)\n: Cons[A] val\n```\n\n#### Parameters\n\n- a: val-\\>A!\n\n#### Returns\n\n- [Cons](collections-persistent-cons)\\[A\\] val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L150)\n\nThe concatenation of any list l with the empty list is l.\n\n``` pony\nfun box concat(\n  l: (Cons[A] val | Nil[A] val))\n: (Cons[A] val | Nil[A] val)\n```\n\n#### Parameters\n\n- l: ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](index)\\[A\\] val)\n\n#### Returns\n\n- ([Cons](collections-persistent-cons)\\[A\\] val \\| [Nil](index)\\[A\\] val)\n\n### map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L156)\n\nMapping a function from A to B over the empty list yields the empty list of Bs.\n\n``` pony\nfun box map[B: B](\n  f: {(val->A): val->B}[A, B] box)\n: Nil[B] val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): val-\\>B}\\[A, B\\] box\n\n#### Returns\n\n- [Nil](index)\\[B\\] val\n\n### flat_map\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L163)\n\nFlatmapping a function from A to B over the empty list yields the empty list of Bs.\n\n``` pony\nfun box flat_map[B: B](\n  f: {(val->A): List[B]}[A, B] box)\n: Nil[B] val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): List\\[B\\]}\\[A, B\\] box\n\n#### Returns\n\n- [Nil](index)\\[B\\] val\n\n### for_each\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L170)\n\nApplying a function to every member of the empty list is a no-op.\n\n``` pony\nfun box for_each(\n  f: {(val->A)}[A] box)\n: None val\n```\n\n#### Parameters\n\n- f: {(val-\\>A)}\\[A\\] box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L176)\n\nFiltering the empty list yields the empty list.\n\n``` pony\nfun box filter(\n  f: {(val->A): Bool}[A] box)\n: Nil[A] val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### fold\\[B: B\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L182)\n\nFolding over the empty list yields the initial accumulator.\n\n``` pony\nfun box fold[B: B](\n  f: {(B, val->A): B^}[A, B] box,\n  acc: B)\n: B\n```\n\n#### Parameters\n\n- f: {(B, val-\\>A): B^}\\[A, B\\] box\n- acc: B\n\n#### Returns\n\n- B\n\n### every\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L188)\n\nAny predicate is true of every member of the empty list.\n\n``` pony\nfun box every(\n  f: {(val->A): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### exists\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L194)\n\nFor any predicate, there is no element that satisfies it in the empty list.\n\n``` pony\nfun box exists(\n  f: {(val->A): Bool}[A] box)\n: Bool val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### partition\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L201)\n\nThe only partition of the empty list is two empty lists.\n\n``` pony\nfun box partition(\n  f: {(val->A): Bool}[A] box)\n: (Nil[A] val , Nil[A] val)\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- ([Nil](index)\\[A\\] val , [Nil](index)\\[A\\] val)\n\n### drop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L207)\n\nThere are no elements to drop from the empty list.\n\n``` pony\nfun box drop(\n  n: USize val)\n: Nil[A] val\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### drop_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L213)\n\nThere are no elements to drop from the empty list.\n\n``` pony\nfun box drop_while(\n  f: {(val->A): Bool}[A] box)\n: Nil[A] val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### take\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L219)\n\nThere are no elements to take from the empty list.\n\n``` pony\nfun box take(\n  n: USize val)\n: Nil[A] val\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### take_while\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L225)\n\nThere are no elements to take from the empty list.\n\n``` pony\nfun box take_while(\n  f: {(val->A): Bool}[A] box)\n: Nil[A] val\n```\n\n#### Parameters\n\n- f: {(val-\\>A): Bool}\\[A\\] box\n\n#### Returns\n\n- [Nil](index)\\[A\\] val\n\n### contains\\[optional T: (A & [HasEq](builtin-haseq)\\[A!\\] \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L231)\n\n``` pony\nfun val contains[optional T: (A & HasEq[A!] #read)](\n  a: val->T)\n: Bool val\n```\n\n#### Parameters\n\n- a: val-\\>T\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)\n\n``` pony\nfun box eq(\n  that: Nil[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nil](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)\n\n``` pony\nfun box ne(\n  that: Nil[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nil](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Nil](https://stdlib.ponylang.io/collections-persistent-Nil)"
- name: Nil.apply()
  id: collections-persistent-nil#apply
  summary: Returns the i-th element of the sequence
  belongs_to: Nil
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L98)

    Returns the i-th element of the sequence. For the empty list this call will always error because any index will be out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : val->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - val-\>A ?

    &nbsp;
- name: Nil.concat()
  id: collections-persistent-nil#concat
  summary: The concatenation of any list l with the empty list is l
  belongs_to: Nil
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L150)

    The concatenation of any list l with the empty list is l.

    ``` pony
    fun box concat(
      l: (Cons[A] val | Nil[A] val))
    : (Cons[A] val | Nil[A] val)
    ```

    #### Parameters

    - l: ([Cons](collections-persistent-cons)\[A\] val \| [Nil](index)\[A\] val)

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](index)\[A\] val)

    &nbsp;
- name: Nil.contains()
  id: collections-persistent-nil#containsoptional-t-a-haseqa-read
  summary: null
  belongs_to: Nil
  description: |-
    ### contains\[optional T: (A & [HasEq](builtin-haseq)\[A!\] \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L231)

    ``` pony
    fun val contains[optional T: (A & HasEq[A!] #read)](
      a: val->T)
    : Bool val
    ```

    #### Parameters

    - a: val-\>T

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.create()
  id: collections-persistent-nil#create
  summary: null
  belongs_to: Nil
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L87)

    ``` pony
    new val create()
    : Nil[A] val^
    ```

    #### Returns

    - [Nil](index)\[A\] val^

    ## Public Functions
- name: Nil.drop()
  id: collections-persistent-nil#drop
  summary: There are no elements to drop from the empty list
  belongs_to: Nil
  description: |-
    ### drop

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L207)

    There are no elements to drop from the empty list.

    ``` pony
    fun box drop(
      n: USize val)
    : Nil[A] val
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.drop_while()
  id: collections-persistent-nil#drop_while
  summary: There are no elements to drop from the empty list
  belongs_to: Nil
  description: |-
    ### drop_while

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L213)

    There are no elements to drop from the empty list.

    ``` pony
    fun box drop_while(
      f: {(val->A): Bool}[A] box)
    : Nil[A] val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.eq()
  id: collections-persistent-nil#eq
  summary: null
  belongs_to: Nil
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)

    ``` pony
    fun box eq(
      that: Nil[A] val)
    : Bool val
    ```

    #### Parameters

    - that: [Nil](index)\[A\] val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.every()
  id: collections-persistent-nil#every
  summary: Any predicate is true of every member of the empty list
  belongs_to: Nil
  description: |-
    ### every

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L188)

    Any predicate is true of every member of the empty list.

    ``` pony
    fun box every(
      f: {(val->A): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.exists()
  id: collections-persistent-nil#exists
  summary: For any predicate, there is no element that satisfies it in the empty list
  belongs_to: Nil
  description: |-
    ### exists

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L194)

    For any predicate, there is no element that satisfies it in the empty list.

    ``` pony
    fun box exists(
      f: {(val->A): Bool}[A] box)
    : Bool val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.filter()
  id: collections-persistent-nil#filter
  summary: Filtering the empty list yields the empty list
  belongs_to: Nil
  description: |-
    ### filter

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L176)

    Filtering the empty list yields the empty list.

    ``` pony
    fun box filter(
      f: {(val->A): Bool}[A] box)
    : Nil[A] val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.flat_map()
  id: collections-persistent-nil#flat_mapb-b
  summary: Flatmapping a function from A to B over the empty list yields the empty list of Bs
  belongs_to: Nil
  description: |-
    ### flat_map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L163)

    Flatmapping a function from A to B over the empty list yields the empty list of Bs.

    ``` pony
    fun box flat_map[B: B](
      f: {(val->A): List[B]}[A, B] box)
    : Nil[B] val
    ```

    #### Parameters

    - f: {(val-\>A): List\[B\]}\[A, B\] box

    #### Returns

    - [Nil](index)\[B\] val

    &nbsp;
- name: Nil.fold()
  id: collections-persistent-nil#foldb-b
  summary: Folding over the empty list yields the initial accumulator
  belongs_to: Nil
  description: |-
    ### fold\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L182)

    Folding over the empty list yields the initial accumulator.

    ``` pony
    fun box fold[B: B](
      f: {(B, val->A): B^}[A, B] box,
      acc: B)
    : B
    ```

    #### Parameters

    - f: {(B, val-\>A): B^}\[A, B\] box
    - acc: B

    #### Returns

    - B

    &nbsp;
- name: Nil.for_each()
  id: collections-persistent-nil#for_each
  summary: Applying a function to every member of the empty list is a no-op
  belongs_to: Nil
  description: |-
    ### for_each

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L170)

    Applying a function to every member of the empty list is a no-op.

    ``` pony
    fun box for_each(
      f: {(val->A)}[A] box)
    : None val
    ```

    #### Parameters

    - f: {(val-\>A)}\[A\] box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Nil.head()
  id: collections-persistent-nil#head
  summary: Returns an error, since Nil has no head
  belongs_to: Nil
  description: |-
    ### head

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L126)

    Returns an error, since Nil has no head.

    ``` pony
    fun box head()
    : val->A ?
    ```

    #### Returns

    - val-\>A ?

    &nbsp;
- name: Nil.is_empty()
  id: collections-persistent-nil#is_empty
  summary: Returns a Bool indicating if the list is empty
  belongs_to: Nil
  description: |-
    ### is_empty

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L114)

    Returns a Bool indicating if the list is empty.

    ``` pony
    fun box is_empty()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.is_non_empty()
  id: collections-persistent-nil#is_non_empty
  summary: Returns a Bool indicating if the list is non-empty
  belongs_to: Nil
  description: |-
    ### is_non_empty

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L120)

    Returns a Bool indicating if the list is non-empty.

    ``` pony
    fun box is_non_empty()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Nil.map()
  id: collections-persistent-nil#mapb-b
  summary: Mapping a function from A to B over the empty list yields the empty list of Bs
  belongs_to: Nil
  description: |-
    ### map\[B: B\]

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L156)

    Mapping a function from A to B over the empty list yields the empty list of Bs.

    ``` pony
    fun box map[B: B](
      f: {(val->A): val->B}[A, B] box)
    : Nil[B] val
    ```

    #### Parameters

    - f: {(val-\>A): val-\>B}\[A, B\] box

    #### Returns

    - [Nil](index)\[B\] val

    &nbsp;
- name: Nil.ne()
  id: collections-persistent-nil#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Nil
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)\n\n``` pony\nfun box ne(\n  that: Nil[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Nil](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Nil](https://stdlib.ponylang.io/collections-persistent-Nil)"
- name: Nil.partition()
  id: collections-persistent-nil#partition
  summary: The only partition of the empty list is two empty lists
  belongs_to: Nil
  description: |-
    ### partition

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L201)

    The only partition of the empty list is two empty lists.

    ``` pony
    fun box partition(
      f: {(val->A): Bool}[A] box)
    : (Nil[A] val , Nil[A] val)
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - ([Nil](index)\[A\] val , [Nil](index)\[A\] val)

    &nbsp;
- name: Nil.prepend()
  id: collections-persistent-nil#prepend
  summary: Builds a new list with an element added to the front of this list
  belongs_to: Nil
  description: |-
    ### prepend

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L144)

    Builds a new list with an element added to the front of this list.

    ``` pony
    fun box prepend(
      a: val->A!)
    : Cons[A] val
    ```

    #### Parameters

    - a: val-\>A!

    #### Returns

    - [Cons](collections-persistent-cons)\[A\] val

    &nbsp;
- name: Nil.reverse()
  id: collections-persistent-nil#reverse
  summary: The reverse of the empty list is the empty list
  belongs_to: Nil
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L138)

    The reverse of the empty list is the empty list.

    ``` pony
    fun box reverse()
    : Nil[A] val
    ```

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.size()
  id: collections-persistent-nil#size
  summary: Returns the size of the list
  belongs_to: Nil
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L92)

    Returns the size of the list.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: Nil.tail()
  id: collections-persistent-nil#tail
  summary: Returns an error, since Nil has no tail
  belongs_to: Nil
  description: |-
    ### tail

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L132)

    Returns an error, since Nil has no tail.

    ``` pony
    fun box tail()
    : (Cons[A] val | Nil[A] val) ?
    ```

    #### Returns

    - ([Cons](collections-persistent-cons)\[A\] val \| [Nil](index)\[A\] val) ?

    &nbsp;
- name: Nil.take()
  id: collections-persistent-nil#take
  summary: There are no elements to take from the empty list
  belongs_to: Nil
  description: |-
    ### take

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L219)

    There are no elements to take from the empty list.

    ``` pony
    fun box take(
      n: USize val)
    : Nil[A] val
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.take_while()
  id: collections-persistent-nil#take_while
  summary: There are no elements to take from the empty list
  belongs_to: Nil
  description: |-
    ### take_while

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L225)

    There are no elements to take from the empty list.

    ``` pony
    fun box take_while(
      f: {(val->A): Bool}[A] box)
    : Nil[A] val
    ```

    #### Parameters

    - f: {(val-\>A): Bool}\[A\] box

    #### Returns

    - [Nil](index)\[A\] val

    &nbsp;
- name: Nil.values()
  id: collections-persistent-nil#values
  summary: Returns an empty iterator over the elements of the empty list
  belongs_to: Nil
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/list/#L105)

    Returns an empty iterator over the elements of the empty list.

    ``` pony
    fun box values()
    : Iterator[val->A] ref^
    ```

    #### Returns

    - [Iterator](builtin-iterator)\[val-\>A\] ref^

    &nbsp;
- name: None
  id: builtin-none
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# None\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L1)\n\n``` pony\nprimitive val None is\n  Stringable box\n```\n\n#### Implements\n\n- [Stringable](builtin-stringable) box\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L1)\n\n``` pony\nnew val create()\n: None val^\n```\n\n#### Returns\n\n- [None](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L2)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L2)\n\n``` pony\nfun box eq(\n  that: None val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [None](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L2)\n\n``` pony\nfun box ne(\n  that: None val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [None](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-None](https://stdlib.ponylang.io/builtin-None)"
- name: None.create()
  id: builtin-none#create
  summary: null
  belongs_to: None
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/none/#L1)

    ``` pony
    new val create()
    : None val^
    ```

    #### Returns

    - [None](index) val^

    ## Public Functions
- name: None.eq()
  id: builtin-none#eq
  summary: null
  belongs_to: None
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/none/#L2)

    ``` pony
    fun box eq(
      that: None val)
    : Bool val
    ```

    #### Parameters

    - that: [None](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: None.ne()
  id: builtin-none#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: None
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/none/#L2)\n\n``` pony\nfun box ne(\n  that: None val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [None](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-None](https://stdlib.ponylang.io/builtin-None)"
- name: None.string()
  id: builtin-none#string
  summary: null
  belongs_to: None
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/none/#L2)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: NoProxy
  id: net-noproxy
  summary: Default implementation of a proxy that does not alter the supplied TCPConnectionNotify
  description: "# NoProxy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L5)\n\nDefault implementation of a proxy that does not alter the supplied `TCPConnectionNotify`.\n\n``` pony\nactor MyClient\n  new create(host: String, service: String, proxy: Proxy = NoProxy) =>\n    let conn: TCPConnection = TCPConnection.create(\n      env.root as AmbientAuth,\n      proxy.apply(MyConnectionNotify.create()),\n      \"localhost\",\n      \"80\")\n```\n\n``` pony\nclass val NoProxy is\n  Proxy ref\n```\n\n#### Implements\n\n- [Proxy](net-proxy) ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L5)\n\n``` pony\nnew iso create()\n: NoProxy iso^\n```\n\n#### Returns\n\n- [NoProxy](index) iso^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L19)\n\n``` pony\nfun box apply(\n  wrap: TCPConnectionNotify iso)\n: TCPConnectionNotify iso^\n```\n\n#### Parameters\n\n- wrap: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NoProxy](https://stdlib.ponylang.io/net-NoProxy)"
- name: NoProxy.apply()
  id: net-noproxy#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: NoProxy
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L19)\n\n``` pony\nfun box apply(\n  wrap: TCPConnectionNotify iso)\n: TCPConnectionNotify iso^\n```\n\n#### Parameters\n\n- wrap: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-NoProxy](https://stdlib.ponylang.io/net-NoProxy)"
- name: NoProxy.create()
  id: net-noproxy#create
  summary: null
  belongs_to: NoProxy
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/proxy/#L5)

    ``` pony
    new iso create()
    : NoProxy iso^
    ```

    #### Returns

    - [NoProxy](index) iso^

    ## Public Functions
- name: NullablePointer
  id: builtin-nullablepointer
  summary: A NullablePointer[A] is used to encode a possibly-null type
  description: "# NullablePointer\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L1)\n\nA NullablePointer\\[A\\] is used to encode a possibly-null type. It should *only* be used for structs that need to be passed to and from the C FFI.\n\nAn optional type for anything that isn't a struct should be encoded as a union type, for example (A \\| None).\n\n``` pony\nstruct ref NullablePointer[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L9)\n\nThis re-encodes the type of `that` from A to NullablePointer\\[A\\], allowing `that` to be assigned to a field or variable of type NullablePointer\\[A\\]. It doesn't allocate a wrapper object: there is no containing object for `that`.\n\n``` pony\nnew ref create(\n  that: A)\n: NullablePointer[A] ref^\n```\n\n#### Parameters\n\n- that: A\n\n#### Returns\n\n- [NullablePointer](index)\\[A\\] ref^\n\n### none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L17)\n\nThis returns a null pointer typed as a NullablePointer\\[A\\].\n\n``` pony\nnew ref none()\n: NullablePointer[A] ref^\n```\n\n#### Returns\n\n- [NullablePointer](index)\\[A\\] ref^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L23)\n\nThis re-encodes the type of `this` from NullablePointer\\[A\\] to A, allowing `this` to be assigned to a field of variable of type A. If `this` is a null pointer, an error is raised.\n\n``` pony\nfun box apply()\n: this->A ?\n```\n\n#### Returns\n\n- this-\\>A ?\n\n### is_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L31)\n\nReturns true if `this` is null (ie apply would raise an error).\n\n``` pony\nfun box is_none()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-NullablePointer](https://stdlib.ponylang.io/builtin-NullablePointer)"
- name: NullablePointer.apply()
  id: builtin-nullablepointer#apply
  summary: This re-encodes the type of this from NullablePointer[A] to A, allowing this to be assigned to a field of variable of type A
  belongs_to: NullablePointer
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L23)

    This re-encodes the type of `this` from NullablePointer\[A\] to A, allowing `this` to be assigned to a field of variable of type A. If `this` is a null pointer, an error is raised.

    ``` pony
    fun box apply()
    : this->A ?
    ```

    #### Returns

    - this-\>A ?

    &nbsp;
- name: NullablePointer.create()
  id: builtin-nullablepointer#create
  summary: This re-encodes the type of that from A to NullablePointer[A], allowing that to be assigned to a field or variable of type NullablePointer[A]
  belongs_to: NullablePointer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L9)

    This re-encodes the type of `that` from A to NullablePointer\[A\], allowing `that` to be assigned to a field or variable of type NullablePointer\[A\]. It doesn't allocate a wrapper object: there is no containing object for `that`.

    ``` pony
    new ref create(
      that: A)
    : NullablePointer[A] ref^
    ```

    #### Parameters

    - that: A

    #### Returns

    - [NullablePointer](index)\[A\] ref^
- name: NullablePointer.is_none()
  id: builtin-nullablepointer#is_none
  summary: Returns true if this is null (ie apply would raise an error)
  belongs_to: NullablePointer
  description: "### is_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L31)\n\nReturns true if `this` is null (ie apply would raise an error).\n\n``` pony\nfun box is_none()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-NullablePointer](https://stdlib.ponylang.io/builtin-NullablePointer)"
- name: NullablePointer.none()
  id: builtin-nullablepointer#none
  summary: This returns a null pointer typed as a NullablePointer[A]
  belongs_to: NullablePointer
  description: |-
    ### none

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/nullable_pointer/#L17)

    This returns a null pointer typed as a NullablePointer\[A\].

    ``` pony
    new ref none()
    : NullablePointer[A] ref^
    ```

    #### Returns

    - [NullablePointer](index)\[A\] ref^

    ## Public Functions
- name: Number
  id: builtin-number
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Number\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L714)\n\n``` pony\ntype Number is\n  (I8 val | I16 val | I32 val | I64 val | I128 val | ILong val | ISize val | U8 val | U16 val | U32 val | U64 val | U128 val | ULong val | USize val | F32 val | F64 val)\n```\n\n#### Type Alias For\n\n- ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Number](https://stdlib.ponylang.io/builtin-Number)"
- name: OpenFile
  id: files-openfile
  summary: Open a File for read only
  description: "# OpenFile\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L64)\n\nOpen a File for read only.\n\n``` pony\nprimitive val OpenFile\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L64)\n\n``` pony\nnew val create()\n: OpenFile val^\n```\n\n#### Returns\n\n- [OpenFile](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L68)\n\n``` pony\nfun box apply(\n  from: FilePath val)\n: (File ref | FileOK val | FileError val | \n    FileEOF val | FileBadFileNumber val | FileExists val | \n    FilePermissionDenied val)\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- ([File](files-file) ref \\| [FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L68)\n\n``` pony\nfun box eq(\n  that: OpenFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OpenFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L68)\n\n``` pony\nfun box ne(\n  that: OpenFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OpenFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-OpenFile](https://stdlib.ponylang.io/files-OpenFile)"
- name: OpenFile.apply()
  id: files-openfile#apply
  summary: null
  belongs_to: OpenFile
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L68)\n\n``` pony\nfun box apply(\n  from: FilePath val)\n: (File ref | FileOK val | FileError val | \n    FileEOF val | FileBadFileNumber val | FileExists val | \n    FilePermissionDenied val)\n```\n\n#### Parameters\n\n- from: [FilePath](files-filepath) val\n\n#### Returns\n\n- ([File](files-file) ref \\| [FileOK](files-fileok) val \\| [FileError](files-fileerror) val \\| [FileEOF](files-fileeof) val \\| [FileBadFileNumber](files-filebadfilenumber) val \\| [FileExists](files-fileexists) val \\| [FilePermissionDenied](files-filepermissiondenied) val)"
- name: OpenFile.create()
  id: files-openfile#create
  summary: null
  belongs_to: OpenFile
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L64)

    ``` pony
    new val create()
    : OpenFile val^
    ```

    #### Returns

    - [OpenFile](index) val^

    ## Public Functions
- name: OpenFile.eq()
  id: files-openfile#eq
  summary: null
  belongs_to: OpenFile
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/file/#L68)

    ``` pony
    fun box eq(
      that: OpenFile val)
    : Bool val
    ```

    #### Parameters

    - that: [OpenFile](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: OpenFile.ne()
  id: files-openfile#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: OpenFile
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file/#L68)\n\n``` pony\nfun box ne(\n  that: OpenFile val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OpenFile](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-OpenFile](https://stdlib.ponylang.io/files-OpenFile)"
- name: Option
  id: cli-option
  summary: Option contains a spec and an effective value for a given option
  description: "# Option\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L63)\n\nOption contains a spec and an effective value for a given option.\n\n``` pony\nclass val Option\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L70)\n\n``` pony\nnew val create(\n  spec': OptionSpec val,\n  value': (Bool val | String val | I64 val | \n    U64 val | F64 val | _StringSeq val))\n: Option val^\n```\n\n#### Parameters\n\n- spec': [OptionSpec](cli-optionspec) val\n- value': ([Bool](builtin-bool) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val \\| \\_StringSeq val)\n\n#### Returns\n\n- [Option](index) val^\n\n## Public Functions\n\n### spec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L77)\n\n``` pony\nfun box spec()\n: OptionSpec val\n```\n\n#### Returns\n\n- [OptionSpec](cli-optionspec) val\n\n### bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L79)\n\nReturns the option value as a Bool, defaulting to false.\n\n``` pony\nfun box bool()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L85)\n\nReturns the option value as a String, defaulting to empty.\n\n``` pony\nfun box string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L91)\n\nReturns the option value as an I64, defaulting to 0.\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L97)\n\nReturns the option value as an U64, defaulting to 0.\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L103)\n\nReturns the option value as an F64, defaulting to 0.0.\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### string_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L109)\n\nReturns the option value as a ReadSeq\\[String\\], defaulting to empty.\n\n``` pony\nfun box string_seq()\n: ReadSeq[String val] val\n```\n\n#### Returns\n\n- [ReadSeq](builtin-readseq)\\[[String](builtin-string) val\\] val\n\n### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L119)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Option](https://stdlib.ponylang.io/cli-Option)"
- name: Option.bool()
  id: cli-option#bool
  summary: Returns the option value as a Bool, defaulting to false
  belongs_to: Option
  description: |-
    ### bool

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L79)

    Returns the option value as a Bool, defaulting to false.

    ``` pony
    fun box bool()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Option.create()
  id: cli-option#create
  summary: null
  belongs_to: Option
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L70)\n\n``` pony\nnew val create(\n  spec': OptionSpec val,\n  value': (Bool val | String val | I64 val | \n    U64 val | F64 val | _StringSeq val))\n: Option val^\n```\n\n#### Parameters\n\n- spec': [OptionSpec](cli-optionspec) val\n- value': ([Bool](builtin-bool) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val \\| \\_StringSeq val)\n\n#### Returns\n\n- [Option](index) val^\n\n## Public Functions"
- name: Option.deb_string()
  id: cli-option#deb_string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Option
  description: "### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L119)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-Option](https://stdlib.ponylang.io/cli-Option)"
- name: Option.f64()
  id: cli-option#f64
  summary: Returns the option value as an F64, defaulting to 0.0
  belongs_to: Option
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L103)

    Returns the option value as an F64, defaulting to 0.0.

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Option.i64()
  id: cli-option#i64
  summary: Returns the option value as an I64, defaulting to 0
  belongs_to: Option
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L91)

    Returns the option value as an I64, defaulting to 0.

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Option.spec()
  id: cli-option#spec
  summary: null
  belongs_to: Option
  description: |-
    ### spec

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L77)

    ``` pony
    fun box spec()
    : OptionSpec val
    ```

    #### Returns

    - [OptionSpec](cli-optionspec) val
- name: Option.string()
  id: cli-option#string
  summary: Returns the option value as a String, defaulting to empty
  belongs_to: Option
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L85)

    Returns the option value as a String, defaulting to empty.

    ``` pony
    fun box string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Option.string_seq()
  id: cli-option#string_seq
  summary: Returns the option value as a ReadSeq[String], defaulting to empty
  belongs_to: Option
  description: |-
    ### string_seq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L109)

    Returns the option value as a ReadSeq\[String\], defaulting to empty.

    ``` pony
    fun box string_seq()
    : ReadSeq[String val] val
    ```

    #### Returns

    - [ReadSeq](builtin-readseq)\[[String](builtin-string) val\] val

    &nbsp;
- name: Option.u64()
  id: cli-option#u64
  summary: Returns the option value as an U64, defaulting to 0
  belongs_to: Option
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L97)

    Returns the option value as an U64, defaulting to 0.

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Optional
  id: options-optional
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Optional\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L74)\n\n``` pony\nprimitive val Optional\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L74)\n\n``` pony\nnew val create()\n: Optional val^\n```\n\n#### Returns\n\n- [Optional](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L76)\n\n``` pony\nfun box eq(\n  that: Optional val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Optional](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L76)\n\n``` pony\nfun box ne(\n  that: Optional val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Optional](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Optional](https://stdlib.ponylang.io/options-Optional)"
- name: Optional.create()
  id: options-optional#create
  summary: null
  belongs_to: Optional
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L74)

    ``` pony
    new val create()
    : Optional val^
    ```

    #### Returns

    - [Optional](index) val^

    ## Public Functions
- name: Optional.eq()
  id: options-optional#eq
  summary: null
  belongs_to: Optional
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L76)

    ``` pony
    fun box eq(
      that: Optional val)
    : Bool val
    ```

    #### Parameters

    - that: [Optional](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: Optional.ne()
  id: options-optional#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Optional
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L76)\n\n``` pony\nfun box ne(\n  that: Optional val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Optional](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Optional](https://stdlib.ponylang.io/options-Optional)"
- name: Options
  id: options-options
  summary: Adds a new named option to the parser configuration
  description: "# Options\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L102)\n\n``` pony\nclass ref Options is\n  Iterator[((String val , (None val | String val | I64 val | U64 val | F64 val)) | ParseError ref | None val)] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[(([String](builtin-string) val , ([None](builtin-none) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val)) \\| [ParseError](options-parseerror) ref \\| [None](builtin-none) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L109)\n\n``` pony\nnew ref create(\n  args: Array[String val] box,\n  fatal: Bool val = true)\n: Options ref^\n```\n\n#### Parameters\n\n- args: [Array](builtin-array)\\[[String](builtin-string) val\\] box\n- fatal: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [Options](index) ref^\n\n## Public Functions\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L117)\n\nAdds a new named option to the parser configuration.\n\n``` pony\nfun ref add(\n  long: String val,\n  short: (None val | String val) = reference,\n  arg: (None val | StringArgument val | I64Argument val | \n    U64Argument val | F64Argument val) = reference,\n  mode: (Required val | Optional val) = reference)\n: Options ref\n```\n\n#### Parameters\n\n- long: [String](builtin-string) val\n- short: ([None](builtin-none) val \\| [String](builtin-string) val) = reference\n- arg: ([None](builtin-none) val \\| [StringArgument](options-stringargument) val \\| [I64Argument](options-i64argument) val \\| [U64Argument](options-u64argument) val \\| [F64Argument](options-f64argument) val) = reference\n- mode: ([Required](options-required) val \\| [Optional](options-optional) val) = reference\n\n#### Returns\n\n- [Options](index) ref\n\n### remaining\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L130)\n\nReturns all unprocessed command line arguments. After parsing all options, this will only include positional arguments, potentially unrecognised and ambiguous options and invalid arguments.\n\n``` pony\nfun ref remaining()\n: Array[String ref] ref\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](builtin-string) ref\\] ref\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L250)\n\nParsing options is done if either an error occurs and fatal error reporting is turned on, or if all command line arguments have been processed.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L257)\n\nSkips all positional arguments and attemps to match named options. Returns a ParsedOption on success, a ParseError on error, or None if no named options are found.\n\n``` pony\nfun ref next()\n: ((String val , (None val | String val | I64 val | \n    U64 val | F64 val)) | ParseError ref | None val)\n```\n\n#### Returns\n\n- (([String](builtin-string) val , ([None](builtin-none) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val)) \\| [ParseError](options-parseerror) ref \\| [None](builtin-none) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Options](https://stdlib.ponylang.io/options-Options)"
- name: Options.add()
  id: options-options#add
  summary: Adds a new named option to the parser configuration
  belongs_to: Options
  description: "### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L117)\n\nAdds a new named option to the parser configuration.\n\n``` pony\nfun ref add(\n  long: String val,\n  short: (None val | String val) = reference,\n  arg: (None val | StringArgument val | I64Argument val | \n    U64Argument val | F64Argument val) = reference,\n  mode: (Required val | Optional val) = reference)\n: Options ref\n```\n\n#### Parameters\n\n- long: [String](builtin-string) val\n- short: ([None](builtin-none) val \\| [String](builtin-string) val) = reference\n- arg: ([None](builtin-none) val \\| [StringArgument](options-stringargument) val \\| [I64Argument](options-i64argument) val \\| [U64Argument](options-u64argument) val \\| [F64Argument](options-f64argument) val) = reference\n- mode: ([Required](options-required) val \\| [Optional](options-optional) val) = reference\n\n#### Returns\n\n- [Options](index) ref"
- name: Options.create()
  id: options-options#create
  summary: null
  belongs_to: Options
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L109)

    ``` pony
    new ref create(
      args: Array[String val] box,
      fatal: Bool val = true)
    : Options ref^
    ```

    #### Parameters

    - args: [Array](builtin-array)\[[String](builtin-string) val\] box
    - fatal: [Bool](builtin-bool) val = true

    #### Returns

    - [Options](index) ref^

    ## Public Functions
- name: Options.has_next()
  id: options-options#has_next
  summary: Parsing options is done if either an error occurs and fatal error reporting is turned on, or if all command line arguments have been processed
  belongs_to: Options
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L250)

    Parsing options is done if either an error occurs and fatal error reporting is turned on, or if all command line arguments have been processed.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Options.next()
  id: options-options#next
  summary: Skips all positional arguments and attemps to match named options
  belongs_to: Options
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L257)\n\nSkips all positional arguments and attemps to match named options. Returns a ParsedOption on success, a ParseError on error, or None if no named options are found.\n\n``` pony\nfun ref next()\n: ((String val , (None val | String val | I64 val | \n    U64 val | F64 val)) | ParseError ref | None val)\n```\n\n#### Returns\n\n- (([String](builtin-string) val , ([None](builtin-none) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val)) \\| [ParseError](options-parseerror) ref \\| [None](builtin-none) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Options](https://stdlib.ponylang.io/options-Options)"
- name: Options.remaining()
  id: options-options#remaining
  summary: Returns all unprocessed command line arguments
  belongs_to: Options
  description: |-
    ### remaining

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L130)

    Returns all unprocessed command line arguments. After parsing all options, this will only include positional arguments, potentially unrecognised and ambiguous options and invalid arguments.

    ``` pony
    fun ref remaining()
    : Array[String ref] ref
    ```

    #### Returns

    - [Array](builtin-array)\[[String](builtin-string) ref\] ref

    &nbsp;
- name: OptionSpec
  id: cli-optionspec
  summary: OptionSpec describes the specification of a named Option
  description: "# OptionSpec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L159)\n\nOptionSpec describes the specification of a named Option. They have a name, descr(iption), a short-name, a typ(e), and a default value when they are not required.\n\nOptions can be placed anywhere before or after commands, and can be thought of as named arguments.\n\n``` pony\nclass val OptionSpec\n```\n\n## Constructors\n\n### bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L183)\n\nCreates an Option with a Bool typed value that can be used like `--opt` or `-O` or `--opt=true` or `-O=true` to yield an option value like `cmd.option(\"opt\").bool() == true`.\n\n``` pony\nnew val bool(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference,\n  default': (Bool val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n- default': ([Bool](builtin-bool) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L200)\n\nCreates an Option with a String typed value that can be used like `--file=dir/filename` or `-F=dir/filename` or `-Fdir/filename` to yield an option value like `cmd.option(\"file\").string() == \"dir/filename\"`.\n\n``` pony\nnew val string(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference,\n  default': (String val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n- default': ([String](builtin-string) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L217)\n\nCreates an Option with an I64 typed value that can be used like `--count=42 -C=42` to yield an option value like `cmd.option(\"count\").i64() == I64(42)`.\n\n``` pony\nnew val i64(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference,\n  default': (I64 val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n- default': ([I64](builtin-i64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L233)\n\nCreates an Option with an U64 typed value that can be used like `--count=47 -C=47` to yield an option value like `cmd.option(\"count\").u64() == U64(47)`.\n\n``` pony\nnew val u64(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference,\n  default': (U64 val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n- default': ([U64](builtin-u64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L249)\n\nCreates an Option with a F64 typed value that can be used like `--ratio=1.039` or `-R=1.039` to yield an option value like `cmd.option(\"ratio\").f64() == F64(1.039)`.\n\n``` pony\nnew val f64(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference,\n  default': (F64 val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n- default': ([F64](builtin-f64) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n### string_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L265)\n\nCreates an Option with a ReadSeq\\[String\\] typed value that can be used like `--files=file1 --files=files2 --files=files2` to yield a sequence of three strings equivalent to `cmd.option(\"ratio\").string_seq() (equiv) [\"file1\"; \"file2\"; \"file3\"]`.\n\n``` pony\nnew val string_seq(\n  name': String val,\n  descr': String val = \"\",\n  short': (U8 val | None val) = reference)\n: OptionSpec val^\n```\n\n#### Parameters\n\n- name': [String](builtin-string) val\n- descr': [String](builtin-string) val = \"\"\n- short': ([U8](builtin-u8) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [OptionSpec](index) val^\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L281)\n\nReturns the name of this option.\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### descr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L287)\n\nReturns the description for this option.\n\n``` pony\nfun box descr()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### required\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L297)\n\nReturns true iff this option is required to be present in the command line.\n\n``` pony\nfun box required()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### help_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L326)\n\nReturns a formated help string for this option.\n\n``` pony\nfun box help_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L339)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-OptionSpec](https://stdlib.ponylang.io/cli-OptionSpec)"
- name: OptionSpec.bool()
  id: cli-optionspec#bool
  summary: Creates an Option with a Bool typed value that can be used like --opt or -O or --opt=true or -O=true to yield an option value like cmd.option("opt").bool() == true
  belongs_to: OptionSpec
  description: |-
    ### bool

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L183)

    Creates an Option with a Bool typed value that can be used like `--opt` or `-O` or `--opt=true` or `-O=true` to yield an option value like `cmd.option("opt").bool() == true`.

    ``` pony
    new val bool(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference,
      default': (Bool val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference
    - default': ([Bool](builtin-bool) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^
- name: OptionSpec.deb_string()
  id: cli-optionspec#deb_string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: OptionSpec
  description: "### deb_string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command_spec/#L339)\n\n``` pony\nfun box deb_string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-OptionSpec](https://stdlib.ponylang.io/cli-OptionSpec)"
- name: OptionSpec.descr()
  id: cli-optionspec#descr
  summary: Returns the description for this option
  belongs_to: OptionSpec
  description: |-
    ### descr

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L287)

    Returns the description for this option.

    ``` pony
    fun box descr()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: OptionSpec.f64()
  id: cli-optionspec#f64
  summary: Creates an Option with a F64 typed value that can be used like --ratio=1.039 or -R=1.039 to yield an option value like cmd.option("ratio").f64() == F64(1.039)
  belongs_to: OptionSpec
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L249)

    Creates an Option with a F64 typed value that can be used like `--ratio=1.039` or `-R=1.039` to yield an option value like `cmd.option("ratio").f64() == F64(1.039)`.

    ``` pony
    new val f64(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference,
      default': (F64 val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference
    - default': ([F64](builtin-f64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^

    &nbsp;
- name: OptionSpec.help_string()
  id: cli-optionspec#help_string
  summary: Returns a formated help string for this option
  belongs_to: OptionSpec
  description: |-
    ### help_string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L326)

    Returns a formated help string for this option.

    ``` pony
    fun box help_string()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: OptionSpec.i64()
  id: cli-optionspec#i64
  summary: Creates an Option with an I64 typed value that can be used like --count=42 -C=42 to yield an option value like cmd.option("count").i64() == I64(42)
  belongs_to: OptionSpec
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L217)

    Creates an Option with an I64 typed value that can be used like `--count=42 -C=42` to yield an option value like `cmd.option("count").i64() == I64(42)`.

    ``` pony
    new val i64(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference,
      default': (I64 val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference
    - default': ([I64](builtin-i64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^

    &nbsp;
- name: OptionSpec.name()
  id: cli-optionspec#name
  summary: Returns the name of this option
  belongs_to: OptionSpec
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L281)

    Returns the name of this option.

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: OptionSpec.required()
  id: cli-optionspec#required
  summary: Returns true iff this option is required to be present in the command line
  belongs_to: OptionSpec
  description: |-
    ### required

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L297)

    Returns true iff this option is required to be present in the command line.

    ``` pony
    fun box required()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: OptionSpec.string()
  id: cli-optionspec#string
  summary: null
  belongs_to: OptionSpec
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L200)

    Creates an Option with a String typed value that can be used like `--file=dir/filename` or `-F=dir/filename` or `-Fdir/filename` to yield an option value like `cmd.option("file").string() == "dir/filename"`.

    ``` pony
    new val string(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference,
      default': (String val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference
    - default': ([String](builtin-string) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^

    &nbsp;
- name: OptionSpec.string_seq()
  id: cli-optionspec#string_seq
  summary: Creates an Option with a ReadSeq[String] typed value that can be used like --files=file1 --files=files2 --files=files2 to yield a sequence of three strings equivalent to cmd.option("ratio").string_seq() (equiv) ["file1"; "file2"; "file3"]
  belongs_to: OptionSpec
  description: |-
    ### string_seq

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L265)

    Creates an Option with a ReadSeq\[String\] typed value that can be used like `--files=file1 --files=files2 --files=files2` to yield a sequence of three strings equivalent to `cmd.option("ratio").string_seq() (equiv) ["file1"; "file2"; "file3"]`.

    ``` pony
    new val string_seq(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^

    ## Public Functions
- name: OptionSpec.u64()
  id: cli-optionspec#u64
  summary: Creates an Option with an U64 typed value that can be used like --count=47 -C=47 to yield an option value like cmd.option("count").u64() == U64(47)
  belongs_to: OptionSpec
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command_spec/#L233)

    Creates an Option with an U64 typed value that can be used like `--count=47 -C=47` to yield an option value like `cmd.option("count").u64() == U64(47)`.

    ``` pony
    new val u64(
      name': String val,
      descr': String val = "",
      short': (U8 val | None val) = reference,
      default': (U64 val | None val) = reference)
    : OptionSpec val^
    ```

    #### Parameters

    - name': [String](builtin-string) val
    - descr': [String](builtin-string) val = ""
    - short': ([U8](builtin-u8) val \| [None](builtin-none) val) = reference
    - default': ([U64](builtin-u64) val \| [None](builtin-none) val) = reference

    #### Returns

    - [OptionSpec](index) val^

    &nbsp;
- name: OSSockOpt
  id: net-ossockopt
  summary: 'Convenience functions to fetch the option level and option name constants (arguments #2 and #3) for the getsockopt(2) and setsockopt(2) operating system calls'
  description: "# OSSockOpt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L4)\n\nConvenience functions to fetch the option level and option name constants (arguments \\#2 and \\#3) for the `getsockopt(2)` and `setsockopt(2)` operating system calls.\n\nThe values of the option level and option name constants are typically C preprocessor macros, e.g., `#define SOMETHING 42`. These macro names are upper case and may contain multiple consecutive underscore characters (though this is rare, for example, `IP_NAT__XXX`). The function names in this primitive are derived by the C macro name and then:\n\n- converted to lower case\n- any double underscore (`__`) is converted to a single underscore (`_`).\n\nThese constants are *not* stable between Pony releases. Values returned by this function may be held by long-lived variables by the calling process: values cannot change while the process runs. Programmers must not cache any of these values for purposes of sharing them for use by any other Pony program (for example, sharing via serialization & deserialization or via direct shared memory).\n\nMany functions may return `-1`, which means that the constant's value could not be determined at the Pony runtime library compile time. One cause may be that the option truly isn't available, for example, the option level constant `IPPROTO_3PC` is available on MacOS 10.x but not on Linux 4.4. Another cause may be the Pony runtime library's compilation did not include the correct header file(s) for the target OS platform.\n\nA third cause of error is due to the regular expression-based approach used to harvest desirable constants. It is not fool-proof. The regexp used is too broad and finds some macros that are not supposed to be used with `getsockopt(2)` and `setsockopt(2)`. Please consult your platform's documentation to verify the names of the option level and option name macros.\n\nThe following code fragments are equivalent: set the socket receive buffer size for the file descriptor `fd` to `4455`.\n\n``` pony\n/* In C */\nint option_value = 4455;\nsetsockopt(fd, SOL_SOCKET, SO_RCVBUF, &option_value, 4);\n\n/* In Pony */\nvar option: I32 = 4455;\n@pony_os_setsockopt[I32](fd, OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(),\n  addressof option, I32(4))\n```\n\n``` pony\nprimitive val OSSockOpt\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L4)\n\n``` pony\nnew val create()\n: OSSockOpt val^\n```\n\n#### Returns\n\n- [OSSockOpt](index) val^\n\n## Public Functions\n\n### ipproto_3pc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)\n\n``` pony\nfun box ipproto_3pc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_adfs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L77)\n\n``` pony\nfun box ipproto_adfs()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ah\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L78)\n\n``` pony\nfun box ipproto_ah()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ahip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L79)\n\n``` pony\nfun box ipproto_ahip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_apes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L80)\n\n``` pony\nfun box ipproto_apes()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_argus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L81)\n\n``` pony\nfun box ipproto_argus()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ax25\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L82)\n\n``` pony\nfun box ipproto_ax25()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_beetph\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L83)\n\n``` pony\nfun box ipproto_beetph()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_bha\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L84)\n\n``` pony\nfun box ipproto_bha()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_blt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L85)\n\n``` pony\nfun box ipproto_blt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_brsatmon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L86)\n\n``` pony\nfun box ipproto_brsatmon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_carp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L87)\n\n``` pony\nfun box ipproto_carp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_cftp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L88)\n\n``` pony\nfun box ipproto_cftp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_chaos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L89)\n\n``` pony\nfun box ipproto_chaos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_cmtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L90)\n\n``` pony\nfun box ipproto_cmtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_comp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L91)\n\n``` pony\nfun box ipproto_comp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_cphb\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L92)\n\n``` pony\nfun box ipproto_cphb()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_cpnx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L93)\n\n``` pony\nfun box ipproto_cpnx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_dccp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L94)\n\n``` pony\nfun box ipproto_dccp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ddp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L95)\n\n``` pony\nfun box ipproto_ddp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_dgp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L96)\n\n``` pony\nfun box ipproto_dgp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_divert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L97)\n\n``` pony\nfun box ipproto_divert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L98)\n\n``` pony\nfun box ipproto_done()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_dstopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L99)\n\n``` pony\nfun box ipproto_dstopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_egp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L100)\n\n``` pony\nfun box ipproto_egp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_emcon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L101)\n\n``` pony\nfun box ipproto_emcon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_encap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L102)\n\n``` pony\nfun box ipproto_encap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_eon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L103)\n\n``` pony\nfun box ipproto_eon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_esp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L104)\n\n``` pony\nfun box ipproto_esp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_etherip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L105)\n\n``` pony\nfun box ipproto_etherip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_fragment\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L106)\n\n``` pony\nfun box ipproto_fragment()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ggp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L107)\n\n``` pony\nfun box ipproto_ggp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_gmtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L108)\n\n``` pony\nfun box ipproto_gmtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_gre\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L109)\n\n``` pony\nfun box ipproto_gre()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_hello\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L110)\n\n``` pony\nfun box ipproto_hello()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_hip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L111)\n\n``` pony\nfun box ipproto_hip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_hmp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L112)\n\n``` pony\nfun box ipproto_hmp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_hopopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L113)\n\n``` pony\nfun box ipproto_hopopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_icmp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L114)\n\n``` pony\nfun box ipproto_icmp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_icmpv6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L115)\n\n``` pony\nfun box ipproto_icmpv6()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_idp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L116)\n\n``` pony\nfun box ipproto_idp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_idpr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L117)\n\n``` pony\nfun box ipproto_idpr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_idrp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L118)\n\n``` pony\nfun box ipproto_idrp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_igmp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L119)\n\n``` pony\nfun box ipproto_igmp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_igp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L120)\n\n``` pony\nfun box ipproto_igp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_igrp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L121)\n\n``` pony\nfun box ipproto_igrp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_il\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L122)\n\n``` pony\nfun box ipproto_il()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_inlsp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L123)\n\n``` pony\nfun box ipproto_inlsp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_inp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L124)\n\n``` pony\nfun box ipproto_inp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L125)\n\n``` pony\nfun box ipproto_ip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipcomp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L126)\n\n``` pony\nfun box ipproto_ipcomp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipcv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L127)\n\n``` pony\nfun box ipproto_ipcv()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipeip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L128)\n\n``` pony\nfun box ipproto_ipeip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L129)\n\n``` pony\nfun box ipproto_ipip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ippc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L130)\n\n``` pony\nfun box ipproto_ippc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipv4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L131)\n\n``` pony\nfun box ipproto_ipv4()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ipv6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L132)\n\n``` pony\nfun box ipproto_ipv6()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_irtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L133)\n\n``` pony\nfun box ipproto_irtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_kryptolan\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L134)\n\n``` pony\nfun box ipproto_kryptolan()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_larp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L135)\n\n``` pony\nfun box ipproto_larp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_leaf1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L136)\n\n``` pony\nfun box ipproto_leaf1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_leaf2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L137)\n\n``` pony\nfun box ipproto_leaf2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L138)\n\n``` pony\nfun box ipproto_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_maxid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L139)\n\n``` pony\nfun box ipproto_maxid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_meas\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L140)\n\n``` pony\nfun box ipproto_meas()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L141)\n\n``` pony\nfun box ipproto_mh()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mhrp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L142)\n\n``` pony\nfun box ipproto_mhrp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_micp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L143)\n\n``` pony\nfun box ipproto_micp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mobile\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L144)\n\n``` pony\nfun box ipproto_mobile()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mpls\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L145)\n\n``` pony\nfun box ipproto_mpls()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L146)\n\n``` pony\nfun box ipproto_mtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_mux\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L147)\n\n``` pony\nfun box ipproto_mux()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_nd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L148)\n\n``` pony\nfun box ipproto_nd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_nhrp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L149)\n\n``` pony\nfun box ipproto_nhrp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L150)\n\n``` pony\nfun box ipproto_none()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_nsp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L151)\n\n``` pony\nfun box ipproto_nsp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_nvpii\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L152)\n\n``` pony\nfun box ipproto_nvpii()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_old_divert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L153)\n\n``` pony\nfun box ipproto_old_divert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ospfigp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L154)\n\n``` pony\nfun box ipproto_ospfigp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pfsync\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L155)\n\n``` pony\nfun box ipproto_pfsync()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pgm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L156)\n\n``` pony\nfun box ipproto_pgm()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pigp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L157)\n\n``` pony\nfun box ipproto_pigp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pim\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L158)\n\n``` pony\nfun box ipproto_pim()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_prm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L159)\n\n``` pony\nfun box ipproto_prm()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pup\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L160)\n\n``` pony\nfun box ipproto_pup()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_pvp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L161)\n\n``` pony\nfun box ipproto_pvp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_raw\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L162)\n\n``` pony\nfun box ipproto_raw()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_rccmon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L163)\n\n``` pony\nfun box ipproto_rccmon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_rdp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L164)\n\n``` pony\nfun box ipproto_rdp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_reserved_253\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L165)\n\n``` pony\nfun box ipproto_reserved_253()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_reserved_254\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L166)\n\n``` pony\nfun box ipproto_reserved_254()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_routing\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L167)\n\n``` pony\nfun box ipproto_routing()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_rsvp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L168)\n\n``` pony\nfun box ipproto_rsvp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_rvd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L169)\n\n``` pony\nfun box ipproto_rvd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_satexpak\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L170)\n\n``` pony\nfun box ipproto_satexpak()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_satmon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L171)\n\n``` pony\nfun box ipproto_satmon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_sccsp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L172)\n\n``` pony\nfun box ipproto_sccsp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_sctp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L173)\n\n``` pony\nfun box ipproto_sctp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_sdrp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L174)\n\n``` pony\nfun box ipproto_sdrp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_send\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L175)\n\n``` pony\nfun box ipproto_send()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_sep\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L176)\n\n``` pony\nfun box ipproto_sep()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_shim6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L177)\n\n``` pony\nfun box ipproto_shim6()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_skip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L178)\n\n``` pony\nfun box ipproto_skip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_spacer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L179)\n\n``` pony\nfun box ipproto_spacer()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_srpc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L180)\n\n``` pony\nfun box ipproto_srpc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_st\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L181)\n\n``` pony\nfun box ipproto_st()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_svmtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L182)\n\n``` pony\nfun box ipproto_svmtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_swipe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L183)\n\n``` pony\nfun box ipproto_swipe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_tcf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L184)\n\n``` pony\nfun box ipproto_tcf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_tcp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L185)\n\n``` pony\nfun box ipproto_tcp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_tlsp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L186)\n\n``` pony\nfun box ipproto_tlsp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_tp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L187)\n\n``` pony\nfun box ipproto_tp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_tpxx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L188)\n\n``` pony\nfun box ipproto_tpxx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_trunk1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L189)\n\n``` pony\nfun box ipproto_trunk1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_trunk2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L190)\n\n``` pony\nfun box ipproto_trunk2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_ttp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L191)\n\n``` pony\nfun box ipproto_ttp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_udp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L192)\n\n``` pony\nfun box ipproto_udp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_udplite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L193)\n\n``` pony\nfun box ipproto_udplite()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_vines\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L194)\n\n``` pony\nfun box ipproto_vines()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_visa\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L195)\n\n``` pony\nfun box ipproto_visa()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_vmtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L196)\n\n``` pony\nfun box ipproto_vmtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_wbexpak\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L197)\n\n``` pony\nfun box ipproto_wbexpak()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_wbmon\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L198)\n\n``` pony\nfun box ipproto_wbmon()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_wsn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L199)\n\n``` pony\nfun box ipproto_wsn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_xnet\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L200)\n\n``` pony\nfun box ipproto_xnet()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipproto_xtp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L201)\n\n``` pony\nfun box ipproto_xtp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_atalk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L202)\n\n``` pony\nfun box sol_atalk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_ax25\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L203)\n\n``` pony\nfun box sol_ax25()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_hci_raw\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L204)\n\n``` pony\nfun box sol_hci_raw()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_ipx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L205)\n\n``` pony\nfun box sol_ipx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_l2cap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L206)\n\n``` pony\nfun box sol_l2cap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_local\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L207)\n\n``` pony\nfun box sol_local()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_ndrvproto\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L208)\n\n``` pony\nfun box sol_ndrvproto()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_netrom\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L209)\n\n``` pony\nfun box sol_netrom()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_rds\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L210)\n\n``` pony\nfun box sol_rds()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_rfcomm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L211)\n\n``` pony\nfun box sol_rfcomm()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_rose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L212)\n\n``` pony\nfun box sol_rose()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_sco\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L213)\n\n``` pony\nfun box sol_sco()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_socket\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L214)\n\n``` pony\nfun box sol_socket()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_tipc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L215)\n\n``` pony\nfun box sol_tipc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sol_udp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L216)\n\n``` pony\nfun box sol_udp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### af_coip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L225)\n\n``` pony\nfun box af_coip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### af_inet\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L226)\n\n``` pony\nfun box af_inet()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### af_inet6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L227)\n\n``` pony\nfun box af_inet6()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### bluetooth_proto_sco\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L228)\n\n``` pony\nfun box bluetooth_proto_sco()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_nr_pkt_types\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L229)\n\n``` pony\nfun box dccp_nr_pkt_types()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_service_list_max_len\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L230)\n\n``` pony\nfun box dccp_service_list_max_len()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_single_opt_maxlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L231)\n\n``` pony\nfun box dccp_single_opt_maxlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_available_ccids\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L232)\n\n``` pony\nfun box dccp_sockopt_available_ccids()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_ccid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L233)\n\n``` pony\nfun box dccp_sockopt_ccid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_ccid_rx_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L234)\n\n``` pony\nfun box dccp_sockopt_ccid_rx_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_ccid_tx_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L235)\n\n``` pony\nfun box dccp_sockopt_ccid_tx_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_change_l\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L236)\n\n``` pony\nfun box dccp_sockopt_change_l()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_change_r\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L237)\n\n``` pony\nfun box dccp_sockopt_change_r()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_get_cur_mps\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L238)\n\n``` pony\nfun box dccp_sockopt_get_cur_mps()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_packet_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L239)\n\n``` pony\nfun box dccp_sockopt_packet_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_qpolicy_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L240)\n\n``` pony\nfun box dccp_sockopt_qpolicy_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_qpolicy_txqlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L241)\n\n``` pony\nfun box dccp_sockopt_qpolicy_txqlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_recv_cscov\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L242)\n\n``` pony\nfun box dccp_sockopt_recv_cscov()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_rx_ccid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L243)\n\n``` pony\nfun box dccp_sockopt_rx_ccid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_send_cscov\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L244)\n\n``` pony\nfun box dccp_sockopt_send_cscov()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_server_timewait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L245)\n\n``` pony\nfun box dccp_sockopt_server_timewait()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_service\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L246)\n\n``` pony\nfun box dccp_sockopt_service()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dccp_sockopt_tx_ccid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L247)\n\n``` pony\nfun box dccp_sockopt_tx_ccid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_acceptmode\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L248)\n\n``` pony\nfun box dso_acceptmode()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_conaccept\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L249)\n\n``` pony\nfun box dso_conaccept()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_conaccess\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L250)\n\n``` pony\nfun box dso_conaccess()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_condata\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L251)\n\n``` pony\nfun box dso_condata()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_conreject\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L252)\n\n``` pony\nfun box dso_conreject()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_cork\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L253)\n\n``` pony\nfun box dso_cork()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_disdata\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L254)\n\n``` pony\nfun box dso_disdata()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L255)\n\n``` pony\nfun box dso_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_linkinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L256)\n\n``` pony\nfun box dso_linkinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L257)\n\n``` pony\nfun box dso_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_maxwindow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L258)\n\n``` pony\nfun box dso_maxwindow()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L259)\n\n``` pony\nfun box dso_nodelay()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_seqpacket\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L260)\n\n``` pony\nfun box dso_seqpacket()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_services\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L261)\n\n``` pony\nfun box dso_services()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### dso_stream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L262)\n\n``` pony\nfun box dso_stream()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L263)\n\n``` pony\nfun box icmp_address()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_addressreply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L264)\n\n``` pony\nfun box icmp_addressreply()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_dest_unreach\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L265)\n\n``` pony\nfun box icmp_dest_unreach()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_echo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L266)\n\n``` pony\nfun box icmp_echo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_echoreply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L267)\n\n``` pony\nfun box icmp_echoreply()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_exc_fragtime\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L268)\n\n``` pony\nfun box icmp_exc_fragtime()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_exc_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L269)\n\n``` pony\nfun box icmp_exc_ttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L270)\n\n``` pony\nfun box icmp_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_frag_needed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L271)\n\n``` pony\nfun box icmp_frag_needed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_host_ano\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L272)\n\n``` pony\nfun box icmp_host_ano()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_host_isolated\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L273)\n\n``` pony\nfun box icmp_host_isolated()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_host_unknown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L274)\n\n``` pony\nfun box icmp_host_unknown()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_host_unreach\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L275)\n\n``` pony\nfun box icmp_host_unreach()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_host_unr_tos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L276)\n\n``` pony\nfun box icmp_host_unr_tos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_info_reply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L277)\n\n``` pony\nfun box icmp_info_reply()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_info_request\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L278)\n\n``` pony\nfun box icmp_info_request()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_net_ano\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L279)\n\n``` pony\nfun box icmp_net_ano()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_net_unknown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L280)\n\n``` pony\nfun box icmp_net_unknown()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_net_unreach\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L281)\n\n``` pony\nfun box icmp_net_unreach()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_net_unr_tos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L282)\n\n``` pony\nfun box icmp_net_unr_tos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_parameterprob\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L283)\n\n``` pony\nfun box icmp_parameterprob()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_pkt_filtered\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L284)\n\n``` pony\nfun box icmp_pkt_filtered()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_port_unreach\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L285)\n\n``` pony\nfun box icmp_port_unreach()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_prec_cutoff\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L286)\n\n``` pony\nfun box icmp_prec_cutoff()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_prec_violation\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L287)\n\n``` pony\nfun box icmp_prec_violation()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_prot_unreach\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L288)\n\n``` pony\nfun box icmp_prot_unreach()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_redirect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L289)\n\n``` pony\nfun box icmp_redirect()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_redir_host\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L290)\n\n``` pony\nfun box icmp_redir_host()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_redir_hosttos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L291)\n\n``` pony\nfun box icmp_redir_hosttos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_redir_net\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L292)\n\n``` pony\nfun box icmp_redir_net()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_redir_nettos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L293)\n\n``` pony\nfun box icmp_redir_nettos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_source_quench\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L294)\n\n``` pony\nfun box icmp_source_quench()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_sr_failed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L295)\n\n``` pony\nfun box icmp_sr_failed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L296)\n\n``` pony\nfun box icmp_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_timestampreply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L297)\n\n``` pony\nfun box icmp_timestampreply()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### icmp_time_exceeded\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L298)\n\n``` pony\nfun box icmp_time_exceeded()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_acceptsourceroute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L299)\n\n``` pony\nfun box ipctl_acceptsourceroute()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_defmtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L300)\n\n``` pony\nfun box ipctl_defmtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_defttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L301)\n\n``` pony\nfun box ipctl_defttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_directedbroadcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L302)\n\n``` pony\nfun box ipctl_directedbroadcast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_fastforwarding\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L303)\n\n``` pony\nfun box ipctl_fastforwarding()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_forwarding\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L304)\n\n``` pony\nfun box ipctl_forwarding()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_gif_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L305)\n\n``` pony\nfun box ipctl_gif_ttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_intrdqdrops\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L306)\n\n``` pony\nfun box ipctl_intrdqdrops()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_intrdqmaxlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L307)\n\n``` pony\nfun box ipctl_intrdqmaxlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_intrqdrops\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L308)\n\n``` pony\nfun box ipctl_intrqdrops()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_intrqmaxlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L309)\n\n``` pony\nfun box ipctl_intrqmaxlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_keepfaith\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L310)\n\n``` pony\nfun box ipctl_keepfaith()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_maxid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L311)\n\n``` pony\nfun box ipctl_maxid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_rtexpire\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L312)\n\n``` pony\nfun box ipctl_rtexpire()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_rtmaxcache\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L313)\n\n``` pony\nfun box ipctl_rtmaxcache()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_rtminexpire\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L314)\n\n``` pony\nfun box ipctl_rtminexpire()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_sendredirects\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L315)\n\n``` pony\nfun box ipctl_sendredirects()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_sourceroute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L316)\n\n``` pony\nfun box ipctl_sourceroute()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipctl_stats\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L317)\n\n``` pony\nfun box ipctl_stats()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_ephemeralfirst\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L318)\n\n``` pony\nfun box ipport_ephemeralfirst()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_ephemerallast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L319)\n\n``` pony\nfun box ipport_ephemerallast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_hifirstauto\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L320)\n\n``` pony\nfun box ipport_hifirstauto()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_hilastauto\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L321)\n\n``` pony\nfun box ipport_hilastauto()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L322)\n\n``` pony\nfun box ipport_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_reserved\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L323)\n\n``` pony\nfun box ipport_reserved()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_reservedstart\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L324)\n\n``` pony\nfun box ipport_reservedstart()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipport_userreserved\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L325)\n\n``` pony\nfun box ipport_userreserved()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292dstopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L326)\n\n``` pony\nfun box ipv6_2292dstopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292hoplimit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L327)\n\n``` pony\nfun box ipv6_2292hoplimit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292hopopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L328)\n\n``` pony\nfun box ipv6_2292hopopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292pktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L329)\n\n``` pony\nfun box ipv6_2292pktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292pktoptions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L330)\n\n``` pony\nfun box ipv6_2292pktoptions()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_2292rthdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L331)\n\n``` pony\nfun box ipv6_2292rthdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_addrform\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L332)\n\n``` pony\nfun box ipv6_addrform()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_addr_preferences\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L333)\n\n``` pony\nfun box ipv6_addr_preferences()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_add_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L334)\n\n``` pony\nfun box ipv6_add_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_authhdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L335)\n\n``` pony\nfun box ipv6_authhdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_autoflowlabel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L336)\n\n``` pony\nfun box ipv6_autoflowlabel()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_checksum\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L337)\n\n``` pony\nfun box ipv6_checksum()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_dontfrag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L338)\n\n``` pony\nfun box ipv6_dontfrag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_drop_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L339)\n\n``` pony\nfun box ipv6_drop_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_dstopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L340)\n\n``` pony\nfun box ipv6_dstopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_flowinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L341)\n\n``` pony\nfun box ipv6_flowinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_flowinfo_flowlabel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L342)\n\n``` pony\nfun box ipv6_flowinfo_flowlabel()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_flowinfo_priority\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L343)\n\n``` pony\nfun box ipv6_flowinfo_priority()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_flowinfo_send\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L344)\n\n``` pony\nfun box ipv6_flowinfo_send()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_flowlabel_mgr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L345)\n\n``` pony\nfun box ipv6_flowlabel_mgr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_a_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L346)\n\n``` pony\nfun box ipv6_fl_a_get()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_a_put\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L347)\n\n``` pony\nfun box ipv6_fl_a_put()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_a_renew\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L348)\n\n``` pony\nfun box ipv6_fl_a_renew()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_f_create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L349)\n\n``` pony\nfun box ipv6_fl_f_create()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_f_excl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L350)\n\n``` pony\nfun box ipv6_fl_f_excl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_f_reflect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L351)\n\n``` pony\nfun box ipv6_fl_f_reflect()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_f_remote\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L352)\n\n``` pony\nfun box ipv6_fl_f_remote()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_s_any\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L353)\n\n``` pony\nfun box ipv6_fl_s_any()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_s_excl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L354)\n\n``` pony\nfun box ipv6_fl_s_excl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_s_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L355)\n\n``` pony\nfun box ipv6_fl_s_none()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_s_process\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L356)\n\n``` pony\nfun box ipv6_fl_s_process()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_fl_s_user\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L357)\n\n``` pony\nfun box ipv6_fl_s_user()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_hoplimit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L358)\n\n``` pony\nfun box ipv6_hoplimit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_hopopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L359)\n\n``` pony\nfun box ipv6_hopopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_ipsec_policy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L360)\n\n``` pony\nfun box ipv6_ipsec_policy()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_join_anycast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L361)\n\n``` pony\nfun box ipv6_join_anycast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_leave_anycast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L362)\n\n``` pony\nfun box ipv6_leave_anycast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_minhopcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L363)\n\n``` pony\nfun box ipv6_minhopcount()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L364)\n\n``` pony\nfun box ipv6_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_mtu_discover\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L365)\n\n``` pony\nfun box ipv6_mtu_discover()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_multicast_hops\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L366)\n\n``` pony\nfun box ipv6_multicast_hops()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_multicast_if\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L367)\n\n``` pony\nfun box ipv6_multicast_if()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_multicast_loop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L368)\n\n``` pony\nfun box ipv6_multicast_loop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_nexthop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L369)\n\n``` pony\nfun box ipv6_nexthop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_origdstaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L370)\n\n``` pony\nfun box ipv6_origdstaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pathmtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L371)\n\n``` pony\nfun box ipv6_pathmtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L372)\n\n``` pony\nfun box ipv6_pktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_do\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L373)\n\n``` pony\nfun box ipv6_pmtudisc_do()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_dont\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L374)\n\n``` pony\nfun box ipv6_pmtudisc_dont()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_interface\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L375)\n\n``` pony\nfun box ipv6_pmtudisc_interface()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_omit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L376)\n\n``` pony\nfun box ipv6_pmtudisc_omit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_probe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L377)\n\n``` pony\nfun box ipv6_pmtudisc_probe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_pmtudisc_want\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L378)\n\n``` pony\nfun box ipv6_pmtudisc_want()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_cga\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L379)\n\n``` pony\nfun box ipv6_prefer_src_cga()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_coa\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L380)\n\n``` pony\nfun box ipv6_prefer_src_coa()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_home\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L381)\n\n``` pony\nfun box ipv6_prefer_src_home()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_noncga\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L382)\n\n``` pony\nfun box ipv6_prefer_src_noncga()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_public\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L383)\n\n``` pony\nfun box ipv6_prefer_src_public()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_pubtmp_default\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L384)\n\n``` pony\nfun box ipv6_prefer_src_pubtmp_default()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_prefer_src_tmp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L385)\n\n``` pony\nfun box ipv6_prefer_src_tmp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_10\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L386)\n\n``` pony\nfun box ipv6_priority_10()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_11\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L387)\n\n``` pony\nfun box ipv6_priority_11()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_12\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L388)\n\n``` pony\nfun box ipv6_priority_12()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_13\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L389)\n\n``` pony\nfun box ipv6_priority_13()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_14\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L390)\n\n``` pony\nfun box ipv6_priority_14()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_15\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L391)\n\n``` pony\nfun box ipv6_priority_15()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L392)\n\n``` pony\nfun box ipv6_priority_8()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_9\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L393)\n\n``` pony\nfun box ipv6_priority_9()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_bulk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L394)\n\n``` pony\nfun box ipv6_priority_bulk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_control\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L395)\n\n``` pony\nfun box ipv6_priority_control()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_filler\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L396)\n\n``` pony\nfun box ipv6_priority_filler()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_interactive\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L397)\n\n``` pony\nfun box ipv6_priority_interactive()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_reserved1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L398)\n\n``` pony\nfun box ipv6_priority_reserved1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_reserved2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L399)\n\n``` pony\nfun box ipv6_priority_reserved2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_unattended\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L400)\n\n``` pony\nfun box ipv6_priority_unattended()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_priority_uncharacterized\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L401)\n\n``` pony\nfun box ipv6_priority_uncharacterized()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvdstopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L402)\n\n``` pony\nfun box ipv6_recvdstopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recverr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L403)\n\n``` pony\nfun box ipv6_recverr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvhoplimit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L404)\n\n``` pony\nfun box ipv6_recvhoplimit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvhopopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L405)\n\n``` pony\nfun box ipv6_recvhopopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvorigdstaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L406)\n\n``` pony\nfun box ipv6_recvorigdstaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvpathmtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L407)\n\n``` pony\nfun box ipv6_recvpathmtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvpktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L408)\n\n``` pony\nfun box ipv6_recvpktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvrthdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L409)\n\n``` pony\nfun box ipv6_recvrthdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_recvtclass\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L410)\n\n``` pony\nfun box ipv6_recvtclass()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_router_alert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L411)\n\n``` pony\nfun box ipv6_router_alert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_rthdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L412)\n\n``` pony\nfun box ipv6_rthdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_rthdrdstopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L413)\n\n``` pony\nfun box ipv6_rthdrdstopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tclass\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L414)\n\n``` pony\nfun box ipv6_tclass()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tlv_hao\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L415)\n\n``` pony\nfun box ipv6_tlv_hao()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tlv_jumbo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L416)\n\n``` pony\nfun box ipv6_tlv_jumbo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tlv_pad1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L417)\n\n``` pony\nfun box ipv6_tlv_pad1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tlv_padn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L418)\n\n``` pony\nfun box ipv6_tlv_padn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_tlv_routeralert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L419)\n\n``` pony\nfun box ipv6_tlv_routeralert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_transparent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L420)\n\n``` pony\nfun box ipv6_transparent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_unicast_hops\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L421)\n\n``` pony\nfun box ipv6_unicast_hops()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_unicast_if\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L422)\n\n``` pony\nfun box ipv6_unicast_if()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_use_min_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L423)\n\n``` pony\nfun box ipv6_use_min_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_v6only\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L424)\n\n``` pony\nfun box ipv6_v6only()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipv6_xfrm_policy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L425)\n\n``` pony\nfun box ipv6_xfrm_policy()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L426)\n\n``` pony\nfun box ipx_address()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_address_notify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L427)\n\n``` pony\nfun box ipx_address_notify()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_crtitf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L428)\n\n``` pony\nfun box ipx_crtitf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_dltitf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L429)\n\n``` pony\nfun box ipx_dltitf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_dstype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L430)\n\n``` pony\nfun box ipx_dstype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_extended_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L431)\n\n``` pony\nfun box ipx_extended_address()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_filterptype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L432)\n\n``` pony\nfun box ipx_filterptype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_8022\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L433)\n\n``` pony\nfun box ipx_frame_8022()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_8023\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L434)\n\n``` pony\nfun box ipx_frame_8023()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_etherii\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L435)\n\n``` pony\nfun box ipx_frame_etherii()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L436)\n\n``` pony\nfun box ipx_frame_none()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_snap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L437)\n\n``` pony\nfun box ipx_frame_snap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_frame_tr_8022\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L438)\n\n``` pony\nfun box ipx_frame_tr_8022()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_getnetinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L439)\n\n``` pony\nfun box ipx_getnetinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_getnetinfo_norip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L440)\n\n``` pony\nfun box ipx_getnetinfo_norip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_immediatespxack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L441)\n\n``` pony\nfun box ipx_immediatespxack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_internal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L442)\n\n``` pony\nfun box ipx_internal()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_maxsize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L443)\n\n``` pony\nfun box ipx_maxsize()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_max_adapter_num\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L444)\n\n``` pony\nfun box ipx_max_adapter_num()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L445)\n\n``` pony\nfun box ipx_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_node_len\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L446)\n\n``` pony\nfun box ipx_node_len()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_primary\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L447)\n\n``` pony\nfun box ipx_primary()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_ptype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L448)\n\n``` pony\nfun box ipx_ptype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_receive_broadcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L449)\n\n``` pony\nfun box ipx_receive_broadcast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_recvhdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L450)\n\n``` pony\nfun box ipx_recvhdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_reripnetnumber\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L451)\n\n``` pony\nfun box ipx_reripnetnumber()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_route_no_router\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L452)\n\n``` pony\nfun box ipx_route_no_router()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_rt_8022\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L453)\n\n``` pony\nfun box ipx_rt_8022()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_rt_bluebook\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L454)\n\n``` pony\nfun box ipx_rt_bluebook()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_rt_routed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L455)\n\n``` pony\nfun box ipx_rt_routed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_rt_snap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L456)\n\n``` pony\nfun box ipx_rt_snap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_special_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L457)\n\n``` pony\nfun box ipx_special_none()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_spxgetconnectionstatus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L458)\n\n``` pony\nfun box ipx_spxgetconnectionstatus()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_stopfilterptype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L459)\n\n``` pony\nfun box ipx_stopfilterptype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ipx_type\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L460)\n\n``` pony\nfun box ipx_type()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_add_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L461)\n\n``` pony\nfun box ip_add_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_add_source_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L462)\n\n``` pony\nfun box ip_add_source_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_bindany\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L463)\n\n``` pony\nfun box ip_bindany()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_bindmulti\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L464)\n\n``` pony\nfun box ip_bindmulti()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_bind_address_no_port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L465)\n\n``` pony\nfun box ip_bind_address_no_port()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_block_source\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L466)\n\n``` pony\nfun box ip_block_source()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_bound_if\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L467)\n\n``` pony\nfun box ip_bound_if()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_checksum\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L468)\n\n``` pony\nfun box ip_checksum()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_default_multicast_loop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L469)\n\n``` pony\nfun box ip_default_multicast_loop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_default_multicast_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L470)\n\n``` pony\nfun box ip_default_multicast_ttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dontfrag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L471)\n\n``` pony\nfun box ip_dontfrag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_drop_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L472)\n\n``` pony\nfun box ip_drop_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_drop_source_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L473)\n\n``` pony\nfun box ip_drop_source_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dummynet3\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L474)\n\n``` pony\nfun box ip_dummynet3()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dummynet_configure\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L475)\n\n``` pony\nfun box ip_dummynet_configure()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dummynet_del\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L476)\n\n``` pony\nfun box ip_dummynet_del()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dummynet_flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L477)\n\n``` pony\nfun box ip_dummynet_flush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_dummynet_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L478)\n\n``` pony\nfun box ip_dummynet_get()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_faith\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L479)\n\n``` pony\nfun box ip_faith()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_flowid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L480)\n\n``` pony\nfun box ip_flowid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_flowtype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L481)\n\n``` pony\nfun box ip_flowtype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_freebind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L482)\n\n``` pony\nfun box ip_freebind()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw3\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L483)\n\n``` pony\nfun box ip_fw3()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L484)\n\n``` pony\nfun box ip_fw_add()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_del\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L485)\n\n``` pony\nfun box ip_fw_del()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L486)\n\n``` pony\nfun box ip_fw_flush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L487)\n\n``` pony\nfun box ip_fw_get()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_nat_cfg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L488)\n\n``` pony\nfun box ip_fw_nat_cfg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_nat_del\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L489)\n\n``` pony\nfun box ip_fw_nat_del()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_nat_get_config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L490)\n\n``` pony\nfun box ip_fw_nat_get_config()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_nat_get_log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L491)\n\n``` pony\nfun box ip_fw_nat_get_log()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_resetlog\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L492)\n\n``` pony\nfun box ip_fw_resetlog()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_table_add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L493)\n\n``` pony\nfun box ip_fw_table_add()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_table_del\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L494)\n\n``` pony\nfun box ip_fw_table_del()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_table_flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L495)\n\n``` pony\nfun box ip_fw_table_flush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_table_getsize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L496)\n\n``` pony\nfun box ip_fw_table_getsize()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_table_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L497)\n\n``` pony\nfun box ip_fw_table_list()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_fw_zero\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L498)\n\n``` pony\nfun box ip_fw_zero()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_hdrincl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L499)\n\n``` pony\nfun box ip_hdrincl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_ipsec_policy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L500)\n\n``` pony\nfun box ip_ipsec_policy()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_max_group_src_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L501)\n\n``` pony\nfun box ip_max_group_src_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_max_memberships\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L502)\n\n``` pony\nfun box ip_max_memberships()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_max_sock_mute_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L503)\n\n``` pony\nfun box ip_max_sock_mute_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_max_sock_src_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L504)\n\n``` pony\nfun box ip_max_sock_src_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_max_source_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L505)\n\n``` pony\nfun box ip_max_source_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_minttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L506)\n\n``` pony\nfun box ip_minttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_min_memberships\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L507)\n\n``` pony\nfun box ip_min_memberships()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_msfilter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L508)\n\n``` pony\nfun box ip_msfilter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L509)\n\n``` pony\nfun box ip_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_mtu_discover\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L510)\n\n``` pony\nfun box ip_mtu_discover()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_all\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L511)\n\n``` pony\nfun box ip_multicast_all()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_if\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L512)\n\n``` pony\nfun box ip_multicast_if()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_ifindex\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L513)\n\n``` pony\nfun box ip_multicast_ifindex()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_loop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L514)\n\n``` pony\nfun box ip_multicast_loop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L515)\n\n``` pony\nfun box ip_multicast_ttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_multicast_vif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L516)\n\n``` pony\nfun box ip_multicast_vif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_nat_xxx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L517)\n\n``` pony\nfun box ip_nat_xxx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_nodefrag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L518)\n\n``` pony\nfun box ip_nodefrag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L519)\n\n``` pony\nfun box ip_old_fw_add()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_del\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L520)\n\n``` pony\nfun box ip_old_fw_del()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L521)\n\n``` pony\nfun box ip_old_fw_flush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_get\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L522)\n\n``` pony\nfun box ip_old_fw_get()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_resetlog\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L523)\n\n``` pony\nfun box ip_old_fw_resetlog()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_old_fw_zero\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L524)\n\n``` pony\nfun box ip_old_fw_zero()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_onesbcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L525)\n\n``` pony\nfun box ip_onesbcast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_options\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L526)\n\n``` pony\nfun box ip_options()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_origdstaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L527)\n\n``` pony\nfun box ip_origdstaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_passsec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L528)\n\n``` pony\nfun box ip_passsec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L529)\n\n``` pony\nfun box ip_pktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pktoptions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L530)\n\n``` pony\nfun box ip_pktoptions()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_do\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L531)\n\n``` pony\nfun box ip_pmtudisc_do()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_dont\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L532)\n\n``` pony\nfun box ip_pmtudisc_dont()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_interface\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L533)\n\n``` pony\nfun box ip_pmtudisc_interface()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_omit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L534)\n\n``` pony\nfun box ip_pmtudisc_omit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_probe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L535)\n\n``` pony\nfun box ip_pmtudisc_probe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_pmtudisc_want\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L536)\n\n``` pony\nfun box ip_pmtudisc_want()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_portrange\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L537)\n\n``` pony\nfun box ip_portrange()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_portrange_default\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L538)\n\n``` pony\nfun box ip_portrange_default()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_portrange_high\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L539)\n\n``` pony\nfun box ip_portrange_high()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_portrange_low\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L540)\n\n``` pony\nfun box ip_portrange_low()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvdstaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L541)\n\n``` pony\nfun box ip_recvdstaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recverr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L542)\n\n``` pony\nfun box ip_recverr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvflowid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L543)\n\n``` pony\nfun box ip_recvflowid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L544)\n\n``` pony\nfun box ip_recvif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L545)\n\n``` pony\nfun box ip_recvopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvorigdstaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L546)\n\n``` pony\nfun box ip_recvorigdstaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvpktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L547)\n\n``` pony\nfun box ip_recvpktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvretopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L548)\n\n``` pony\nfun box ip_recvretopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvrssbucketid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L549)\n\n``` pony\nfun box ip_recvrssbucketid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvtos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L550)\n\n``` pony\nfun box ip_recvtos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_recvttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L551)\n\n``` pony\nfun box ip_recvttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_retopts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L552)\n\n``` pony\nfun box ip_retopts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_router_alert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L553)\n\n``` pony\nfun box ip_router_alert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rssbucketid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L554)\n\n``` pony\nfun box ip_rssbucketid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rss_listen_bucket\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L555)\n\n``` pony\nfun box ip_rss_listen_bucket()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rsvp_off\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L556)\n\n``` pony\nfun box ip_rsvp_off()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rsvp_on\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L557)\n\n``` pony\nfun box ip_rsvp_on()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rsvp_vif_off\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L558)\n\n``` pony\nfun box ip_rsvp_vif_off()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_rsvp_vif_on\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L559)\n\n``` pony\nfun box ip_rsvp_vif_on()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_sendsrcaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L560)\n\n``` pony\nfun box ip_sendsrcaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_striphdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L561)\n\n``` pony\nfun box ip_striphdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_tos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L562)\n\n``` pony\nfun box ip_tos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_traffic_mgt_background\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L563)\n\n``` pony\nfun box ip_traffic_mgt_background()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_transparent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L564)\n\n``` pony\nfun box ip_transparent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L565)\n\n``` pony\nfun box ip_ttl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_unblock_source\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L566)\n\n``` pony\nfun box ip_unblock_source()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_unicast_if\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L567)\n\n``` pony\nfun box ip_unicast_if()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ip_xfrm_policy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L568)\n\n``` pony\nfun box ip_xfrm_policy()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_connwait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L569)\n\n``` pony\nfun box local_connwait()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_creds\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L570)\n\n``` pony\nfun box local_creds()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_peercred\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L571)\n\n``` pony\nfun box local_peercred()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_peerepid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L572)\n\n``` pony\nfun box local_peerepid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_peereuuid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L573)\n\n``` pony\nfun box local_peereuuid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_peerpid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L574)\n\n``` pony\nfun box local_peerpid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_peeruuid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L575)\n\n``` pony\nfun box local_peeruuid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### local_vendor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L576)\n\n``` pony\nfun box local_vendor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### max_tcpoptlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L577)\n\n``` pony\nfun box max_tcpoptlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_block_source\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L578)\n\n``` pony\nfun box mcast_block_source()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_exclude\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L579)\n\n``` pony\nfun box mcast_exclude()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_include\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L580)\n\n``` pony\nfun box mcast_include()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_join_group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L581)\n\n``` pony\nfun box mcast_join_group()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_join_source_group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L582)\n\n``` pony\nfun box mcast_join_source_group()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_leave_group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L583)\n\n``` pony\nfun box mcast_leave_group()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_leave_source_group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L584)\n\n``` pony\nfun box mcast_leave_source_group()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_msfilter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L585)\n\n``` pony\nfun box mcast_msfilter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_unblock_source\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L586)\n\n``` pony\nfun box mcast_unblock_source()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mcast_undefined\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L587)\n\n``` pony\nfun box mcast_undefined()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_add_bw_upcall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L588)\n\n``` pony\nfun box mrt_add_bw_upcall()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_add_mfc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L589)\n\n``` pony\nfun box mrt_add_mfc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_add_vif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L590)\n\n``` pony\nfun box mrt_add_vif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_api_config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L591)\n\n``` pony\nfun box mrt_api_config()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_api_flags_all\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L592)\n\n``` pony\nfun box mrt_api_flags_all()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_api_support\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L593)\n\n``` pony\nfun box mrt_api_support()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_assert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L594)\n\n``` pony\nfun box mrt_assert()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_del_bw_upcall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L595)\n\n``` pony\nfun box mrt_del_bw_upcall()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_del_mfc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L596)\n\n``` pony\nfun box mrt_del_mfc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_del_vif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L597)\n\n``` pony\nfun box mrt_del_vif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L598)\n\n``` pony\nfun box mrt_done()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_init\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L599)\n\n``` pony\nfun box mrt_init()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_mfc_bw_upcall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L600)\n\n``` pony\nfun box mrt_mfc_bw_upcall()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_mfc_flags_all\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L601)\n\n``` pony\nfun box mrt_mfc_flags_all()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_mfc_flags_border_vif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L602)\n\n``` pony\nfun box mrt_mfc_flags_border_vif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_mfc_flags_disable_wrongvif\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L603)\n\n``` pony\nfun box mrt_mfc_flags_disable_wrongvif()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_mfc_rp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L604)\n\n``` pony\nfun box mrt_mfc_rp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_pim\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L605)\n\n``` pony\nfun box mrt_pim()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### mrt_version\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L606)\n\n``` pony\nfun box mrt_version()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### msg_notification\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L607)\n\n``` pony\nfun box msg_notification()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### msg_socallbck\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L608)\n\n``` pony\nfun box msg_socallbck()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrvproto_ndrv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L609)\n\n``` pony\nfun box ndrvproto_ndrv()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_addmulticast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L610)\n\n``` pony\nfun box ndrv_addmulticast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_deldmxspec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L611)\n\n``` pony\nfun box ndrv_deldmxspec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_delmulticast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L612)\n\n``` pony\nfun box ndrv_delmulticast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_demuxtype_ethertype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L613)\n\n``` pony\nfun box ndrv_demuxtype_ethertype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_demuxtype_sap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L614)\n\n``` pony\nfun box ndrv_demuxtype_sap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_demuxtype_snap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L615)\n\n``` pony\nfun box ndrv_demuxtype_snap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_dmux_max_descr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L616)\n\n``` pony\nfun box ndrv_dmux_max_descr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_protocol_desc_vers\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L617)\n\n``` pony\nfun box ndrv_protocol_desc_vers()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ndrv_setdmxspec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L618)\n\n``` pony\nfun box ndrv_setdmxspec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_add_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L619)\n\n``` pony\nfun box netlink_add_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_audit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L620)\n\n``` pony\nfun box netlink_audit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_broadcast_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L621)\n\n``` pony\nfun box netlink_broadcast_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_cap_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L622)\n\n``` pony\nfun box netlink_cap_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_connector\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L623)\n\n``` pony\nfun box netlink_connector()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_crypto\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L624)\n\n``` pony\nfun box netlink_crypto()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_dnrtmsg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L625)\n\n``` pony\nfun box netlink_dnrtmsg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_drop_membership\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L626)\n\n``` pony\nfun box netlink_drop_membership()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_ecryptfs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L627)\n\n``` pony\nfun box netlink_ecryptfs()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_fib_lookup\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L628)\n\n``` pony\nfun box netlink_fib_lookup()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_firewall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L629)\n\n``` pony\nfun box netlink_firewall()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_generic\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L630)\n\n``` pony\nfun box netlink_generic()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_inet_diag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L631)\n\n``` pony\nfun box netlink_inet_diag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_ip6_fw\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L632)\n\n``` pony\nfun box netlink_ip6_fw()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_iscsi\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L633)\n\n``` pony\nfun box netlink_iscsi()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_kobject_uevent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L634)\n\n``` pony\nfun box netlink_kobject_uevent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_listen_all_nsid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L635)\n\n``` pony\nfun box netlink_listen_all_nsid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_list_memberships\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L636)\n\n``` pony\nfun box netlink_list_memberships()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_netfilter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L637)\n\n``` pony\nfun box netlink_netfilter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_nflog\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L638)\n\n``` pony\nfun box netlink_nflog()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_no_enobufs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L639)\n\n``` pony\nfun box netlink_no_enobufs()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_pktinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L640)\n\n``` pony\nfun box netlink_pktinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_rdma\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L641)\n\n``` pony\nfun box netlink_rdma()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_route\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L642)\n\n``` pony\nfun box netlink_route()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_rx_ring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L643)\n\n``` pony\nfun box netlink_rx_ring()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_scsitransport\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L644)\n\n``` pony\nfun box netlink_scsitransport()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_selinux\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L645)\n\n``` pony\nfun box netlink_selinux()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_sock_diag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L646)\n\n``` pony\nfun box netlink_sock_diag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_tx_ring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L647)\n\n``` pony\nfun box netlink_tx_ring()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_unused\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L648)\n\n``` pony\nfun box netlink_unused()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_usersock\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L649)\n\n``` pony\nfun box netlink_usersock()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netlink_xfrm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L650)\n\n``` pony\nfun box netlink_xfrm()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_idle\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L651)\n\n``` pony\nfun box netrom_idle()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_kill\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L652)\n\n``` pony\nfun box netrom_kill()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_n2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L653)\n\n``` pony\nfun box netrom_n2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_neigh\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L654)\n\n``` pony\nfun box netrom_neigh()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_node\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L655)\n\n``` pony\nfun box netrom_node()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_paclen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L656)\n\n``` pony\nfun box netrom_paclen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_t1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L657)\n\n``` pony\nfun box netrom_t1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_t2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L658)\n\n``` pony\nfun box netrom_t2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### netrom_t4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L659)\n\n``` pony\nfun box netrom_t4()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### nrdv_multicast_addrs_per_sock\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L660)\n\n``` pony\nfun box nrdv_multicast_addrs_per_sock()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### pvd_config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L661)\n\n``` pony\nfun box pvd_config()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cancel_sent_to\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L662)\n\n``` pony\nfun box rds_cancel_sent_to()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_atomic_cswp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L663)\n\n``` pony\nfun box rds_cmsg_atomic_cswp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_atomic_fadd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L664)\n\n``` pony\nfun box rds_cmsg_atomic_fadd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_cong_update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L665)\n\n``` pony\nfun box rds_cmsg_cong_update()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_masked_atomic_cswp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L666)\n\n``` pony\nfun box rds_cmsg_masked_atomic_cswp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_masked_atomic_fadd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L667)\n\n``` pony\nfun box rds_cmsg_masked_atomic_fadd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_rdma_args\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L668)\n\n``` pony\nfun box rds_cmsg_rdma_args()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_rdma_dest\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L669)\n\n``` pony\nfun box rds_cmsg_rdma_dest()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_rdma_map\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L670)\n\n``` pony\nfun box rds_cmsg_rdma_map()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cmsg_rdma_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L671)\n\n``` pony\nfun box rds_cmsg_rdma_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cong_monitor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L672)\n\n``` pony\nfun box rds_cong_monitor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_cong_monitor_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L673)\n\n``` pony\nfun box rds_cong_monitor_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_free_mr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L674)\n\n``` pony\nfun box rds_free_mr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_get_mr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L675)\n\n``` pony\nfun box rds_get_mr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_get_mr_for_dest\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L676)\n\n``` pony\nfun box rds_get_mr_for_dest()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_ib_abi_version\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L677)\n\n``` pony\nfun box rds_ib_abi_version()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_ib_gid_len\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L678)\n\n``` pony\nfun box rds_ib_gid_len()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_connections\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L679)\n\n``` pony\nfun box rds_info_connections()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_connection_flag_connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L680)\n\n``` pony\nfun box rds_info_connection_flag_connected()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_connection_flag_connecting\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L681)\n\n``` pony\nfun box rds_info_connection_flag_connecting()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_connection_flag_sending\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L682)\n\n``` pony\nfun box rds_info_connection_flag_sending()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_connection_stats\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L683)\n\n``` pony\nfun box rds_info_connection_stats()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_counters\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L684)\n\n``` pony\nfun box rds_info_counters()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_first\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L685)\n\n``` pony\nfun box rds_info_first()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_ib_connections\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L686)\n\n``` pony\nfun box rds_info_ib_connections()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_iwarp_connections\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L687)\n\n``` pony\nfun box rds_info_iwarp_connections()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_last\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L688)\n\n``` pony\nfun box rds_info_last()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_message_flag_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L689)\n\n``` pony\nfun box rds_info_message_flag_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_message_flag_fast_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L690)\n\n``` pony\nfun box rds_info_message_flag_fast_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_recv_messages\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L691)\n\n``` pony\nfun box rds_info_recv_messages()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_retrans_messages\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L692)\n\n``` pony\nfun box rds_info_retrans_messages()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_send_messages\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L693)\n\n``` pony\nfun box rds_info_send_messages()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_sockets\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L694)\n\n``` pony\nfun box rds_info_sockets()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_info_tcp_sockets\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L695)\n\n``` pony\nfun box rds_info_tcp_sockets()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_canceled\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L696)\n\n``` pony\nfun box rds_rdma_canceled()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_dontwait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L697)\n\n``` pony\nfun box rds_rdma_dontwait()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_dropped\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L698)\n\n``` pony\nfun box rds_rdma_dropped()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_fence\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L699)\n\n``` pony\nfun box rds_rdma_fence()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_invalidate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L700)\n\n``` pony\nfun box rds_rdma_invalidate()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_notify_me\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L701)\n\n``` pony\nfun box rds_rdma_notify_me()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_other_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L702)\n\n``` pony\nfun box rds_rdma_other_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_readwrite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L703)\n\n``` pony\nfun box rds_rdma_readwrite()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_remote_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L704)\n\n``` pony\nfun box rds_rdma_remote_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_silent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L705)\n\n``` pony\nfun box rds_rdma_silent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_success\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L706)\n\n``` pony\nfun box rds_rdma_success()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_rdma_use_once\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L707)\n\n``` pony\nfun box rds_rdma_use_once()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_recverr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L708)\n\n``` pony\nfun box rds_recverr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_trans_count\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L709)\n\n``` pony\nfun box rds_trans_count()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_trans_ib\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L710)\n\n``` pony\nfun box rds_trans_ib()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_trans_iwarp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L711)\n\n``` pony\nfun box rds_trans_iwarp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_trans_none\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L712)\n\n``` pony\nfun box rds_trans_none()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rds_trans_tcp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L713)\n\n``` pony\nfun box rds_trans_tcp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_access_barred\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L714)\n\n``` pony\nfun box rose_access_barred()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_defer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L715)\n\n``` pony\nfun box rose_defer()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_dte_originated\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L716)\n\n``` pony\nfun box rose_dte_originated()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_holdback\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L717)\n\n``` pony\nfun box rose_holdback()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_idle\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L718)\n\n``` pony\nfun box rose_idle()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_invalid_facility\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L719)\n\n``` pony\nfun box rose_invalid_facility()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_local_procedure\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L720)\n\n``` pony\nfun box rose_local_procedure()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_max_digis\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L721)\n\n``` pony\nfun box rose_max_digis()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L722)\n\n``` pony\nfun box rose_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_network_congestion\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L723)\n\n``` pony\nfun box rose_network_congestion()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_not_obtainable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L724)\n\n``` pony\nfun box rose_not_obtainable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_number_busy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L725)\n\n``` pony\nfun box rose_number_busy()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_out_of_order\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L726)\n\n``` pony\nfun box rose_out_of_order()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_qbitincl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L727)\n\n``` pony\nfun box rose_qbitincl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_remote_procedure\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L728)\n\n``` pony\nfun box rose_remote_procedure()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_ship_absent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L729)\n\n``` pony\nfun box rose_ship_absent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_t1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L730)\n\n``` pony\nfun box rose_t1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_t2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L731)\n\n``` pony\nfun box rose_t2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### rose_t3\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L732)\n\n``` pony\nfun box rose_t3()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### scm_hci_raw_direction\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L733)\n\n``` pony\nfun box scm_hci_raw_direction()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### scm_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L734)\n\n``` pony\nfun box scm_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### scm_timestamping\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L735)\n\n``` pony\nfun box scm_timestamping()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### scm_timestampns\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L736)\n\n``` pony\nfun box scm_timestampns()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### scm_wifi_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L737)\n\n``` pony\nfun box scm_wifi_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_abort_association\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L738)\n\n``` pony\nfun box sctp_abort_association()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_adaptation_layer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L739)\n\n``` pony\nfun box sctp_adaptation_layer()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_adaption_layer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L740)\n\n``` pony\nfun box sctp_adaption_layer()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_add_streams\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L741)\n\n``` pony\nfun box sctp_add_streams()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_add_vrf_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L742)\n\n``` pony\nfun box sctp_add_vrf_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_asconf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L743)\n\n``` pony\nfun box sctp_asconf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_asconf_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L744)\n\n``` pony\nfun box sctp_asconf_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_asconf_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L745)\n\n``` pony\nfun box sctp_asconf_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_associnfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L746)\n\n``` pony\nfun box sctp_associnfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_authentication\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L747)\n\n``` pony\nfun box sctp_authentication()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_active_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L748)\n\n``` pony\nfun box sctp_auth_active_key()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_chunk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L749)\n\n``` pony\nfun box sctp_auth_chunk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_deactivate_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L750)\n\n``` pony\nfun box sctp_auth_deactivate_key()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_delete_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L751)\n\n``` pony\nfun box sctp_auth_delete_key()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L752)\n\n``` pony\nfun box sctp_auth_key()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auth_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L753)\n\n``` pony\nfun box sctp_auth_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_autoclose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L754)\n\n``` pony\nfun box sctp_autoclose()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_auto_asconf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L755)\n\n``` pony\nfun box sctp_auto_asconf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_badcrc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L756)\n\n``` pony\nfun box sctp_badcrc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_bindx_add_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L757)\n\n``` pony\nfun box sctp_bindx_add_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_bindx_rem_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L758)\n\n``` pony\nfun box sctp_bindx_rem_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_blk_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L759)\n\n``` pony\nfun box sctp_blk_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_bound\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L760)\n\n``` pony\nfun box sctp_bound()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_cookie_in_shutdown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L761)\n\n``` pony\nfun box sctp_cause_cookie_in_shutdown()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_deleting_last_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L762)\n\n``` pony\nfun box sctp_cause_deleting_last_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_deleting_src_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L763)\n\n``` pony\nfun box sctp_cause_deleting_src_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_illegal_asconf_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L764)\n\n``` pony\nfun box sctp_cause_illegal_asconf_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_invalid_param\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L765)\n\n``` pony\nfun box sctp_cause_invalid_param()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_invalid_stream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L766)\n\n``` pony\nfun box sctp_cause_invalid_stream()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_missing_param\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L767)\n\n``` pony\nfun box sctp_cause_missing_param()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_nat_colliding_state\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L768)\n\n``` pony\nfun box sctp_cause_nat_colliding_state()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_nat_missing_state\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L769)\n\n``` pony\nfun box sctp_cause_nat_missing_state()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_no_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L770)\n\n``` pony\nfun box sctp_cause_no_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_no_user_data\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L771)\n\n``` pony\nfun box sctp_cause_no_user_data()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_out_of_resc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L772)\n\n``` pony\nfun box sctp_cause_out_of_resc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_protocol_violation\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L773)\n\n``` pony\nfun box sctp_cause_protocol_violation()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_request_refused\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L774)\n\n``` pony\nfun box sctp_cause_request_refused()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_resource_shortage\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L775)\n\n``` pony\nfun box sctp_cause_resource_shortage()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_restart_w_newaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L776)\n\n``` pony\nfun box sctp_cause_restart_w_newaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_stale_cookie\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L777)\n\n``` pony\nfun box sctp_cause_stale_cookie()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_unrecog_chunk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L778)\n\n``` pony\nfun box sctp_cause_unrecog_chunk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_unrecog_param\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L779)\n\n``` pony\nfun box sctp_cause_unrecog_param()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_unresolvable_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L780)\n\n``` pony\nfun box sctp_cause_unresolvable_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_unsupported_hmacid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L781)\n\n``` pony\nfun box sctp_cause_unsupported_hmacid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cause_user_initiated_abt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L782)\n\n``` pony\nfun box sctp_cause_user_initiated_abt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_hstcp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L783)\n\n``` pony\nfun box sctp_cc_hstcp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_htcp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L784)\n\n``` pony\nfun box sctp_cc_htcp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_option\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L785)\n\n``` pony\nfun box sctp_cc_option()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_opt_rtcc_setmode\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L786)\n\n``` pony\nfun box sctp_cc_opt_rtcc_setmode()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_opt_steady_step\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L787)\n\n``` pony\nfun box sctp_cc_opt_steady_step()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_opt_use_dccc_ecn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L788)\n\n``` pony\nfun box sctp_cc_opt_use_dccc_ecn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_rfc2581\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L789)\n\n``` pony\nfun box sctp_cc_rfc2581()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cc_rtcc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L790)\n\n``` pony\nfun box sctp_cc_rtcc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L791)\n\n``` pony\nfun box sctp_closed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_clr_stat_log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L792)\n\n``` pony\nfun box sctp_clr_stat_log()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_base\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L793)\n\n``` pony\nfun box sctp_cmt_base()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L794)\n\n``` pony\nfun box sctp_cmt_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_mptcp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L795)\n\n``` pony\nfun box sctp_cmt_mptcp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_off\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L796)\n\n``` pony\nfun box sctp_cmt_off()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_on_off\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L797)\n\n``` pony\nfun box sctp_cmt_on_off()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_rpv1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L798)\n\n``` pony\nfun box sctp_cmt_rpv1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_rpv2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L799)\n\n``` pony\nfun box sctp_cmt_rpv2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cmt_use_dac\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L800)\n\n``` pony\nfun box sctp_cmt_use_dac()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_connect_x\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L801)\n\n``` pony\nfun box sctp_connect_x()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_connect_x_complete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L802)\n\n``` pony\nfun box sctp_connect_x_complete()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_connect_x_delayed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L803)\n\n``` pony\nfun box sctp_connect_x_delayed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_context\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L804)\n\n``` pony\nfun box sctp_context()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cookie_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L805)\n\n``` pony\nfun box sctp_cookie_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cookie_echo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L806)\n\n``` pony\nfun box sctp_cookie_echo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cookie_echoed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L807)\n\n``` pony\nfun box sctp_cookie_echoed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cookie_wait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L808)\n\n``` pony\nfun box sctp_cookie_wait()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cwnd_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L809)\n\n``` pony\nfun box sctp_cwnd_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cwnd_monitor_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L810)\n\n``` pony\nfun box sctp_cwnd_monitor_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cwr_in_same_window\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L811)\n\n``` pony\nfun box sctp_cwr_in_same_window()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_cwr_reduce_override\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L812)\n\n``` pony\nfun box sctp_cwr_reduce_override()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L813)\n\n``` pony\nfun box sctp_data()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_first_frag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L814)\n\n``` pony\nfun box sctp_data_first_frag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_frag_mask\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L815)\n\n``` pony\nfun box sctp_data_frag_mask()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_last_frag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L816)\n\n``` pony\nfun box sctp_data_last_frag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_middle_frag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L817)\n\n``` pony\nfun box sctp_data_middle_frag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_not_frag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L818)\n\n``` pony\nfun box sctp_data_not_frag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_sack_immediately\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L819)\n\n``` pony\nfun box sctp_data_sack_immediately()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_data_unordered\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L820)\n\n``` pony\nfun box sctp_data_unordered()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_default_prinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L821)\n\n``` pony\nfun box sctp_default_prinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_default_send_param\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L822)\n\n``` pony\nfun box sctp_default_send_param()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_default_sndinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L823)\n\n``` pony\nfun box sctp_default_sndinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_delayed_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L824)\n\n``` pony\nfun box sctp_delayed_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_del_vrf_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L825)\n\n``` pony\nfun box sctp_del_vrf_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_disable_fragments\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L826)\n\n``` pony\nfun box sctp_disable_fragments()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ecn_cwr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L827)\n\n``` pony\nfun box sctp_ecn_cwr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ecn_echo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L828)\n\n``` pony\nfun box sctp_ecn_echo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ecn_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L829)\n\n``` pony\nfun box sctp_ecn_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_enable_change_assoc_req\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L830)\n\n``` pony\nfun box sctp_enable_change_assoc_req()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_enable_reset_assoc_req\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L831)\n\n``` pony\nfun box sctp_enable_reset_assoc_req()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_enable_reset_stream_req\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L832)\n\n``` pony\nfun box sctp_enable_reset_stream_req()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_enable_stream_reset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L833)\n\n``` pony\nfun box sctp_enable_stream_reset()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_enable_value_mask\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L834)\n\n``` pony\nfun box sctp_enable_value_mask()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_established\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L835)\n\n``` pony\nfun box sctp_established()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_event\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L836)\n\n``` pony\nfun box sctp_event()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_events\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L837)\n\n``` pony\nfun box sctp_events()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_explicit_eor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L838)\n\n``` pony\nfun box sctp_explicit_eor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_flight_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L839)\n\n``` pony\nfun box sctp_flight_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_forward_cum_tsn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L840)\n\n``` pony\nfun box sctp_forward_cum_tsn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_fragment_interleave\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L841)\n\n``` pony\nfun box sctp_fragment_interleave()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_frag_level_0\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L842)\n\n``` pony\nfun box sctp_frag_level_0()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_frag_level_1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L843)\n\n``` pony\nfun box sctp_frag_level_1()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_frag_level_2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L844)\n\n``` pony\nfun box sctp_frag_level_2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_from_middle_box\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L845)\n\n``` pony\nfun box sctp_from_middle_box()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_fr_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L846)\n\n``` pony\nfun box sctp_fr_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_addr_len\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L847)\n\n``` pony\nfun box sctp_get_addr_len()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_asoc_vrf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L848)\n\n``` pony\nfun box sctp_get_asoc_vrf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_assoc_id_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L849)\n\n``` pony\nfun box sctp_get_assoc_id_list()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_assoc_number\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L850)\n\n``` pony\nfun box sctp_get_assoc_number()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_local_addresses\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L851)\n\n``` pony\nfun box sctp_get_local_addresses()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_local_addr_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L852)\n\n``` pony\nfun box sctp_get_local_addr_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_nonce_values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L853)\n\n``` pony\nfun box sctp_get_nonce_values()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_packet_log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L854)\n\n``` pony\nfun box sctp_get_packet_log()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_peer_addresses\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L855)\n\n``` pony\nfun box sctp_get_peer_addresses()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_peer_addr_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L856)\n\n``` pony\nfun box sctp_get_peer_addr_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_remote_addr_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L857)\n\n``` pony\nfun box sctp_get_remote_addr_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_sndbuf_use\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L858)\n\n``` pony\nfun box sctp_get_sndbuf_use()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_stat_log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L859)\n\n``` pony\nfun box sctp_get_stat_log()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_get_vrf_ids\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L860)\n\n``` pony\nfun box sctp_get_vrf_ids()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_had_no_tcb\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L861)\n\n``` pony\nfun box sctp_had_no_tcb()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_heartbeat_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L862)\n\n``` pony\nfun box sctp_heartbeat_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_heartbeat_request\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L863)\n\n``` pony\nfun box sctp_heartbeat_request()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_hmac_ident\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L864)\n\n``` pony\nfun box sctp_hmac_ident()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_idata\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L865)\n\n``` pony\nfun box sctp_idata()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_iforward_cum_tsn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L866)\n\n``` pony\nfun box sctp_iforward_cum_tsn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_initiation\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L867)\n\n``` pony\nfun box sctp_initiation()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_initiation_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L868)\n\n``` pony\nfun box sctp_initiation_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_initmsg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L869)\n\n``` pony\nfun box sctp_initmsg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_interleaving_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L870)\n\n``` pony\nfun box sctp_interleaving_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_i_want_mapped_v4_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L871)\n\n``` pony\nfun box sctp_i_want_mapped_v4_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_last_packet_tracing\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L872)\n\n``` pony\nfun box sctp_last_packet_tracing()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_listen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L873)\n\n``` pony\nfun box sctp_listen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_local_auth_chunks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L874)\n\n``` pony\nfun box sctp_local_auth_chunks()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_lock_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L875)\n\n``` pony\nfun box sctp_lock_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_at_send_2_outq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L876)\n\n``` pony\nfun box sctp_log_at_send_2_outq()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_at_send_2_sctp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L877)\n\n``` pony\nfun box sctp_log_at_send_2_sctp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_maxburst_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L878)\n\n``` pony\nfun box sctp_log_maxburst_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_rwnd_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L879)\n\n``` pony\nfun box sctp_log_rwnd_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_sack_arrivals_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L880)\n\n``` pony\nfun box sctp_log_sack_arrivals_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_log_try_advance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L881)\n\n``` pony\nfun box sctp_log_try_advance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ltrace_chunk_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L882)\n\n``` pony\nfun box sctp_ltrace_chunk_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ltrace_error_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L883)\n\n``` pony\nfun box sctp_ltrace_error_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_map_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L884)\n\n``` pony\nfun box sctp_map_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_maxburst\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L885)\n\n``` pony\nfun box sctp_maxburst()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_maxseg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L886)\n\n``` pony\nfun box sctp_maxseg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_max_burst\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L887)\n\n``` pony\nfun box sctp_max_burst()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_max_cookie_life\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L888)\n\n``` pony\nfun box sctp_max_cookie_life()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_max_cwnd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L889)\n\n``` pony\nfun box sctp_max_cwnd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_max_hb_interval\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L890)\n\n``` pony\nfun box sctp_max_hb_interval()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_max_sack_delay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L891)\n\n``` pony\nfun box sctp_max_sack_delay()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_mbcnt_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L892)\n\n``` pony\nfun box sctp_mbcnt_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_mbuf_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L893)\n\n``` pony\nfun box sctp_mbuf_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_mobility_base\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L894)\n\n``` pony\nfun box sctp_mobility_base()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_mobility_fasthandoff\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L895)\n\n``` pony\nfun box sctp_mobility_fasthandoff()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_mobility_prim_deleted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L896)\n\n``` pony\nfun box sctp_mobility_prim_deleted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_nagle_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L897)\n\n``` pony\nfun box sctp_nagle_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L898)\n\n``` pony\nfun box sctp_nodelay()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_nrsack_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L899)\n\n``` pony\nfun box sctp_nrsack_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_nr_selective_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L900)\n\n``` pony\nfun box sctp_nr_selective_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_operation_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L901)\n\n``` pony\nfun box sctp_operation_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_packed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L902)\n\n``` pony\nfun box sctp_packed()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_packet_dropped\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L903)\n\n``` pony\nfun box sctp_packet_dropped()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_packet_log_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L904)\n\n``` pony\nfun box sctp_packet_log_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_packet_truncated\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L905)\n\n``` pony\nfun box sctp_packet_truncated()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pad_chunk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L906)\n\n``` pony\nfun box sctp_pad_chunk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_partial_delivery_point\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L907)\n\n``` pony\nfun box sctp_partial_delivery_point()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_copy_flags\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L908)\n\n``` pony\nfun box sctp_pcb_copy_flags()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_accepting\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L909)\n\n``` pony\nfun box sctp_pcb_flags_accepting()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_adaptationevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L910)\n\n``` pony\nfun box sctp_pcb_flags_adaptationevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_assoc_resetevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L911)\n\n``` pony\nfun box sctp_pcb_flags_assoc_resetevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_authevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L912)\n\n``` pony\nfun box sctp_pcb_flags_authevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_autoclose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L913)\n\n``` pony\nfun box sctp_pcb_flags_autoclose()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_auto_asconf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L914)\n\n``` pony\nfun box sctp_pcb_flags_auto_asconf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_blocking_io\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L915)\n\n``` pony\nfun box sctp_pcb_flags_blocking_io()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_boundall\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L916)\n\n``` pony\nfun box sctp_pcb_flags_boundall()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_bound_v6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L917)\n\n``` pony\nfun box sctp_pcb_flags_bound_v6()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_close_ip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L918)\n\n``` pony\nfun box sctp_pcb_flags_close_ip()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L919)\n\n``` pony\nfun box sctp_pcb_flags_connected()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_donot_heartbeat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L920)\n\n``` pony\nfun box sctp_pcb_flags_donot_heartbeat()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_dont_wake\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L921)\n\n``` pony\nfun box sctp_pcb_flags_dont_wake()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_do_asconf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L922)\n\n``` pony\nfun box sctp_pcb_flags_do_asconf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_do_not_pmtud\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L923)\n\n``` pony\nfun box sctp_pcb_flags_do_not_pmtud()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_dryevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L924)\n\n``` pony\nfun box sctp_pcb_flags_dryevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_explicit_eor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L925)\n\n``` pony\nfun box sctp_pcb_flags_explicit_eor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_ext_rcvinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L926)\n\n``` pony\nfun box sctp_pcb_flags_ext_rcvinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_frag_interleave\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L927)\n\n``` pony\nfun box sctp_pcb_flags_frag_interleave()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_interleave_strms\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L928)\n\n``` pony\nfun box sctp_pcb_flags_interleave_strms()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_in_tcppool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L929)\n\n``` pony\nfun box sctp_pcb_flags_in_tcppool()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_multiple_asconfs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L930)\n\n``` pony\nfun box sctp_pcb_flags_multiple_asconfs()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_needs_mapped_v4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L931)\n\n``` pony\nfun box sctp_pcb_flags_needs_mapped_v4()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L932)\n\n``` pony\nfun box sctp_pcb_flags_nodelay()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_no_fragment\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L933)\n\n``` pony\nfun box sctp_pcb_flags_no_fragment()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_pdapievnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L934)\n\n``` pony\nfun box sctp_pcb_flags_pdapievnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_portreuse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L935)\n\n``` pony\nfun box sctp_pcb_flags_portreuse()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvassocevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L936)\n\n``` pony\nfun box sctp_pcb_flags_recvassocevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvdataioevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L937)\n\n``` pony\nfun box sctp_pcb_flags_recvdataioevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvnsendfailevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L938)\n\n``` pony\nfun box sctp_pcb_flags_recvnsendfailevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvnxtinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L939)\n\n``` pony\nfun box sctp_pcb_flags_recvnxtinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvpaddrevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L940)\n\n``` pony\nfun box sctp_pcb_flags_recvpaddrevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvpeererr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L941)\n\n``` pony\nfun box sctp_pcb_flags_recvpeererr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvrcvinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L942)\n\n``` pony\nfun box sctp_pcb_flags_recvrcvinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvsendfailevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L943)\n\n``` pony\nfun box sctp_pcb_flags_recvsendfailevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_recvshutdownevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L944)\n\n``` pony\nfun box sctp_pcb_flags_recvshutdownevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_socket_allgone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L945)\n\n``` pony\nfun box sctp_pcb_flags_socket_allgone()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_socket_cant_read\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L946)\n\n``` pony\nfun box sctp_pcb_flags_socket_cant_read()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_socket_gone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L947)\n\n``` pony\nfun box sctp_pcb_flags_socket_gone()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_stream_changeevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L948)\n\n``` pony\nfun box sctp_pcb_flags_stream_changeevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_stream_resetevnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L949)\n\n``` pony\nfun box sctp_pcb_flags_stream_resetevnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_tcptype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L950)\n\n``` pony\nfun box sctp_pcb_flags_tcptype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_udptype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L951)\n\n``` pony\nfun box sctp_pcb_flags_udptype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_unbound\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L952)\n\n``` pony\nfun box sctp_pcb_flags_unbound()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_wakeinput\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L953)\n\n``` pony\nfun box sctp_pcb_flags_wakeinput()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_wakeoutput\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L954)\n\n``` pony\nfun box sctp_pcb_flags_wakeoutput()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_was_aborted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L955)\n\n``` pony\nfun box sctp_pcb_flags_was_aborted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_was_connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L956)\n\n``` pony\nfun box sctp_pcb_flags_was_connected()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_flags_zero_copy_active\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L957)\n\n``` pony\nfun box sctp_pcb_flags_zero_copy_active()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pcb_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L958)\n\n``` pony\nfun box sctp_pcb_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_peeloff\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L959)\n\n``` pony\nfun box sctp_peeloff()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_peer_addr_params\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L960)\n\n``` pony\nfun box sctp_peer_addr_params()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_peer_addr_thlds\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L961)\n\n``` pony\nfun box sctp_peer_addr_thlds()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_peer_auth_chunks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L962)\n\n``` pony\nfun box sctp_peer_auth_chunks()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pktdrop_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L963)\n\n``` pony\nfun box sctp_pktdrop_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pluggable_cc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L964)\n\n``` pony\nfun box sctp_pluggable_cc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pluggable_ss\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L965)\n\n``` pony\nfun box sctp_pluggable_ss()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_primary_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L966)\n\n``` pony\nfun box sctp_primary_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pr_assoc_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L967)\n\n``` pony\nfun box sctp_pr_assoc_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pr_stream_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L968)\n\n``` pony\nfun box sctp_pr_stream_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_pr_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L969)\n\n``` pony\nfun box sctp_pr_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_reconfig_supported\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L970)\n\n``` pony\nfun box sctp_reconfig_supported()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_recvnxtinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L971)\n\n``` pony\nfun box sctp_recvnxtinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_recvrcvinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L972)\n\n``` pony\nfun box sctp_recvrcvinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_recv_rwnd_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L973)\n\n``` pony\nfun box sctp_recv_rwnd_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_remote_udp_encaps_port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L974)\n\n``` pony\nfun box sctp_remote_udp_encaps_port()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_reset_assoc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L975)\n\n``` pony\nfun box sctp_reset_assoc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_reset_streams\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L976)\n\n``` pony\nfun box sctp_reset_streams()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_reuse_port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L977)\n\n``` pony\nfun box sctp_reuse_port()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_rtoinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L978)\n\n``` pony\nfun box sctp_rtoinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_rttvar_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L979)\n\n``` pony\nfun box sctp_rttvar_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sack_cmt_dac\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L980)\n\n``` pony\nfun box sctp_sack_cmt_dac()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sack_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L981)\n\n``` pony\nfun box sctp_sack_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sack_nonce_sum\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L982)\n\n``` pony\nfun box sctp_sack_nonce_sum()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sack_rwnd_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L983)\n\n``` pony\nfun box sctp_sack_rwnd_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sat_network_burst_incr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L984)\n\n``` pony\nfun box sctp_sat_network_burst_incr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sat_network_min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L985)\n\n``` pony\nfun box sctp_sat_network_min()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_sb_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L986)\n\n``` pony\nfun box sctp_sb_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_selective_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L987)\n\n``` pony\nfun box sctp_selective_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_set_debug_level\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L988)\n\n``` pony\nfun box sctp_set_debug_level()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_set_dynamic_primary\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L989)\n\n``` pony\nfun box sctp_set_dynamic_primary()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_set_initial_dbg_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L990)\n\n``` pony\nfun box sctp_set_initial_dbg_seq()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_set_peer_primary_addr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L991)\n\n``` pony\nfun box sctp_set_peer_primary_addr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L992)\n\n``` pony\nfun box sctp_shutdown()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_ack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L993)\n\n``` pony\nfun box sctp_shutdown_ack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_ack_sent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L994)\n\n``` pony\nfun box sctp_shutdown_ack_sent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_complete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L995)\n\n``` pony\nfun box sctp_shutdown_complete()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_pending\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L996)\n\n``` pony\nfun box sctp_shutdown_pending()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_received\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L997)\n\n``` pony\nfun box sctp_shutdown_received()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_shutdown_sent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L998)\n\n``` pony\nfun box sctp_shutdown_sent()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_smallest_pmtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L999)\n\n``` pony\nfun box sctp_smallest_pmtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_default\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1000)\n\n``` pony\nfun box sctp_ss_default()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_fair_bandwith\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1001)\n\n``` pony\nfun box sctp_ss_fair_bandwith()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_first_come\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1002)\n\n``` pony\nfun box sctp_ss_first_come()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_priority\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1003)\n\n``` pony\nfun box sctp_ss_priority()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_round_robin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1004)\n\n``` pony\nfun box sctp_ss_round_robin()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_round_robin_packet\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1005)\n\n``` pony\nfun box sctp_ss_round_robin_packet()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_ss_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1006)\n\n``` pony\nfun box sctp_ss_value()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1007)\n\n``` pony\nfun box sctp_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_stream_reset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1008)\n\n``` pony\nfun box sctp_stream_reset()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_stream_reset_incoming\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1009)\n\n``` pony\nfun box sctp_stream_reset_incoming()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_stream_reset_outgoing\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1010)\n\n``` pony\nfun box sctp_stream_reset_outgoing()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_str_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1011)\n\n``` pony\nfun box sctp_str_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_threshold_logging\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1012)\n\n``` pony\nfun box sctp_threshold_logging()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_timeouts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1013)\n\n``` pony\nfun box sctp_timeouts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_use_ext_rcvinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1014)\n\n``` pony\nfun box sctp_use_ext_rcvinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_vrf_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1015)\n\n``` pony\nfun box sctp_vrf_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sctp_wake_logging_enable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1016)\n\n``` pony\nfun box sctp_wake_logging_enable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_cloexec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1017)\n\n``` pony\nfun box sock_cloexec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_dgram\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1018)\n\n``` pony\nfun box sock_dgram()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_maxaddrlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1019)\n\n``` pony\nfun box sock_maxaddrlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_nonblock\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1020)\n\n``` pony\nfun box sock_nonblock()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_raw\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1021)\n\n``` pony\nfun box sock_raw()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_rdm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1022)\n\n``` pony\nfun box sock_rdm()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_seqpacket\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1023)\n\n``` pony\nfun box sock_seqpacket()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sock_stream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1024)\n\n``` pony\nfun box sock_stream()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### somaxconn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1025)\n\n``` pony\nfun box somaxconn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### sonpx_setoptshut\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1026)\n\n``` pony\nfun box sonpx_setoptshut()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_acceptconn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1027)\n\n``` pony\nfun box so_acceptconn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_acceptfilter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1028)\n\n``` pony\nfun box so_acceptfilter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_atmpvc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1029)\n\n``` pony\nfun box so_atmpvc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_atmqos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1030)\n\n``` pony\nfun box so_atmqos()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_atmsap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1031)\n\n``` pony\nfun box so_atmsap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_attach_bpf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1032)\n\n``` pony\nfun box so_attach_bpf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_attach_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1033)\n\n``` pony\nfun box so_attach_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_bindtodevice\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1034)\n\n``` pony\nfun box so_bindtodevice()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_bintime\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1035)\n\n``` pony\nfun box so_bintime()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_bpf_extensions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1036)\n\n``` pony\nfun box so_bpf_extensions()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_broadcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1037)\n\n``` pony\nfun box so_broadcast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_bsdcompat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1038)\n\n``` pony\nfun box so_bsdcompat()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_bsp_state\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1039)\n\n``` pony\nfun box so_bsp_state()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_busy_poll\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1040)\n\n``` pony\nfun box so_busy_poll()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_conaccess\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1041)\n\n``` pony\nfun box so_conaccess()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_condata\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1042)\n\n``` pony\nfun box so_condata()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_conditional_accept\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1043)\n\n``` pony\nfun box so_conditional_accept()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_connect_time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1044)\n\n``` pony\nfun box so_connect_time()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_debug\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1045)\n\n``` pony\nfun box so_debug()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_detach_bpf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1046)\n\n``` pony\nfun box so_detach_bpf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_detach_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1047)\n\n``` pony\nfun box so_detach_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_domain\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1048)\n\n``` pony\nfun box so_domain()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_dontlinger\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1049)\n\n``` pony\nfun box so_dontlinger()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_dontroute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1050)\n\n``` pony\nfun box so_dontroute()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_donttrunc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1051)\n\n``` pony\nfun box so_donttrunc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1052)\n\n``` pony\nfun box so_error()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_exclusiveaddruse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1053)\n\n``` pony\nfun box so_exclusiveaddruse()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_get_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1054)\n\n``` pony\nfun box so_get_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_group_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1055)\n\n``` pony\nfun box so_group_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_group_priority\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1056)\n\n``` pony\nfun box so_group_priority()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_hci_raw_direction\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1057)\n\n``` pony\nfun box so_hci_raw_direction()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_hci_raw_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1058)\n\n``` pony\nfun box so_hci_raw_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_incoming_cpu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1059)\n\n``` pony\nfun box so_incoming_cpu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_keepalive\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1060)\n\n``` pony\nfun box so_keepalive()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_encrypted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1061)\n\n``` pony\nfun box so_l2cap_encrypted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1062)\n\n``` pony\nfun box so_l2cap_flush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_iflow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1063)\n\n``` pony\nfun box so_l2cap_iflow()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_imtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1064)\n\n``` pony\nfun box so_l2cap_imtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_oflow\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1065)\n\n``` pony\nfun box so_l2cap_oflow()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_l2cap_omtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1066)\n\n``` pony\nfun box so_l2cap_omtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_label\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1067)\n\n``` pony\nfun box so_label()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_linger\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1068)\n\n``` pony\nfun box so_linger()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_linger_sec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1069)\n\n``` pony\nfun box so_linger_sec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_linkinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1070)\n\n``` pony\nfun box so_linkinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_listenincqlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1071)\n\n``` pony\nfun box so_listenincqlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_listenqlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1072)\n\n``` pony\nfun box so_listenqlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_listenqlimit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1073)\n\n``` pony\nfun box so_listenqlimit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_lock_filter\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1074)\n\n``` pony\nfun box so_lock_filter()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_mark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1075)\n\n``` pony\nfun box so_mark()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_max_msg_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1076)\n\n``` pony\nfun box so_max_msg_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_max_pacing_rate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1077)\n\n``` pony\nfun box so_max_pacing_rate()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_multipoint\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1078)\n\n``` pony\nfun box so_multipoint()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_netsvc_marking_level\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1079)\n\n``` pony\nfun box so_netsvc_marking_level()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_net_service_type\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1080)\n\n``` pony\nfun box so_net_service_type()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_nke\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1081)\n\n``` pony\nfun box so_nke()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_noaddrerr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1082)\n\n``` pony\nfun box so_noaddrerr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_nofcs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1083)\n\n``` pony\nfun box so_nofcs()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_nosigpipe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1084)\n\n``` pony\nfun box so_nosigpipe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_notifyconflict\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1085)\n\n``` pony\nfun box so_notifyconflict()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_no_check\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1086)\n\n``` pony\nfun box so_no_check()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_no_ddp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1087)\n\n``` pony\nfun box so_no_ddp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_no_offload\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1088)\n\n``` pony\nfun box so_no_offload()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_np_extensions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1089)\n\n``` pony\nfun box so_np_extensions()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_nread\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1090)\n\n``` pony\nfun box so_nread()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_numrcvpkt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1091)\n\n``` pony\nfun box so_numrcvpkt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_nwrite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1092)\n\n``` pony\nfun box so_nwrite()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_oobinline\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1093)\n\n``` pony\nfun box so_oobinline()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_original_dst\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1094)\n\n``` pony\nfun box so_original_dst()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_passcred\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1095)\n\n``` pony\nfun box so_passcred()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_passsec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1096)\n\n``` pony\nfun box so_passsec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_peek_off\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1097)\n\n``` pony\nfun box so_peek_off()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_peercred\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1098)\n\n``` pony\nfun box so_peercred()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_peerlabel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1099)\n\n``` pony\nfun box so_peerlabel()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_peername\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1100)\n\n``` pony\nfun box so_peername()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_peersec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1101)\n\n``` pony\nfun box so_peersec()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_port_scalability\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1102)\n\n``` pony\nfun box so_port_scalability()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_priority\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1103)\n\n``` pony\nfun box so_priority()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_protocol\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1104)\n\n``` pony\nfun box so_protocol()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_protocol_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1105)\n\n``` pony\nfun box so_protocol_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_prototype\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1106)\n\n``` pony\nfun box so_prototype()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_proxyusr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1107)\n\n``` pony\nfun box so_proxyusr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_randomport\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1108)\n\n``` pony\nfun box so_randomport()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1109)\n\n``` pony\nfun box so_rcvbuf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvbufforce\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1110)\n\n``` pony\nfun box so_rcvbufforce()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvlowat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1111)\n\n``` pony\nfun box so_rcvlowat()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvtimeo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1112)\n\n``` pony\nfun box so_rcvtimeo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rds_transport\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1113)\n\n``` pony\nfun box so_rds_transport()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_reuseaddr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1114)\n\n``` pony\nfun box so_reuseaddr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_reuseport\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1115)\n\n``` pony\nfun box so_reuseport()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_reuseshareuid\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1116)\n\n``` pony\nfun box so_reuseshareuid()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rfcomm_fc_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1117)\n\n``` pony\nfun box so_rfcomm_fc_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rfcomm_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1118)\n\n``` pony\nfun box so_rfcomm_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rxq_ovfl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1119)\n\n``` pony\nfun box so_rxq_ovfl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sco_conninfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1120)\n\n``` pony\nfun box so_sco_conninfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sco_mtu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1121)\n\n``` pony\nfun box so_sco_mtu()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_security_authentication\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1122)\n\n``` pony\nfun box so_security_authentication()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_security_encryption_network\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1123)\n\n``` pony\nfun box so_security_encryption_network()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_security_encryption_transport\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1124)\n\n``` pony\nfun box so_security_encryption_transport()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_select_err_queue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1125)\n\n``` pony\nfun box so_select_err_queue()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_setclp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1126)\n\n``` pony\nfun box so_setclp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_setfib\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1127)\n\n``` pony\nfun box so_setfib()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1128)\n\n``` pony\nfun box so_sndbuf()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndbufforce\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1129)\n\n``` pony\nfun box so_sndbufforce()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndlowat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1130)\n\n``` pony\nfun box so_sndlowat()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndtimeo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1131)\n\n``` pony\nfun box so_sndtimeo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1132)\n\n``` pony\nfun box so_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_timestamping\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1133)\n\n``` pony\nfun box so_timestamping()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_timestampns\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1134)\n\n``` pony\nfun box so_timestampns()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_timestamp_monotonic\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1135)\n\n``` pony\nfun box so_timestamp_monotonic()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_type\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1136)\n\n``` pony\nfun box so_type()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_upcallclosewait\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1137)\n\n``` pony\nfun box so_upcallclosewait()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_update_accept_context\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1138)\n\n``` pony\nfun box so_update_accept_context()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_useloopback\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1139)\n\n``` pony\nfun box so_useloopback()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_user_cookie\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1140)\n\n``` pony\nfun box so_user_cookie()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vendor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1141)\n\n``` pony\nfun box so_vendor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_buffer_max_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1142)\n\n``` pony\nfun box so_vm_sockets_buffer_max_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_buffer_min_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1143)\n\n``` pony\nfun box so_vm_sockets_buffer_min_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_buffer_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1144)\n\n``` pony\nfun box so_vm_sockets_buffer_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_connect_timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1145)\n\n``` pony\nfun box so_vm_sockets_connect_timeout()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_nonblock_txrx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1146)\n\n``` pony\nfun box so_vm_sockets_nonblock_txrx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_peer_host_vm_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1147)\n\n``` pony\nfun box so_vm_sockets_peer_host_vm_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_vm_sockets_trusted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1148)\n\n``` pony\nfun box so_vm_sockets_trusted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_wantmore\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1149)\n\n``` pony\nfun box so_wantmore()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_wantoobflag\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1150)\n\n``` pony\nfun box so_wantoobflag()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_wifi_status\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1151)\n\n``` pony\nfun box so_wifi_status()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp6_mss\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1152)\n\n``` pony\nfun box tcp6_mss()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_flag_lossrecovery\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1153)\n\n``` pony\nfun box tcpci_flag_lossrecovery()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_flag_reordering_detected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1154)\n\n``` pony\nfun box tcpci_flag_reordering_detected()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_opt_ecn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1155)\n\n``` pony\nfun box tcpci_opt_ecn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_opt_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1156)\n\n``` pony\nfun box tcpci_opt_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_opt_timestamps\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1157)\n\n``` pony\nfun box tcpci_opt_timestamps()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpci_opt_wscale\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1158)\n\n``` pony\nfun box tcpci_opt_wscale()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpf_ca_cwr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1159)\n\n``` pony\nfun box tcpf_ca_cwr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpf_ca_disorder\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1160)\n\n``` pony\nfun box tcpf_ca_disorder()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpf_ca_loss\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1161)\n\n``` pony\nfun box tcpf_ca_loss()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpf_ca_open\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1162)\n\n``` pony\nfun box tcpf_ca_open()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpf_ca_recovery\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1163)\n\n``` pony\nfun box tcpf_ca_recovery()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_ecn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1164)\n\n``` pony\nfun box tcpi_opt_ecn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_ecn_seen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1165)\n\n``` pony\nfun box tcpi_opt_ecn_seen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1166)\n\n``` pony\nfun box tcpi_opt_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_syn_data\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1167)\n\n``` pony\nfun box tcpi_opt_syn_data()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_timestamps\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1168)\n\n``` pony\nfun box tcpi_opt_timestamps()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_toe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1169)\n\n``` pony\nfun box tcpi_opt_toe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpi_opt_wscale\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1170)\n\n``` pony\nfun box tcpi_opt_wscale()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_cc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1171)\n\n``` pony\nfun box tcpolen_cc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_cc_appa\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1172)\n\n``` pony\nfun box tcpolen_cc_appa()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_eol\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1173)\n\n``` pony\nfun box tcpolen_eol()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_fastopen_req\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1174)\n\n``` pony\nfun box tcpolen_fastopen_req()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_fast_open_empty\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1175)\n\n``` pony\nfun box tcpolen_fast_open_empty()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_fast_open_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1176)\n\n``` pony\nfun box tcpolen_fast_open_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_fast_open_min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1177)\n\n``` pony\nfun box tcpolen_fast_open_min()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_maxseg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1178)\n\n``` pony\nfun box tcpolen_maxseg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_nop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1179)\n\n``` pony\nfun box tcpolen_nop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_pad\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1180)\n\n``` pony\nfun box tcpolen_pad()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1181)\n\n``` pony\nfun box tcpolen_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_sackhdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1182)\n\n``` pony\nfun box tcpolen_sackhdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_sack_permitted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1183)\n\n``` pony\nfun box tcpolen_sack_permitted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_signature\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1184)\n\n``` pony\nfun box tcpolen_signature()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1185)\n\n``` pony\nfun box tcpolen_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_tstamp_appa\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1186)\n\n``` pony\nfun box tcpolen_tstamp_appa()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpolen_window\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1187)\n\n``` pony\nfun box tcpolen_window()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_cc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1188)\n\n``` pony\nfun box tcpopt_cc()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_ccecho\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1189)\n\n``` pony\nfun box tcpopt_ccecho()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_ccnew\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1190)\n\n``` pony\nfun box tcpopt_ccnew()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_eol\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1191)\n\n``` pony\nfun box tcpopt_eol()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_fastopen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1192)\n\n``` pony\nfun box tcpopt_fastopen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_fast_open\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1193)\n\n``` pony\nfun box tcpopt_fast_open()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_maxseg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1194)\n\n``` pony\nfun box tcpopt_maxseg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_multipath\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1195)\n\n``` pony\nfun box tcpopt_multipath()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_nop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1196)\n\n``` pony\nfun box tcpopt_nop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_pad\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1197)\n\n``` pony\nfun box tcpopt_pad()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1198)\n\n``` pony\nfun box tcpopt_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_sack_hdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1199)\n\n``` pony\nfun box tcpopt_sack_hdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_sack_permitted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1200)\n\n``` pony\nfun box tcpopt_sack_permitted()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_sack_permit_hdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1201)\n\n``` pony\nfun box tcpopt_sack_permit_hdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_signature\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1202)\n\n``` pony\nfun box tcpopt_signature()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1203)\n\n``` pony\nfun box tcpopt_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_tstamp_hdr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1204)\n\n``` pony\nfun box tcpopt_tstamp_hdr()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcpopt_window\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1205)\n\n``` pony\nfun box tcpopt_window()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_ca_name_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1206)\n\n``` pony\nfun box tcp_ca_name_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_ccalgoopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1207)\n\n``` pony\nfun box tcp_ccalgoopt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cc_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1208)\n\n``` pony\nfun box tcp_cc_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_congestion\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1209)\n\n``` pony\nfun box tcp_congestion()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_connectiontimeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1210)\n\n``` pony\nfun box tcp_connectiontimeout()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_connection_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1211)\n\n``` pony\nfun box tcp_connection_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_in_always\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1212)\n\n``` pony\nfun box tcp_cookie_in_always()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1213)\n\n``` pony\nfun box tcp_cookie_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1214)\n\n``` pony\nfun box tcp_cookie_min()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_out_never\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1215)\n\n``` pony\nfun box tcp_cookie_out_never()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_pair_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1216)\n\n``` pony\nfun box tcp_cookie_pair_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cookie_transactions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1217)\n\n``` pony\nfun box tcp_cookie_transactions()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_cork\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1218)\n\n``` pony\nfun box tcp_cork()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_defer_accept\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1219)\n\n``` pony\nfun box tcp_defer_accept()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_enable_ecn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1220)\n\n``` pony\nfun box tcp_enable_ecn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_fastopen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1221)\n\n``` pony\nfun box tcp_fastopen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_function_blk\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1222)\n\n``` pony\nfun box tcp_function_blk()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_function_name_len_max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1223)\n\n``` pony\nfun box tcp_function_name_len_max()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1224)\n\n``` pony\nfun box tcp_info()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_keepalive\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1225)\n\n``` pony\nfun box tcp_keepalive()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_keepcnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1226)\n\n``` pony\nfun box tcp_keepcnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_keepidle\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1227)\n\n``` pony\nfun box tcp_keepidle()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_keepinit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1228)\n\n``` pony\nfun box tcp_keepinit()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_keepintvl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1229)\n\n``` pony\nfun box tcp_keepintvl()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_linger2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1230)\n\n``` pony\nfun box tcp_linger2()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_maxburst\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1231)\n\n``` pony\nfun box tcp_maxburst()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_maxhlen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1232)\n\n``` pony\nfun box tcp_maxhlen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_maxolen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1233)\n\n``` pony\nfun box tcp_maxolen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_maxseg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1234)\n\n``` pony\nfun box tcp_maxseg()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_maxwin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1235)\n\n``` pony\nfun box tcp_maxwin()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_max_sack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1236)\n\n``` pony\nfun box tcp_max_sack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_max_winshift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1237)\n\n``` pony\nfun box tcp_max_winshift()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_md5sig\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1238)\n\n``` pony\nfun box tcp_md5sig()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_md5sig_maxkeylen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1239)\n\n``` pony\nfun box tcp_md5sig_maxkeylen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_minmss\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1240)\n\n``` pony\nfun box tcp_minmss()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_mss\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1241)\n\n``` pony\nfun box tcp_mss()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_mss_default\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1242)\n\n``` pony\nfun box tcp_mss_default()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_mss_desired\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1243)\n\n``` pony\nfun box tcp_mss_desired()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1244)\n\n``` pony\nfun box tcp_nodelay()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_noopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1245)\n\n``` pony\nfun box tcp_noopt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_nopush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1246)\n\n``` pony\nfun box tcp_nopush()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_notsent_lowat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1247)\n\n``` pony\nfun box tcp_notsent_lowat()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_pcap_in\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1248)\n\n``` pony\nfun box tcp_pcap_in()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_pcap_out\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1249)\n\n``` pony\nfun box tcp_pcap_out()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_queue_seq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1250)\n\n``` pony\nfun box tcp_queue_seq()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_quickack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1251)\n\n``` pony\nfun box tcp_quickack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_repair\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1252)\n\n``` pony\nfun box tcp_repair()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_repair_options\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1253)\n\n``` pony\nfun box tcp_repair_options()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_repair_queue\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1254)\n\n``` pony\nfun box tcp_repair_queue()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_rxt_conndroptime\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1255)\n\n``` pony\nfun box tcp_rxt_conndroptime()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_rxt_findrop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1256)\n\n``` pony\nfun box tcp_rxt_findrop()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_saved_syn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1257)\n\n``` pony\nfun box tcp_saved_syn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_save_syn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1258)\n\n``` pony\nfun box tcp_save_syn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_sendmoreacks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1259)\n\n``` pony\nfun box tcp_sendmoreacks()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_syncnt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1260)\n\n``` pony\nfun box tcp_syncnt()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_s_data_in\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1261)\n\n``` pony\nfun box tcp_s_data_in()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_s_data_out\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1262)\n\n``` pony\nfun box tcp_s_data_out()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_thin_dupack\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1263)\n\n``` pony\nfun box tcp_thin_dupack()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_thin_linear_timeouts\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1264)\n\n``` pony\nfun box tcp_thin_linear_timeouts()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_timestamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1265)\n\n``` pony\nfun box tcp_timestamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_user_timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1266)\n\n``` pony\nfun box tcp_user_timeout()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_vendor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1267)\n\n``` pony\nfun box tcp_vendor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tcp_window_clamp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1268)\n\n``` pony\nfun box tcp_window_clamp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_addr_id\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1269)\n\n``` pony\nfun box tipc_addr_id()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_addr_mcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1270)\n\n``` pony\nfun box tipc_addr_mcast()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_addr_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1271)\n\n``` pony\nfun box tipc_addr_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_addr_nameseq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1272)\n\n``` pony\nfun box tipc_addr_nameseq()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_cfg_srv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1273)\n\n``` pony\nfun box tipc_cfg_srv()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_cluster_scope\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1274)\n\n``` pony\nfun box tipc_cluster_scope()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_conn_shutdown\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1275)\n\n``` pony\nfun box tipc_conn_shutdown()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_conn_timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1276)\n\n``` pony\nfun box tipc_conn_timeout()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_critical_importance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1277)\n\n``` pony\nfun box tipc_critical_importance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_destname\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1278)\n\n``` pony\nfun box tipc_destname()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_dest_droppable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1279)\n\n``` pony\nfun box tipc_dest_droppable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_errinfo\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1280)\n\n``` pony\nfun box tipc_errinfo()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_err_no_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1281)\n\n``` pony\nfun box tipc_err_no_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_err_no_node\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1282)\n\n``` pony\nfun box tipc_err_no_node()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_err_no_port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1283)\n\n``` pony\nfun box tipc_err_no_port()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_err_overload\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1284)\n\n``` pony\nfun box tipc_err_overload()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_high_importance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1285)\n\n``` pony\nfun box tipc_high_importance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_importance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1286)\n\n``` pony\nfun box tipc_importance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_link_state\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1287)\n\n``` pony\nfun box tipc_link_state()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_low_importance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1288)\n\n``` pony\nfun box tipc_low_importance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_max_bearer_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1289)\n\n``` pony\nfun box tipc_max_bearer_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_max_if_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1290)\n\n``` pony\nfun box tipc_max_if_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_max_link_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1291)\n\n``` pony\nfun box tipc_max_link_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_max_media_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1292)\n\n``` pony\nfun box tipc_max_media_name()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_max_user_msg_size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1293)\n\n``` pony\nfun box tipc_max_user_msg_size()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_medium_importance\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1294)\n\n``` pony\nfun box tipc_medium_importance()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_node_recvq_depth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1295)\n\n``` pony\nfun box tipc_node_recvq_depth()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_node_scope\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1296)\n\n``` pony\nfun box tipc_node_scope()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_ok\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1297)\n\n``` pony\nfun box tipc_ok()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_published\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1298)\n\n``` pony\nfun box tipc_published()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_reserved_types\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1299)\n\n``` pony\nfun box tipc_reserved_types()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_retdata\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1300)\n\n``` pony\nfun box tipc_retdata()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_sock_recvq_depth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1301)\n\n``` pony\nfun box tipc_sock_recvq_depth()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_src_droppable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1302)\n\n``` pony\nfun box tipc_src_droppable()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_subscr_timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1303)\n\n``` pony\nfun box tipc_subscr_timeout()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_sub_cancel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1304)\n\n``` pony\nfun box tipc_sub_cancel()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_sub_ports\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1305)\n\n``` pony\nfun box tipc_sub_ports()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_sub_service\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1306)\n\n``` pony\nfun box tipc_sub_service()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_top_srv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1307)\n\n``` pony\nfun box tipc_top_srv()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_wait_forever\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1308)\n\n``` pony\nfun box tipc_wait_forever()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_withdrawn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1309)\n\n``` pony\nfun box tipc_withdrawn()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### tipc_zone_scope\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1310)\n\n``` pony\nfun box tipc_zone_scope()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### ttcp_client_snd_wnd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1311)\n\n``` pony\nfun box ttcp_client_snd_wnd()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_cork\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1312)\n\n``` pony\nfun box udp_cork()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1313)\n\n``` pony\nfun box udp_encap()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap_espinudp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1314)\n\n``` pony\nfun box udp_encap_espinudp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap_espinudp_maxfraglen\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1315)\n\n``` pony\nfun box udp_encap_espinudp_maxfraglen()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap_espinudp_non_ike\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1316)\n\n``` pony\nfun box udp_encap_espinudp_non_ike()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap_espinudp_port\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1317)\n\n``` pony\nfun box udp_encap_espinudp_port()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_encap_l2tpinudp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1318)\n\n``` pony\nfun box udp_encap_l2tpinudp()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_nocksum\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1319)\n\n``` pony\nfun box udp_nocksum()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_no_check6_rx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1320)\n\n``` pony\nfun box udp_no_check6_rx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_no_check6_tx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1321)\n\n``` pony\nfun box udp_no_check6_tx()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### udp_vendor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1322)\n\n``` pony\nfun box udp_vendor()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvtimeo_old\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1323)\n\n``` pony\nfun box so_rcvtimeo_old()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_rcvtimeo_new\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1324)\n\n``` pony\nfun box so_rcvtimeo_new()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndtimeo_old\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1325)\n\n``` pony\nfun box so_sndtimeo_old()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### so_sndtimeo_new\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1326)\n\n``` pony\nfun box so_sndtimeo_new()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)\n\n``` pony\nfun box eq(\n  that: OSSockOpt val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OSSockOpt](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)\n\n``` pony\nfun box ne(\n  that: OSSockOpt val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OSSockOpt](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-OSSockOpt](https://stdlib.ponylang.io/net-OSSockOpt)"
- name: OSSockOpt.af_coip()
  id: net-ossockopt#af_coip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### af_coip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L225)

    ``` pony
    fun box af_coip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.af_inet()
  id: net-ossockopt#af_inet
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### af_inet

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L226)

    ``` pony
    fun box af_inet()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.af_inet6()
  id: net-ossockopt#af_inet6
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### af_inet6

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L227)

    ``` pony
    fun box af_inet6()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.bluetooth_proto_sco()
  id: net-ossockopt#bluetooth_proto_sco
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### bluetooth_proto_sco

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L228)

    ``` pony
    fun box bluetooth_proto_sco()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.create()
  id: net-ossockopt#create
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L4)

    ``` pony
    new val create()
    : OSSockOpt val^
    ```

    #### Returns

    - [OSSockOpt](index) val^

    ## Public Functions
- name: OSSockOpt.dccp_nr_pkt_types()
  id: net-ossockopt#dccp_nr_pkt_types
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_nr_pkt_types

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L229)

    ``` pony
    fun box dccp_nr_pkt_types()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_service_list_max_len()
  id: net-ossockopt#dccp_service_list_max_len
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_service_list_max_len

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L230)

    ``` pony
    fun box dccp_service_list_max_len()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_single_opt_maxlen()
  id: net-ossockopt#dccp_single_opt_maxlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_single_opt_maxlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L231)

    ``` pony
    fun box dccp_single_opt_maxlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_available_ccids()
  id: net-ossockopt#dccp_sockopt_available_ccids
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_available_ccids

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L232)

    ``` pony
    fun box dccp_sockopt_available_ccids()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_ccid()
  id: net-ossockopt#dccp_sockopt_ccid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_ccid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L233)

    ``` pony
    fun box dccp_sockopt_ccid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_ccid_rx_info()
  id: net-ossockopt#dccp_sockopt_ccid_rx_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_ccid_rx_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L234)

    ``` pony
    fun box dccp_sockopt_ccid_rx_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_ccid_tx_info()
  id: net-ossockopt#dccp_sockopt_ccid_tx_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_ccid_tx_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L235)

    ``` pony
    fun box dccp_sockopt_ccid_tx_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_change_l()
  id: net-ossockopt#dccp_sockopt_change_l
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_change_l

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L236)

    ``` pony
    fun box dccp_sockopt_change_l()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_change_r()
  id: net-ossockopt#dccp_sockopt_change_r
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_change_r

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L237)

    ``` pony
    fun box dccp_sockopt_change_r()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_get_cur_mps()
  id: net-ossockopt#dccp_sockopt_get_cur_mps
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_get_cur_mps

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L238)

    ``` pony
    fun box dccp_sockopt_get_cur_mps()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_packet_size()
  id: net-ossockopt#dccp_sockopt_packet_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_packet_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L239)

    ``` pony
    fun box dccp_sockopt_packet_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_qpolicy_id()
  id: net-ossockopt#dccp_sockopt_qpolicy_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_qpolicy_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L240)

    ``` pony
    fun box dccp_sockopt_qpolicy_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_qpolicy_txqlen()
  id: net-ossockopt#dccp_sockopt_qpolicy_txqlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_qpolicy_txqlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L241)

    ``` pony
    fun box dccp_sockopt_qpolicy_txqlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_recv_cscov()
  id: net-ossockopt#dccp_sockopt_recv_cscov
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_recv_cscov

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L242)

    ``` pony
    fun box dccp_sockopt_recv_cscov()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_rx_ccid()
  id: net-ossockopt#dccp_sockopt_rx_ccid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_rx_ccid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L243)

    ``` pony
    fun box dccp_sockopt_rx_ccid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_send_cscov()
  id: net-ossockopt#dccp_sockopt_send_cscov
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_send_cscov

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L244)

    ``` pony
    fun box dccp_sockopt_send_cscov()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_server_timewait()
  id: net-ossockopt#dccp_sockopt_server_timewait
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_server_timewait

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L245)

    ``` pony
    fun box dccp_sockopt_server_timewait()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_service()
  id: net-ossockopt#dccp_sockopt_service
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_service

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L246)

    ``` pony
    fun box dccp_sockopt_service()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dccp_sockopt_tx_ccid()
  id: net-ossockopt#dccp_sockopt_tx_ccid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dccp_sockopt_tx_ccid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L247)

    ``` pony
    fun box dccp_sockopt_tx_ccid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_acceptmode()
  id: net-ossockopt#dso_acceptmode
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_acceptmode

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L248)

    ``` pony
    fun box dso_acceptmode()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_conaccept()
  id: net-ossockopt#dso_conaccept
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_conaccept

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L249)

    ``` pony
    fun box dso_conaccept()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_conaccess()
  id: net-ossockopt#dso_conaccess
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_conaccess

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L250)

    ``` pony
    fun box dso_conaccess()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_condata()
  id: net-ossockopt#dso_condata
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_condata

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L251)

    ``` pony
    fun box dso_condata()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_conreject()
  id: net-ossockopt#dso_conreject
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_conreject

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L252)

    ``` pony
    fun box dso_conreject()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_cork()
  id: net-ossockopt#dso_cork
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_cork

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L253)

    ``` pony
    fun box dso_cork()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_disdata()
  id: net-ossockopt#dso_disdata
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_disdata

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L254)

    ``` pony
    fun box dso_disdata()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_info()
  id: net-ossockopt#dso_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L255)

    ``` pony
    fun box dso_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_linkinfo()
  id: net-ossockopt#dso_linkinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_linkinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L256)

    ``` pony
    fun box dso_linkinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_max()
  id: net-ossockopt#dso_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L257)

    ``` pony
    fun box dso_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_maxwindow()
  id: net-ossockopt#dso_maxwindow
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_maxwindow

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L258)

    ``` pony
    fun box dso_maxwindow()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_nodelay()
  id: net-ossockopt#dso_nodelay
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L259)

    ``` pony
    fun box dso_nodelay()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_seqpacket()
  id: net-ossockopt#dso_seqpacket
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_seqpacket

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L260)

    ``` pony
    fun box dso_seqpacket()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_services()
  id: net-ossockopt#dso_services
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_services

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L261)

    ``` pony
    fun box dso_services()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.dso_stream()
  id: net-ossockopt#dso_stream
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### dso_stream

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L262)

    ``` pony
    fun box dso_stream()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.eq()
  id: net-ossockopt#eq
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)

    ``` pony
    fun box eq(
      that: OSSockOpt val)
    : Bool val
    ```

    #### Parameters

    - that: [OSSockOpt](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: OSSockOpt.icmp_address()
  id: net-ossockopt#icmp_address
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L263)

    ``` pony
    fun box icmp_address()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_addressreply()
  id: net-ossockopt#icmp_addressreply
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_addressreply

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L264)

    ``` pony
    fun box icmp_addressreply()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_dest_unreach()
  id: net-ossockopt#icmp_dest_unreach
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_dest_unreach

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L265)

    ``` pony
    fun box icmp_dest_unreach()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_echo()
  id: net-ossockopt#icmp_echo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_echo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L266)

    ``` pony
    fun box icmp_echo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_echoreply()
  id: net-ossockopt#icmp_echoreply
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_echoreply

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L267)

    ``` pony
    fun box icmp_echoreply()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_exc_fragtime()
  id: net-ossockopt#icmp_exc_fragtime
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_exc_fragtime

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L268)

    ``` pony
    fun box icmp_exc_fragtime()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_exc_ttl()
  id: net-ossockopt#icmp_exc_ttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_exc_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L269)

    ``` pony
    fun box icmp_exc_ttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_filter()
  id: net-ossockopt#icmp_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L270)

    ``` pony
    fun box icmp_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_frag_needed()
  id: net-ossockopt#icmp_frag_needed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_frag_needed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L271)

    ``` pony
    fun box icmp_frag_needed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_host_ano()
  id: net-ossockopt#icmp_host_ano
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_host_ano

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L272)

    ``` pony
    fun box icmp_host_ano()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_host_isolated()
  id: net-ossockopt#icmp_host_isolated
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_host_isolated

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L273)

    ``` pony
    fun box icmp_host_isolated()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_host_unknown()
  id: net-ossockopt#icmp_host_unknown
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_host_unknown

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L274)

    ``` pony
    fun box icmp_host_unknown()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_host_unr_tos()
  id: net-ossockopt#icmp_host_unr_tos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_host_unr_tos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L276)

    ``` pony
    fun box icmp_host_unr_tos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_host_unreach()
  id: net-ossockopt#icmp_host_unreach
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_host_unreach

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L275)

    ``` pony
    fun box icmp_host_unreach()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_info_reply()
  id: net-ossockopt#icmp_info_reply
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_info_reply

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L277)

    ``` pony
    fun box icmp_info_reply()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_info_request()
  id: net-ossockopt#icmp_info_request
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_info_request

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L278)

    ``` pony
    fun box icmp_info_request()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_net_ano()
  id: net-ossockopt#icmp_net_ano
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_net_ano

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L279)

    ``` pony
    fun box icmp_net_ano()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_net_unknown()
  id: net-ossockopt#icmp_net_unknown
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_net_unknown

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L280)

    ``` pony
    fun box icmp_net_unknown()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_net_unr_tos()
  id: net-ossockopt#icmp_net_unr_tos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_net_unr_tos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L282)

    ``` pony
    fun box icmp_net_unr_tos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_net_unreach()
  id: net-ossockopt#icmp_net_unreach
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_net_unreach

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L281)

    ``` pony
    fun box icmp_net_unreach()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_parameterprob()
  id: net-ossockopt#icmp_parameterprob
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_parameterprob

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L283)

    ``` pony
    fun box icmp_parameterprob()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_pkt_filtered()
  id: net-ossockopt#icmp_pkt_filtered
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_pkt_filtered

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L284)

    ``` pony
    fun box icmp_pkt_filtered()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_port_unreach()
  id: net-ossockopt#icmp_port_unreach
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_port_unreach

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L285)

    ``` pony
    fun box icmp_port_unreach()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_prec_cutoff()
  id: net-ossockopt#icmp_prec_cutoff
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_prec_cutoff

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L286)

    ``` pony
    fun box icmp_prec_cutoff()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_prec_violation()
  id: net-ossockopt#icmp_prec_violation
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_prec_violation

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L287)

    ``` pony
    fun box icmp_prec_violation()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_prot_unreach()
  id: net-ossockopt#icmp_prot_unreach
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_prot_unreach

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L288)

    ``` pony
    fun box icmp_prot_unreach()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_redir_host()
  id: net-ossockopt#icmp_redir_host
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_redir_host

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L290)

    ``` pony
    fun box icmp_redir_host()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_redir_hosttos()
  id: net-ossockopt#icmp_redir_hosttos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_redir_hosttos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L291)

    ``` pony
    fun box icmp_redir_hosttos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_redir_net()
  id: net-ossockopt#icmp_redir_net
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_redir_net

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L292)

    ``` pony
    fun box icmp_redir_net()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_redir_nettos()
  id: net-ossockopt#icmp_redir_nettos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_redir_nettos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L293)

    ``` pony
    fun box icmp_redir_nettos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_redirect()
  id: net-ossockopt#icmp_redirect
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_redirect

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L289)

    ``` pony
    fun box icmp_redirect()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_source_quench()
  id: net-ossockopt#icmp_source_quench
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_source_quench

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L294)

    ``` pony
    fun box icmp_source_quench()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_sr_failed()
  id: net-ossockopt#icmp_sr_failed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_sr_failed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L295)

    ``` pony
    fun box icmp_sr_failed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_time_exceeded()
  id: net-ossockopt#icmp_time_exceeded
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_time_exceeded

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L298)

    ``` pony
    fun box icmp_time_exceeded()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_timestamp()
  id: net-ossockopt#icmp_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L296)

    ``` pony
    fun box icmp_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.icmp_timestampreply()
  id: net-ossockopt#icmp_timestampreply
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### icmp_timestampreply

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L297)

    ``` pony
    fun box icmp_timestampreply()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_add_membership()
  id: net-ossockopt#ip_add_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_add_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L461)

    ``` pony
    fun box ip_add_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_add_source_membership()
  id: net-ossockopt#ip_add_source_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_add_source_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L462)

    ``` pony
    fun box ip_add_source_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_bind_address_no_port()
  id: net-ossockopt#ip_bind_address_no_port
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_bind_address_no_port

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L465)

    ``` pony
    fun box ip_bind_address_no_port()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_bindany()
  id: net-ossockopt#ip_bindany
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_bindany

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L463)

    ``` pony
    fun box ip_bindany()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_bindmulti()
  id: net-ossockopt#ip_bindmulti
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_bindmulti

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L464)

    ``` pony
    fun box ip_bindmulti()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_block_source()
  id: net-ossockopt#ip_block_source
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_block_source

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L466)

    ``` pony
    fun box ip_block_source()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_bound_if()
  id: net-ossockopt#ip_bound_if
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_bound_if

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L467)

    ``` pony
    fun box ip_bound_if()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_checksum()
  id: net-ossockopt#ip_checksum
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_checksum

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L468)

    ``` pony
    fun box ip_checksum()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_default_multicast_loop()
  id: net-ossockopt#ip_default_multicast_loop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_default_multicast_loop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L469)

    ``` pony
    fun box ip_default_multicast_loop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_default_multicast_ttl()
  id: net-ossockopt#ip_default_multicast_ttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_default_multicast_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L470)

    ``` pony
    fun box ip_default_multicast_ttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dontfrag()
  id: net-ossockopt#ip_dontfrag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dontfrag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L471)

    ``` pony
    fun box ip_dontfrag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_drop_membership()
  id: net-ossockopt#ip_drop_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_drop_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L472)

    ``` pony
    fun box ip_drop_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_drop_source_membership()
  id: net-ossockopt#ip_drop_source_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_drop_source_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L473)

    ``` pony
    fun box ip_drop_source_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dummynet3()
  id: net-ossockopt#ip_dummynet3
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dummynet3

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L474)

    ``` pony
    fun box ip_dummynet3()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dummynet_configure()
  id: net-ossockopt#ip_dummynet_configure
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dummynet_configure

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L475)

    ``` pony
    fun box ip_dummynet_configure()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dummynet_del()
  id: net-ossockopt#ip_dummynet_del
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dummynet_del

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L476)

    ``` pony
    fun box ip_dummynet_del()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dummynet_flush()
  id: net-ossockopt#ip_dummynet_flush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dummynet_flush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L477)

    ``` pony
    fun box ip_dummynet_flush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_dummynet_get()
  id: net-ossockopt#ip_dummynet_get
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_dummynet_get

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L478)

    ``` pony
    fun box ip_dummynet_get()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_faith()
  id: net-ossockopt#ip_faith
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_faith

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L479)

    ``` pony
    fun box ip_faith()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_flowid()
  id: net-ossockopt#ip_flowid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_flowid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L480)

    ``` pony
    fun box ip_flowid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_flowtype()
  id: net-ossockopt#ip_flowtype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_flowtype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L481)

    ``` pony
    fun box ip_flowtype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_freebind()
  id: net-ossockopt#ip_freebind
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_freebind

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L482)

    ``` pony
    fun box ip_freebind()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw3()
  id: net-ossockopt#ip_fw3
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw3

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L483)

    ``` pony
    fun box ip_fw3()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_add()
  id: net-ossockopt#ip_fw_add
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_add

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L484)

    ``` pony
    fun box ip_fw_add()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_del()
  id: net-ossockopt#ip_fw_del
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_del

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L485)

    ``` pony
    fun box ip_fw_del()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_flush()
  id: net-ossockopt#ip_fw_flush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_flush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L486)

    ``` pony
    fun box ip_fw_flush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_get()
  id: net-ossockopt#ip_fw_get
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_get

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L487)

    ``` pony
    fun box ip_fw_get()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_nat_cfg()
  id: net-ossockopt#ip_fw_nat_cfg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_nat_cfg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L488)

    ``` pony
    fun box ip_fw_nat_cfg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_nat_del()
  id: net-ossockopt#ip_fw_nat_del
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_nat_del

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L489)

    ``` pony
    fun box ip_fw_nat_del()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_nat_get_config()
  id: net-ossockopt#ip_fw_nat_get_config
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_nat_get_config

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L490)

    ``` pony
    fun box ip_fw_nat_get_config()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_nat_get_log()
  id: net-ossockopt#ip_fw_nat_get_log
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_nat_get_log

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L491)

    ``` pony
    fun box ip_fw_nat_get_log()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_resetlog()
  id: net-ossockopt#ip_fw_resetlog
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_resetlog

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L492)

    ``` pony
    fun box ip_fw_resetlog()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_table_add()
  id: net-ossockopt#ip_fw_table_add
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_table_add

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L493)

    ``` pony
    fun box ip_fw_table_add()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_table_del()
  id: net-ossockopt#ip_fw_table_del
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_table_del

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L494)

    ``` pony
    fun box ip_fw_table_del()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_table_flush()
  id: net-ossockopt#ip_fw_table_flush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_table_flush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L495)

    ``` pony
    fun box ip_fw_table_flush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_table_getsize()
  id: net-ossockopt#ip_fw_table_getsize
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_table_getsize

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L496)

    ``` pony
    fun box ip_fw_table_getsize()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_table_list()
  id: net-ossockopt#ip_fw_table_list
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_table_list

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L497)

    ``` pony
    fun box ip_fw_table_list()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_fw_zero()
  id: net-ossockopt#ip_fw_zero
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_fw_zero

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L498)

    ``` pony
    fun box ip_fw_zero()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_hdrincl()
  id: net-ossockopt#ip_hdrincl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_hdrincl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L499)

    ``` pony
    fun box ip_hdrincl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_ipsec_policy()
  id: net-ossockopt#ip_ipsec_policy
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_ipsec_policy

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L500)

    ``` pony
    fun box ip_ipsec_policy()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_max_group_src_filter()
  id: net-ossockopt#ip_max_group_src_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_max_group_src_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L501)

    ``` pony
    fun box ip_max_group_src_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_max_memberships()
  id: net-ossockopt#ip_max_memberships
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_max_memberships

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L502)

    ``` pony
    fun box ip_max_memberships()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_max_sock_mute_filter()
  id: net-ossockopt#ip_max_sock_mute_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_max_sock_mute_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L503)

    ``` pony
    fun box ip_max_sock_mute_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_max_sock_src_filter()
  id: net-ossockopt#ip_max_sock_src_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_max_sock_src_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L504)

    ``` pony
    fun box ip_max_sock_src_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_max_source_filter()
  id: net-ossockopt#ip_max_source_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_max_source_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L505)

    ``` pony
    fun box ip_max_source_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_min_memberships()
  id: net-ossockopt#ip_min_memberships
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_min_memberships

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L507)

    ``` pony
    fun box ip_min_memberships()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_minttl()
  id: net-ossockopt#ip_minttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_minttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L506)

    ``` pony
    fun box ip_minttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_msfilter()
  id: net-ossockopt#ip_msfilter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_msfilter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L508)

    ``` pony
    fun box ip_msfilter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_mtu()
  id: net-ossockopt#ip_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L509)

    ``` pony
    fun box ip_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_mtu_discover()
  id: net-ossockopt#ip_mtu_discover
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_mtu_discover

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L510)

    ``` pony
    fun box ip_mtu_discover()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_all()
  id: net-ossockopt#ip_multicast_all
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_all

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L511)

    ``` pony
    fun box ip_multicast_all()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_if()
  id: net-ossockopt#ip_multicast_if
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_if

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L512)

    ``` pony
    fun box ip_multicast_if()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_ifindex()
  id: net-ossockopt#ip_multicast_ifindex
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_ifindex

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L513)

    ``` pony
    fun box ip_multicast_ifindex()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_loop()
  id: net-ossockopt#ip_multicast_loop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_loop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L514)

    ``` pony
    fun box ip_multicast_loop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_ttl()
  id: net-ossockopt#ip_multicast_ttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L515)

    ``` pony
    fun box ip_multicast_ttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_multicast_vif()
  id: net-ossockopt#ip_multicast_vif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_multicast_vif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L516)

    ``` pony
    fun box ip_multicast_vif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_nat_xxx()
  id: net-ossockopt#ip_nat_xxx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_nat_xxx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L517)

    ``` pony
    fun box ip_nat_xxx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_nodefrag()
  id: net-ossockopt#ip_nodefrag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_nodefrag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L518)

    ``` pony
    fun box ip_nodefrag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_add()
  id: net-ossockopt#ip_old_fw_add
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_add

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L519)

    ``` pony
    fun box ip_old_fw_add()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_del()
  id: net-ossockopt#ip_old_fw_del
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_del

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L520)

    ``` pony
    fun box ip_old_fw_del()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_flush()
  id: net-ossockopt#ip_old_fw_flush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_flush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L521)

    ``` pony
    fun box ip_old_fw_flush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_get()
  id: net-ossockopt#ip_old_fw_get
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_get

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L522)

    ``` pony
    fun box ip_old_fw_get()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_resetlog()
  id: net-ossockopt#ip_old_fw_resetlog
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_resetlog

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L523)

    ``` pony
    fun box ip_old_fw_resetlog()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_old_fw_zero()
  id: net-ossockopt#ip_old_fw_zero
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_old_fw_zero

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L524)

    ``` pony
    fun box ip_old_fw_zero()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_onesbcast()
  id: net-ossockopt#ip_onesbcast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_onesbcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L525)

    ``` pony
    fun box ip_onesbcast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_options()
  id: net-ossockopt#ip_options
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_options

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L526)

    ``` pony
    fun box ip_options()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_origdstaddr()
  id: net-ossockopt#ip_origdstaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_origdstaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L527)

    ``` pony
    fun box ip_origdstaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_passsec()
  id: net-ossockopt#ip_passsec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_passsec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L528)

    ``` pony
    fun box ip_passsec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pktinfo()
  id: net-ossockopt#ip_pktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L529)

    ``` pony
    fun box ip_pktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pktoptions()
  id: net-ossockopt#ip_pktoptions
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pktoptions

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L530)

    ``` pony
    fun box ip_pktoptions()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_do()
  id: net-ossockopt#ip_pmtudisc_do
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_do

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L531)

    ``` pony
    fun box ip_pmtudisc_do()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_dont()
  id: net-ossockopt#ip_pmtudisc_dont
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_dont

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L532)

    ``` pony
    fun box ip_pmtudisc_dont()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_interface()
  id: net-ossockopt#ip_pmtudisc_interface
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_interface

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L533)

    ``` pony
    fun box ip_pmtudisc_interface()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_omit()
  id: net-ossockopt#ip_pmtudisc_omit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_omit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L534)

    ``` pony
    fun box ip_pmtudisc_omit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_probe()
  id: net-ossockopt#ip_pmtudisc_probe
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_probe

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L535)

    ``` pony
    fun box ip_pmtudisc_probe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_pmtudisc_want()
  id: net-ossockopt#ip_pmtudisc_want
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_pmtudisc_want

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L536)

    ``` pony
    fun box ip_pmtudisc_want()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_portrange()
  id: net-ossockopt#ip_portrange
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_portrange

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L537)

    ``` pony
    fun box ip_portrange()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_portrange_default()
  id: net-ossockopt#ip_portrange_default
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_portrange_default

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L538)

    ``` pony
    fun box ip_portrange_default()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_portrange_high()
  id: net-ossockopt#ip_portrange_high
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_portrange_high

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L539)

    ``` pony
    fun box ip_portrange_high()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_portrange_low()
  id: net-ossockopt#ip_portrange_low
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_portrange_low

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L540)

    ``` pony
    fun box ip_portrange_low()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvdstaddr()
  id: net-ossockopt#ip_recvdstaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvdstaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L541)

    ``` pony
    fun box ip_recvdstaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recverr()
  id: net-ossockopt#ip_recverr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recverr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L542)

    ``` pony
    fun box ip_recverr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvflowid()
  id: net-ossockopt#ip_recvflowid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvflowid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L543)

    ``` pony
    fun box ip_recvflowid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvif()
  id: net-ossockopt#ip_recvif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L544)

    ``` pony
    fun box ip_recvif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvopts()
  id: net-ossockopt#ip_recvopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L545)

    ``` pony
    fun box ip_recvopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvorigdstaddr()
  id: net-ossockopt#ip_recvorigdstaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvorigdstaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L546)

    ``` pony
    fun box ip_recvorigdstaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvpktinfo()
  id: net-ossockopt#ip_recvpktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvpktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L547)

    ``` pony
    fun box ip_recvpktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvretopts()
  id: net-ossockopt#ip_recvretopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvretopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L548)

    ``` pony
    fun box ip_recvretopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvrssbucketid()
  id: net-ossockopt#ip_recvrssbucketid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvrssbucketid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L549)

    ``` pony
    fun box ip_recvrssbucketid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvtos()
  id: net-ossockopt#ip_recvtos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvtos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L550)

    ``` pony
    fun box ip_recvtos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_recvttl()
  id: net-ossockopt#ip_recvttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_recvttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L551)

    ``` pony
    fun box ip_recvttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_retopts()
  id: net-ossockopt#ip_retopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_retopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L552)

    ``` pony
    fun box ip_retopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_router_alert()
  id: net-ossockopt#ip_router_alert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_router_alert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L553)

    ``` pony
    fun box ip_router_alert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rss_listen_bucket()
  id: net-ossockopt#ip_rss_listen_bucket
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rss_listen_bucket

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L555)

    ``` pony
    fun box ip_rss_listen_bucket()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rssbucketid()
  id: net-ossockopt#ip_rssbucketid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rssbucketid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L554)

    ``` pony
    fun box ip_rssbucketid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rsvp_off()
  id: net-ossockopt#ip_rsvp_off
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rsvp_off

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L556)

    ``` pony
    fun box ip_rsvp_off()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rsvp_on()
  id: net-ossockopt#ip_rsvp_on
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rsvp_on

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L557)

    ``` pony
    fun box ip_rsvp_on()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rsvp_vif_off()
  id: net-ossockopt#ip_rsvp_vif_off
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rsvp_vif_off

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L558)

    ``` pony
    fun box ip_rsvp_vif_off()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_rsvp_vif_on()
  id: net-ossockopt#ip_rsvp_vif_on
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_rsvp_vif_on

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L559)

    ``` pony
    fun box ip_rsvp_vif_on()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_sendsrcaddr()
  id: net-ossockopt#ip_sendsrcaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_sendsrcaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L560)

    ``` pony
    fun box ip_sendsrcaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_striphdr()
  id: net-ossockopt#ip_striphdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_striphdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L561)

    ``` pony
    fun box ip_striphdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_tos()
  id: net-ossockopt#ip_tos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_tos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L562)

    ``` pony
    fun box ip_tos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_traffic_mgt_background()
  id: net-ossockopt#ip_traffic_mgt_background
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_traffic_mgt_background

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L563)

    ``` pony
    fun box ip_traffic_mgt_background()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_transparent()
  id: net-ossockopt#ip_transparent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_transparent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L564)

    ``` pony
    fun box ip_transparent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_ttl()
  id: net-ossockopt#ip_ttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L565)

    ``` pony
    fun box ip_ttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_unblock_source()
  id: net-ossockopt#ip_unblock_source
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_unblock_source

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L566)

    ``` pony
    fun box ip_unblock_source()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_unicast_if()
  id: net-ossockopt#ip_unicast_if
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_unicast_if

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L567)

    ``` pony
    fun box ip_unicast_if()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ip_xfrm_policy()
  id: net-ossockopt#ip_xfrm_policy
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ip_xfrm_policy

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L568)

    ``` pony
    fun box ip_xfrm_policy()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_acceptsourceroute()
  id: net-ossockopt#ipctl_acceptsourceroute
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_acceptsourceroute

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L299)

    ``` pony
    fun box ipctl_acceptsourceroute()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_defmtu()
  id: net-ossockopt#ipctl_defmtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_defmtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L300)

    ``` pony
    fun box ipctl_defmtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_defttl()
  id: net-ossockopt#ipctl_defttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_defttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L301)

    ``` pony
    fun box ipctl_defttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_directedbroadcast()
  id: net-ossockopt#ipctl_directedbroadcast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_directedbroadcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L302)

    ``` pony
    fun box ipctl_directedbroadcast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_fastforwarding()
  id: net-ossockopt#ipctl_fastforwarding
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_fastforwarding

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L303)

    ``` pony
    fun box ipctl_fastforwarding()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_forwarding()
  id: net-ossockopt#ipctl_forwarding
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_forwarding

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L304)

    ``` pony
    fun box ipctl_forwarding()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_gif_ttl()
  id: net-ossockopt#ipctl_gif_ttl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_gif_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L305)

    ``` pony
    fun box ipctl_gif_ttl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_intrdqdrops()
  id: net-ossockopt#ipctl_intrdqdrops
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_intrdqdrops

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L306)

    ``` pony
    fun box ipctl_intrdqdrops()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_intrdqmaxlen()
  id: net-ossockopt#ipctl_intrdqmaxlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_intrdqmaxlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L307)

    ``` pony
    fun box ipctl_intrdqmaxlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_intrqdrops()
  id: net-ossockopt#ipctl_intrqdrops
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_intrqdrops

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L308)

    ``` pony
    fun box ipctl_intrqdrops()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_intrqmaxlen()
  id: net-ossockopt#ipctl_intrqmaxlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_intrqmaxlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L309)

    ``` pony
    fun box ipctl_intrqmaxlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_keepfaith()
  id: net-ossockopt#ipctl_keepfaith
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_keepfaith

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L310)

    ``` pony
    fun box ipctl_keepfaith()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_maxid()
  id: net-ossockopt#ipctl_maxid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_maxid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L311)

    ``` pony
    fun box ipctl_maxid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_rtexpire()
  id: net-ossockopt#ipctl_rtexpire
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_rtexpire

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L312)

    ``` pony
    fun box ipctl_rtexpire()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_rtmaxcache()
  id: net-ossockopt#ipctl_rtmaxcache
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_rtmaxcache

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L313)

    ``` pony
    fun box ipctl_rtmaxcache()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_rtminexpire()
  id: net-ossockopt#ipctl_rtminexpire
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_rtminexpire

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L314)

    ``` pony
    fun box ipctl_rtminexpire()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_sendredirects()
  id: net-ossockopt#ipctl_sendredirects
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_sendredirects

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L315)

    ``` pony
    fun box ipctl_sendredirects()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_sourceroute()
  id: net-ossockopt#ipctl_sourceroute
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_sourceroute

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L316)

    ``` pony
    fun box ipctl_sourceroute()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipctl_stats()
  id: net-ossockopt#ipctl_stats
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipctl_stats

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L317)

    ``` pony
    fun box ipctl_stats()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_ephemeralfirst()
  id: net-ossockopt#ipport_ephemeralfirst
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_ephemeralfirst

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L318)

    ``` pony
    fun box ipport_ephemeralfirst()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_ephemerallast()
  id: net-ossockopt#ipport_ephemerallast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_ephemerallast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L319)

    ``` pony
    fun box ipport_ephemerallast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_hifirstauto()
  id: net-ossockopt#ipport_hifirstauto
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_hifirstauto

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L320)

    ``` pony
    fun box ipport_hifirstauto()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_hilastauto()
  id: net-ossockopt#ipport_hilastauto
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_hilastauto

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L321)

    ``` pony
    fun box ipport_hilastauto()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_max()
  id: net-ossockopt#ipport_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L322)

    ``` pony
    fun box ipport_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_reserved()
  id: net-ossockopt#ipport_reserved
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_reserved

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L323)

    ``` pony
    fun box ipport_reserved()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_reservedstart()
  id: net-ossockopt#ipport_reservedstart
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_reservedstart

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L324)

    ``` pony
    fun box ipport_reservedstart()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipport_userreserved()
  id: net-ossockopt#ipport_userreserved
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipport_userreserved

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L325)

    ``` pony
    fun box ipport_userreserved()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_3pc()
  id: net-ossockopt#ipproto_3pc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_3pc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)

    ``` pony
    fun box ipproto_3pc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val
- name: OSSockOpt.ipproto_adfs()
  id: net-ossockopt#ipproto_adfs
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_adfs

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L77)

    ``` pony
    fun box ipproto_adfs()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ah()
  id: net-ossockopt#ipproto_ah
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ah

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L78)

    ``` pony
    fun box ipproto_ah()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ahip()
  id: net-ossockopt#ipproto_ahip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ahip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L79)

    ``` pony
    fun box ipproto_ahip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_apes()
  id: net-ossockopt#ipproto_apes
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_apes

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L80)

    ``` pony
    fun box ipproto_apes()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_argus()
  id: net-ossockopt#ipproto_argus
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_argus

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L81)

    ``` pony
    fun box ipproto_argus()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ax25()
  id: net-ossockopt#ipproto_ax25
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ax25

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L82)

    ``` pony
    fun box ipproto_ax25()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_beetph()
  id: net-ossockopt#ipproto_beetph
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_beetph

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L83)

    ``` pony
    fun box ipproto_beetph()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_bha()
  id: net-ossockopt#ipproto_bha
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_bha

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L84)

    ``` pony
    fun box ipproto_bha()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_blt()
  id: net-ossockopt#ipproto_blt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_blt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L85)

    ``` pony
    fun box ipproto_blt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_brsatmon()
  id: net-ossockopt#ipproto_brsatmon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_brsatmon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L86)

    ``` pony
    fun box ipproto_brsatmon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_carp()
  id: net-ossockopt#ipproto_carp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_carp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L87)

    ``` pony
    fun box ipproto_carp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_cftp()
  id: net-ossockopt#ipproto_cftp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_cftp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L88)

    ``` pony
    fun box ipproto_cftp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_chaos()
  id: net-ossockopt#ipproto_chaos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_chaos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L89)

    ``` pony
    fun box ipproto_chaos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_cmtp()
  id: net-ossockopt#ipproto_cmtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_cmtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L90)

    ``` pony
    fun box ipproto_cmtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_comp()
  id: net-ossockopt#ipproto_comp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_comp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L91)

    ``` pony
    fun box ipproto_comp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_cphb()
  id: net-ossockopt#ipproto_cphb
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_cphb

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L92)

    ``` pony
    fun box ipproto_cphb()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_cpnx()
  id: net-ossockopt#ipproto_cpnx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_cpnx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L93)

    ``` pony
    fun box ipproto_cpnx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_dccp()
  id: net-ossockopt#ipproto_dccp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_dccp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L94)

    ``` pony
    fun box ipproto_dccp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ddp()
  id: net-ossockopt#ipproto_ddp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ddp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L95)

    ``` pony
    fun box ipproto_ddp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_dgp()
  id: net-ossockopt#ipproto_dgp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_dgp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L96)

    ``` pony
    fun box ipproto_dgp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_divert()
  id: net-ossockopt#ipproto_divert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_divert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L97)

    ``` pony
    fun box ipproto_divert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_done()
  id: net-ossockopt#ipproto_done
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_done

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L98)

    ``` pony
    fun box ipproto_done()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_dstopts()
  id: net-ossockopt#ipproto_dstopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_dstopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L99)

    ``` pony
    fun box ipproto_dstopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_egp()
  id: net-ossockopt#ipproto_egp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_egp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L100)

    ``` pony
    fun box ipproto_egp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_emcon()
  id: net-ossockopt#ipproto_emcon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_emcon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L101)

    ``` pony
    fun box ipproto_emcon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_encap()
  id: net-ossockopt#ipproto_encap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_encap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L102)

    ``` pony
    fun box ipproto_encap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_eon()
  id: net-ossockopt#ipproto_eon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_eon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L103)

    ``` pony
    fun box ipproto_eon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_esp()
  id: net-ossockopt#ipproto_esp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_esp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L104)

    ``` pony
    fun box ipproto_esp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_etherip()
  id: net-ossockopt#ipproto_etherip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_etherip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L105)

    ``` pony
    fun box ipproto_etherip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_fragment()
  id: net-ossockopt#ipproto_fragment
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_fragment

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L106)

    ``` pony
    fun box ipproto_fragment()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ggp()
  id: net-ossockopt#ipproto_ggp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ggp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L107)

    ``` pony
    fun box ipproto_ggp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_gmtp()
  id: net-ossockopt#ipproto_gmtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_gmtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L108)

    ``` pony
    fun box ipproto_gmtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_gre()
  id: net-ossockopt#ipproto_gre
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_gre

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L109)

    ``` pony
    fun box ipproto_gre()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_hello()
  id: net-ossockopt#ipproto_hello
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_hello

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L110)

    ``` pony
    fun box ipproto_hello()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_hip()
  id: net-ossockopt#ipproto_hip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_hip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L111)

    ``` pony
    fun box ipproto_hip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_hmp()
  id: net-ossockopt#ipproto_hmp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_hmp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L112)

    ``` pony
    fun box ipproto_hmp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_hopopts()
  id: net-ossockopt#ipproto_hopopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_hopopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L113)

    ``` pony
    fun box ipproto_hopopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_icmp()
  id: net-ossockopt#ipproto_icmp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_icmp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L114)

    ``` pony
    fun box ipproto_icmp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_icmpv6()
  id: net-ossockopt#ipproto_icmpv6
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_icmpv6

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L115)

    ``` pony
    fun box ipproto_icmpv6()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_idp()
  id: net-ossockopt#ipproto_idp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_idp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L116)

    ``` pony
    fun box ipproto_idp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_idpr()
  id: net-ossockopt#ipproto_idpr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_idpr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L117)

    ``` pony
    fun box ipproto_idpr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_idrp()
  id: net-ossockopt#ipproto_idrp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_idrp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L118)

    ``` pony
    fun box ipproto_idrp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_igmp()
  id: net-ossockopt#ipproto_igmp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_igmp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L119)

    ``` pony
    fun box ipproto_igmp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_igp()
  id: net-ossockopt#ipproto_igp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_igp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L120)

    ``` pony
    fun box ipproto_igp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_igrp()
  id: net-ossockopt#ipproto_igrp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_igrp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L121)

    ``` pony
    fun box ipproto_igrp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_il()
  id: net-ossockopt#ipproto_il
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_il

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L122)

    ``` pony
    fun box ipproto_il()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_inlsp()
  id: net-ossockopt#ipproto_inlsp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_inlsp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L123)

    ``` pony
    fun box ipproto_inlsp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_inp()
  id: net-ossockopt#ipproto_inp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_inp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L124)

    ``` pony
    fun box ipproto_inp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ip()
  id: net-ossockopt#ipproto_ip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L125)

    ``` pony
    fun box ipproto_ip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipcomp()
  id: net-ossockopt#ipproto_ipcomp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipcomp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L126)

    ``` pony
    fun box ipproto_ipcomp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipcv()
  id: net-ossockopt#ipproto_ipcv
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipcv

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L127)

    ``` pony
    fun box ipproto_ipcv()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipeip()
  id: net-ossockopt#ipproto_ipeip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipeip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L128)

    ``` pony
    fun box ipproto_ipeip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipip()
  id: net-ossockopt#ipproto_ipip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L129)

    ``` pony
    fun box ipproto_ipip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ippc()
  id: net-ossockopt#ipproto_ippc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ippc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L130)

    ``` pony
    fun box ipproto_ippc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipv4()
  id: net-ossockopt#ipproto_ipv4
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipv4

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L131)

    ``` pony
    fun box ipproto_ipv4()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ipv6()
  id: net-ossockopt#ipproto_ipv6
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ipv6

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L132)

    ``` pony
    fun box ipproto_ipv6()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_irtp()
  id: net-ossockopt#ipproto_irtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_irtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L133)

    ``` pony
    fun box ipproto_irtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_kryptolan()
  id: net-ossockopt#ipproto_kryptolan
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_kryptolan

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L134)

    ``` pony
    fun box ipproto_kryptolan()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_larp()
  id: net-ossockopt#ipproto_larp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_larp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L135)

    ``` pony
    fun box ipproto_larp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_leaf1()
  id: net-ossockopt#ipproto_leaf1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_leaf1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L136)

    ``` pony
    fun box ipproto_leaf1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_leaf2()
  id: net-ossockopt#ipproto_leaf2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_leaf2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L137)

    ``` pony
    fun box ipproto_leaf2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_max()
  id: net-ossockopt#ipproto_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L138)

    ``` pony
    fun box ipproto_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_maxid()
  id: net-ossockopt#ipproto_maxid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_maxid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L139)

    ``` pony
    fun box ipproto_maxid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_meas()
  id: net-ossockopt#ipproto_meas
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_meas

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L140)

    ``` pony
    fun box ipproto_meas()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mh()
  id: net-ossockopt#ipproto_mh
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mh

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L141)

    ``` pony
    fun box ipproto_mh()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mhrp()
  id: net-ossockopt#ipproto_mhrp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mhrp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L142)

    ``` pony
    fun box ipproto_mhrp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_micp()
  id: net-ossockopt#ipproto_micp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_micp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L143)

    ``` pony
    fun box ipproto_micp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mobile()
  id: net-ossockopt#ipproto_mobile
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mobile

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L144)

    ``` pony
    fun box ipproto_mobile()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mpls()
  id: net-ossockopt#ipproto_mpls
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mpls

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L145)

    ``` pony
    fun box ipproto_mpls()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mtp()
  id: net-ossockopt#ipproto_mtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L146)

    ``` pony
    fun box ipproto_mtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_mux()
  id: net-ossockopt#ipproto_mux
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_mux

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L147)

    ``` pony
    fun box ipproto_mux()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_nd()
  id: net-ossockopt#ipproto_nd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_nd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L148)

    ``` pony
    fun box ipproto_nd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_nhrp()
  id: net-ossockopt#ipproto_nhrp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_nhrp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L149)

    ``` pony
    fun box ipproto_nhrp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_none()
  id: net-ossockopt#ipproto_none
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_none

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L150)

    ``` pony
    fun box ipproto_none()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_nsp()
  id: net-ossockopt#ipproto_nsp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_nsp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L151)

    ``` pony
    fun box ipproto_nsp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_nvpii()
  id: net-ossockopt#ipproto_nvpii
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_nvpii

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L152)

    ``` pony
    fun box ipproto_nvpii()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_old_divert()
  id: net-ossockopt#ipproto_old_divert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_old_divert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L153)

    ``` pony
    fun box ipproto_old_divert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ospfigp()
  id: net-ossockopt#ipproto_ospfigp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ospfigp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L154)

    ``` pony
    fun box ipproto_ospfigp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pfsync()
  id: net-ossockopt#ipproto_pfsync
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pfsync

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L155)

    ``` pony
    fun box ipproto_pfsync()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pgm()
  id: net-ossockopt#ipproto_pgm
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pgm

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L156)

    ``` pony
    fun box ipproto_pgm()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pigp()
  id: net-ossockopt#ipproto_pigp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pigp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L157)

    ``` pony
    fun box ipproto_pigp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pim()
  id: net-ossockopt#ipproto_pim
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pim

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L158)

    ``` pony
    fun box ipproto_pim()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_prm()
  id: net-ossockopt#ipproto_prm
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_prm

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L159)

    ``` pony
    fun box ipproto_prm()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pup()
  id: net-ossockopt#ipproto_pup
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pup

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L160)

    ``` pony
    fun box ipproto_pup()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_pvp()
  id: net-ossockopt#ipproto_pvp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_pvp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L161)

    ``` pony
    fun box ipproto_pvp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_raw()
  id: net-ossockopt#ipproto_raw
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_raw

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L162)

    ``` pony
    fun box ipproto_raw()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_rccmon()
  id: net-ossockopt#ipproto_rccmon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_rccmon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L163)

    ``` pony
    fun box ipproto_rccmon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_rdp()
  id: net-ossockopt#ipproto_rdp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_rdp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L164)

    ``` pony
    fun box ipproto_rdp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_reserved_253()
  id: net-ossockopt#ipproto_reserved_253
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_reserved_253

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L165)

    ``` pony
    fun box ipproto_reserved_253()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_reserved_254()
  id: net-ossockopt#ipproto_reserved_254
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_reserved_254

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L166)

    ``` pony
    fun box ipproto_reserved_254()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_routing()
  id: net-ossockopt#ipproto_routing
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_routing

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L167)

    ``` pony
    fun box ipproto_routing()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_rsvp()
  id: net-ossockopt#ipproto_rsvp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_rsvp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L168)

    ``` pony
    fun box ipproto_rsvp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_rvd()
  id: net-ossockopt#ipproto_rvd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_rvd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L169)

    ``` pony
    fun box ipproto_rvd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_satexpak()
  id: net-ossockopt#ipproto_satexpak
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_satexpak

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L170)

    ``` pony
    fun box ipproto_satexpak()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_satmon()
  id: net-ossockopt#ipproto_satmon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_satmon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L171)

    ``` pony
    fun box ipproto_satmon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_sccsp()
  id: net-ossockopt#ipproto_sccsp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_sccsp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L172)

    ``` pony
    fun box ipproto_sccsp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_sctp()
  id: net-ossockopt#ipproto_sctp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_sctp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L173)

    ``` pony
    fun box ipproto_sctp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_sdrp()
  id: net-ossockopt#ipproto_sdrp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_sdrp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L174)

    ``` pony
    fun box ipproto_sdrp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_send()
  id: net-ossockopt#ipproto_send
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_send

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L175)

    ``` pony
    fun box ipproto_send()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_sep()
  id: net-ossockopt#ipproto_sep
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_sep

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L176)

    ``` pony
    fun box ipproto_sep()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_shim6()
  id: net-ossockopt#ipproto_shim6
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_shim6

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L177)

    ``` pony
    fun box ipproto_shim6()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_skip()
  id: net-ossockopt#ipproto_skip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_skip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L178)

    ``` pony
    fun box ipproto_skip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_spacer()
  id: net-ossockopt#ipproto_spacer
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_spacer

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L179)

    ``` pony
    fun box ipproto_spacer()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_srpc()
  id: net-ossockopt#ipproto_srpc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_srpc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L180)

    ``` pony
    fun box ipproto_srpc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_st()
  id: net-ossockopt#ipproto_st
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_st

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L181)

    ``` pony
    fun box ipproto_st()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_svmtp()
  id: net-ossockopt#ipproto_svmtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_svmtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L182)

    ``` pony
    fun box ipproto_svmtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_swipe()
  id: net-ossockopt#ipproto_swipe
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_swipe

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L183)

    ``` pony
    fun box ipproto_swipe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_tcf()
  id: net-ossockopt#ipproto_tcf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_tcf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L184)

    ``` pony
    fun box ipproto_tcf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_tcp()
  id: net-ossockopt#ipproto_tcp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_tcp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L185)

    ``` pony
    fun box ipproto_tcp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_tlsp()
  id: net-ossockopt#ipproto_tlsp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_tlsp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L186)

    ``` pony
    fun box ipproto_tlsp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_tp()
  id: net-ossockopt#ipproto_tp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_tp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L187)

    ``` pony
    fun box ipproto_tp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_tpxx()
  id: net-ossockopt#ipproto_tpxx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_tpxx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L188)

    ``` pony
    fun box ipproto_tpxx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_trunk1()
  id: net-ossockopt#ipproto_trunk1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_trunk1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L189)

    ``` pony
    fun box ipproto_trunk1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_trunk2()
  id: net-ossockopt#ipproto_trunk2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_trunk2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L190)

    ``` pony
    fun box ipproto_trunk2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_ttp()
  id: net-ossockopt#ipproto_ttp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_ttp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L191)

    ``` pony
    fun box ipproto_ttp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_udp()
  id: net-ossockopt#ipproto_udp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_udp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L192)

    ``` pony
    fun box ipproto_udp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_udplite()
  id: net-ossockopt#ipproto_udplite
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_udplite

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L193)

    ``` pony
    fun box ipproto_udplite()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_vines()
  id: net-ossockopt#ipproto_vines
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_vines

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L194)

    ``` pony
    fun box ipproto_vines()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_visa()
  id: net-ossockopt#ipproto_visa
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_visa

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L195)

    ``` pony
    fun box ipproto_visa()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_vmtp()
  id: net-ossockopt#ipproto_vmtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_vmtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L196)

    ``` pony
    fun box ipproto_vmtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_wbexpak()
  id: net-ossockopt#ipproto_wbexpak
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_wbexpak

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L197)

    ``` pony
    fun box ipproto_wbexpak()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_wbmon()
  id: net-ossockopt#ipproto_wbmon
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_wbmon

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L198)

    ``` pony
    fun box ipproto_wbmon()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_wsn()
  id: net-ossockopt#ipproto_wsn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_wsn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L199)

    ``` pony
    fun box ipproto_wsn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_xnet()
  id: net-ossockopt#ipproto_xnet
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_xnet

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L200)

    ``` pony
    fun box ipproto_xnet()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipproto_xtp()
  id: net-ossockopt#ipproto_xtp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipproto_xtp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L201)

    ``` pony
    fun box ipproto_xtp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292dstopts()
  id: net-ossockopt#ipv6_2292dstopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292dstopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L326)

    ``` pony
    fun box ipv6_2292dstopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292hoplimit()
  id: net-ossockopt#ipv6_2292hoplimit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292hoplimit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L327)

    ``` pony
    fun box ipv6_2292hoplimit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292hopopts()
  id: net-ossockopt#ipv6_2292hopopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292hopopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L328)

    ``` pony
    fun box ipv6_2292hopopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292pktinfo()
  id: net-ossockopt#ipv6_2292pktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292pktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L329)

    ``` pony
    fun box ipv6_2292pktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292pktoptions()
  id: net-ossockopt#ipv6_2292pktoptions
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292pktoptions

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L330)

    ``` pony
    fun box ipv6_2292pktoptions()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_2292rthdr()
  id: net-ossockopt#ipv6_2292rthdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_2292rthdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L331)

    ``` pony
    fun box ipv6_2292rthdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_add_membership()
  id: net-ossockopt#ipv6_add_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_add_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L334)

    ``` pony
    fun box ipv6_add_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_addr_preferences()
  id: net-ossockopt#ipv6_addr_preferences
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_addr_preferences

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L333)

    ``` pony
    fun box ipv6_addr_preferences()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_addrform()
  id: net-ossockopt#ipv6_addrform
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_addrform

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L332)

    ``` pony
    fun box ipv6_addrform()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_authhdr()
  id: net-ossockopt#ipv6_authhdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_authhdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L335)

    ``` pony
    fun box ipv6_authhdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_autoflowlabel()
  id: net-ossockopt#ipv6_autoflowlabel
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_autoflowlabel

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L336)

    ``` pony
    fun box ipv6_autoflowlabel()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_checksum()
  id: net-ossockopt#ipv6_checksum
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_checksum

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L337)

    ``` pony
    fun box ipv6_checksum()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_dontfrag()
  id: net-ossockopt#ipv6_dontfrag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_dontfrag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L338)

    ``` pony
    fun box ipv6_dontfrag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_drop_membership()
  id: net-ossockopt#ipv6_drop_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_drop_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L339)

    ``` pony
    fun box ipv6_drop_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_dstopts()
  id: net-ossockopt#ipv6_dstopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_dstopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L340)

    ``` pony
    fun box ipv6_dstopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_a_get()
  id: net-ossockopt#ipv6_fl_a_get
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_a_get

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L346)

    ``` pony
    fun box ipv6_fl_a_get()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_a_put()
  id: net-ossockopt#ipv6_fl_a_put
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_a_put

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L347)

    ``` pony
    fun box ipv6_fl_a_put()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_a_renew()
  id: net-ossockopt#ipv6_fl_a_renew
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_a_renew

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L348)

    ``` pony
    fun box ipv6_fl_a_renew()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_f_create()
  id: net-ossockopt#ipv6_fl_f_create
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_f_create

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L349)

    ``` pony
    fun box ipv6_fl_f_create()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_f_excl()
  id: net-ossockopt#ipv6_fl_f_excl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_f_excl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L350)

    ``` pony
    fun box ipv6_fl_f_excl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_f_reflect()
  id: net-ossockopt#ipv6_fl_f_reflect
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_f_reflect

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L351)

    ``` pony
    fun box ipv6_fl_f_reflect()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_f_remote()
  id: net-ossockopt#ipv6_fl_f_remote
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_f_remote

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L352)

    ``` pony
    fun box ipv6_fl_f_remote()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_s_any()
  id: net-ossockopt#ipv6_fl_s_any
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_s_any

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L353)

    ``` pony
    fun box ipv6_fl_s_any()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_s_excl()
  id: net-ossockopt#ipv6_fl_s_excl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_s_excl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L354)

    ``` pony
    fun box ipv6_fl_s_excl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_s_none()
  id: net-ossockopt#ipv6_fl_s_none
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_s_none

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L355)

    ``` pony
    fun box ipv6_fl_s_none()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_s_process()
  id: net-ossockopt#ipv6_fl_s_process
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_s_process

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L356)

    ``` pony
    fun box ipv6_fl_s_process()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_fl_s_user()
  id: net-ossockopt#ipv6_fl_s_user
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_fl_s_user

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L357)

    ``` pony
    fun box ipv6_fl_s_user()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_flowinfo()
  id: net-ossockopt#ipv6_flowinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_flowinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L341)

    ``` pony
    fun box ipv6_flowinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_flowinfo_flowlabel()
  id: net-ossockopt#ipv6_flowinfo_flowlabel
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_flowinfo_flowlabel

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L342)

    ``` pony
    fun box ipv6_flowinfo_flowlabel()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_flowinfo_priority()
  id: net-ossockopt#ipv6_flowinfo_priority
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_flowinfo_priority

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L343)

    ``` pony
    fun box ipv6_flowinfo_priority()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_flowinfo_send()
  id: net-ossockopt#ipv6_flowinfo_send
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_flowinfo_send

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L344)

    ``` pony
    fun box ipv6_flowinfo_send()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_flowlabel_mgr()
  id: net-ossockopt#ipv6_flowlabel_mgr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_flowlabel_mgr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L345)

    ``` pony
    fun box ipv6_flowlabel_mgr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_hoplimit()
  id: net-ossockopt#ipv6_hoplimit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_hoplimit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L358)

    ``` pony
    fun box ipv6_hoplimit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_hopopts()
  id: net-ossockopt#ipv6_hopopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_hopopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L359)

    ``` pony
    fun box ipv6_hopopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_ipsec_policy()
  id: net-ossockopt#ipv6_ipsec_policy
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_ipsec_policy

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L360)

    ``` pony
    fun box ipv6_ipsec_policy()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_join_anycast()
  id: net-ossockopt#ipv6_join_anycast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_join_anycast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L361)

    ``` pony
    fun box ipv6_join_anycast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_leave_anycast()
  id: net-ossockopt#ipv6_leave_anycast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_leave_anycast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L362)

    ``` pony
    fun box ipv6_leave_anycast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_minhopcount()
  id: net-ossockopt#ipv6_minhopcount
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_minhopcount

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L363)

    ``` pony
    fun box ipv6_minhopcount()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_mtu()
  id: net-ossockopt#ipv6_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L364)

    ``` pony
    fun box ipv6_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_mtu_discover()
  id: net-ossockopt#ipv6_mtu_discover
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_mtu_discover

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L365)

    ``` pony
    fun box ipv6_mtu_discover()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_multicast_hops()
  id: net-ossockopt#ipv6_multicast_hops
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_multicast_hops

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L366)

    ``` pony
    fun box ipv6_multicast_hops()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_multicast_if()
  id: net-ossockopt#ipv6_multicast_if
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_multicast_if

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L367)

    ``` pony
    fun box ipv6_multicast_if()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_multicast_loop()
  id: net-ossockopt#ipv6_multicast_loop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_multicast_loop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L368)

    ``` pony
    fun box ipv6_multicast_loop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_nexthop()
  id: net-ossockopt#ipv6_nexthop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_nexthop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L369)

    ``` pony
    fun box ipv6_nexthop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_origdstaddr()
  id: net-ossockopt#ipv6_origdstaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_origdstaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L370)

    ``` pony
    fun box ipv6_origdstaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pathmtu()
  id: net-ossockopt#ipv6_pathmtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pathmtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L371)

    ``` pony
    fun box ipv6_pathmtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pktinfo()
  id: net-ossockopt#ipv6_pktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L372)

    ``` pony
    fun box ipv6_pktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_do()
  id: net-ossockopt#ipv6_pmtudisc_do
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_do

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L373)

    ``` pony
    fun box ipv6_pmtudisc_do()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_dont()
  id: net-ossockopt#ipv6_pmtudisc_dont
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_dont

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L374)

    ``` pony
    fun box ipv6_pmtudisc_dont()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_interface()
  id: net-ossockopt#ipv6_pmtudisc_interface
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_interface

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L375)

    ``` pony
    fun box ipv6_pmtudisc_interface()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_omit()
  id: net-ossockopt#ipv6_pmtudisc_omit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_omit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L376)

    ``` pony
    fun box ipv6_pmtudisc_omit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_probe()
  id: net-ossockopt#ipv6_pmtudisc_probe
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_probe

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L377)

    ``` pony
    fun box ipv6_pmtudisc_probe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_pmtudisc_want()
  id: net-ossockopt#ipv6_pmtudisc_want
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_pmtudisc_want

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L378)

    ``` pony
    fun box ipv6_pmtudisc_want()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_cga()
  id: net-ossockopt#ipv6_prefer_src_cga
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_cga

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L379)

    ``` pony
    fun box ipv6_prefer_src_cga()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_coa()
  id: net-ossockopt#ipv6_prefer_src_coa
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_coa

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L380)

    ``` pony
    fun box ipv6_prefer_src_coa()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_home()
  id: net-ossockopt#ipv6_prefer_src_home
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_home

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L381)

    ``` pony
    fun box ipv6_prefer_src_home()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_noncga()
  id: net-ossockopt#ipv6_prefer_src_noncga
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_noncga

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L382)

    ``` pony
    fun box ipv6_prefer_src_noncga()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_public()
  id: net-ossockopt#ipv6_prefer_src_public
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_public

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L383)

    ``` pony
    fun box ipv6_prefer_src_public()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_pubtmp_default()
  id: net-ossockopt#ipv6_prefer_src_pubtmp_default
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_pubtmp_default

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L384)

    ``` pony
    fun box ipv6_prefer_src_pubtmp_default()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_prefer_src_tmp()
  id: net-ossockopt#ipv6_prefer_src_tmp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_prefer_src_tmp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L385)

    ``` pony
    fun box ipv6_prefer_src_tmp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_10()
  id: net-ossockopt#ipv6_priority_10
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_10

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L386)

    ``` pony
    fun box ipv6_priority_10()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_11()
  id: net-ossockopt#ipv6_priority_11
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_11

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L387)

    ``` pony
    fun box ipv6_priority_11()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_12()
  id: net-ossockopt#ipv6_priority_12
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_12

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L388)

    ``` pony
    fun box ipv6_priority_12()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_13()
  id: net-ossockopt#ipv6_priority_13
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_13

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L389)

    ``` pony
    fun box ipv6_priority_13()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_14()
  id: net-ossockopt#ipv6_priority_14
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_14

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L390)

    ``` pony
    fun box ipv6_priority_14()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_15()
  id: net-ossockopt#ipv6_priority_15
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_15

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L391)

    ``` pony
    fun box ipv6_priority_15()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_8()
  id: net-ossockopt#ipv6_priority_8
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_8

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L392)

    ``` pony
    fun box ipv6_priority_8()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_9()
  id: net-ossockopt#ipv6_priority_9
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_9

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L393)

    ``` pony
    fun box ipv6_priority_9()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_bulk()
  id: net-ossockopt#ipv6_priority_bulk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_bulk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L394)

    ``` pony
    fun box ipv6_priority_bulk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_control()
  id: net-ossockopt#ipv6_priority_control
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_control

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L395)

    ``` pony
    fun box ipv6_priority_control()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_filler()
  id: net-ossockopt#ipv6_priority_filler
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_filler

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L396)

    ``` pony
    fun box ipv6_priority_filler()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_interactive()
  id: net-ossockopt#ipv6_priority_interactive
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_interactive

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L397)

    ``` pony
    fun box ipv6_priority_interactive()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_reserved1()
  id: net-ossockopt#ipv6_priority_reserved1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_reserved1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L398)

    ``` pony
    fun box ipv6_priority_reserved1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_reserved2()
  id: net-ossockopt#ipv6_priority_reserved2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_reserved2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L399)

    ``` pony
    fun box ipv6_priority_reserved2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_unattended()
  id: net-ossockopt#ipv6_priority_unattended
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_unattended

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L400)

    ``` pony
    fun box ipv6_priority_unattended()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_priority_uncharacterized()
  id: net-ossockopt#ipv6_priority_uncharacterized
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_priority_uncharacterized

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L401)

    ``` pony
    fun box ipv6_priority_uncharacterized()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvdstopts()
  id: net-ossockopt#ipv6_recvdstopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvdstopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L402)

    ``` pony
    fun box ipv6_recvdstopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recverr()
  id: net-ossockopt#ipv6_recverr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recverr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L403)

    ``` pony
    fun box ipv6_recverr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvhoplimit()
  id: net-ossockopt#ipv6_recvhoplimit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvhoplimit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L404)

    ``` pony
    fun box ipv6_recvhoplimit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvhopopts()
  id: net-ossockopt#ipv6_recvhopopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvhopopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L405)

    ``` pony
    fun box ipv6_recvhopopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvorigdstaddr()
  id: net-ossockopt#ipv6_recvorigdstaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvorigdstaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L406)

    ``` pony
    fun box ipv6_recvorigdstaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvpathmtu()
  id: net-ossockopt#ipv6_recvpathmtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvpathmtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L407)

    ``` pony
    fun box ipv6_recvpathmtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvpktinfo()
  id: net-ossockopt#ipv6_recvpktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvpktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L408)

    ``` pony
    fun box ipv6_recvpktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvrthdr()
  id: net-ossockopt#ipv6_recvrthdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvrthdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L409)

    ``` pony
    fun box ipv6_recvrthdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_recvtclass()
  id: net-ossockopt#ipv6_recvtclass
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_recvtclass

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L410)

    ``` pony
    fun box ipv6_recvtclass()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_router_alert()
  id: net-ossockopt#ipv6_router_alert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_router_alert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L411)

    ``` pony
    fun box ipv6_router_alert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_rthdr()
  id: net-ossockopt#ipv6_rthdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_rthdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L412)

    ``` pony
    fun box ipv6_rthdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_rthdrdstopts()
  id: net-ossockopt#ipv6_rthdrdstopts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_rthdrdstopts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L413)

    ``` pony
    fun box ipv6_rthdrdstopts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tclass()
  id: net-ossockopt#ipv6_tclass
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tclass

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L414)

    ``` pony
    fun box ipv6_tclass()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tlv_hao()
  id: net-ossockopt#ipv6_tlv_hao
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tlv_hao

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L415)

    ``` pony
    fun box ipv6_tlv_hao()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tlv_jumbo()
  id: net-ossockopt#ipv6_tlv_jumbo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tlv_jumbo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L416)

    ``` pony
    fun box ipv6_tlv_jumbo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tlv_pad1()
  id: net-ossockopt#ipv6_tlv_pad1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tlv_pad1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L417)

    ``` pony
    fun box ipv6_tlv_pad1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tlv_padn()
  id: net-ossockopt#ipv6_tlv_padn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tlv_padn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L418)

    ``` pony
    fun box ipv6_tlv_padn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_tlv_routeralert()
  id: net-ossockopt#ipv6_tlv_routeralert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_tlv_routeralert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L419)

    ``` pony
    fun box ipv6_tlv_routeralert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_transparent()
  id: net-ossockopt#ipv6_transparent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_transparent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L420)

    ``` pony
    fun box ipv6_transparent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_unicast_hops()
  id: net-ossockopt#ipv6_unicast_hops
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_unicast_hops

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L421)

    ``` pony
    fun box ipv6_unicast_hops()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_unicast_if()
  id: net-ossockopt#ipv6_unicast_if
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_unicast_if

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L422)

    ``` pony
    fun box ipv6_unicast_if()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_use_min_mtu()
  id: net-ossockopt#ipv6_use_min_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_use_min_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L423)

    ``` pony
    fun box ipv6_use_min_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_v6only()
  id: net-ossockopt#ipv6_v6only
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_v6only

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L424)

    ``` pony
    fun box ipv6_v6only()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipv6_xfrm_policy()
  id: net-ossockopt#ipv6_xfrm_policy
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipv6_xfrm_policy

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L425)

    ``` pony
    fun box ipv6_xfrm_policy()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_address()
  id: net-ossockopt#ipx_address
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L426)

    ``` pony
    fun box ipx_address()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_address_notify()
  id: net-ossockopt#ipx_address_notify
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_address_notify

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L427)

    ``` pony
    fun box ipx_address_notify()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_crtitf()
  id: net-ossockopt#ipx_crtitf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_crtitf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L428)

    ``` pony
    fun box ipx_crtitf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_dltitf()
  id: net-ossockopt#ipx_dltitf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_dltitf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L429)

    ``` pony
    fun box ipx_dltitf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_dstype()
  id: net-ossockopt#ipx_dstype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_dstype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L430)

    ``` pony
    fun box ipx_dstype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_extended_address()
  id: net-ossockopt#ipx_extended_address
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_extended_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L431)

    ``` pony
    fun box ipx_extended_address()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_filterptype()
  id: net-ossockopt#ipx_filterptype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_filterptype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L432)

    ``` pony
    fun box ipx_filterptype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_8022()
  id: net-ossockopt#ipx_frame_8022
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_8022

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L433)

    ``` pony
    fun box ipx_frame_8022()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_8023()
  id: net-ossockopt#ipx_frame_8023
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_8023

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L434)

    ``` pony
    fun box ipx_frame_8023()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_etherii()
  id: net-ossockopt#ipx_frame_etherii
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_etherii

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L435)

    ``` pony
    fun box ipx_frame_etherii()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_none()
  id: net-ossockopt#ipx_frame_none
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_none

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L436)

    ``` pony
    fun box ipx_frame_none()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_snap()
  id: net-ossockopt#ipx_frame_snap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_snap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L437)

    ``` pony
    fun box ipx_frame_snap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_frame_tr_8022()
  id: net-ossockopt#ipx_frame_tr_8022
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_frame_tr_8022

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L438)

    ``` pony
    fun box ipx_frame_tr_8022()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_getnetinfo()
  id: net-ossockopt#ipx_getnetinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_getnetinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L439)

    ``` pony
    fun box ipx_getnetinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_getnetinfo_norip()
  id: net-ossockopt#ipx_getnetinfo_norip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_getnetinfo_norip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L440)

    ``` pony
    fun box ipx_getnetinfo_norip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_immediatespxack()
  id: net-ossockopt#ipx_immediatespxack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_immediatespxack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L441)

    ``` pony
    fun box ipx_immediatespxack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_internal()
  id: net-ossockopt#ipx_internal
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_internal

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L442)

    ``` pony
    fun box ipx_internal()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_max_adapter_num()
  id: net-ossockopt#ipx_max_adapter_num
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_max_adapter_num

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L444)

    ``` pony
    fun box ipx_max_adapter_num()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_maxsize()
  id: net-ossockopt#ipx_maxsize
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_maxsize

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L443)

    ``` pony
    fun box ipx_maxsize()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_mtu()
  id: net-ossockopt#ipx_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L445)

    ``` pony
    fun box ipx_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_node_len()
  id: net-ossockopt#ipx_node_len
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_node_len

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L446)

    ``` pony
    fun box ipx_node_len()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_primary()
  id: net-ossockopt#ipx_primary
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_primary

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L447)

    ``` pony
    fun box ipx_primary()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_ptype()
  id: net-ossockopt#ipx_ptype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_ptype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L448)

    ``` pony
    fun box ipx_ptype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_receive_broadcast()
  id: net-ossockopt#ipx_receive_broadcast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_receive_broadcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L449)

    ``` pony
    fun box ipx_receive_broadcast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_recvhdr()
  id: net-ossockopt#ipx_recvhdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_recvhdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L450)

    ``` pony
    fun box ipx_recvhdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_reripnetnumber()
  id: net-ossockopt#ipx_reripnetnumber
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_reripnetnumber

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L451)

    ``` pony
    fun box ipx_reripnetnumber()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_route_no_router()
  id: net-ossockopt#ipx_route_no_router
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_route_no_router

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L452)

    ``` pony
    fun box ipx_route_no_router()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_rt_8022()
  id: net-ossockopt#ipx_rt_8022
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_rt_8022

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L453)

    ``` pony
    fun box ipx_rt_8022()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_rt_bluebook()
  id: net-ossockopt#ipx_rt_bluebook
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_rt_bluebook

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L454)

    ``` pony
    fun box ipx_rt_bluebook()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_rt_routed()
  id: net-ossockopt#ipx_rt_routed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_rt_routed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L455)

    ``` pony
    fun box ipx_rt_routed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_rt_snap()
  id: net-ossockopt#ipx_rt_snap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_rt_snap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L456)

    ``` pony
    fun box ipx_rt_snap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_special_none()
  id: net-ossockopt#ipx_special_none
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_special_none

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L457)

    ``` pony
    fun box ipx_special_none()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_spxgetconnectionstatus()
  id: net-ossockopt#ipx_spxgetconnectionstatus
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_spxgetconnectionstatus

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L458)

    ``` pony
    fun box ipx_spxgetconnectionstatus()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_stopfilterptype()
  id: net-ossockopt#ipx_stopfilterptype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_stopfilterptype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L459)

    ``` pony
    fun box ipx_stopfilterptype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ipx_type()
  id: net-ossockopt#ipx_type
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ipx_type

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L460)

    ``` pony
    fun box ipx_type()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_connwait()
  id: net-ossockopt#local_connwait
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_connwait

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L569)

    ``` pony
    fun box local_connwait()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_creds()
  id: net-ossockopt#local_creds
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_creds

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L570)

    ``` pony
    fun box local_creds()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_peercred()
  id: net-ossockopt#local_peercred
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_peercred

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L571)

    ``` pony
    fun box local_peercred()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_peerepid()
  id: net-ossockopt#local_peerepid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_peerepid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L572)

    ``` pony
    fun box local_peerepid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_peereuuid()
  id: net-ossockopt#local_peereuuid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_peereuuid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L573)

    ``` pony
    fun box local_peereuuid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_peerpid()
  id: net-ossockopt#local_peerpid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_peerpid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L574)

    ``` pony
    fun box local_peerpid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_peeruuid()
  id: net-ossockopt#local_peeruuid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_peeruuid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L575)

    ``` pony
    fun box local_peeruuid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.local_vendor()
  id: net-ossockopt#local_vendor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### local_vendor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L576)

    ``` pony
    fun box local_vendor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.max_tcpoptlen()
  id: net-ossockopt#max_tcpoptlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### max_tcpoptlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L577)

    ``` pony
    fun box max_tcpoptlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_block_source()
  id: net-ossockopt#mcast_block_source
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_block_source

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L578)

    ``` pony
    fun box mcast_block_source()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_exclude()
  id: net-ossockopt#mcast_exclude
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_exclude

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L579)

    ``` pony
    fun box mcast_exclude()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_include()
  id: net-ossockopt#mcast_include
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_include

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L580)

    ``` pony
    fun box mcast_include()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_join_group()
  id: net-ossockopt#mcast_join_group
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_join_group

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L581)

    ``` pony
    fun box mcast_join_group()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_join_source_group()
  id: net-ossockopt#mcast_join_source_group
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_join_source_group

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L582)

    ``` pony
    fun box mcast_join_source_group()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_leave_group()
  id: net-ossockopt#mcast_leave_group
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_leave_group

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L583)

    ``` pony
    fun box mcast_leave_group()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_leave_source_group()
  id: net-ossockopt#mcast_leave_source_group
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_leave_source_group

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L584)

    ``` pony
    fun box mcast_leave_source_group()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_msfilter()
  id: net-ossockopt#mcast_msfilter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_msfilter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L585)

    ``` pony
    fun box mcast_msfilter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_unblock_source()
  id: net-ossockopt#mcast_unblock_source
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_unblock_source

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L586)

    ``` pony
    fun box mcast_unblock_source()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mcast_undefined()
  id: net-ossockopt#mcast_undefined
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mcast_undefined

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L587)

    ``` pony
    fun box mcast_undefined()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_add_bw_upcall()
  id: net-ossockopt#mrt_add_bw_upcall
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_add_bw_upcall

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L588)

    ``` pony
    fun box mrt_add_bw_upcall()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_add_mfc()
  id: net-ossockopt#mrt_add_mfc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_add_mfc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L589)

    ``` pony
    fun box mrt_add_mfc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_add_vif()
  id: net-ossockopt#mrt_add_vif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_add_vif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L590)

    ``` pony
    fun box mrt_add_vif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_api_config()
  id: net-ossockopt#mrt_api_config
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_api_config

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L591)

    ``` pony
    fun box mrt_api_config()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_api_flags_all()
  id: net-ossockopt#mrt_api_flags_all
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_api_flags_all

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L592)

    ``` pony
    fun box mrt_api_flags_all()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_api_support()
  id: net-ossockopt#mrt_api_support
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_api_support

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L593)

    ``` pony
    fun box mrt_api_support()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_assert()
  id: net-ossockopt#mrt_assert
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_assert

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L594)

    ``` pony
    fun box mrt_assert()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_del_bw_upcall()
  id: net-ossockopt#mrt_del_bw_upcall
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_del_bw_upcall

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L595)

    ``` pony
    fun box mrt_del_bw_upcall()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_del_mfc()
  id: net-ossockopt#mrt_del_mfc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_del_mfc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L596)

    ``` pony
    fun box mrt_del_mfc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_del_vif()
  id: net-ossockopt#mrt_del_vif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_del_vif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L597)

    ``` pony
    fun box mrt_del_vif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_done()
  id: net-ossockopt#mrt_done
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_done

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L598)

    ``` pony
    fun box mrt_done()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_init()
  id: net-ossockopt#mrt_init
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_init

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L599)

    ``` pony
    fun box mrt_init()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_mfc_bw_upcall()
  id: net-ossockopt#mrt_mfc_bw_upcall
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_mfc_bw_upcall

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L600)

    ``` pony
    fun box mrt_mfc_bw_upcall()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_mfc_flags_all()
  id: net-ossockopt#mrt_mfc_flags_all
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_mfc_flags_all

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L601)

    ``` pony
    fun box mrt_mfc_flags_all()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_mfc_flags_border_vif()
  id: net-ossockopt#mrt_mfc_flags_border_vif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_mfc_flags_border_vif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L602)

    ``` pony
    fun box mrt_mfc_flags_border_vif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_mfc_flags_disable_wrongvif()
  id: net-ossockopt#mrt_mfc_flags_disable_wrongvif
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_mfc_flags_disable_wrongvif

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L603)

    ``` pony
    fun box mrt_mfc_flags_disable_wrongvif()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_mfc_rp()
  id: net-ossockopt#mrt_mfc_rp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_mfc_rp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L604)

    ``` pony
    fun box mrt_mfc_rp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_pim()
  id: net-ossockopt#mrt_pim
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_pim

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L605)

    ``` pony
    fun box mrt_pim()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.mrt_version()
  id: net-ossockopt#mrt_version
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### mrt_version

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L606)

    ``` pony
    fun box mrt_version()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.msg_notification()
  id: net-ossockopt#msg_notification
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### msg_notification

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L607)

    ``` pony
    fun box msg_notification()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.msg_socallbck()
  id: net-ossockopt#msg_socallbck
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### msg_socallbck

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L608)

    ``` pony
    fun box msg_socallbck()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_addmulticast()
  id: net-ossockopt#ndrv_addmulticast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_addmulticast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L610)

    ``` pony
    fun box ndrv_addmulticast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_deldmxspec()
  id: net-ossockopt#ndrv_deldmxspec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_deldmxspec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L611)

    ``` pony
    fun box ndrv_deldmxspec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_delmulticast()
  id: net-ossockopt#ndrv_delmulticast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_delmulticast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L612)

    ``` pony
    fun box ndrv_delmulticast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_demuxtype_ethertype()
  id: net-ossockopt#ndrv_demuxtype_ethertype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_demuxtype_ethertype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L613)

    ``` pony
    fun box ndrv_demuxtype_ethertype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_demuxtype_sap()
  id: net-ossockopt#ndrv_demuxtype_sap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_demuxtype_sap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L614)

    ``` pony
    fun box ndrv_demuxtype_sap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_demuxtype_snap()
  id: net-ossockopt#ndrv_demuxtype_snap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_demuxtype_snap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L615)

    ``` pony
    fun box ndrv_demuxtype_snap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_dmux_max_descr()
  id: net-ossockopt#ndrv_dmux_max_descr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_dmux_max_descr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L616)

    ``` pony
    fun box ndrv_dmux_max_descr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_protocol_desc_vers()
  id: net-ossockopt#ndrv_protocol_desc_vers
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_protocol_desc_vers

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L617)

    ``` pony
    fun box ndrv_protocol_desc_vers()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrv_setdmxspec()
  id: net-ossockopt#ndrv_setdmxspec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrv_setdmxspec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L618)

    ``` pony
    fun box ndrv_setdmxspec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ndrvproto_ndrv()
  id: net-ossockopt#ndrvproto_ndrv
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ndrvproto_ndrv

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L609)

    ``` pony
    fun box ndrvproto_ndrv()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ne()
  id: net-ossockopt#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: OSSockOpt
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/ossockopt/#L76)\n\n``` pony\nfun box ne(\n  that: OSSockOpt val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OSSockOpt](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-OSSockOpt](https://stdlib.ponylang.io/net-OSSockOpt)"
- name: OSSockOpt.netlink_add_membership()
  id: net-ossockopt#netlink_add_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_add_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L619)

    ``` pony
    fun box netlink_add_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_audit()
  id: net-ossockopt#netlink_audit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_audit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L620)

    ``` pony
    fun box netlink_audit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_broadcast_error()
  id: net-ossockopt#netlink_broadcast_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_broadcast_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L621)

    ``` pony
    fun box netlink_broadcast_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_cap_ack()
  id: net-ossockopt#netlink_cap_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_cap_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L622)

    ``` pony
    fun box netlink_cap_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_connector()
  id: net-ossockopt#netlink_connector
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_connector

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L623)

    ``` pony
    fun box netlink_connector()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_crypto()
  id: net-ossockopt#netlink_crypto
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_crypto

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L624)

    ``` pony
    fun box netlink_crypto()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_dnrtmsg()
  id: net-ossockopt#netlink_dnrtmsg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_dnrtmsg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L625)

    ``` pony
    fun box netlink_dnrtmsg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_drop_membership()
  id: net-ossockopt#netlink_drop_membership
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_drop_membership

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L626)

    ``` pony
    fun box netlink_drop_membership()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_ecryptfs()
  id: net-ossockopt#netlink_ecryptfs
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_ecryptfs

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L627)

    ``` pony
    fun box netlink_ecryptfs()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_fib_lookup()
  id: net-ossockopt#netlink_fib_lookup
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_fib_lookup

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L628)

    ``` pony
    fun box netlink_fib_lookup()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_firewall()
  id: net-ossockopt#netlink_firewall
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_firewall

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L629)

    ``` pony
    fun box netlink_firewall()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_generic()
  id: net-ossockopt#netlink_generic
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_generic

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L630)

    ``` pony
    fun box netlink_generic()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_inet_diag()
  id: net-ossockopt#netlink_inet_diag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_inet_diag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L631)

    ``` pony
    fun box netlink_inet_diag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_ip6_fw()
  id: net-ossockopt#netlink_ip6_fw
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_ip6_fw

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L632)

    ``` pony
    fun box netlink_ip6_fw()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_iscsi()
  id: net-ossockopt#netlink_iscsi
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_iscsi

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L633)

    ``` pony
    fun box netlink_iscsi()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_kobject_uevent()
  id: net-ossockopt#netlink_kobject_uevent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_kobject_uevent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L634)

    ``` pony
    fun box netlink_kobject_uevent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_list_memberships()
  id: net-ossockopt#netlink_list_memberships
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_list_memberships

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L636)

    ``` pony
    fun box netlink_list_memberships()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_listen_all_nsid()
  id: net-ossockopt#netlink_listen_all_nsid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_listen_all_nsid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L635)

    ``` pony
    fun box netlink_listen_all_nsid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_netfilter()
  id: net-ossockopt#netlink_netfilter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_netfilter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L637)

    ``` pony
    fun box netlink_netfilter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_nflog()
  id: net-ossockopt#netlink_nflog
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_nflog

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L638)

    ``` pony
    fun box netlink_nflog()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_no_enobufs()
  id: net-ossockopt#netlink_no_enobufs
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_no_enobufs

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L639)

    ``` pony
    fun box netlink_no_enobufs()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_pktinfo()
  id: net-ossockopt#netlink_pktinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_pktinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L640)

    ``` pony
    fun box netlink_pktinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_rdma()
  id: net-ossockopt#netlink_rdma
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_rdma

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L641)

    ``` pony
    fun box netlink_rdma()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_route()
  id: net-ossockopt#netlink_route
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_route

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L642)

    ``` pony
    fun box netlink_route()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_rx_ring()
  id: net-ossockopt#netlink_rx_ring
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_rx_ring

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L643)

    ``` pony
    fun box netlink_rx_ring()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_scsitransport()
  id: net-ossockopt#netlink_scsitransport
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_scsitransport

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L644)

    ``` pony
    fun box netlink_scsitransport()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_selinux()
  id: net-ossockopt#netlink_selinux
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_selinux

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L645)

    ``` pony
    fun box netlink_selinux()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_sock_diag()
  id: net-ossockopt#netlink_sock_diag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_sock_diag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L646)

    ``` pony
    fun box netlink_sock_diag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_tx_ring()
  id: net-ossockopt#netlink_tx_ring
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_tx_ring

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L647)

    ``` pony
    fun box netlink_tx_ring()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_unused()
  id: net-ossockopt#netlink_unused
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_unused

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L648)

    ``` pony
    fun box netlink_unused()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_usersock()
  id: net-ossockopt#netlink_usersock
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_usersock

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L649)

    ``` pony
    fun box netlink_usersock()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netlink_xfrm()
  id: net-ossockopt#netlink_xfrm
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netlink_xfrm

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L650)

    ``` pony
    fun box netlink_xfrm()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_idle()
  id: net-ossockopt#netrom_idle
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_idle

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L651)

    ``` pony
    fun box netrom_idle()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_kill()
  id: net-ossockopt#netrom_kill
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_kill

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L652)

    ``` pony
    fun box netrom_kill()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_n2()
  id: net-ossockopt#netrom_n2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_n2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L653)

    ``` pony
    fun box netrom_n2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_neigh()
  id: net-ossockopt#netrom_neigh
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_neigh

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L654)

    ``` pony
    fun box netrom_neigh()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_node()
  id: net-ossockopt#netrom_node
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_node

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L655)

    ``` pony
    fun box netrom_node()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_paclen()
  id: net-ossockopt#netrom_paclen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_paclen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L656)

    ``` pony
    fun box netrom_paclen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_t1()
  id: net-ossockopt#netrom_t1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_t1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L657)

    ``` pony
    fun box netrom_t1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_t2()
  id: net-ossockopt#netrom_t2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_t2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L658)

    ``` pony
    fun box netrom_t2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.netrom_t4()
  id: net-ossockopt#netrom_t4
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### netrom_t4

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L659)

    ``` pony
    fun box netrom_t4()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.nrdv_multicast_addrs_per_sock()
  id: net-ossockopt#nrdv_multicast_addrs_per_sock
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### nrdv_multicast_addrs_per_sock

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L660)

    ``` pony
    fun box nrdv_multicast_addrs_per_sock()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.pvd_config()
  id: net-ossockopt#pvd_config
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### pvd_config

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L661)

    ``` pony
    fun box pvd_config()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cancel_sent_to()
  id: net-ossockopt#rds_cancel_sent_to
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cancel_sent_to

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L662)

    ``` pony
    fun box rds_cancel_sent_to()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_atomic_cswp()
  id: net-ossockopt#rds_cmsg_atomic_cswp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_atomic_cswp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L663)

    ``` pony
    fun box rds_cmsg_atomic_cswp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_atomic_fadd()
  id: net-ossockopt#rds_cmsg_atomic_fadd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_atomic_fadd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L664)

    ``` pony
    fun box rds_cmsg_atomic_fadd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_cong_update()
  id: net-ossockopt#rds_cmsg_cong_update
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_cong_update

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L665)

    ``` pony
    fun box rds_cmsg_cong_update()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_masked_atomic_cswp()
  id: net-ossockopt#rds_cmsg_masked_atomic_cswp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_masked_atomic_cswp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L666)

    ``` pony
    fun box rds_cmsg_masked_atomic_cswp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_masked_atomic_fadd()
  id: net-ossockopt#rds_cmsg_masked_atomic_fadd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_masked_atomic_fadd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L667)

    ``` pony
    fun box rds_cmsg_masked_atomic_fadd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_rdma_args()
  id: net-ossockopt#rds_cmsg_rdma_args
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_rdma_args

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L668)

    ``` pony
    fun box rds_cmsg_rdma_args()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_rdma_dest()
  id: net-ossockopt#rds_cmsg_rdma_dest
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_rdma_dest

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L669)

    ``` pony
    fun box rds_cmsg_rdma_dest()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_rdma_map()
  id: net-ossockopt#rds_cmsg_rdma_map
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_rdma_map

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L670)

    ``` pony
    fun box rds_cmsg_rdma_map()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cmsg_rdma_status()
  id: net-ossockopt#rds_cmsg_rdma_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cmsg_rdma_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L671)

    ``` pony
    fun box rds_cmsg_rdma_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cong_monitor()
  id: net-ossockopt#rds_cong_monitor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cong_monitor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L672)

    ``` pony
    fun box rds_cong_monitor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_cong_monitor_size()
  id: net-ossockopt#rds_cong_monitor_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_cong_monitor_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L673)

    ``` pony
    fun box rds_cong_monitor_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_free_mr()
  id: net-ossockopt#rds_free_mr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_free_mr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L674)

    ``` pony
    fun box rds_free_mr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_get_mr()
  id: net-ossockopt#rds_get_mr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_get_mr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L675)

    ``` pony
    fun box rds_get_mr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_get_mr_for_dest()
  id: net-ossockopt#rds_get_mr_for_dest
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_get_mr_for_dest

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L676)

    ``` pony
    fun box rds_get_mr_for_dest()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_ib_abi_version()
  id: net-ossockopt#rds_ib_abi_version
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_ib_abi_version

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L677)

    ``` pony
    fun box rds_ib_abi_version()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_ib_gid_len()
  id: net-ossockopt#rds_ib_gid_len
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_ib_gid_len

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L678)

    ``` pony
    fun box rds_ib_gid_len()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_connection_flag_connected()
  id: net-ossockopt#rds_info_connection_flag_connected
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_connection_flag_connected

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L680)

    ``` pony
    fun box rds_info_connection_flag_connected()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_connection_flag_connecting()
  id: net-ossockopt#rds_info_connection_flag_connecting
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_connection_flag_connecting

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L681)

    ``` pony
    fun box rds_info_connection_flag_connecting()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_connection_flag_sending()
  id: net-ossockopt#rds_info_connection_flag_sending
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_connection_flag_sending

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L682)

    ``` pony
    fun box rds_info_connection_flag_sending()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_connection_stats()
  id: net-ossockopt#rds_info_connection_stats
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_connection_stats

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L683)

    ``` pony
    fun box rds_info_connection_stats()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_connections()
  id: net-ossockopt#rds_info_connections
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_connections

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L679)

    ``` pony
    fun box rds_info_connections()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_counters()
  id: net-ossockopt#rds_info_counters
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_counters

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L684)

    ``` pony
    fun box rds_info_counters()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_first()
  id: net-ossockopt#rds_info_first
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_first

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L685)

    ``` pony
    fun box rds_info_first()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_ib_connections()
  id: net-ossockopt#rds_info_ib_connections
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_ib_connections

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L686)

    ``` pony
    fun box rds_info_ib_connections()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_iwarp_connections()
  id: net-ossockopt#rds_info_iwarp_connections
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_iwarp_connections

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L687)

    ``` pony
    fun box rds_info_iwarp_connections()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_last()
  id: net-ossockopt#rds_info_last
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_last

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L688)

    ``` pony
    fun box rds_info_last()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_message_flag_ack()
  id: net-ossockopt#rds_info_message_flag_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_message_flag_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L689)

    ``` pony
    fun box rds_info_message_flag_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_message_flag_fast_ack()
  id: net-ossockopt#rds_info_message_flag_fast_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_message_flag_fast_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L690)

    ``` pony
    fun box rds_info_message_flag_fast_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_recv_messages()
  id: net-ossockopt#rds_info_recv_messages
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_recv_messages

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L691)

    ``` pony
    fun box rds_info_recv_messages()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_retrans_messages()
  id: net-ossockopt#rds_info_retrans_messages
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_retrans_messages

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L692)

    ``` pony
    fun box rds_info_retrans_messages()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_send_messages()
  id: net-ossockopt#rds_info_send_messages
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_send_messages

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L693)

    ``` pony
    fun box rds_info_send_messages()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_sockets()
  id: net-ossockopt#rds_info_sockets
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_sockets

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L694)

    ``` pony
    fun box rds_info_sockets()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_info_tcp_sockets()
  id: net-ossockopt#rds_info_tcp_sockets
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_info_tcp_sockets

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L695)

    ``` pony
    fun box rds_info_tcp_sockets()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_canceled()
  id: net-ossockopt#rds_rdma_canceled
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_canceled

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L696)

    ``` pony
    fun box rds_rdma_canceled()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_dontwait()
  id: net-ossockopt#rds_rdma_dontwait
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_dontwait

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L697)

    ``` pony
    fun box rds_rdma_dontwait()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_dropped()
  id: net-ossockopt#rds_rdma_dropped
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_dropped

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L698)

    ``` pony
    fun box rds_rdma_dropped()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_fence()
  id: net-ossockopt#rds_rdma_fence
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_fence

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L699)

    ``` pony
    fun box rds_rdma_fence()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_invalidate()
  id: net-ossockopt#rds_rdma_invalidate
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_invalidate

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L700)

    ``` pony
    fun box rds_rdma_invalidate()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_notify_me()
  id: net-ossockopt#rds_rdma_notify_me
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_notify_me

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L701)

    ``` pony
    fun box rds_rdma_notify_me()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_other_error()
  id: net-ossockopt#rds_rdma_other_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_other_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L702)

    ``` pony
    fun box rds_rdma_other_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_readwrite()
  id: net-ossockopt#rds_rdma_readwrite
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_readwrite

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L703)

    ``` pony
    fun box rds_rdma_readwrite()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_remote_error()
  id: net-ossockopt#rds_rdma_remote_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_remote_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L704)

    ``` pony
    fun box rds_rdma_remote_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_silent()
  id: net-ossockopt#rds_rdma_silent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_silent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L705)

    ``` pony
    fun box rds_rdma_silent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_success()
  id: net-ossockopt#rds_rdma_success
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_success

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L706)

    ``` pony
    fun box rds_rdma_success()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_rdma_use_once()
  id: net-ossockopt#rds_rdma_use_once
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_rdma_use_once

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L707)

    ``` pony
    fun box rds_rdma_use_once()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_recverr()
  id: net-ossockopt#rds_recverr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_recverr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L708)

    ``` pony
    fun box rds_recverr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_trans_count()
  id: net-ossockopt#rds_trans_count
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_trans_count

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L709)

    ``` pony
    fun box rds_trans_count()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_trans_ib()
  id: net-ossockopt#rds_trans_ib
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_trans_ib

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L710)

    ``` pony
    fun box rds_trans_ib()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_trans_iwarp()
  id: net-ossockopt#rds_trans_iwarp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_trans_iwarp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L711)

    ``` pony
    fun box rds_trans_iwarp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_trans_none()
  id: net-ossockopt#rds_trans_none
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_trans_none

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L712)

    ``` pony
    fun box rds_trans_none()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rds_trans_tcp()
  id: net-ossockopt#rds_trans_tcp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rds_trans_tcp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L713)

    ``` pony
    fun box rds_trans_tcp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_access_barred()
  id: net-ossockopt#rose_access_barred
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_access_barred

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L714)

    ``` pony
    fun box rose_access_barred()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_defer()
  id: net-ossockopt#rose_defer
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_defer

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L715)

    ``` pony
    fun box rose_defer()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_dte_originated()
  id: net-ossockopt#rose_dte_originated
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_dte_originated

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L716)

    ``` pony
    fun box rose_dte_originated()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_holdback()
  id: net-ossockopt#rose_holdback
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_holdback

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L717)

    ``` pony
    fun box rose_holdback()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_idle()
  id: net-ossockopt#rose_idle
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_idle

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L718)

    ``` pony
    fun box rose_idle()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_invalid_facility()
  id: net-ossockopt#rose_invalid_facility
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_invalid_facility

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L719)

    ``` pony
    fun box rose_invalid_facility()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_local_procedure()
  id: net-ossockopt#rose_local_procedure
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_local_procedure

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L720)

    ``` pony
    fun box rose_local_procedure()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_max_digis()
  id: net-ossockopt#rose_max_digis
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_max_digis

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L721)

    ``` pony
    fun box rose_max_digis()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_mtu()
  id: net-ossockopt#rose_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L722)

    ``` pony
    fun box rose_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_network_congestion()
  id: net-ossockopt#rose_network_congestion
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_network_congestion

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L723)

    ``` pony
    fun box rose_network_congestion()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_not_obtainable()
  id: net-ossockopt#rose_not_obtainable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_not_obtainable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L724)

    ``` pony
    fun box rose_not_obtainable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_number_busy()
  id: net-ossockopt#rose_number_busy
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_number_busy

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L725)

    ``` pony
    fun box rose_number_busy()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_out_of_order()
  id: net-ossockopt#rose_out_of_order
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_out_of_order

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L726)

    ``` pony
    fun box rose_out_of_order()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_qbitincl()
  id: net-ossockopt#rose_qbitincl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_qbitincl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L727)

    ``` pony
    fun box rose_qbitincl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_remote_procedure()
  id: net-ossockopt#rose_remote_procedure
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_remote_procedure

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L728)

    ``` pony
    fun box rose_remote_procedure()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_ship_absent()
  id: net-ossockopt#rose_ship_absent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_ship_absent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L729)

    ``` pony
    fun box rose_ship_absent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_t1()
  id: net-ossockopt#rose_t1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_t1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L730)

    ``` pony
    fun box rose_t1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_t2()
  id: net-ossockopt#rose_t2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_t2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L731)

    ``` pony
    fun box rose_t2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.rose_t3()
  id: net-ossockopt#rose_t3
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### rose_t3

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L732)

    ``` pony
    fun box rose_t3()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.scm_hci_raw_direction()
  id: net-ossockopt#scm_hci_raw_direction
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### scm_hci_raw_direction

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L733)

    ``` pony
    fun box scm_hci_raw_direction()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.scm_timestamp()
  id: net-ossockopt#scm_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### scm_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L734)

    ``` pony
    fun box scm_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.scm_timestamping()
  id: net-ossockopt#scm_timestamping
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### scm_timestamping

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L735)

    ``` pony
    fun box scm_timestamping()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.scm_timestampns()
  id: net-ossockopt#scm_timestampns
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### scm_timestampns

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L736)

    ``` pony
    fun box scm_timestampns()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.scm_wifi_status()
  id: net-ossockopt#scm_wifi_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### scm_wifi_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L737)

    ``` pony
    fun box scm_wifi_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_abort_association()
  id: net-ossockopt#sctp_abort_association
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_abort_association

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L738)

    ``` pony
    fun box sctp_abort_association()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_adaptation_layer()
  id: net-ossockopt#sctp_adaptation_layer
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_adaptation_layer

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L739)

    ``` pony
    fun box sctp_adaptation_layer()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_adaption_layer()
  id: net-ossockopt#sctp_adaption_layer
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_adaption_layer

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L740)

    ``` pony
    fun box sctp_adaption_layer()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_add_streams()
  id: net-ossockopt#sctp_add_streams
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_add_streams

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L741)

    ``` pony
    fun box sctp_add_streams()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_add_vrf_id()
  id: net-ossockopt#sctp_add_vrf_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_add_vrf_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L742)

    ``` pony
    fun box sctp_add_vrf_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_asconf()
  id: net-ossockopt#sctp_asconf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_asconf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L743)

    ``` pony
    fun box sctp_asconf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_asconf_ack()
  id: net-ossockopt#sctp_asconf_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_asconf_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L744)

    ``` pony
    fun box sctp_asconf_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_asconf_supported()
  id: net-ossockopt#sctp_asconf_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_asconf_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L745)

    ``` pony
    fun box sctp_asconf_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_associnfo()
  id: net-ossockopt#sctp_associnfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_associnfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L746)

    ``` pony
    fun box sctp_associnfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_active_key()
  id: net-ossockopt#sctp_auth_active_key
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_active_key

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L748)

    ``` pony
    fun box sctp_auth_active_key()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_chunk()
  id: net-ossockopt#sctp_auth_chunk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_chunk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L749)

    ``` pony
    fun box sctp_auth_chunk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_deactivate_key()
  id: net-ossockopt#sctp_auth_deactivate_key
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_deactivate_key

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L750)

    ``` pony
    fun box sctp_auth_deactivate_key()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_delete_key()
  id: net-ossockopt#sctp_auth_delete_key
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_delete_key

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L751)

    ``` pony
    fun box sctp_auth_delete_key()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_key()
  id: net-ossockopt#sctp_auth_key
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_key

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L752)

    ``` pony
    fun box sctp_auth_key()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auth_supported()
  id: net-ossockopt#sctp_auth_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auth_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L753)

    ``` pony
    fun box sctp_auth_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_authentication()
  id: net-ossockopt#sctp_authentication
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_authentication

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L747)

    ``` pony
    fun box sctp_authentication()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_auto_asconf()
  id: net-ossockopt#sctp_auto_asconf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_auto_asconf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L755)

    ``` pony
    fun box sctp_auto_asconf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_autoclose()
  id: net-ossockopt#sctp_autoclose
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_autoclose

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L754)

    ``` pony
    fun box sctp_autoclose()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_badcrc()
  id: net-ossockopt#sctp_badcrc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_badcrc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L756)

    ``` pony
    fun box sctp_badcrc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_bindx_add_addr()
  id: net-ossockopt#sctp_bindx_add_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_bindx_add_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L757)

    ``` pony
    fun box sctp_bindx_add_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_bindx_rem_addr()
  id: net-ossockopt#sctp_bindx_rem_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_bindx_rem_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L758)

    ``` pony
    fun box sctp_bindx_rem_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_blk_logging_enable()
  id: net-ossockopt#sctp_blk_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_blk_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L759)

    ``` pony
    fun box sctp_blk_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_bound()
  id: net-ossockopt#sctp_bound
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_bound

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L760)

    ``` pony
    fun box sctp_bound()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_cookie_in_shutdown()
  id: net-ossockopt#sctp_cause_cookie_in_shutdown
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_cookie_in_shutdown

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L761)

    ``` pony
    fun box sctp_cause_cookie_in_shutdown()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_deleting_last_addr()
  id: net-ossockopt#sctp_cause_deleting_last_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_deleting_last_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L762)

    ``` pony
    fun box sctp_cause_deleting_last_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_deleting_src_addr()
  id: net-ossockopt#sctp_cause_deleting_src_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_deleting_src_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L763)

    ``` pony
    fun box sctp_cause_deleting_src_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_illegal_asconf_ack()
  id: net-ossockopt#sctp_cause_illegal_asconf_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_illegal_asconf_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L764)

    ``` pony
    fun box sctp_cause_illegal_asconf_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_invalid_param()
  id: net-ossockopt#sctp_cause_invalid_param
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_invalid_param

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L765)

    ``` pony
    fun box sctp_cause_invalid_param()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_invalid_stream()
  id: net-ossockopt#sctp_cause_invalid_stream
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_invalid_stream

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L766)

    ``` pony
    fun box sctp_cause_invalid_stream()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_missing_param()
  id: net-ossockopt#sctp_cause_missing_param
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_missing_param

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L767)

    ``` pony
    fun box sctp_cause_missing_param()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_nat_colliding_state()
  id: net-ossockopt#sctp_cause_nat_colliding_state
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_nat_colliding_state

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L768)

    ``` pony
    fun box sctp_cause_nat_colliding_state()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_nat_missing_state()
  id: net-ossockopt#sctp_cause_nat_missing_state
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_nat_missing_state

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L769)

    ``` pony
    fun box sctp_cause_nat_missing_state()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_no_error()
  id: net-ossockopt#sctp_cause_no_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_no_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L770)

    ``` pony
    fun box sctp_cause_no_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_no_user_data()
  id: net-ossockopt#sctp_cause_no_user_data
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_no_user_data

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L771)

    ``` pony
    fun box sctp_cause_no_user_data()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_out_of_resc()
  id: net-ossockopt#sctp_cause_out_of_resc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_out_of_resc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L772)

    ``` pony
    fun box sctp_cause_out_of_resc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_protocol_violation()
  id: net-ossockopt#sctp_cause_protocol_violation
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_protocol_violation

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L773)

    ``` pony
    fun box sctp_cause_protocol_violation()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_request_refused()
  id: net-ossockopt#sctp_cause_request_refused
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_request_refused

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L774)

    ``` pony
    fun box sctp_cause_request_refused()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_resource_shortage()
  id: net-ossockopt#sctp_cause_resource_shortage
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_resource_shortage

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L775)

    ``` pony
    fun box sctp_cause_resource_shortage()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_restart_w_newaddr()
  id: net-ossockopt#sctp_cause_restart_w_newaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_restart_w_newaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L776)

    ``` pony
    fun box sctp_cause_restart_w_newaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_stale_cookie()
  id: net-ossockopt#sctp_cause_stale_cookie
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_stale_cookie

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L777)

    ``` pony
    fun box sctp_cause_stale_cookie()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_unrecog_chunk()
  id: net-ossockopt#sctp_cause_unrecog_chunk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_unrecog_chunk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L778)

    ``` pony
    fun box sctp_cause_unrecog_chunk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_unrecog_param()
  id: net-ossockopt#sctp_cause_unrecog_param
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_unrecog_param

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L779)

    ``` pony
    fun box sctp_cause_unrecog_param()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_unresolvable_addr()
  id: net-ossockopt#sctp_cause_unresolvable_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_unresolvable_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L780)

    ``` pony
    fun box sctp_cause_unresolvable_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_unsupported_hmacid()
  id: net-ossockopt#sctp_cause_unsupported_hmacid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_unsupported_hmacid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L781)

    ``` pony
    fun box sctp_cause_unsupported_hmacid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cause_user_initiated_abt()
  id: net-ossockopt#sctp_cause_user_initiated_abt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cause_user_initiated_abt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L782)

    ``` pony
    fun box sctp_cause_user_initiated_abt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_hstcp()
  id: net-ossockopt#sctp_cc_hstcp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_hstcp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L783)

    ``` pony
    fun box sctp_cc_hstcp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_htcp()
  id: net-ossockopt#sctp_cc_htcp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_htcp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L784)

    ``` pony
    fun box sctp_cc_htcp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_opt_rtcc_setmode()
  id: net-ossockopt#sctp_cc_opt_rtcc_setmode
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_opt_rtcc_setmode

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L786)

    ``` pony
    fun box sctp_cc_opt_rtcc_setmode()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_opt_steady_step()
  id: net-ossockopt#sctp_cc_opt_steady_step
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_opt_steady_step

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L787)

    ``` pony
    fun box sctp_cc_opt_steady_step()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_opt_use_dccc_ecn()
  id: net-ossockopt#sctp_cc_opt_use_dccc_ecn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_opt_use_dccc_ecn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L788)

    ``` pony
    fun box sctp_cc_opt_use_dccc_ecn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_option()
  id: net-ossockopt#sctp_cc_option
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_option

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L785)

    ``` pony
    fun box sctp_cc_option()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_rfc2581()
  id: net-ossockopt#sctp_cc_rfc2581
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_rfc2581

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L789)

    ``` pony
    fun box sctp_cc_rfc2581()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cc_rtcc()
  id: net-ossockopt#sctp_cc_rtcc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cc_rtcc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L790)

    ``` pony
    fun box sctp_cc_rtcc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_closed()
  id: net-ossockopt#sctp_closed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_closed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L791)

    ``` pony
    fun box sctp_closed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_clr_stat_log()
  id: net-ossockopt#sctp_clr_stat_log
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_clr_stat_log

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L792)

    ``` pony
    fun box sctp_clr_stat_log()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_base()
  id: net-ossockopt#sctp_cmt_base
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_base

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L793)

    ``` pony
    fun box sctp_cmt_base()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_max()
  id: net-ossockopt#sctp_cmt_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L794)

    ``` pony
    fun box sctp_cmt_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_mptcp()
  id: net-ossockopt#sctp_cmt_mptcp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_mptcp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L795)

    ``` pony
    fun box sctp_cmt_mptcp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_off()
  id: net-ossockopt#sctp_cmt_off
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_off

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L796)

    ``` pony
    fun box sctp_cmt_off()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_on_off()
  id: net-ossockopt#sctp_cmt_on_off
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_on_off

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L797)

    ``` pony
    fun box sctp_cmt_on_off()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_rpv1()
  id: net-ossockopt#sctp_cmt_rpv1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_rpv1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L798)

    ``` pony
    fun box sctp_cmt_rpv1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_rpv2()
  id: net-ossockopt#sctp_cmt_rpv2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_rpv2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L799)

    ``` pony
    fun box sctp_cmt_rpv2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cmt_use_dac()
  id: net-ossockopt#sctp_cmt_use_dac
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cmt_use_dac

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L800)

    ``` pony
    fun box sctp_cmt_use_dac()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_connect_x()
  id: net-ossockopt#sctp_connect_x
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_connect_x

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L801)

    ``` pony
    fun box sctp_connect_x()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_connect_x_complete()
  id: net-ossockopt#sctp_connect_x_complete
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_connect_x_complete

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L802)

    ``` pony
    fun box sctp_connect_x_complete()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_connect_x_delayed()
  id: net-ossockopt#sctp_connect_x_delayed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_connect_x_delayed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L803)

    ``` pony
    fun box sctp_connect_x_delayed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_context()
  id: net-ossockopt#sctp_context
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_context

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L804)

    ``` pony
    fun box sctp_context()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cookie_ack()
  id: net-ossockopt#sctp_cookie_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cookie_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L805)

    ``` pony
    fun box sctp_cookie_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cookie_echo()
  id: net-ossockopt#sctp_cookie_echo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cookie_echo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L806)

    ``` pony
    fun box sctp_cookie_echo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cookie_echoed()
  id: net-ossockopt#sctp_cookie_echoed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cookie_echoed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L807)

    ``` pony
    fun box sctp_cookie_echoed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cookie_wait()
  id: net-ossockopt#sctp_cookie_wait
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cookie_wait

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L808)

    ``` pony
    fun box sctp_cookie_wait()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cwnd_logging_enable()
  id: net-ossockopt#sctp_cwnd_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cwnd_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L809)

    ``` pony
    fun box sctp_cwnd_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cwnd_monitor_enable()
  id: net-ossockopt#sctp_cwnd_monitor_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cwnd_monitor_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L810)

    ``` pony
    fun box sctp_cwnd_monitor_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cwr_in_same_window()
  id: net-ossockopt#sctp_cwr_in_same_window
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cwr_in_same_window

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L811)

    ``` pony
    fun box sctp_cwr_in_same_window()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_cwr_reduce_override()
  id: net-ossockopt#sctp_cwr_reduce_override
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_cwr_reduce_override

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L812)

    ``` pony
    fun box sctp_cwr_reduce_override()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data()
  id: net-ossockopt#sctp_data
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L813)

    ``` pony
    fun box sctp_data()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_first_frag()
  id: net-ossockopt#sctp_data_first_frag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_first_frag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L814)

    ``` pony
    fun box sctp_data_first_frag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_frag_mask()
  id: net-ossockopt#sctp_data_frag_mask
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_frag_mask

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L815)

    ``` pony
    fun box sctp_data_frag_mask()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_last_frag()
  id: net-ossockopt#sctp_data_last_frag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_last_frag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L816)

    ``` pony
    fun box sctp_data_last_frag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_middle_frag()
  id: net-ossockopt#sctp_data_middle_frag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_middle_frag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L817)

    ``` pony
    fun box sctp_data_middle_frag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_not_frag()
  id: net-ossockopt#sctp_data_not_frag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_not_frag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L818)

    ``` pony
    fun box sctp_data_not_frag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_sack_immediately()
  id: net-ossockopt#sctp_data_sack_immediately
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_sack_immediately

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L819)

    ``` pony
    fun box sctp_data_sack_immediately()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_data_unordered()
  id: net-ossockopt#sctp_data_unordered
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_data_unordered

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L820)

    ``` pony
    fun box sctp_data_unordered()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_default_prinfo()
  id: net-ossockopt#sctp_default_prinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_default_prinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L821)

    ``` pony
    fun box sctp_default_prinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_default_send_param()
  id: net-ossockopt#sctp_default_send_param
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_default_send_param

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L822)

    ``` pony
    fun box sctp_default_send_param()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_default_sndinfo()
  id: net-ossockopt#sctp_default_sndinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_default_sndinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L823)

    ``` pony
    fun box sctp_default_sndinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_del_vrf_id()
  id: net-ossockopt#sctp_del_vrf_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_del_vrf_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L825)

    ``` pony
    fun box sctp_del_vrf_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_delayed_sack()
  id: net-ossockopt#sctp_delayed_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_delayed_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L824)

    ``` pony
    fun box sctp_delayed_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_disable_fragments()
  id: net-ossockopt#sctp_disable_fragments
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_disable_fragments

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L826)

    ``` pony
    fun box sctp_disable_fragments()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ecn_cwr()
  id: net-ossockopt#sctp_ecn_cwr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ecn_cwr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L827)

    ``` pony
    fun box sctp_ecn_cwr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ecn_echo()
  id: net-ossockopt#sctp_ecn_echo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ecn_echo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L828)

    ``` pony
    fun box sctp_ecn_echo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ecn_supported()
  id: net-ossockopt#sctp_ecn_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ecn_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L829)

    ``` pony
    fun box sctp_ecn_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_enable_change_assoc_req()
  id: net-ossockopt#sctp_enable_change_assoc_req
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_enable_change_assoc_req

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L830)

    ``` pony
    fun box sctp_enable_change_assoc_req()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_enable_reset_assoc_req()
  id: net-ossockopt#sctp_enable_reset_assoc_req
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_enable_reset_assoc_req

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L831)

    ``` pony
    fun box sctp_enable_reset_assoc_req()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_enable_reset_stream_req()
  id: net-ossockopt#sctp_enable_reset_stream_req
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_enable_reset_stream_req

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L832)

    ``` pony
    fun box sctp_enable_reset_stream_req()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_enable_stream_reset()
  id: net-ossockopt#sctp_enable_stream_reset
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_enable_stream_reset

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L833)

    ``` pony
    fun box sctp_enable_stream_reset()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_enable_value_mask()
  id: net-ossockopt#sctp_enable_value_mask
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_enable_value_mask

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L834)

    ``` pony
    fun box sctp_enable_value_mask()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_established()
  id: net-ossockopt#sctp_established
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_established

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L835)

    ``` pony
    fun box sctp_established()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_event()
  id: net-ossockopt#sctp_event
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_event

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L836)

    ``` pony
    fun box sctp_event()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_events()
  id: net-ossockopt#sctp_events
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_events

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L837)

    ``` pony
    fun box sctp_events()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_explicit_eor()
  id: net-ossockopt#sctp_explicit_eor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_explicit_eor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L838)

    ``` pony
    fun box sctp_explicit_eor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_flight_logging_enable()
  id: net-ossockopt#sctp_flight_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_flight_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L839)

    ``` pony
    fun box sctp_flight_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_forward_cum_tsn()
  id: net-ossockopt#sctp_forward_cum_tsn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_forward_cum_tsn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L840)

    ``` pony
    fun box sctp_forward_cum_tsn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_fr_logging_enable()
  id: net-ossockopt#sctp_fr_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_fr_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L846)

    ``` pony
    fun box sctp_fr_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_frag_level_0()
  id: net-ossockopt#sctp_frag_level_0
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_frag_level_0

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L842)

    ``` pony
    fun box sctp_frag_level_0()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_frag_level_1()
  id: net-ossockopt#sctp_frag_level_1
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_frag_level_1

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L843)

    ``` pony
    fun box sctp_frag_level_1()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_frag_level_2()
  id: net-ossockopt#sctp_frag_level_2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_frag_level_2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L844)

    ``` pony
    fun box sctp_frag_level_2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_fragment_interleave()
  id: net-ossockopt#sctp_fragment_interleave
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_fragment_interleave

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L841)

    ``` pony
    fun box sctp_fragment_interleave()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_from_middle_box()
  id: net-ossockopt#sctp_from_middle_box
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_from_middle_box

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L845)

    ``` pony
    fun box sctp_from_middle_box()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_addr_len()
  id: net-ossockopt#sctp_get_addr_len
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_addr_len

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L847)

    ``` pony
    fun box sctp_get_addr_len()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_asoc_vrf()
  id: net-ossockopt#sctp_get_asoc_vrf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_asoc_vrf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L848)

    ``` pony
    fun box sctp_get_asoc_vrf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_assoc_id_list()
  id: net-ossockopt#sctp_get_assoc_id_list
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_assoc_id_list

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L849)

    ``` pony
    fun box sctp_get_assoc_id_list()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_assoc_number()
  id: net-ossockopt#sctp_get_assoc_number
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_assoc_number

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L850)

    ``` pony
    fun box sctp_get_assoc_number()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_local_addr_size()
  id: net-ossockopt#sctp_get_local_addr_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_local_addr_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L852)

    ``` pony
    fun box sctp_get_local_addr_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_local_addresses()
  id: net-ossockopt#sctp_get_local_addresses
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_local_addresses

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L851)

    ``` pony
    fun box sctp_get_local_addresses()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_nonce_values()
  id: net-ossockopt#sctp_get_nonce_values
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_nonce_values

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L853)

    ``` pony
    fun box sctp_get_nonce_values()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_packet_log()
  id: net-ossockopt#sctp_get_packet_log
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_packet_log

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L854)

    ``` pony
    fun box sctp_get_packet_log()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_peer_addr_info()
  id: net-ossockopt#sctp_get_peer_addr_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_peer_addr_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L856)

    ``` pony
    fun box sctp_get_peer_addr_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_peer_addresses()
  id: net-ossockopt#sctp_get_peer_addresses
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_peer_addresses

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L855)

    ``` pony
    fun box sctp_get_peer_addresses()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_remote_addr_size()
  id: net-ossockopt#sctp_get_remote_addr_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_remote_addr_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L857)

    ``` pony
    fun box sctp_get_remote_addr_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_sndbuf_use()
  id: net-ossockopt#sctp_get_sndbuf_use
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_sndbuf_use

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L858)

    ``` pony
    fun box sctp_get_sndbuf_use()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_stat_log()
  id: net-ossockopt#sctp_get_stat_log
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_stat_log

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L859)

    ``` pony
    fun box sctp_get_stat_log()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_get_vrf_ids()
  id: net-ossockopt#sctp_get_vrf_ids
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_get_vrf_ids

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L860)

    ``` pony
    fun box sctp_get_vrf_ids()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_had_no_tcb()
  id: net-ossockopt#sctp_had_no_tcb
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_had_no_tcb

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L861)

    ``` pony
    fun box sctp_had_no_tcb()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_heartbeat_ack()
  id: net-ossockopt#sctp_heartbeat_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_heartbeat_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L862)

    ``` pony
    fun box sctp_heartbeat_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_heartbeat_request()
  id: net-ossockopt#sctp_heartbeat_request
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_heartbeat_request

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L863)

    ``` pony
    fun box sctp_heartbeat_request()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_hmac_ident()
  id: net-ossockopt#sctp_hmac_ident
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_hmac_ident

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L864)

    ``` pony
    fun box sctp_hmac_ident()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_i_want_mapped_v4_addr()
  id: net-ossockopt#sctp_i_want_mapped_v4_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_i_want_mapped_v4_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L871)

    ``` pony
    fun box sctp_i_want_mapped_v4_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_idata()
  id: net-ossockopt#sctp_idata
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_idata

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L865)

    ``` pony
    fun box sctp_idata()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_iforward_cum_tsn()
  id: net-ossockopt#sctp_iforward_cum_tsn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_iforward_cum_tsn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L866)

    ``` pony
    fun box sctp_iforward_cum_tsn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_initiation()
  id: net-ossockopt#sctp_initiation
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_initiation

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L867)

    ``` pony
    fun box sctp_initiation()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_initiation_ack()
  id: net-ossockopt#sctp_initiation_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_initiation_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L868)

    ``` pony
    fun box sctp_initiation_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_initmsg()
  id: net-ossockopt#sctp_initmsg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_initmsg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L869)

    ``` pony
    fun box sctp_initmsg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_interleaving_supported()
  id: net-ossockopt#sctp_interleaving_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_interleaving_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L870)

    ``` pony
    fun box sctp_interleaving_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_last_packet_tracing()
  id: net-ossockopt#sctp_last_packet_tracing
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_last_packet_tracing

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L872)

    ``` pony
    fun box sctp_last_packet_tracing()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_listen()
  id: net-ossockopt#sctp_listen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_listen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L873)

    ``` pony
    fun box sctp_listen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_local_auth_chunks()
  id: net-ossockopt#sctp_local_auth_chunks
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_local_auth_chunks

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L874)

    ``` pony
    fun box sctp_local_auth_chunks()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_lock_logging_enable()
  id: net-ossockopt#sctp_lock_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_lock_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L875)

    ``` pony
    fun box sctp_lock_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_at_send_2_outq()
  id: net-ossockopt#sctp_log_at_send_2_outq
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_at_send_2_outq

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L876)

    ``` pony
    fun box sctp_log_at_send_2_outq()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_at_send_2_sctp()
  id: net-ossockopt#sctp_log_at_send_2_sctp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_at_send_2_sctp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L877)

    ``` pony
    fun box sctp_log_at_send_2_sctp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_maxburst_enable()
  id: net-ossockopt#sctp_log_maxburst_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_maxburst_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L878)

    ``` pony
    fun box sctp_log_maxburst_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_rwnd_enable()
  id: net-ossockopt#sctp_log_rwnd_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_rwnd_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L879)

    ``` pony
    fun box sctp_log_rwnd_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_sack_arrivals_enable()
  id: net-ossockopt#sctp_log_sack_arrivals_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_sack_arrivals_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L880)

    ``` pony
    fun box sctp_log_sack_arrivals_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_log_try_advance()
  id: net-ossockopt#sctp_log_try_advance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_log_try_advance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L881)

    ``` pony
    fun box sctp_log_try_advance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ltrace_chunk_enable()
  id: net-ossockopt#sctp_ltrace_chunk_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ltrace_chunk_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L882)

    ``` pony
    fun box sctp_ltrace_chunk_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ltrace_error_enable()
  id: net-ossockopt#sctp_ltrace_error_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ltrace_error_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L883)

    ``` pony
    fun box sctp_ltrace_error_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_map_logging_enable()
  id: net-ossockopt#sctp_map_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_map_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L884)

    ``` pony
    fun box sctp_map_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_max_burst()
  id: net-ossockopt#sctp_max_burst
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_max_burst

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L887)

    ``` pony
    fun box sctp_max_burst()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_max_cookie_life()
  id: net-ossockopt#sctp_max_cookie_life
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_max_cookie_life

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L888)

    ``` pony
    fun box sctp_max_cookie_life()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_max_cwnd()
  id: net-ossockopt#sctp_max_cwnd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_max_cwnd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L889)

    ``` pony
    fun box sctp_max_cwnd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_max_hb_interval()
  id: net-ossockopt#sctp_max_hb_interval
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_max_hb_interval

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L890)

    ``` pony
    fun box sctp_max_hb_interval()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_max_sack_delay()
  id: net-ossockopt#sctp_max_sack_delay
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_max_sack_delay

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L891)

    ``` pony
    fun box sctp_max_sack_delay()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_maxburst()
  id: net-ossockopt#sctp_maxburst
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_maxburst

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L885)

    ``` pony
    fun box sctp_maxburst()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_maxseg()
  id: net-ossockopt#sctp_maxseg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_maxseg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L886)

    ``` pony
    fun box sctp_maxseg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_mbcnt_logging_enable()
  id: net-ossockopt#sctp_mbcnt_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_mbcnt_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L892)

    ``` pony
    fun box sctp_mbcnt_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_mbuf_logging_enable()
  id: net-ossockopt#sctp_mbuf_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_mbuf_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L893)

    ``` pony
    fun box sctp_mbuf_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_mobility_base()
  id: net-ossockopt#sctp_mobility_base
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_mobility_base

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L894)

    ``` pony
    fun box sctp_mobility_base()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_mobility_fasthandoff()
  id: net-ossockopt#sctp_mobility_fasthandoff
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_mobility_fasthandoff

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L895)

    ``` pony
    fun box sctp_mobility_fasthandoff()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_mobility_prim_deleted()
  id: net-ossockopt#sctp_mobility_prim_deleted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_mobility_prim_deleted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L896)

    ``` pony
    fun box sctp_mobility_prim_deleted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_nagle_logging_enable()
  id: net-ossockopt#sctp_nagle_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_nagle_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L897)

    ``` pony
    fun box sctp_nagle_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_nodelay()
  id: net-ossockopt#sctp_nodelay
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L898)

    ``` pony
    fun box sctp_nodelay()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_nr_selective_ack()
  id: net-ossockopt#sctp_nr_selective_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_nr_selective_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L900)

    ``` pony
    fun box sctp_nr_selective_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_nrsack_supported()
  id: net-ossockopt#sctp_nrsack_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_nrsack_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L899)

    ``` pony
    fun box sctp_nrsack_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_operation_error()
  id: net-ossockopt#sctp_operation_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_operation_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L901)

    ``` pony
    fun box sctp_operation_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_packed()
  id: net-ossockopt#sctp_packed
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_packed

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L902)

    ``` pony
    fun box sctp_packed()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_packet_dropped()
  id: net-ossockopt#sctp_packet_dropped
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_packet_dropped

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L903)

    ``` pony
    fun box sctp_packet_dropped()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_packet_log_size()
  id: net-ossockopt#sctp_packet_log_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_packet_log_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L904)

    ``` pony
    fun box sctp_packet_log_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_packet_truncated()
  id: net-ossockopt#sctp_packet_truncated
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_packet_truncated

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L905)

    ``` pony
    fun box sctp_packet_truncated()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pad_chunk()
  id: net-ossockopt#sctp_pad_chunk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pad_chunk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L906)

    ``` pony
    fun box sctp_pad_chunk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_partial_delivery_point()
  id: net-ossockopt#sctp_partial_delivery_point
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_partial_delivery_point

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L907)

    ``` pony
    fun box sctp_partial_delivery_point()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_copy_flags()
  id: net-ossockopt#sctp_pcb_copy_flags
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_copy_flags

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L908)

    ``` pony
    fun box sctp_pcb_copy_flags()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_accepting()
  id: net-ossockopt#sctp_pcb_flags_accepting
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_accepting

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L909)

    ``` pony
    fun box sctp_pcb_flags_accepting()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_adaptationevnt()
  id: net-ossockopt#sctp_pcb_flags_adaptationevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_adaptationevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L910)

    ``` pony
    fun box sctp_pcb_flags_adaptationevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_assoc_resetevnt()
  id: net-ossockopt#sctp_pcb_flags_assoc_resetevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_assoc_resetevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L911)

    ``` pony
    fun box sctp_pcb_flags_assoc_resetevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_authevnt()
  id: net-ossockopt#sctp_pcb_flags_authevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_authevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L912)

    ``` pony
    fun box sctp_pcb_flags_authevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_auto_asconf()
  id: net-ossockopt#sctp_pcb_flags_auto_asconf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_auto_asconf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L914)

    ``` pony
    fun box sctp_pcb_flags_auto_asconf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_autoclose()
  id: net-ossockopt#sctp_pcb_flags_autoclose
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_autoclose

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L913)

    ``` pony
    fun box sctp_pcb_flags_autoclose()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_blocking_io()
  id: net-ossockopt#sctp_pcb_flags_blocking_io
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_blocking_io

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L915)

    ``` pony
    fun box sctp_pcb_flags_blocking_io()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_bound_v6()
  id: net-ossockopt#sctp_pcb_flags_bound_v6
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_bound_v6

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L917)

    ``` pony
    fun box sctp_pcb_flags_bound_v6()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_boundall()
  id: net-ossockopt#sctp_pcb_flags_boundall
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_boundall

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L916)

    ``` pony
    fun box sctp_pcb_flags_boundall()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_close_ip()
  id: net-ossockopt#sctp_pcb_flags_close_ip
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_close_ip

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L918)

    ``` pony
    fun box sctp_pcb_flags_close_ip()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_connected()
  id: net-ossockopt#sctp_pcb_flags_connected
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_connected

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L919)

    ``` pony
    fun box sctp_pcb_flags_connected()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_do_asconf()
  id: net-ossockopt#sctp_pcb_flags_do_asconf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_do_asconf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L922)

    ``` pony
    fun box sctp_pcb_flags_do_asconf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_do_not_pmtud()
  id: net-ossockopt#sctp_pcb_flags_do_not_pmtud
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_do_not_pmtud

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L923)

    ``` pony
    fun box sctp_pcb_flags_do_not_pmtud()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_donot_heartbeat()
  id: net-ossockopt#sctp_pcb_flags_donot_heartbeat
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_donot_heartbeat

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L920)

    ``` pony
    fun box sctp_pcb_flags_donot_heartbeat()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_dont_wake()
  id: net-ossockopt#sctp_pcb_flags_dont_wake
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_dont_wake

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L921)

    ``` pony
    fun box sctp_pcb_flags_dont_wake()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_dryevnt()
  id: net-ossockopt#sctp_pcb_flags_dryevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_dryevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L924)

    ``` pony
    fun box sctp_pcb_flags_dryevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_explicit_eor()
  id: net-ossockopt#sctp_pcb_flags_explicit_eor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_explicit_eor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L925)

    ``` pony
    fun box sctp_pcb_flags_explicit_eor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_ext_rcvinfo()
  id: net-ossockopt#sctp_pcb_flags_ext_rcvinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_ext_rcvinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L926)

    ``` pony
    fun box sctp_pcb_flags_ext_rcvinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_frag_interleave()
  id: net-ossockopt#sctp_pcb_flags_frag_interleave
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_frag_interleave

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L927)

    ``` pony
    fun box sctp_pcb_flags_frag_interleave()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_in_tcppool()
  id: net-ossockopt#sctp_pcb_flags_in_tcppool
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_in_tcppool

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L929)

    ``` pony
    fun box sctp_pcb_flags_in_tcppool()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_interleave_strms()
  id: net-ossockopt#sctp_pcb_flags_interleave_strms
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_interleave_strms

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L928)

    ``` pony
    fun box sctp_pcb_flags_interleave_strms()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_multiple_asconfs()
  id: net-ossockopt#sctp_pcb_flags_multiple_asconfs
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_multiple_asconfs

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L930)

    ``` pony
    fun box sctp_pcb_flags_multiple_asconfs()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_needs_mapped_v4()
  id: net-ossockopt#sctp_pcb_flags_needs_mapped_v4
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_needs_mapped_v4

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L931)

    ``` pony
    fun box sctp_pcb_flags_needs_mapped_v4()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_no_fragment()
  id: net-ossockopt#sctp_pcb_flags_no_fragment
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_no_fragment

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L933)

    ``` pony
    fun box sctp_pcb_flags_no_fragment()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_nodelay()
  id: net-ossockopt#sctp_pcb_flags_nodelay
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L932)

    ``` pony
    fun box sctp_pcb_flags_nodelay()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_pdapievnt()
  id: net-ossockopt#sctp_pcb_flags_pdapievnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_pdapievnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L934)

    ``` pony
    fun box sctp_pcb_flags_pdapievnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_portreuse()
  id: net-ossockopt#sctp_pcb_flags_portreuse
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_portreuse

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L935)

    ``` pony
    fun box sctp_pcb_flags_portreuse()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvassocevnt()
  id: net-ossockopt#sctp_pcb_flags_recvassocevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvassocevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L936)

    ``` pony
    fun box sctp_pcb_flags_recvassocevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvdataioevnt()
  id: net-ossockopt#sctp_pcb_flags_recvdataioevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvdataioevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L937)

    ``` pony
    fun box sctp_pcb_flags_recvdataioevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvnsendfailevnt()
  id: net-ossockopt#sctp_pcb_flags_recvnsendfailevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvnsendfailevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L938)

    ``` pony
    fun box sctp_pcb_flags_recvnsendfailevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvnxtinfo()
  id: net-ossockopt#sctp_pcb_flags_recvnxtinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvnxtinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L939)

    ``` pony
    fun box sctp_pcb_flags_recvnxtinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvpaddrevnt()
  id: net-ossockopt#sctp_pcb_flags_recvpaddrevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvpaddrevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L940)

    ``` pony
    fun box sctp_pcb_flags_recvpaddrevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvpeererr()
  id: net-ossockopt#sctp_pcb_flags_recvpeererr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvpeererr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L941)

    ``` pony
    fun box sctp_pcb_flags_recvpeererr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvrcvinfo()
  id: net-ossockopt#sctp_pcb_flags_recvrcvinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvrcvinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L942)

    ``` pony
    fun box sctp_pcb_flags_recvrcvinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvsendfailevnt()
  id: net-ossockopt#sctp_pcb_flags_recvsendfailevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvsendfailevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L943)

    ``` pony
    fun box sctp_pcb_flags_recvsendfailevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_recvshutdownevnt()
  id: net-ossockopt#sctp_pcb_flags_recvshutdownevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_recvshutdownevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L944)

    ``` pony
    fun box sctp_pcb_flags_recvshutdownevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_socket_allgone()
  id: net-ossockopt#sctp_pcb_flags_socket_allgone
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_socket_allgone

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L945)

    ``` pony
    fun box sctp_pcb_flags_socket_allgone()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_socket_cant_read()
  id: net-ossockopt#sctp_pcb_flags_socket_cant_read
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_socket_cant_read

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L946)

    ``` pony
    fun box sctp_pcb_flags_socket_cant_read()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_socket_gone()
  id: net-ossockopt#sctp_pcb_flags_socket_gone
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_socket_gone

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L947)

    ``` pony
    fun box sctp_pcb_flags_socket_gone()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_stream_changeevnt()
  id: net-ossockopt#sctp_pcb_flags_stream_changeevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_stream_changeevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L948)

    ``` pony
    fun box sctp_pcb_flags_stream_changeevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_stream_resetevnt()
  id: net-ossockopt#sctp_pcb_flags_stream_resetevnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_stream_resetevnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L949)

    ``` pony
    fun box sctp_pcb_flags_stream_resetevnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_tcptype()
  id: net-ossockopt#sctp_pcb_flags_tcptype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_tcptype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L950)

    ``` pony
    fun box sctp_pcb_flags_tcptype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_udptype()
  id: net-ossockopt#sctp_pcb_flags_udptype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_udptype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L951)

    ``` pony
    fun box sctp_pcb_flags_udptype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_unbound()
  id: net-ossockopt#sctp_pcb_flags_unbound
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_unbound

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L952)

    ``` pony
    fun box sctp_pcb_flags_unbound()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_wakeinput()
  id: net-ossockopt#sctp_pcb_flags_wakeinput
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_wakeinput

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L953)

    ``` pony
    fun box sctp_pcb_flags_wakeinput()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_wakeoutput()
  id: net-ossockopt#sctp_pcb_flags_wakeoutput
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_wakeoutput

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L954)

    ``` pony
    fun box sctp_pcb_flags_wakeoutput()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_was_aborted()
  id: net-ossockopt#sctp_pcb_flags_was_aborted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_was_aborted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L955)

    ``` pony
    fun box sctp_pcb_flags_was_aborted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_was_connected()
  id: net-ossockopt#sctp_pcb_flags_was_connected
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_was_connected

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L956)

    ``` pony
    fun box sctp_pcb_flags_was_connected()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_flags_zero_copy_active()
  id: net-ossockopt#sctp_pcb_flags_zero_copy_active
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_flags_zero_copy_active

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L957)

    ``` pony
    fun box sctp_pcb_flags_zero_copy_active()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pcb_status()
  id: net-ossockopt#sctp_pcb_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pcb_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L958)

    ``` pony
    fun box sctp_pcb_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_peeloff()
  id: net-ossockopt#sctp_peeloff
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_peeloff

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L959)

    ``` pony
    fun box sctp_peeloff()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_peer_addr_params()
  id: net-ossockopt#sctp_peer_addr_params
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_peer_addr_params

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L960)

    ``` pony
    fun box sctp_peer_addr_params()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_peer_addr_thlds()
  id: net-ossockopt#sctp_peer_addr_thlds
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_peer_addr_thlds

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L961)

    ``` pony
    fun box sctp_peer_addr_thlds()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_peer_auth_chunks()
  id: net-ossockopt#sctp_peer_auth_chunks
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_peer_auth_chunks

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L962)

    ``` pony
    fun box sctp_peer_auth_chunks()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pktdrop_supported()
  id: net-ossockopt#sctp_pktdrop_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pktdrop_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L963)

    ``` pony
    fun box sctp_pktdrop_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pluggable_cc()
  id: net-ossockopt#sctp_pluggable_cc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pluggable_cc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L964)

    ``` pony
    fun box sctp_pluggable_cc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pluggable_ss()
  id: net-ossockopt#sctp_pluggable_ss
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pluggable_ss

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L965)

    ``` pony
    fun box sctp_pluggable_ss()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pr_assoc_status()
  id: net-ossockopt#sctp_pr_assoc_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pr_assoc_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L967)

    ``` pony
    fun box sctp_pr_assoc_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pr_stream_status()
  id: net-ossockopt#sctp_pr_stream_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pr_stream_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L968)

    ``` pony
    fun box sctp_pr_stream_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_pr_supported()
  id: net-ossockopt#sctp_pr_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_pr_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L969)

    ``` pony
    fun box sctp_pr_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_primary_addr()
  id: net-ossockopt#sctp_primary_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_primary_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L966)

    ``` pony
    fun box sctp_primary_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_reconfig_supported()
  id: net-ossockopt#sctp_reconfig_supported
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_reconfig_supported

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L970)

    ``` pony
    fun box sctp_reconfig_supported()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_recv_rwnd_logging_enable()
  id: net-ossockopt#sctp_recv_rwnd_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_recv_rwnd_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L973)

    ``` pony
    fun box sctp_recv_rwnd_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_recvnxtinfo()
  id: net-ossockopt#sctp_recvnxtinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_recvnxtinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L971)

    ``` pony
    fun box sctp_recvnxtinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_recvrcvinfo()
  id: net-ossockopt#sctp_recvrcvinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_recvrcvinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L972)

    ``` pony
    fun box sctp_recvrcvinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_remote_udp_encaps_port()
  id: net-ossockopt#sctp_remote_udp_encaps_port
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_remote_udp_encaps_port

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L974)

    ``` pony
    fun box sctp_remote_udp_encaps_port()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_reset_assoc()
  id: net-ossockopt#sctp_reset_assoc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_reset_assoc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L975)

    ``` pony
    fun box sctp_reset_assoc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_reset_streams()
  id: net-ossockopt#sctp_reset_streams
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_reset_streams

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L976)

    ``` pony
    fun box sctp_reset_streams()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_reuse_port()
  id: net-ossockopt#sctp_reuse_port
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_reuse_port

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L977)

    ``` pony
    fun box sctp_reuse_port()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_rtoinfo()
  id: net-ossockopt#sctp_rtoinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_rtoinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L978)

    ``` pony
    fun box sctp_rtoinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_rttvar_logging_enable()
  id: net-ossockopt#sctp_rttvar_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_rttvar_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L979)

    ``` pony
    fun box sctp_rttvar_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sack_cmt_dac()
  id: net-ossockopt#sctp_sack_cmt_dac
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sack_cmt_dac

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L980)

    ``` pony
    fun box sctp_sack_cmt_dac()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sack_logging_enable()
  id: net-ossockopt#sctp_sack_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sack_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L981)

    ``` pony
    fun box sctp_sack_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sack_nonce_sum()
  id: net-ossockopt#sctp_sack_nonce_sum
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sack_nonce_sum

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L982)

    ``` pony
    fun box sctp_sack_nonce_sum()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sack_rwnd_logging_enable()
  id: net-ossockopt#sctp_sack_rwnd_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sack_rwnd_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L983)

    ``` pony
    fun box sctp_sack_rwnd_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sat_network_burst_incr()
  id: net-ossockopt#sctp_sat_network_burst_incr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sat_network_burst_incr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L984)

    ``` pony
    fun box sctp_sat_network_burst_incr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sat_network_min()
  id: net-ossockopt#sctp_sat_network_min
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sat_network_min

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L985)

    ``` pony
    fun box sctp_sat_network_min()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_sb_logging_enable()
  id: net-ossockopt#sctp_sb_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_sb_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L986)

    ``` pony
    fun box sctp_sb_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_selective_ack()
  id: net-ossockopt#sctp_selective_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_selective_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L987)

    ``` pony
    fun box sctp_selective_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_set_debug_level()
  id: net-ossockopt#sctp_set_debug_level
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_set_debug_level

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L988)

    ``` pony
    fun box sctp_set_debug_level()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_set_dynamic_primary()
  id: net-ossockopt#sctp_set_dynamic_primary
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_set_dynamic_primary

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L989)

    ``` pony
    fun box sctp_set_dynamic_primary()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_set_initial_dbg_seq()
  id: net-ossockopt#sctp_set_initial_dbg_seq
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_set_initial_dbg_seq

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L990)

    ``` pony
    fun box sctp_set_initial_dbg_seq()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_set_peer_primary_addr()
  id: net-ossockopt#sctp_set_peer_primary_addr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_set_peer_primary_addr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L991)

    ``` pony
    fun box sctp_set_peer_primary_addr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown()
  id: net-ossockopt#sctp_shutdown
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L992)

    ``` pony
    fun box sctp_shutdown()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_ack()
  id: net-ossockopt#sctp_shutdown_ack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_ack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L993)

    ``` pony
    fun box sctp_shutdown_ack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_ack_sent()
  id: net-ossockopt#sctp_shutdown_ack_sent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_ack_sent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L994)

    ``` pony
    fun box sctp_shutdown_ack_sent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_complete()
  id: net-ossockopt#sctp_shutdown_complete
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_complete

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L995)

    ``` pony
    fun box sctp_shutdown_complete()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_pending()
  id: net-ossockopt#sctp_shutdown_pending
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_pending

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L996)

    ``` pony
    fun box sctp_shutdown_pending()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_received()
  id: net-ossockopt#sctp_shutdown_received
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_received

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L997)

    ``` pony
    fun box sctp_shutdown_received()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_shutdown_sent()
  id: net-ossockopt#sctp_shutdown_sent
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_shutdown_sent

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L998)

    ``` pony
    fun box sctp_shutdown_sent()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_smallest_pmtu()
  id: net-ossockopt#sctp_smallest_pmtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_smallest_pmtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L999)

    ``` pony
    fun box sctp_smallest_pmtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_default()
  id: net-ossockopt#sctp_ss_default
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_default

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1000)

    ``` pony
    fun box sctp_ss_default()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_fair_bandwith()
  id: net-ossockopt#sctp_ss_fair_bandwith
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_fair_bandwith

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1001)

    ``` pony
    fun box sctp_ss_fair_bandwith()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_first_come()
  id: net-ossockopt#sctp_ss_first_come
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_first_come

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1002)

    ``` pony
    fun box sctp_ss_first_come()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_priority()
  id: net-ossockopt#sctp_ss_priority
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_priority

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1003)

    ``` pony
    fun box sctp_ss_priority()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_round_robin()
  id: net-ossockopt#sctp_ss_round_robin
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_round_robin

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1004)

    ``` pony
    fun box sctp_ss_round_robin()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_round_robin_packet()
  id: net-ossockopt#sctp_ss_round_robin_packet
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_round_robin_packet

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1005)

    ``` pony
    fun box sctp_ss_round_robin_packet()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_ss_value()
  id: net-ossockopt#sctp_ss_value
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_ss_value

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1006)

    ``` pony
    fun box sctp_ss_value()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_status()
  id: net-ossockopt#sctp_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1007)

    ``` pony
    fun box sctp_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_str_logging_enable()
  id: net-ossockopt#sctp_str_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_str_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1011)

    ``` pony
    fun box sctp_str_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_stream_reset()
  id: net-ossockopt#sctp_stream_reset
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_stream_reset

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1008)

    ``` pony
    fun box sctp_stream_reset()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_stream_reset_incoming()
  id: net-ossockopt#sctp_stream_reset_incoming
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_stream_reset_incoming

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1009)

    ``` pony
    fun box sctp_stream_reset_incoming()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_stream_reset_outgoing()
  id: net-ossockopt#sctp_stream_reset_outgoing
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_stream_reset_outgoing

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1010)

    ``` pony
    fun box sctp_stream_reset_outgoing()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_threshold_logging()
  id: net-ossockopt#sctp_threshold_logging
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_threshold_logging

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1012)

    ``` pony
    fun box sctp_threshold_logging()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_timeouts()
  id: net-ossockopt#sctp_timeouts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_timeouts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1013)

    ``` pony
    fun box sctp_timeouts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_use_ext_rcvinfo()
  id: net-ossockopt#sctp_use_ext_rcvinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_use_ext_rcvinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1014)

    ``` pony
    fun box sctp_use_ext_rcvinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_vrf_id()
  id: net-ossockopt#sctp_vrf_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_vrf_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1015)

    ``` pony
    fun box sctp_vrf_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sctp_wake_logging_enable()
  id: net-ossockopt#sctp_wake_logging_enable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sctp_wake_logging_enable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1016)

    ``` pony
    fun box sctp_wake_logging_enable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_acceptconn()
  id: net-ossockopt#so_acceptconn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_acceptconn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1027)

    ``` pony
    fun box so_acceptconn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_acceptfilter()
  id: net-ossockopt#so_acceptfilter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_acceptfilter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1028)

    ``` pony
    fun box so_acceptfilter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_atmpvc()
  id: net-ossockopt#so_atmpvc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_atmpvc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1029)

    ``` pony
    fun box so_atmpvc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_atmqos()
  id: net-ossockopt#so_atmqos
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_atmqos

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1030)

    ``` pony
    fun box so_atmqos()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_atmsap()
  id: net-ossockopt#so_atmsap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_atmsap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1031)

    ``` pony
    fun box so_atmsap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_attach_bpf()
  id: net-ossockopt#so_attach_bpf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_attach_bpf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1032)

    ``` pony
    fun box so_attach_bpf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_attach_filter()
  id: net-ossockopt#so_attach_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_attach_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1033)

    ``` pony
    fun box so_attach_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_bindtodevice()
  id: net-ossockopt#so_bindtodevice
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_bindtodevice

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1034)

    ``` pony
    fun box so_bindtodevice()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_bintime()
  id: net-ossockopt#so_bintime
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_bintime

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1035)

    ``` pony
    fun box so_bintime()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_bpf_extensions()
  id: net-ossockopt#so_bpf_extensions
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_bpf_extensions

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1036)

    ``` pony
    fun box so_bpf_extensions()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_broadcast()
  id: net-ossockopt#so_broadcast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_broadcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1037)

    ``` pony
    fun box so_broadcast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_bsdcompat()
  id: net-ossockopt#so_bsdcompat
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_bsdcompat

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1038)

    ``` pony
    fun box so_bsdcompat()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_bsp_state()
  id: net-ossockopt#so_bsp_state
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_bsp_state

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1039)

    ``` pony
    fun box so_bsp_state()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_busy_poll()
  id: net-ossockopt#so_busy_poll
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_busy_poll

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1040)

    ``` pony
    fun box so_busy_poll()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_conaccess()
  id: net-ossockopt#so_conaccess
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_conaccess

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1041)

    ``` pony
    fun box so_conaccess()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_condata()
  id: net-ossockopt#so_condata
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_condata

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1042)

    ``` pony
    fun box so_condata()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_conditional_accept()
  id: net-ossockopt#so_conditional_accept
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_conditional_accept

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1043)

    ``` pony
    fun box so_conditional_accept()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_connect_time()
  id: net-ossockopt#so_connect_time
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_connect_time

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1044)

    ``` pony
    fun box so_connect_time()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_debug()
  id: net-ossockopt#so_debug
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_debug

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1045)

    ``` pony
    fun box so_debug()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_detach_bpf()
  id: net-ossockopt#so_detach_bpf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_detach_bpf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1046)

    ``` pony
    fun box so_detach_bpf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_detach_filter()
  id: net-ossockopt#so_detach_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_detach_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1047)

    ``` pony
    fun box so_detach_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_domain()
  id: net-ossockopt#so_domain
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_domain

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1048)

    ``` pony
    fun box so_domain()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_dontlinger()
  id: net-ossockopt#so_dontlinger
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_dontlinger

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1049)

    ``` pony
    fun box so_dontlinger()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_dontroute()
  id: net-ossockopt#so_dontroute
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_dontroute

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1050)

    ``` pony
    fun box so_dontroute()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_donttrunc()
  id: net-ossockopt#so_donttrunc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_donttrunc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1051)

    ``` pony
    fun box so_donttrunc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_error()
  id: net-ossockopt#so_error
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1052)

    ``` pony
    fun box so_error()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_exclusiveaddruse()
  id: net-ossockopt#so_exclusiveaddruse
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_exclusiveaddruse

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1053)

    ``` pony
    fun box so_exclusiveaddruse()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_get_filter()
  id: net-ossockopt#so_get_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_get_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1054)

    ``` pony
    fun box so_get_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_group_id()
  id: net-ossockopt#so_group_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_group_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1055)

    ``` pony
    fun box so_group_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_group_priority()
  id: net-ossockopt#so_group_priority
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_group_priority

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1056)

    ``` pony
    fun box so_group_priority()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_hci_raw_direction()
  id: net-ossockopt#so_hci_raw_direction
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_hci_raw_direction

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1057)

    ``` pony
    fun box so_hci_raw_direction()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_hci_raw_filter()
  id: net-ossockopt#so_hci_raw_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_hci_raw_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1058)

    ``` pony
    fun box so_hci_raw_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_incoming_cpu()
  id: net-ossockopt#so_incoming_cpu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_incoming_cpu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1059)

    ``` pony
    fun box so_incoming_cpu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_keepalive()
  id: net-ossockopt#so_keepalive
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_keepalive

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1060)

    ``` pony
    fun box so_keepalive()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_encrypted()
  id: net-ossockopt#so_l2cap_encrypted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_encrypted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1061)

    ``` pony
    fun box so_l2cap_encrypted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_flush()
  id: net-ossockopt#so_l2cap_flush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_flush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1062)

    ``` pony
    fun box so_l2cap_flush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_iflow()
  id: net-ossockopt#so_l2cap_iflow
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_iflow

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1063)

    ``` pony
    fun box so_l2cap_iflow()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_imtu()
  id: net-ossockopt#so_l2cap_imtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_imtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1064)

    ``` pony
    fun box so_l2cap_imtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_oflow()
  id: net-ossockopt#so_l2cap_oflow
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_oflow

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1065)

    ``` pony
    fun box so_l2cap_oflow()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_l2cap_omtu()
  id: net-ossockopt#so_l2cap_omtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_l2cap_omtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1066)

    ``` pony
    fun box so_l2cap_omtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_label()
  id: net-ossockopt#so_label
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_label

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1067)

    ``` pony
    fun box so_label()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_linger()
  id: net-ossockopt#so_linger
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_linger

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1068)

    ``` pony
    fun box so_linger()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_linger_sec()
  id: net-ossockopt#so_linger_sec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_linger_sec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1069)

    ``` pony
    fun box so_linger_sec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_linkinfo()
  id: net-ossockopt#so_linkinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_linkinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1070)

    ``` pony
    fun box so_linkinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_listenincqlen()
  id: net-ossockopt#so_listenincqlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_listenincqlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1071)

    ``` pony
    fun box so_listenincqlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_listenqlen()
  id: net-ossockopt#so_listenqlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_listenqlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1072)

    ``` pony
    fun box so_listenqlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_listenqlimit()
  id: net-ossockopt#so_listenqlimit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_listenqlimit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1073)

    ``` pony
    fun box so_listenqlimit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_lock_filter()
  id: net-ossockopt#so_lock_filter
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_lock_filter

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1074)

    ``` pony
    fun box so_lock_filter()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_mark()
  id: net-ossockopt#so_mark
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_mark

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1075)

    ``` pony
    fun box so_mark()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_max_msg_size()
  id: net-ossockopt#so_max_msg_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_max_msg_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1076)

    ``` pony
    fun box so_max_msg_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_max_pacing_rate()
  id: net-ossockopt#so_max_pacing_rate
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_max_pacing_rate

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1077)

    ``` pony
    fun box so_max_pacing_rate()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_multipoint()
  id: net-ossockopt#so_multipoint
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_multipoint

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1078)

    ``` pony
    fun box so_multipoint()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_net_service_type()
  id: net-ossockopt#so_net_service_type
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_net_service_type

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1080)

    ``` pony
    fun box so_net_service_type()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_netsvc_marking_level()
  id: net-ossockopt#so_netsvc_marking_level
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_netsvc_marking_level

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1079)

    ``` pony
    fun box so_netsvc_marking_level()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_nke()
  id: net-ossockopt#so_nke
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_nke

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1081)

    ``` pony
    fun box so_nke()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_no_check()
  id: net-ossockopt#so_no_check
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_no_check

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1086)

    ``` pony
    fun box so_no_check()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_no_ddp()
  id: net-ossockopt#so_no_ddp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_no_ddp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1087)

    ``` pony
    fun box so_no_ddp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_no_offload()
  id: net-ossockopt#so_no_offload
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_no_offload

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1088)

    ``` pony
    fun box so_no_offload()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_noaddrerr()
  id: net-ossockopt#so_noaddrerr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_noaddrerr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1082)

    ``` pony
    fun box so_noaddrerr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_nofcs()
  id: net-ossockopt#so_nofcs
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_nofcs

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1083)

    ``` pony
    fun box so_nofcs()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_nosigpipe()
  id: net-ossockopt#so_nosigpipe
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_nosigpipe

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1084)

    ``` pony
    fun box so_nosigpipe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_notifyconflict()
  id: net-ossockopt#so_notifyconflict
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_notifyconflict

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1085)

    ``` pony
    fun box so_notifyconflict()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_np_extensions()
  id: net-ossockopt#so_np_extensions
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_np_extensions

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1089)

    ``` pony
    fun box so_np_extensions()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_nread()
  id: net-ossockopt#so_nread
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_nread

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1090)

    ``` pony
    fun box so_nread()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_numrcvpkt()
  id: net-ossockopt#so_numrcvpkt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_numrcvpkt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1091)

    ``` pony
    fun box so_numrcvpkt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_nwrite()
  id: net-ossockopt#so_nwrite
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_nwrite

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1092)

    ``` pony
    fun box so_nwrite()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_oobinline()
  id: net-ossockopt#so_oobinline
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_oobinline

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1093)

    ``` pony
    fun box so_oobinline()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_original_dst()
  id: net-ossockopt#so_original_dst
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_original_dst

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1094)

    ``` pony
    fun box so_original_dst()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_passcred()
  id: net-ossockopt#so_passcred
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_passcred

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1095)

    ``` pony
    fun box so_passcred()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_passsec()
  id: net-ossockopt#so_passsec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_passsec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1096)

    ``` pony
    fun box so_passsec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_peek_off()
  id: net-ossockopt#so_peek_off
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_peek_off

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1097)

    ``` pony
    fun box so_peek_off()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_peercred()
  id: net-ossockopt#so_peercred
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_peercred

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1098)

    ``` pony
    fun box so_peercred()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_peerlabel()
  id: net-ossockopt#so_peerlabel
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_peerlabel

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1099)

    ``` pony
    fun box so_peerlabel()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_peername()
  id: net-ossockopt#so_peername
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_peername

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1100)

    ``` pony
    fun box so_peername()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_peersec()
  id: net-ossockopt#so_peersec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_peersec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1101)

    ``` pony
    fun box so_peersec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_port_scalability()
  id: net-ossockopt#so_port_scalability
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_port_scalability

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1102)

    ``` pony
    fun box so_port_scalability()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_priority()
  id: net-ossockopt#so_priority
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_priority

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1103)

    ``` pony
    fun box so_priority()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_protocol()
  id: net-ossockopt#so_protocol
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_protocol

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1104)

    ``` pony
    fun box so_protocol()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_protocol_info()
  id: net-ossockopt#so_protocol_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_protocol_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1105)

    ``` pony
    fun box so_protocol_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_prototype()
  id: net-ossockopt#so_prototype
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_prototype

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1106)

    ``` pony
    fun box so_prototype()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_proxyusr()
  id: net-ossockopt#so_proxyusr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_proxyusr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1107)

    ``` pony
    fun box so_proxyusr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_randomport()
  id: net-ossockopt#so_randomport
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_randomport

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1108)

    ``` pony
    fun box so_randomport()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvbuf()
  id: net-ossockopt#so_rcvbuf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1109)

    ``` pony
    fun box so_rcvbuf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvbufforce()
  id: net-ossockopt#so_rcvbufforce
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvbufforce

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1110)

    ``` pony
    fun box so_rcvbufforce()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvlowat()
  id: net-ossockopt#so_rcvlowat
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvlowat

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1111)

    ``` pony
    fun box so_rcvlowat()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvtimeo()
  id: net-ossockopt#so_rcvtimeo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvtimeo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1112)

    ``` pony
    fun box so_rcvtimeo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvtimeo_new()
  id: net-ossockopt#so_rcvtimeo_new
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvtimeo_new

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1324)

    ``` pony
    fun box so_rcvtimeo_new()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rcvtimeo_old()
  id: net-ossockopt#so_rcvtimeo_old
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rcvtimeo_old

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1323)

    ``` pony
    fun box so_rcvtimeo_old()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rds_transport()
  id: net-ossockopt#so_rds_transport
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rds_transport

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1113)

    ``` pony
    fun box so_rds_transport()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_reuseaddr()
  id: net-ossockopt#so_reuseaddr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_reuseaddr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1114)

    ``` pony
    fun box so_reuseaddr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_reuseport()
  id: net-ossockopt#so_reuseport
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_reuseport

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1115)

    ``` pony
    fun box so_reuseport()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_reuseshareuid()
  id: net-ossockopt#so_reuseshareuid
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_reuseshareuid

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1116)

    ``` pony
    fun box so_reuseshareuid()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rfcomm_fc_info()
  id: net-ossockopt#so_rfcomm_fc_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rfcomm_fc_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1117)

    ``` pony
    fun box so_rfcomm_fc_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rfcomm_mtu()
  id: net-ossockopt#so_rfcomm_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rfcomm_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1118)

    ``` pony
    fun box so_rfcomm_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_rxq_ovfl()
  id: net-ossockopt#so_rxq_ovfl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_rxq_ovfl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1119)

    ``` pony
    fun box so_rxq_ovfl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sco_conninfo()
  id: net-ossockopt#so_sco_conninfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sco_conninfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1120)

    ``` pony
    fun box so_sco_conninfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sco_mtu()
  id: net-ossockopt#so_sco_mtu
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sco_mtu

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1121)

    ``` pony
    fun box so_sco_mtu()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_security_authentication()
  id: net-ossockopt#so_security_authentication
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_security_authentication

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1122)

    ``` pony
    fun box so_security_authentication()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_security_encryption_network()
  id: net-ossockopt#so_security_encryption_network
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_security_encryption_network

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1123)

    ``` pony
    fun box so_security_encryption_network()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_security_encryption_transport()
  id: net-ossockopt#so_security_encryption_transport
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_security_encryption_transport

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1124)

    ``` pony
    fun box so_security_encryption_transport()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_select_err_queue()
  id: net-ossockopt#so_select_err_queue
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_select_err_queue

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1125)

    ``` pony
    fun box so_select_err_queue()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_setclp()
  id: net-ossockopt#so_setclp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_setclp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1126)

    ``` pony
    fun box so_setclp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_setfib()
  id: net-ossockopt#so_setfib
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_setfib

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1127)

    ``` pony
    fun box so_setfib()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndbuf()
  id: net-ossockopt#so_sndbuf
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1128)

    ``` pony
    fun box so_sndbuf()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndbufforce()
  id: net-ossockopt#so_sndbufforce
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndbufforce

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1129)

    ``` pony
    fun box so_sndbufforce()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndlowat()
  id: net-ossockopt#so_sndlowat
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndlowat

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1130)

    ``` pony
    fun box so_sndlowat()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndtimeo()
  id: net-ossockopt#so_sndtimeo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndtimeo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1131)

    ``` pony
    fun box so_sndtimeo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndtimeo_new()
  id: net-ossockopt#so_sndtimeo_new
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndtimeo_new

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1326)

    ``` pony
    fun box so_sndtimeo_new()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_sndtimeo_old()
  id: net-ossockopt#so_sndtimeo_old
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_sndtimeo_old

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1325)

    ``` pony
    fun box so_sndtimeo_old()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_timestamp()
  id: net-ossockopt#so_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1132)

    ``` pony
    fun box so_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_timestamp_monotonic()
  id: net-ossockopt#so_timestamp_monotonic
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_timestamp_monotonic

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1135)

    ``` pony
    fun box so_timestamp_monotonic()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_timestamping()
  id: net-ossockopt#so_timestamping
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_timestamping

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1133)

    ``` pony
    fun box so_timestamping()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_timestampns()
  id: net-ossockopt#so_timestampns
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_timestampns

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1134)

    ``` pony
    fun box so_timestampns()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_type()
  id: net-ossockopt#so_type
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_type

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1136)

    ``` pony
    fun box so_type()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_upcallclosewait()
  id: net-ossockopt#so_upcallclosewait
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_upcallclosewait

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1137)

    ``` pony
    fun box so_upcallclosewait()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_update_accept_context()
  id: net-ossockopt#so_update_accept_context
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_update_accept_context

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1138)

    ``` pony
    fun box so_update_accept_context()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_useloopback()
  id: net-ossockopt#so_useloopback
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_useloopback

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1139)

    ``` pony
    fun box so_useloopback()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_user_cookie()
  id: net-ossockopt#so_user_cookie
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_user_cookie

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1140)

    ``` pony
    fun box so_user_cookie()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vendor()
  id: net-ossockopt#so_vendor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vendor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1141)

    ``` pony
    fun box so_vendor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_buffer_max_size()
  id: net-ossockopt#so_vm_sockets_buffer_max_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_buffer_max_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1142)

    ``` pony
    fun box so_vm_sockets_buffer_max_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_buffer_min_size()
  id: net-ossockopt#so_vm_sockets_buffer_min_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_buffer_min_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1143)

    ``` pony
    fun box so_vm_sockets_buffer_min_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_buffer_size()
  id: net-ossockopt#so_vm_sockets_buffer_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_buffer_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1144)

    ``` pony
    fun box so_vm_sockets_buffer_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_connect_timeout()
  id: net-ossockopt#so_vm_sockets_connect_timeout
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_connect_timeout

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1145)

    ``` pony
    fun box so_vm_sockets_connect_timeout()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_nonblock_txrx()
  id: net-ossockopt#so_vm_sockets_nonblock_txrx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_nonblock_txrx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1146)

    ``` pony
    fun box so_vm_sockets_nonblock_txrx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_peer_host_vm_id()
  id: net-ossockopt#so_vm_sockets_peer_host_vm_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_peer_host_vm_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1147)

    ``` pony
    fun box so_vm_sockets_peer_host_vm_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_vm_sockets_trusted()
  id: net-ossockopt#so_vm_sockets_trusted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_vm_sockets_trusted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1148)

    ``` pony
    fun box so_vm_sockets_trusted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_wantmore()
  id: net-ossockopt#so_wantmore
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_wantmore

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1149)

    ``` pony
    fun box so_wantmore()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_wantoobflag()
  id: net-ossockopt#so_wantoobflag
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_wantoobflag

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1150)

    ``` pony
    fun box so_wantoobflag()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.so_wifi_status()
  id: net-ossockopt#so_wifi_status
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### so_wifi_status

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1151)

    ``` pony
    fun box so_wifi_status()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_cloexec()
  id: net-ossockopt#sock_cloexec
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_cloexec

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1017)

    ``` pony
    fun box sock_cloexec()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_dgram()
  id: net-ossockopt#sock_dgram
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_dgram

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1018)

    ``` pony
    fun box sock_dgram()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_maxaddrlen()
  id: net-ossockopt#sock_maxaddrlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_maxaddrlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1019)

    ``` pony
    fun box sock_maxaddrlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_nonblock()
  id: net-ossockopt#sock_nonblock
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_nonblock

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1020)

    ``` pony
    fun box sock_nonblock()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_raw()
  id: net-ossockopt#sock_raw
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_raw

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1021)

    ``` pony
    fun box sock_raw()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_rdm()
  id: net-ossockopt#sock_rdm
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_rdm

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1022)

    ``` pony
    fun box sock_rdm()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_seqpacket()
  id: net-ossockopt#sock_seqpacket
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_seqpacket

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1023)

    ``` pony
    fun box sock_seqpacket()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sock_stream()
  id: net-ossockopt#sock_stream
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sock_stream

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1024)

    ``` pony
    fun box sock_stream()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_atalk()
  id: net-ossockopt#sol_atalk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_atalk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L202)

    ``` pony
    fun box sol_atalk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_ax25()
  id: net-ossockopt#sol_ax25
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_ax25

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L203)

    ``` pony
    fun box sol_ax25()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_hci_raw()
  id: net-ossockopt#sol_hci_raw
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_hci_raw

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L204)

    ``` pony
    fun box sol_hci_raw()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_ipx()
  id: net-ossockopt#sol_ipx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_ipx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L205)

    ``` pony
    fun box sol_ipx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_l2cap()
  id: net-ossockopt#sol_l2cap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_l2cap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L206)

    ``` pony
    fun box sol_l2cap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_local()
  id: net-ossockopt#sol_local
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_local

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L207)

    ``` pony
    fun box sol_local()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_ndrvproto()
  id: net-ossockopt#sol_ndrvproto
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_ndrvproto

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L208)

    ``` pony
    fun box sol_ndrvproto()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_netrom()
  id: net-ossockopt#sol_netrom
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_netrom

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L209)

    ``` pony
    fun box sol_netrom()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_rds()
  id: net-ossockopt#sol_rds
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_rds

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L210)

    ``` pony
    fun box sol_rds()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_rfcomm()
  id: net-ossockopt#sol_rfcomm
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_rfcomm

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L211)

    ``` pony
    fun box sol_rfcomm()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_rose()
  id: net-ossockopt#sol_rose
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_rose

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L212)

    ``` pony
    fun box sol_rose()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_sco()
  id: net-ossockopt#sol_sco
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_sco

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L213)

    ``` pony
    fun box sol_sco()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_socket()
  id: net-ossockopt#sol_socket
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_socket

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L214)

    ``` pony
    fun box sol_socket()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_tipc()
  id: net-ossockopt#sol_tipc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_tipc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L215)

    ``` pony
    fun box sol_tipc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sol_udp()
  id: net-ossockopt#sol_udp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sol_udp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L216)

    ``` pony
    fun box sol_udp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.somaxconn()
  id: net-ossockopt#somaxconn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### somaxconn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1025)

    ``` pony
    fun box somaxconn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.sonpx_setoptshut()
  id: net-ossockopt#sonpx_setoptshut
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### sonpx_setoptshut

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1026)

    ``` pony
    fun box sonpx_setoptshut()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp6_mss()
  id: net-ossockopt#tcp6_mss
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp6_mss

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1152)

    ``` pony
    fun box tcp6_mss()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_ca_name_max()
  id: net-ossockopt#tcp_ca_name_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_ca_name_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1206)

    ``` pony
    fun box tcp_ca_name_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cc_info()
  id: net-ossockopt#tcp_cc_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cc_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1208)

    ``` pony
    fun box tcp_cc_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_ccalgoopt()
  id: net-ossockopt#tcp_ccalgoopt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_ccalgoopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1207)

    ``` pony
    fun box tcp_ccalgoopt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_congestion()
  id: net-ossockopt#tcp_congestion
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_congestion

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1209)

    ``` pony
    fun box tcp_congestion()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_connection_info()
  id: net-ossockopt#tcp_connection_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_connection_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1211)

    ``` pony
    fun box tcp_connection_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_connectiontimeout()
  id: net-ossockopt#tcp_connectiontimeout
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_connectiontimeout

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1210)

    ``` pony
    fun box tcp_connectiontimeout()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_in_always()
  id: net-ossockopt#tcp_cookie_in_always
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_in_always

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1212)

    ``` pony
    fun box tcp_cookie_in_always()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_max()
  id: net-ossockopt#tcp_cookie_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1213)

    ``` pony
    fun box tcp_cookie_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_min()
  id: net-ossockopt#tcp_cookie_min
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_min

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1214)

    ``` pony
    fun box tcp_cookie_min()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_out_never()
  id: net-ossockopt#tcp_cookie_out_never
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_out_never

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1215)

    ``` pony
    fun box tcp_cookie_out_never()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_pair_size()
  id: net-ossockopt#tcp_cookie_pair_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_pair_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1216)

    ``` pony
    fun box tcp_cookie_pair_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cookie_transactions()
  id: net-ossockopt#tcp_cookie_transactions
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cookie_transactions

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1217)

    ``` pony
    fun box tcp_cookie_transactions()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_cork()
  id: net-ossockopt#tcp_cork
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_cork

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1218)

    ``` pony
    fun box tcp_cork()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_defer_accept()
  id: net-ossockopt#tcp_defer_accept
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_defer_accept

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1219)

    ``` pony
    fun box tcp_defer_accept()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_enable_ecn()
  id: net-ossockopt#tcp_enable_ecn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_enable_ecn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1220)

    ``` pony
    fun box tcp_enable_ecn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_fastopen()
  id: net-ossockopt#tcp_fastopen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_fastopen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1221)

    ``` pony
    fun box tcp_fastopen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_function_blk()
  id: net-ossockopt#tcp_function_blk
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_function_blk

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1222)

    ``` pony
    fun box tcp_function_blk()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_function_name_len_max()
  id: net-ossockopt#tcp_function_name_len_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_function_name_len_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1223)

    ``` pony
    fun box tcp_function_name_len_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_info()
  id: net-ossockopt#tcp_info
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_info

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1224)

    ``` pony
    fun box tcp_info()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_keepalive()
  id: net-ossockopt#tcp_keepalive
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_keepalive

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1225)

    ``` pony
    fun box tcp_keepalive()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_keepcnt()
  id: net-ossockopt#tcp_keepcnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_keepcnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1226)

    ``` pony
    fun box tcp_keepcnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_keepidle()
  id: net-ossockopt#tcp_keepidle
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_keepidle

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1227)

    ``` pony
    fun box tcp_keepidle()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_keepinit()
  id: net-ossockopt#tcp_keepinit
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_keepinit

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1228)

    ``` pony
    fun box tcp_keepinit()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_keepintvl()
  id: net-ossockopt#tcp_keepintvl
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_keepintvl

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1229)

    ``` pony
    fun box tcp_keepintvl()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_linger2()
  id: net-ossockopt#tcp_linger2
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_linger2

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1230)

    ``` pony
    fun box tcp_linger2()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_max_sack()
  id: net-ossockopt#tcp_max_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_max_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1236)

    ``` pony
    fun box tcp_max_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_max_winshift()
  id: net-ossockopt#tcp_max_winshift
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_max_winshift

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1237)

    ``` pony
    fun box tcp_max_winshift()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_maxburst()
  id: net-ossockopt#tcp_maxburst
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_maxburst

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1231)

    ``` pony
    fun box tcp_maxburst()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_maxhlen()
  id: net-ossockopt#tcp_maxhlen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_maxhlen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1232)

    ``` pony
    fun box tcp_maxhlen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_maxolen()
  id: net-ossockopt#tcp_maxolen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_maxolen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1233)

    ``` pony
    fun box tcp_maxolen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_maxseg()
  id: net-ossockopt#tcp_maxseg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_maxseg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1234)

    ``` pony
    fun box tcp_maxseg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_maxwin()
  id: net-ossockopt#tcp_maxwin
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_maxwin

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1235)

    ``` pony
    fun box tcp_maxwin()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_md5sig()
  id: net-ossockopt#tcp_md5sig
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_md5sig

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1238)

    ``` pony
    fun box tcp_md5sig()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_md5sig_maxkeylen()
  id: net-ossockopt#tcp_md5sig_maxkeylen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_md5sig_maxkeylen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1239)

    ``` pony
    fun box tcp_md5sig_maxkeylen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_minmss()
  id: net-ossockopt#tcp_minmss
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_minmss

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1240)

    ``` pony
    fun box tcp_minmss()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_mss()
  id: net-ossockopt#tcp_mss
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_mss

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1241)

    ``` pony
    fun box tcp_mss()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_mss_default()
  id: net-ossockopt#tcp_mss_default
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_mss_default

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1242)

    ``` pony
    fun box tcp_mss_default()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_mss_desired()
  id: net-ossockopt#tcp_mss_desired
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_mss_desired

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1243)

    ``` pony
    fun box tcp_mss_desired()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_nodelay()
  id: net-ossockopt#tcp_nodelay
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1244)

    ``` pony
    fun box tcp_nodelay()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_noopt()
  id: net-ossockopt#tcp_noopt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_noopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1245)

    ``` pony
    fun box tcp_noopt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_nopush()
  id: net-ossockopt#tcp_nopush
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_nopush

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1246)

    ``` pony
    fun box tcp_nopush()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_notsent_lowat()
  id: net-ossockopt#tcp_notsent_lowat
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_notsent_lowat

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1247)

    ``` pony
    fun box tcp_notsent_lowat()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_pcap_in()
  id: net-ossockopt#tcp_pcap_in
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_pcap_in

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1248)

    ``` pony
    fun box tcp_pcap_in()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_pcap_out()
  id: net-ossockopt#tcp_pcap_out
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_pcap_out

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1249)

    ``` pony
    fun box tcp_pcap_out()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_queue_seq()
  id: net-ossockopt#tcp_queue_seq
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_queue_seq

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1250)

    ``` pony
    fun box tcp_queue_seq()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_quickack()
  id: net-ossockopt#tcp_quickack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_quickack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1251)

    ``` pony
    fun box tcp_quickack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_repair()
  id: net-ossockopt#tcp_repair
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_repair

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1252)

    ``` pony
    fun box tcp_repair()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_repair_options()
  id: net-ossockopt#tcp_repair_options
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_repair_options

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1253)

    ``` pony
    fun box tcp_repair_options()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_repair_queue()
  id: net-ossockopt#tcp_repair_queue
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_repair_queue

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1254)

    ``` pony
    fun box tcp_repair_queue()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_rxt_conndroptime()
  id: net-ossockopt#tcp_rxt_conndroptime
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_rxt_conndroptime

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1255)

    ``` pony
    fun box tcp_rxt_conndroptime()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_rxt_findrop()
  id: net-ossockopt#tcp_rxt_findrop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_rxt_findrop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1256)

    ``` pony
    fun box tcp_rxt_findrop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_s_data_in()
  id: net-ossockopt#tcp_s_data_in
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_s_data_in

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1261)

    ``` pony
    fun box tcp_s_data_in()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_s_data_out()
  id: net-ossockopt#tcp_s_data_out
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_s_data_out

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1262)

    ``` pony
    fun box tcp_s_data_out()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_save_syn()
  id: net-ossockopt#tcp_save_syn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_save_syn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1258)

    ``` pony
    fun box tcp_save_syn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_saved_syn()
  id: net-ossockopt#tcp_saved_syn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_saved_syn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1257)

    ``` pony
    fun box tcp_saved_syn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_sendmoreacks()
  id: net-ossockopt#tcp_sendmoreacks
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_sendmoreacks

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1259)

    ``` pony
    fun box tcp_sendmoreacks()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_syncnt()
  id: net-ossockopt#tcp_syncnt
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_syncnt

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1260)

    ``` pony
    fun box tcp_syncnt()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_thin_dupack()
  id: net-ossockopt#tcp_thin_dupack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_thin_dupack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1263)

    ``` pony
    fun box tcp_thin_dupack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_thin_linear_timeouts()
  id: net-ossockopt#tcp_thin_linear_timeouts
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_thin_linear_timeouts

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1264)

    ``` pony
    fun box tcp_thin_linear_timeouts()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_timestamp()
  id: net-ossockopt#tcp_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1265)

    ``` pony
    fun box tcp_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_user_timeout()
  id: net-ossockopt#tcp_user_timeout
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_user_timeout

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1266)

    ``` pony
    fun box tcp_user_timeout()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_vendor()
  id: net-ossockopt#tcp_vendor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_vendor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1267)

    ``` pony
    fun box tcp_vendor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcp_window_clamp()
  id: net-ossockopt#tcp_window_clamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcp_window_clamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1268)

    ``` pony
    fun box tcp_window_clamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_flag_lossrecovery()
  id: net-ossockopt#tcpci_flag_lossrecovery
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_flag_lossrecovery

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1153)

    ``` pony
    fun box tcpci_flag_lossrecovery()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_flag_reordering_detected()
  id: net-ossockopt#tcpci_flag_reordering_detected
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_flag_reordering_detected

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1154)

    ``` pony
    fun box tcpci_flag_reordering_detected()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_opt_ecn()
  id: net-ossockopt#tcpci_opt_ecn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_opt_ecn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1155)

    ``` pony
    fun box tcpci_opt_ecn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_opt_sack()
  id: net-ossockopt#tcpci_opt_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_opt_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1156)

    ``` pony
    fun box tcpci_opt_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_opt_timestamps()
  id: net-ossockopt#tcpci_opt_timestamps
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_opt_timestamps

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1157)

    ``` pony
    fun box tcpci_opt_timestamps()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpci_opt_wscale()
  id: net-ossockopt#tcpci_opt_wscale
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpci_opt_wscale

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1158)

    ``` pony
    fun box tcpci_opt_wscale()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpf_ca_cwr()
  id: net-ossockopt#tcpf_ca_cwr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpf_ca_cwr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1159)

    ``` pony
    fun box tcpf_ca_cwr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpf_ca_disorder()
  id: net-ossockopt#tcpf_ca_disorder
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpf_ca_disorder

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1160)

    ``` pony
    fun box tcpf_ca_disorder()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpf_ca_loss()
  id: net-ossockopt#tcpf_ca_loss
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpf_ca_loss

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1161)

    ``` pony
    fun box tcpf_ca_loss()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpf_ca_open()
  id: net-ossockopt#tcpf_ca_open
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpf_ca_open

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1162)

    ``` pony
    fun box tcpf_ca_open()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpf_ca_recovery()
  id: net-ossockopt#tcpf_ca_recovery
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpf_ca_recovery

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1163)

    ``` pony
    fun box tcpf_ca_recovery()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_ecn()
  id: net-ossockopt#tcpi_opt_ecn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_ecn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1164)

    ``` pony
    fun box tcpi_opt_ecn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_ecn_seen()
  id: net-ossockopt#tcpi_opt_ecn_seen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_ecn_seen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1165)

    ``` pony
    fun box tcpi_opt_ecn_seen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_sack()
  id: net-ossockopt#tcpi_opt_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1166)

    ``` pony
    fun box tcpi_opt_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_syn_data()
  id: net-ossockopt#tcpi_opt_syn_data
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_syn_data

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1167)

    ``` pony
    fun box tcpi_opt_syn_data()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_timestamps()
  id: net-ossockopt#tcpi_opt_timestamps
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_timestamps

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1168)

    ``` pony
    fun box tcpi_opt_timestamps()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_toe()
  id: net-ossockopt#tcpi_opt_toe
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_toe

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1169)

    ``` pony
    fun box tcpi_opt_toe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpi_opt_wscale()
  id: net-ossockopt#tcpi_opt_wscale
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpi_opt_wscale

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1170)

    ``` pony
    fun box tcpi_opt_wscale()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_cc()
  id: net-ossockopt#tcpolen_cc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_cc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1171)

    ``` pony
    fun box tcpolen_cc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_cc_appa()
  id: net-ossockopt#tcpolen_cc_appa
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_cc_appa

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1172)

    ``` pony
    fun box tcpolen_cc_appa()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_eol()
  id: net-ossockopt#tcpolen_eol
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_eol

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1173)

    ``` pony
    fun box tcpolen_eol()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_fast_open_empty()
  id: net-ossockopt#tcpolen_fast_open_empty
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_fast_open_empty

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1175)

    ``` pony
    fun box tcpolen_fast_open_empty()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_fast_open_max()
  id: net-ossockopt#tcpolen_fast_open_max
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_fast_open_max

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1176)

    ``` pony
    fun box tcpolen_fast_open_max()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_fast_open_min()
  id: net-ossockopt#tcpolen_fast_open_min
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_fast_open_min

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1177)

    ``` pony
    fun box tcpolen_fast_open_min()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_fastopen_req()
  id: net-ossockopt#tcpolen_fastopen_req
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_fastopen_req

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1174)

    ``` pony
    fun box tcpolen_fastopen_req()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_maxseg()
  id: net-ossockopt#tcpolen_maxseg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_maxseg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1178)

    ``` pony
    fun box tcpolen_maxseg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_nop()
  id: net-ossockopt#tcpolen_nop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_nop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1179)

    ``` pony
    fun box tcpolen_nop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_pad()
  id: net-ossockopt#tcpolen_pad
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_pad

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1180)

    ``` pony
    fun box tcpolen_pad()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_sack()
  id: net-ossockopt#tcpolen_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1181)

    ``` pony
    fun box tcpolen_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_sack_permitted()
  id: net-ossockopt#tcpolen_sack_permitted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_sack_permitted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1183)

    ``` pony
    fun box tcpolen_sack_permitted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_sackhdr()
  id: net-ossockopt#tcpolen_sackhdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_sackhdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1182)

    ``` pony
    fun box tcpolen_sackhdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_signature()
  id: net-ossockopt#tcpolen_signature
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_signature

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1184)

    ``` pony
    fun box tcpolen_signature()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_timestamp()
  id: net-ossockopt#tcpolen_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1185)

    ``` pony
    fun box tcpolen_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_tstamp_appa()
  id: net-ossockopt#tcpolen_tstamp_appa
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_tstamp_appa

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1186)

    ``` pony
    fun box tcpolen_tstamp_appa()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpolen_window()
  id: net-ossockopt#tcpolen_window
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpolen_window

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1187)

    ``` pony
    fun box tcpolen_window()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_cc()
  id: net-ossockopt#tcpopt_cc
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_cc

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1188)

    ``` pony
    fun box tcpopt_cc()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_ccecho()
  id: net-ossockopt#tcpopt_ccecho
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_ccecho

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1189)

    ``` pony
    fun box tcpopt_ccecho()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_ccnew()
  id: net-ossockopt#tcpopt_ccnew
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_ccnew

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1190)

    ``` pony
    fun box tcpopt_ccnew()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_eol()
  id: net-ossockopt#tcpopt_eol
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_eol

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1191)

    ``` pony
    fun box tcpopt_eol()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_fast_open()
  id: net-ossockopt#tcpopt_fast_open
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_fast_open

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1193)

    ``` pony
    fun box tcpopt_fast_open()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_fastopen()
  id: net-ossockopt#tcpopt_fastopen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_fastopen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1192)

    ``` pony
    fun box tcpopt_fastopen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_maxseg()
  id: net-ossockopt#tcpopt_maxseg
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_maxseg

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1194)

    ``` pony
    fun box tcpopt_maxseg()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_multipath()
  id: net-ossockopt#tcpopt_multipath
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_multipath

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1195)

    ``` pony
    fun box tcpopt_multipath()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_nop()
  id: net-ossockopt#tcpopt_nop
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_nop

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1196)

    ``` pony
    fun box tcpopt_nop()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_pad()
  id: net-ossockopt#tcpopt_pad
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_pad

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1197)

    ``` pony
    fun box tcpopt_pad()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_sack()
  id: net-ossockopt#tcpopt_sack
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_sack

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1198)

    ``` pony
    fun box tcpopt_sack()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_sack_hdr()
  id: net-ossockopt#tcpopt_sack_hdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_sack_hdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1199)

    ``` pony
    fun box tcpopt_sack_hdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_sack_permit_hdr()
  id: net-ossockopt#tcpopt_sack_permit_hdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_sack_permit_hdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1201)

    ``` pony
    fun box tcpopt_sack_permit_hdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_sack_permitted()
  id: net-ossockopt#tcpopt_sack_permitted
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_sack_permitted

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1200)

    ``` pony
    fun box tcpopt_sack_permitted()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_signature()
  id: net-ossockopt#tcpopt_signature
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_signature

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1202)

    ``` pony
    fun box tcpopt_signature()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_timestamp()
  id: net-ossockopt#tcpopt_timestamp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_timestamp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1203)

    ``` pony
    fun box tcpopt_timestamp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_tstamp_hdr()
  id: net-ossockopt#tcpopt_tstamp_hdr
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_tstamp_hdr

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1204)

    ``` pony
    fun box tcpopt_tstamp_hdr()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tcpopt_window()
  id: net-ossockopt#tcpopt_window
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tcpopt_window

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1205)

    ``` pony
    fun box tcpopt_window()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_addr_id()
  id: net-ossockopt#tipc_addr_id
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_addr_id

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1269)

    ``` pony
    fun box tipc_addr_id()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_addr_mcast()
  id: net-ossockopt#tipc_addr_mcast
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_addr_mcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1270)

    ``` pony
    fun box tipc_addr_mcast()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_addr_name()
  id: net-ossockopt#tipc_addr_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_addr_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1271)

    ``` pony
    fun box tipc_addr_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_addr_nameseq()
  id: net-ossockopt#tipc_addr_nameseq
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_addr_nameseq

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1272)

    ``` pony
    fun box tipc_addr_nameseq()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_cfg_srv()
  id: net-ossockopt#tipc_cfg_srv
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_cfg_srv

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1273)

    ``` pony
    fun box tipc_cfg_srv()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_cluster_scope()
  id: net-ossockopt#tipc_cluster_scope
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_cluster_scope

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1274)

    ``` pony
    fun box tipc_cluster_scope()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_conn_shutdown()
  id: net-ossockopt#tipc_conn_shutdown
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_conn_shutdown

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1275)

    ``` pony
    fun box tipc_conn_shutdown()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_conn_timeout()
  id: net-ossockopt#tipc_conn_timeout
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_conn_timeout

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1276)

    ``` pony
    fun box tipc_conn_timeout()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_critical_importance()
  id: net-ossockopt#tipc_critical_importance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_critical_importance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1277)

    ``` pony
    fun box tipc_critical_importance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_dest_droppable()
  id: net-ossockopt#tipc_dest_droppable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_dest_droppable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1279)

    ``` pony
    fun box tipc_dest_droppable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_destname()
  id: net-ossockopt#tipc_destname
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_destname

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1278)

    ``` pony
    fun box tipc_destname()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_err_no_name()
  id: net-ossockopt#tipc_err_no_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_err_no_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1281)

    ``` pony
    fun box tipc_err_no_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_err_no_node()
  id: net-ossockopt#tipc_err_no_node
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_err_no_node

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1282)

    ``` pony
    fun box tipc_err_no_node()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_err_no_port()
  id: net-ossockopt#tipc_err_no_port
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_err_no_port

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1283)

    ``` pony
    fun box tipc_err_no_port()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_err_overload()
  id: net-ossockopt#tipc_err_overload
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_err_overload

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1284)

    ``` pony
    fun box tipc_err_overload()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_errinfo()
  id: net-ossockopt#tipc_errinfo
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_errinfo

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1280)

    ``` pony
    fun box tipc_errinfo()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_high_importance()
  id: net-ossockopt#tipc_high_importance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_high_importance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1285)

    ``` pony
    fun box tipc_high_importance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_importance()
  id: net-ossockopt#tipc_importance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_importance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1286)

    ``` pony
    fun box tipc_importance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_link_state()
  id: net-ossockopt#tipc_link_state
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_link_state

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1287)

    ``` pony
    fun box tipc_link_state()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_low_importance()
  id: net-ossockopt#tipc_low_importance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_low_importance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1288)

    ``` pony
    fun box tipc_low_importance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_max_bearer_name()
  id: net-ossockopt#tipc_max_bearer_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_max_bearer_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1289)

    ``` pony
    fun box tipc_max_bearer_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_max_if_name()
  id: net-ossockopt#tipc_max_if_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_max_if_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1290)

    ``` pony
    fun box tipc_max_if_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_max_link_name()
  id: net-ossockopt#tipc_max_link_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_max_link_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1291)

    ``` pony
    fun box tipc_max_link_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_max_media_name()
  id: net-ossockopt#tipc_max_media_name
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_max_media_name

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1292)

    ``` pony
    fun box tipc_max_media_name()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_max_user_msg_size()
  id: net-ossockopt#tipc_max_user_msg_size
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_max_user_msg_size

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1293)

    ``` pony
    fun box tipc_max_user_msg_size()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_medium_importance()
  id: net-ossockopt#tipc_medium_importance
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_medium_importance

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1294)

    ``` pony
    fun box tipc_medium_importance()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_node_recvq_depth()
  id: net-ossockopt#tipc_node_recvq_depth
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_node_recvq_depth

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1295)

    ``` pony
    fun box tipc_node_recvq_depth()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_node_scope()
  id: net-ossockopt#tipc_node_scope
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_node_scope

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1296)

    ``` pony
    fun box tipc_node_scope()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_ok()
  id: net-ossockopt#tipc_ok
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_ok

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1297)

    ``` pony
    fun box tipc_ok()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_published()
  id: net-ossockopt#tipc_published
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_published

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1298)

    ``` pony
    fun box tipc_published()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_reserved_types()
  id: net-ossockopt#tipc_reserved_types
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_reserved_types

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1299)

    ``` pony
    fun box tipc_reserved_types()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_retdata()
  id: net-ossockopt#tipc_retdata
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_retdata

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1300)

    ``` pony
    fun box tipc_retdata()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_sock_recvq_depth()
  id: net-ossockopt#tipc_sock_recvq_depth
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_sock_recvq_depth

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1301)

    ``` pony
    fun box tipc_sock_recvq_depth()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_src_droppable()
  id: net-ossockopt#tipc_src_droppable
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_src_droppable

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1302)

    ``` pony
    fun box tipc_src_droppable()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_sub_cancel()
  id: net-ossockopt#tipc_sub_cancel
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_sub_cancel

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1304)

    ``` pony
    fun box tipc_sub_cancel()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_sub_ports()
  id: net-ossockopt#tipc_sub_ports
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_sub_ports

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1305)

    ``` pony
    fun box tipc_sub_ports()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_sub_service()
  id: net-ossockopt#tipc_sub_service
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_sub_service

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1306)

    ``` pony
    fun box tipc_sub_service()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_subscr_timeout()
  id: net-ossockopt#tipc_subscr_timeout
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_subscr_timeout

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1303)

    ``` pony
    fun box tipc_subscr_timeout()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_top_srv()
  id: net-ossockopt#tipc_top_srv
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_top_srv

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1307)

    ``` pony
    fun box tipc_top_srv()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_wait_forever()
  id: net-ossockopt#tipc_wait_forever
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_wait_forever

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1308)

    ``` pony
    fun box tipc_wait_forever()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_withdrawn()
  id: net-ossockopt#tipc_withdrawn
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_withdrawn

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1309)

    ``` pony
    fun box tipc_withdrawn()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.tipc_zone_scope()
  id: net-ossockopt#tipc_zone_scope
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### tipc_zone_scope

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1310)

    ``` pony
    fun box tipc_zone_scope()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.ttcp_client_snd_wnd()
  id: net-ossockopt#ttcp_client_snd_wnd
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### ttcp_client_snd_wnd

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1311)

    ``` pony
    fun box ttcp_client_snd_wnd()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_cork()
  id: net-ossockopt#udp_cork
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_cork

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1312)

    ``` pony
    fun box udp_cork()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap()
  id: net-ossockopt#udp_encap
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1313)

    ``` pony
    fun box udp_encap()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap_espinudp()
  id: net-ossockopt#udp_encap_espinudp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap_espinudp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1314)

    ``` pony
    fun box udp_encap_espinudp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap_espinudp_maxfraglen()
  id: net-ossockopt#udp_encap_espinudp_maxfraglen
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap_espinudp_maxfraglen

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1315)

    ``` pony
    fun box udp_encap_espinudp_maxfraglen()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap_espinudp_non_ike()
  id: net-ossockopt#udp_encap_espinudp_non_ike
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap_espinudp_non_ike

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1316)

    ``` pony
    fun box udp_encap_espinudp_non_ike()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap_espinudp_port()
  id: net-ossockopt#udp_encap_espinudp_port
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap_espinudp_port

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1317)

    ``` pony
    fun box udp_encap_espinudp_port()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_encap_l2tpinudp()
  id: net-ossockopt#udp_encap_l2tpinudp
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_encap_l2tpinudp

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1318)

    ``` pony
    fun box udp_encap_l2tpinudp()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_no_check6_rx()
  id: net-ossockopt#udp_no_check6_rx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_no_check6_rx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1320)

    ``` pony
    fun box udp_no_check6_rx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_no_check6_tx()
  id: net-ossockopt#udp_no_check6_tx
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_no_check6_tx

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1321)

    ``` pony
    fun box udp_no_check6_tx()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_nocksum()
  id: net-ossockopt#udp_nocksum
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_nocksum

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1319)

    ``` pony
    fun box udp_nocksum()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OSSockOpt.udp_vendor()
  id: net-ossockopt#udp_vendor
  summary: null
  belongs_to: OSSockOpt
  description: |-
    ### udp_vendor

    [\[Source\]](https://stdlib.ponylang.io/src/net/ossockopt/#L1322)

    ``` pony
    fun box udp_vendor()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: OutputSerialisedAuth
  id: serialise-outputserialisedauth
  summary: This is a capability token that allows the holder to examine serialised data
  description: "# OutputSerialisedAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L56)\n\nThis is a capability token that allows the holder to examine serialised data. This should only be provided to types that need to write serialised data to some output stream, such as a file or socket. A type with the SerialiseAuth capability should usually not also have OutputSerialisedAuth, as the combination gives the holder the ability to examine the bitwise contents of any object it has a reference to.\n\n``` pony\nprimitive val OutputSerialisedAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)\n\n``` pony\nnew val create(\n  auth: AmbientAuth val)\n: OutputSerialisedAuth val^\n```\n\n#### Parameters\n\n- auth: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [OutputSerialisedAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)\n\n``` pony\nfun box eq(\n  that: OutputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OutputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)\n\n``` pony\nfun box ne(\n  that: OutputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OutputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-OutputSerialisedAuth](https://stdlib.ponylang.io/serialise-OutputSerialisedAuth)"
- name: OutputSerialisedAuth.create()
  id: serialise-outputserialisedauth#create
  summary: null
  belongs_to: OutputSerialisedAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)

    ``` pony
    new val create(
      auth: AmbientAuth val)
    : OutputSerialisedAuth val^
    ```

    #### Parameters

    - auth: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [OutputSerialisedAuth](index) val^

    ## Public Functions
- name: OutputSerialisedAuth.eq()
  id: serialise-outputserialisedauth#eq
  summary: null
  belongs_to: OutputSerialisedAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)

    ``` pony
    fun box eq(
      that: OutputSerialisedAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [OutputSerialisedAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: OutputSerialisedAuth.ne()
  id: serialise-outputserialisedauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: OutputSerialisedAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L65)\n\n``` pony\nfun box ne(\n  that: OutputSerialisedAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [OutputSerialisedAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-OutputSerialisedAuth](https://stdlib.ponylang.io/serialise-OutputSerialisedAuth)"
- name: OutStream
  id: builtin-outstream
  summary: Asnychronous access to some output stream
  description: "# OutStream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L9)\n\nAsnychronous access to some output stream.\n\n``` pony\ninterface tag OutStream\n```\n\n## Public Behaviours\n\n### print\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L13)\n\nPrint some bytes and insert a newline afterwards.\n\n``` pony\nbe print(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L18)\n\nPrint some bytes without inserting a newline afterwards.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### printv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L23)\n\nPrint an iterable collection of ByteSeqs.\n\n``` pony\nbe printv(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L28)\n\nWrite an iterable collection of ByteSeqs.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L33)\n\nFlush the stream.\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-OutStream](https://stdlib.ponylang.io/builtin-OutStream)"
- name: OutStream.flush()
  id: builtin-outstream#flush
  summary: Flush the stream
  belongs_to: OutStream
  description: "### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L33)\n\nFlush the stream.\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-OutStream](https://stdlib.ponylang.io/builtin-OutStream)"
- name: OutStream.print()
  id: builtin-outstream#print
  summary: Print some bytes and insert a newline afterwards
  belongs_to: OutStream
  description: |-
    ### print

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L13)

    Print some bytes and insert a newline afterwards.

    ``` pony
    be print(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)
- name: OutStream.printv()
  id: builtin-outstream#printv
  summary: Print an iterable collection of ByteSeqs
  belongs_to: OutStream
  description: |-
    ### printv

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L23)

    Print an iterable collection of ByteSeqs.

    ``` pony
    be printv(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: OutStream.write()
  id: builtin-outstream#write
  summary: Print some bytes without inserting a newline afterwards
  belongs_to: OutStream
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L18)

    Print some bytes without inserting a newline afterwards.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: OutStream.writev()
  id: builtin-outstream#writev
  summary: Write an iterable collection of ByteSeqs
  belongs_to: OutStream
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L28)

    Write an iterable collection of ByteSeqs.

    ``` pony
    be writev(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: OverheadBenchmark
  id: ponybench-overheadbenchmark
  summary: Default benchmark for measuring synchronous overhead
  description: "# OverheadBenchmark\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L79)\n\nDefault benchmark for measuring synchronous overhead.\n\n``` pony\nclass iso OverheadBenchmark is\n  MicroBenchmark iso\n```\n\n#### Implements\n\n- [MicroBenchmark](ponybench-microbenchmark) iso\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L79)\n\n``` pony\nnew iso create()\n: OverheadBenchmark iso^\n```\n\n#### Returns\n\n- [OverheadBenchmark](index) iso^\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L83)\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L86)\n\n``` pony\nfun ref apply()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### config\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L20)\n\n``` pony\nfun box config()\n: BenchConfig val\n```\n\n#### Returns\n\n- [BenchConfig](ponybench-benchconfig) val\n\n### overhead\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L21)\n\n``` pony\nfun box overhead()\n: MicroBenchmark iso^\n```\n\n#### Returns\n\n- [MicroBenchmark](ponybench-microbenchmark) iso^\n\n### before\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L22)\n\n``` pony\nfun ref before()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### before_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L23)\n\n``` pony\nfun ref before_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### after\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L25)\n\n``` pony\nfun ref after()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L26)\n\n``` pony\nfun ref after_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-OverheadBenchmark](https://stdlib.ponylang.io/ponybench-OverheadBenchmark)"
- name: OverheadBenchmark.after()
  id: ponybench-overheadbenchmark#after
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### after

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L25)

    ``` pony
    fun ref after()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: OverheadBenchmark.after_iteration()
  id: ponybench-overheadbenchmark#after_iteration
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: OverheadBenchmark
  description: "### after_iteration\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L26)\n\n``` pony\nfun ref after_iteration()\n: None val ?\n```\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-OverheadBenchmark](https://stdlib.ponylang.io/ponybench-OverheadBenchmark)"
- name: OverheadBenchmark.apply()
  id: ponybench-overheadbenchmark#apply
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L86)

    ``` pony
    fun ref apply()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: OverheadBenchmark.before()
  id: ponybench-overheadbenchmark#before
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### before

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L22)

    ``` pony
    fun ref before()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: OverheadBenchmark.before_iteration()
  id: ponybench-overheadbenchmark#before_iteration
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### before_iteration

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L23)

    ``` pony
    fun ref before_iteration()
    : None val ?
    ```

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: OverheadBenchmark.config()
  id: ponybench-overheadbenchmark#config
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### config

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L20)

    ``` pony
    fun box config()
    : BenchConfig val
    ```

    #### Returns

    - [BenchConfig](ponybench-benchconfig) val

    &nbsp;
- name: OverheadBenchmark.create()
  id: ponybench-overheadbenchmark#create
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L79)

    ``` pony
    new iso create()
    : OverheadBenchmark iso^
    ```

    #### Returns

    - [OverheadBenchmark](index) iso^

    ## Public Functions
- name: OverheadBenchmark.name()
  id: ponybench-overheadbenchmark#name
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L83)

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: OverheadBenchmark.overhead()
  id: ponybench-overheadbenchmark#overhead
  summary: null
  belongs_to: OverheadBenchmark
  description: |-
    ### overhead

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/benchmark/#L21)

    ``` pony
    fun box overhead()
    : MicroBenchmark iso^
    ```

    #### Returns

    - [MicroBenchmark](ponybench-microbenchmark) iso^

    &nbsp;
- name: ParsedOption
  id: options-parsedoption
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ParsedOption\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L96)\n\n``` pony\ntype ParsedOption is\n  (String val , (None val | String val | I64 val | U64 val | F64 val))\n```\n\n#### Type Alias For\n\n- ([String](builtin-string) val , ([None](builtin-none) val \\| [String](builtin-string) val \\| [I64](builtin-i64) val \\| [U64](builtin-u64) val \\| [F64](builtin-f64) val))\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-ParsedOption](https://stdlib.ponylang.io/options-ParsedOption)"
- name: ParseError
  id: options-parseerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ParseError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L98)\n\n``` pony\ninterface ref ParseError\n```\n\n## Public Functions\n\n### reason\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L99)\n\n``` pony\nfun box reason()\n: (UnrecognisedOption val | MissingArgument val | InvalidArgument val | \n    AmbiguousMatch val)\n```\n\n#### Returns\n\n- ([UnrecognisedOption](options-unrecognisedoption) val \\| [MissingArgument](options-missingargument) val \\| [InvalidArgument](options-invalidargument) val \\| [AmbiguousMatch](options-ambiguousmatch) val)\n\n### report\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L100)\n\n``` pony\nfun box report(\n  out: OutStream tag)\n: None val\n```\n\n#### Parameters\n\n- out: [OutStream](builtin-outstream) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-ParseError](https://stdlib.ponylang.io/options-ParseError)"
- name: ParseError.reason()
  id: options-parseerror#reason
  summary: null
  belongs_to: ParseError
  description: "### reason\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L99)\n\n``` pony\nfun box reason()\n: (UnrecognisedOption val | MissingArgument val | InvalidArgument val | \n    AmbiguousMatch val)\n```\n\n#### Returns\n\n- ([UnrecognisedOption](options-unrecognisedoption) val \\| [MissingArgument](options-missingargument) val \\| [InvalidArgument](options-invalidargument) val \\| [AmbiguousMatch](options-ambiguousmatch) val)"
- name: ParseError.report()
  id: options-parseerror#report
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ParseError
  description: "### report\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L100)\n\n``` pony\nfun box report(\n  out: OutStream tag)\n: None val\n```\n\n#### Parameters\n\n- out: [OutStream](builtin-outstream) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-ParseError](https://stdlib.ponylang.io/options-ParseError)"
- name: Path
  id: files-path
  summary: Operations on paths that do not require a capability
  description: "# Path\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L10)\n\nOperations on paths that do not require a capability. The operations can be used to manipulate path names, but give no access to the resulting paths.\n\n``` pony\nprimitive val Path\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L10)\n\n``` pony\nnew val create()\n: Path val^\n```\n\n#### Returns\n\n- [Path](index) val^\n\n## Public Functions\n\n### is_sep\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L15)\n\nDetermine if a byte is a path separator.\n\n``` pony\nfun box is_sep(\n  c: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- c: [U8](builtin-u8) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### sep\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L25)\n\nReturn the path separator as a string.\n\n``` pony\nfun tag sep()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### is_abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L31)\n\nReturn true if the path is an absolute path.\n\n``` pony\nfun box is_abs(\n  path: String val)\n: Bool val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L45)\n\nJoin two paths together. If the next_path is absolute, simply return it. The returned path will be cleaned.\n\n``` pony\nfun box join(\n  path: String val,\n  next_path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n- next_path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### clean\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L69)\n\nReplace multiple separators with a single separator. Convert / to the OS separator. Remove instances of . from the path. Remove instances of .. and the preceding path element from the path. The result will have no trailing slash unless it is a root directory. If the result would be empty, \".\" will be returned instead.\n\n``` pony\nfun box clean(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### normcase\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L188)\n\nNormalizes the case of path for the runtime platform.\n\n``` pony\nfun box normcase(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### cwd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L200)\n\nReturns the program's working directory. Setting the working directory is not supported, as it is not concurrency-safe.\n\n``` pony\nfun box cwd()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L207)\n\nReturns a cleaned, absolute path.\n\n``` pony\nfun box abs(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### rel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L217)\n\nReturns a path such that Path.join(to, Path.rel(to, target)) == target. Raises an error if this isn't possible.\n\n``` pony\nfun box rel(\n  to: String val,\n  target: String val)\n: String val ?\n```\n\n#### Parameters\n\n- to: [String](builtin-string) val\n- target: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val ?\n\n### split\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L307)\n\nSplits the path into a pair, (head, tail) where tail is the last pathname component and head is everything leading up to that. The tail part will never contain a slash; if path ends in a slash, tail will be empty. If there is no slash in path, head will be empty. If path is empty, both head and tail are empty. The path in head will be cleaned before it is returned. In all cases, join(head, tail) returns a path to the same location as path (but the strings may differ). Also see the functions dir() and base().\n\n``` pony\nfun box split(\n  path: String val,\n  separator: String val = call)\n: (String val , String val)\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n- separator: [String](builtin-string) val = call\n\n#### Returns\n\n- ([String](builtin-string) val , [String](builtin-string) val)\n\n### base\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L324)\n\nReturn the path after the last separator, or the whole path if there is no separator. If `with_ext` is `false`, the extension as defined by the `ext()` method will be omitted from the result.\n\n``` pony\nfun box base(\n  path: String val,\n  with_ext: Bool val = true)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n- with_ext: [Bool](builtin-bool) val = true\n\n#### Returns\n\n- [String](builtin-string) val\n\n### dir\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L349)\n\nReturn a cleaned path before the last separator, or the whole path if there is no separator.\n\n``` pony\nfun box dir(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### ext\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L360)\n\nReturn the file extension, i.e. the part after the last dot as long as that dot is after all separators. Return an empty string for no extension.\n\n``` pony\nfun box ext(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### volume\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L380)\n\nOn Windows, this returns the drive letter or UNC base at the beginning of the path, if there is one. Otherwise, this returns an empty string.\n\n``` pony\nfun box volume(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### from_slash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L441)\n\nChanges each / in the path to the OS specific separator.\n\n``` pony\nfun box from_slash(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### to_slash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L465)\n\nChanges each OS specific separator in the path to /.\n\n``` pony\nfun box to_slash(\n  path: String val)\n: String val\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val\n\n### canonical\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L489)\n\nReturn the equivalent canonical absolute path. Raise an error if there isn't one.\n\n``` pony\nfun box canonical(\n  path: String val)\n: String val ?\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val ?\n\n### is_list_sep\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L503)\n\nDetermine if a byte is a path list separator.\n\n``` pony\nfun box is_list_sep(\n  c: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- c: [U8](builtin-u8) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### list_sep\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L509)\n\nReturn the path list separator as a string.\n\n``` pony\nfun box list_sep()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### split_list\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L515)\n\nSeparate a list of paths into an array of cleaned paths.\n\n``` pony\nfun box split_list(\n  path: String val)\n: Array[String val] iso^\n```\n\n#### Parameters\n\n- path: [String](builtin-string) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](builtin-string) val\\] iso^\n\n### random\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L534)\n\nReturns a pseudo-random base, suitable as a temporary file name or directory name, but not guaranteed to not already exist.\n\n``` pony\nfun box random(\n  len: USize val = 6)\n: String val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 6\n\n#### Returns\n\n- [String](builtin-string) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L15)\n\n``` pony\nfun box eq(\n  that: Path val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Path](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L15)\n\n``` pony\nfun box ne(\n  that: Path val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Path](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-Path](https://stdlib.ponylang.io/files-Path)"
- name: Path.abs()
  id: files-path#abs
  summary: Returns a cleaned, absolute path
  belongs_to: Path
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L207)

    Returns a cleaned, absolute path.

    ``` pony
    fun box abs(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.base()
  id: files-path#base
  summary: Return the path after the last separator, or the whole path if there is no separator
  belongs_to: Path
  description: |-
    ### base

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L324)

    Return the path after the last separator, or the whole path if there is no separator. If `with_ext` is `false`, the extension as defined by the `ext()` method will be omitted from the result.

    ``` pony
    fun box base(
      path: String val,
      with_ext: Bool val = true)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val
    - with_ext: [Bool](builtin-bool) val = true

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.canonical()
  id: files-path#canonical
  summary: Return the equivalent canonical absolute path
  belongs_to: Path
  description: |-
    ### canonical

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L489)

    Return the equivalent canonical absolute path. Raise an error if there isn't one.

    ``` pony
    fun box canonical(
      path: String val)
    : String val ?
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val ?

    &nbsp;
- name: Path.clean()
  id: files-path#clean
  summary: Replace multiple separators with a single separator
  belongs_to: Path
  description: |-
    ### clean

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L69)

    Replace multiple separators with a single separator. Convert / to the OS separator. Remove instances of . from the path. Remove instances of .. and the preceding path element from the path. The result will have no trailing slash unless it is a root directory. If the result would be empty, "." will be returned instead.

    ``` pony
    fun box clean(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.create()
  id: files-path#create
  summary: null
  belongs_to: Path
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L10)

    ``` pony
    new val create()
    : Path val^
    ```

    #### Returns

    - [Path](index) val^

    ## Public Functions
- name: Path.cwd()
  id: files-path#cwd
  summary: Returns the program's working directory
  belongs_to: Path
  description: |-
    ### cwd

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L200)

    Returns the program's working directory. Setting the working directory is not supported, as it is not concurrency-safe.

    ``` pony
    fun box cwd()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.dir()
  id: files-path#dir
  summary: Return a cleaned path before the last separator, or the whole path if there is no separator
  belongs_to: Path
  description: |-
    ### dir

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L349)

    Return a cleaned path before the last separator, or the whole path if there is no separator.

    ``` pony
    fun box dir(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.eq()
  id: files-path#eq
  summary: null
  belongs_to: Path
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L15)

    ``` pony
    fun box eq(
      that: Path val)
    : Bool val
    ```

    #### Parameters

    - that: [Path](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Path.ext()
  id: files-path#ext
  summary: Return the file extension, i.e
  belongs_to: Path
  description: |-
    ### ext

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L360)

    Return the file extension, i.e. the part after the last dot as long as that dot is after all separators. Return an empty string for no extension.

    ``` pony
    fun box ext(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.from_slash()
  id: files-path#from_slash
  summary: Changes each / in the path to the OS specific separator
  belongs_to: Path
  description: |-
    ### from_slash

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L441)

    Changes each / in the path to the OS specific separator.

    ``` pony
    fun box from_slash(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.is_abs()
  id: files-path#is_abs
  summary: Return true if the path is an absolute path
  belongs_to: Path
  description: |-
    ### is_abs

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L31)

    Return true if the path is an absolute path.

    ``` pony
    fun box is_abs(
      path: String val)
    : Bool val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Path.is_list_sep()
  id: files-path#is_list_sep
  summary: Determine if a byte is a path list separator
  belongs_to: Path
  description: |-
    ### is_list_sep

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L503)

    Determine if a byte is a path list separator.

    ``` pony
    fun box is_list_sep(
      c: U8 val)
    : Bool val
    ```

    #### Parameters

    - c: [U8](builtin-u8) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Path.is_sep()
  id: files-path#is_sep
  summary: Determine if a byte is a path separator
  belongs_to: Path
  description: |-
    ### is_sep

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L15)

    Determine if a byte is a path separator.

    ``` pony
    fun box is_sep(
      c: U8 val)
    : Bool val
    ```

    #### Parameters

    - c: [U8](builtin-u8) val

    #### Returns

    - [Bool](builtin-bool) val
- name: Path.join()
  id: files-path#join
  summary: Join two paths together
  belongs_to: Path
  description: |-
    ### join

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L45)

    Join two paths together. If the next_path is absolute, simply return it. The returned path will be cleaned.

    ``` pony
    fun box join(
      path: String val,
      next_path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val
    - next_path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.list_sep()
  id: files-path#list_sep
  summary: Return the path list separator as a string
  belongs_to: Path
  description: |-
    ### list_sep

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L509)

    Return the path list separator as a string.

    ``` pony
    fun box list_sep()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.ne()
  id: files-path#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Path
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/path/#L15)\n\n``` pony\nfun box ne(\n  that: Path val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Path](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-Path](https://stdlib.ponylang.io/files-Path)"
- name: Path.normcase()
  id: files-path#normcase
  summary: Normalizes the case of path for the runtime platform
  belongs_to: Path
  description: |-
    ### normcase

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L188)

    Normalizes the case of path for the runtime platform.

    ``` pony
    fun box normcase(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.random()
  id: files-path#random
  summary: Returns a pseudo-random base, suitable as a temporary file name or directory name, but not guaranteed to not already exist
  belongs_to: Path
  description: |-
    ### random

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L534)

    Returns a pseudo-random base, suitable as a temporary file name or directory name, but not guaranteed to not already exist.

    ``` pony
    fun box random(
      len: USize val = 6)
    : String val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 6

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.rel()
  id: files-path#rel
  summary: Returns a path such that Path.join(to, Path.rel(to, target)) == target
  belongs_to: Path
  description: |-
    ### rel

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L217)

    Returns a path such that Path.join(to, Path.rel(to, target)) == target. Raises an error if this isn't possible.

    ``` pony
    fun box rel(
      to: String val,
      target: String val)
    : String val ?
    ```

    #### Parameters

    - to: [String](builtin-string) val
    - target: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val ?

    &nbsp;
- name: Path.sep()
  id: files-path#sep
  summary: Return the path separator as a string
  belongs_to: Path
  description: |-
    ### sep

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L25)

    Return the path separator as a string.

    ``` pony
    fun tag sep()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.split()
  id: files-path#split
  summary: Splits the path into a pair, (head, tail) where tail is the last pathname component and head is everything leading up to that
  belongs_to: Path
  description: |-
    ### split

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L307)

    Splits the path into a pair, (head, tail) where tail is the last pathname component and head is everything leading up to that. The tail part will never contain a slash; if path ends in a slash, tail will be empty. If there is no slash in path, head will be empty. If path is empty, both head and tail are empty. The path in head will be cleaned before it is returned. In all cases, join(head, tail) returns a path to the same location as path (but the strings may differ). Also see the functions dir() and base().

    ``` pony
    fun box split(
      path: String val,
      separator: String val = call)
    : (String val , String val)
    ```

    #### Parameters

    - path: [String](builtin-string) val
    - separator: [String](builtin-string) val = call

    #### Returns

    - ([String](builtin-string) val , [String](builtin-string) val)

    &nbsp;
- name: Path.split_list()
  id: files-path#split_list
  summary: Separate a list of paths into an array of cleaned paths
  belongs_to: Path
  description: |-
    ### split_list

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L515)

    Separate a list of paths into an array of cleaned paths.

    ``` pony
    fun box split_list(
      path: String val)
    : Array[String val] iso^
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [Array](builtin-array)\[[String](builtin-string) val\] iso^

    &nbsp;
- name: Path.to_slash()
  id: files-path#to_slash
  summary: null
  belongs_to: Path
  description: |-
    ### to_slash

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L465)

    Changes each OS specific separator in the path to /.

    ``` pony
    fun box to_slash(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: Path.volume()
  id: files-path#volume
  summary: On Windows, this returns the drive letter or UNC base at the beginning of the path, if there is one
  belongs_to: Path
  description: |-
    ### volume

    [\[Source\]](https://stdlib.ponylang.io/src/files/path/#L380)

    On Windows, this returns the drive letter or UNC base at the beginning of the path, if there is one. Otherwise, this returns an empty string.

    ``` pony
    fun box volume(
      path: String val)
    : String val
    ```

    #### Parameters

    - path: [String](builtin-string) val

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: PipeError
  id: process-pipeerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PipeError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L41)\n\n``` pony\nprimitive val PipeError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L41)\n\n``` pony\nnew val create()\n: PipeError val^\n```\n\n#### Returns\n\n- [PipeError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L42)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L42)\n\n``` pony\nfun box eq(\n  that: PipeError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PipeError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L42)\n\n``` pony\nfun box ne(\n  that: PipeError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PipeError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-PipeError](https://stdlib.ponylang.io/process-PipeError)"
- name: PipeError.create()
  id: process-pipeerror#create
  summary: null
  belongs_to: PipeError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L41)

    ``` pony
    new val create()
    : PipeError val^
    ```

    #### Returns

    - [PipeError](index) val^

    ## Public Functions
- name: PipeError.eq()
  id: process-pipeerror#eq
  summary: null
  belongs_to: PipeError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L42)

    ``` pony
    fun box eq(
      that: PipeError val)
    : Bool val
    ```

    #### Parameters

    - that: [PipeError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: PipeError.ne()
  id: process-pipeerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: PipeError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L42)\n\n``` pony\nfun box ne(\n  that: PipeError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PipeError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-PipeError](https://stdlib.ponylang.io/process-PipeError)"
- name: PipeError.string()
  id: process-pipeerror#string
  summary: null
  belongs_to: PipeError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L42)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Platform
  id: builtin-platform
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Platform\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L1)\n\n``` pony\nprimitive val Platform\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L1)\n\n``` pony\nnew val create()\n: Platform val^\n```\n\n#### Returns\n\n- [Platform](index) val^\n\n## Public Functions\n\n### bsd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)\n\n``` pony\nfun box bsd()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### freebsd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L3)\n\n``` pony\nfun box freebsd()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### dragonfly\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L4)\n\n``` pony\nfun box dragonfly()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### openbsd\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L5)\n\n``` pony\nfun box openbsd()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### linux\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L6)\n\n``` pony\nfun box linux()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### osx\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L7)\n\n``` pony\nfun box osx()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### posix\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L8)\n\n``` pony\nfun box posix()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### windows\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L9)\n\n``` pony\nfun box windows()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### x86\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L11)\n\n``` pony\nfun box x86()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### arm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L12)\n\n``` pony\nfun box arm()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lp64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L14)\n\n``` pony\nfun box lp64()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### llp64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L15)\n\n``` pony\nfun box llp64()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ilp32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L16)\n\n``` pony\nfun box ilp32()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### bigendian\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L18)\n\n``` pony\nfun box bigendian()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### littleendian\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L19)\n\n``` pony\nfun box littleendian()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### native128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L21)\n\n``` pony\nfun box native128()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### debug\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L22)\n\n``` pony\nfun box debug()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)\n\n``` pony\nfun box eq(\n  that: Platform val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Platform](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)\n\n``` pony\nfun box ne(\n  that: Platform val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Platform](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Platform](https://stdlib.ponylang.io/builtin-Platform)"
- name: Platform.arm()
  id: builtin-platform#arm
  summary: null
  belongs_to: Platform
  description: |-
    ### arm

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L12)

    ``` pony
    fun box arm()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.bigendian()
  id: builtin-platform#bigendian
  summary: null
  belongs_to: Platform
  description: |-
    ### bigendian

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L18)

    ``` pony
    fun box bigendian()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.bsd()
  id: builtin-platform#bsd
  summary: null
  belongs_to: Platform
  description: |-
    ### bsd

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)

    ``` pony
    fun box bsd()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: Platform.create()
  id: builtin-platform#create
  summary: null
  belongs_to: Platform
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L1)

    ``` pony
    new val create()
    : Platform val^
    ```

    #### Returns

    - [Platform](index) val^

    ## Public Functions
- name: Platform.debug()
  id: builtin-platform#debug
  summary: null
  belongs_to: Platform
  description: |-
    ### debug

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L22)

    ``` pony
    fun box debug()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.dragonfly()
  id: builtin-platform#dragonfly
  summary: null
  belongs_to: Platform
  description: |-
    ### dragonfly

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L4)

    ``` pony
    fun box dragonfly()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.eq()
  id: builtin-platform#eq
  summary: null
  belongs_to: Platform
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)

    ``` pony
    fun box eq(
      that: Platform val)
    : Bool val
    ```

    #### Parameters

    - that: [Platform](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.freebsd()
  id: builtin-platform#freebsd
  summary: null
  belongs_to: Platform
  description: |-
    ### freebsd

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L3)

    ``` pony
    fun box freebsd()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.ilp32()
  id: builtin-platform#ilp32
  summary: null
  belongs_to: Platform
  description: |-
    ### ilp32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L16)

    ``` pony
    fun box ilp32()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.linux()
  id: builtin-platform#linux
  summary: null
  belongs_to: Platform
  description: |-
    ### linux

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L6)

    ``` pony
    fun box linux()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.littleendian()
  id: builtin-platform#littleendian
  summary: null
  belongs_to: Platform
  description: |-
    ### littleendian

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L19)

    ``` pony
    fun box littleendian()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.llp64()
  id: builtin-platform#llp64
  summary: null
  belongs_to: Platform
  description: |-
    ### llp64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L15)

    ``` pony
    fun box llp64()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.lp64()
  id: builtin-platform#lp64
  summary: null
  belongs_to: Platform
  description: |-
    ### lp64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L14)

    ``` pony
    fun box lp64()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.native128()
  id: builtin-platform#native128
  summary: null
  belongs_to: Platform
  description: |-
    ### native128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L21)

    ``` pony
    fun box native128()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.ne()
  id: builtin-platform#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Platform
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/platform/#L2)\n\n``` pony\nfun box ne(\n  that: Platform val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Platform](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Platform](https://stdlib.ponylang.io/builtin-Platform)"
- name: Platform.openbsd()
  id: builtin-platform#openbsd
  summary: null
  belongs_to: Platform
  description: |-
    ### openbsd

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L5)

    ``` pony
    fun box openbsd()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.osx()
  id: builtin-platform#osx
  summary: null
  belongs_to: Platform
  description: |-
    ### osx

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L7)

    ``` pony
    fun box osx()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.posix()
  id: builtin-platform#posix
  summary: null
  belongs_to: Platform
  description: |-
    ### posix

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L8)

    ``` pony
    fun box posix()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.windows()
  id: builtin-platform#windows
  summary: null
  belongs_to: Platform
  description: |-
    ### windows

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L9)

    ``` pony
    fun box windows()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Platform.x86()
  id: builtin-platform#x86
  summary: null
  belongs_to: Platform
  description: |-
    ### x86

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/platform/#L11)

    ``` pony
    fun box x86()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer
  id: builtin-pointer
  summary: A Pointer[A] is a raw memory pointer
  description: "# Pointer\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L1)\n\nA Pointer\\[A\\] is a raw memory pointer. It has no descriptor and thus can't be included in a union or intersection, or be a subtype of any interface. Most functions on a Pointer\\[A\\] are private to maintain memory safety.\n\n``` pony\nstruct ref Pointer[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L7)\n\nA null pointer.\n\n``` pony\nnew ref create()\n: Pointer[A] ref^\n```\n\n#### Returns\n\n- [Pointer](index)\\[A\\] ref^\n\n## Public Functions\n\n### offset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L55)\n\nReturn a tag pointer to the n-th element.\n\n``` pony\nfun tag offset(\n  n: USize val)\n: Pointer[A] tag\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Pointer](index)\\[A\\] tag\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L89)\n\nConvert the pointer into an integer.\n\n``` pony\nfun tag usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### is_null\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L95)\n\nReturn true for a null pointer, false for anything else.\n\n``` pony\nfun tag is_null()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L101)\n\nReturn true if this address is that address.\n\n``` pony\nfun tag eq(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L107)\n\nReturn true if this address is less than that address.\n\n``` pony\nfun tag lt(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L113)\n\n``` pony\nfun tag ne(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L114)\n\n``` pony\nfun tag le(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L115)\n\n``` pony\nfun tag ge(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L116)\n\n``` pony\nfun tag gt(\n  that: Pointer[A] tag)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Pointer](index)\\[A\\] tag\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L118)\n\nReturns a hash of the address.\n\n``` pony\nfun tag hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L124)\n\nReturns a 64-bit hash of the address.\n\n``` pony\nfun tag hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Pointer](https://stdlib.ponylang.io/builtin-Pointer)"
- name: Pointer.create()
  id: builtin-pointer#create
  summary: A null pointer
  belongs_to: Pointer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L7)

    A null pointer.

    ``` pony
    new ref create()
    : Pointer[A] ref^
    ```

    #### Returns

    - [Pointer](index)\[A\] ref^

    ## Public Functions
- name: Pointer.eq()
  id: builtin-pointer#eq
  summary: Return true if this address is that address
  belongs_to: Pointer
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L101)

    Return true if this address is that address.

    ``` pony
    fun tag eq(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.ge()
  id: builtin-pointer#ge
  summary: null
  belongs_to: Pointer
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L115)

    ``` pony
    fun tag ge(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.gt()
  id: builtin-pointer#gt
  summary: null
  belongs_to: Pointer
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L116)

    ``` pony
    fun tag gt(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.hash()
  id: builtin-pointer#hash
  summary: Returns a hash of the address
  belongs_to: Pointer
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L118)

    Returns a hash of the address.

    ``` pony
    fun tag hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Pointer.hash64()
  id: builtin-pointer#hash64
  summary: Returns a 64-bit hash of the address
  belongs_to: Pointer
  description: "### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/pointer/#L124)\n\nReturns a 64-bit hash of the address.\n\n``` pony\nfun tag hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Pointer](https://stdlib.ponylang.io/builtin-Pointer)"
- name: Pointer.is_null()
  id: builtin-pointer#is_null
  summary: Return true for a null pointer, false for anything else
  belongs_to: Pointer
  description: |-
    ### is_null

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L95)

    Return true for a null pointer, false for anything else.

    ``` pony
    fun tag is_null()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.le()
  id: builtin-pointer#le
  summary: null
  belongs_to: Pointer
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L114)

    ``` pony
    fun tag le(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.lt()
  id: builtin-pointer#lt
  summary: Return true if this address is less than that address
  belongs_to: Pointer
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L107)

    Return true if this address is less than that address.

    ``` pony
    fun tag lt(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.ne()
  id: builtin-pointer#ne
  summary: null
  belongs_to: Pointer
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L113)

    ``` pony
    fun tag ne(
      that: Pointer[A] tag)
    : Bool val
    ```

    #### Parameters

    - that: [Pointer](index)\[A\] tag

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Pointer.offset()
  id: builtin-pointer#offset
  summary: Return a tag pointer to the n-th element
  belongs_to: Pointer
  description: |-
    ### offset

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L55)

    Return a tag pointer to the n-th element.

    ``` pony
    fun tag offset(
      n: USize val)
    : Pointer[A] tag
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [Pointer](index)\[A\] tag
- name: Pointer.usize()
  id: builtin-pointer#usize
  summary: Convert the pointer into an integer
  belongs_to: Pointer
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/pointer/#L89)

    Convert the pointer into an integer.

    ``` pony
    fun tag usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: PonyBench
  id: ponybench-ponybench
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PonyBench\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/pony_bench/#L108)\n\n``` pony\nactor tag PonyBench\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/pony_bench/#L114)\n\n``` pony\nnew tag create(\n  env: Env val,\n  list: BenchmarkList tag)\n: PonyBench tag^\n```\n\n#### Parameters\n\n- env: [Env](builtin-env) val\n- list: [BenchmarkList](ponybench-benchmarklist) tag\n\n#### Returns\n\n- [PonyBench](index) tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/pony_bench/#L128)\n\n``` pony\nbe apply(\n  bench: (MicroBenchmark iso | AsyncMicroBenchmark iso))\n```\n\n#### Parameters\n\n- bench: ([MicroBenchmark](ponybench-microbenchmark) iso \\| [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-PonyBench](https://stdlib.ponylang.io/ponybench-PonyBench)"
- name: PonyBench.apply()
  id: ponybench-ponybench#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: PonyBench
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponybench/pony_bench/#L128)\n\n``` pony\nbe apply(\n  bench: (MicroBenchmark iso | AsyncMicroBenchmark iso))\n```\n\n#### Parameters\n\n- bench: ([MicroBenchmark](ponybench-microbenchmark) iso \\| [AsyncMicroBenchmark](ponybench-asyncmicrobenchmark) iso)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponybench-PonyBench](https://stdlib.ponylang.io/ponybench-PonyBench)"
- name: PonyBench.create()
  id: ponybench-ponybench#create
  summary: null
  belongs_to: PonyBench
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ponybench/pony_bench/#L114)

    ``` pony
    new tag create(
      env: Env val,
      list: BenchmarkList tag)
    : PonyBench tag^
    ```

    #### Parameters

    - env: [Env](builtin-env) val
    - list: [BenchmarkList](ponybench-benchmarklist) tag

    #### Returns

    - [PonyBench](index) tag^

    ## Public Behaviours
- name: PonyTest
  id: ponytest-ponytest
  summary: Main test framework actor that organises tests, collates information and prints results
  description: "# PonyTest\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/pony_test/#L245)\n\nMain test framework actor that organises tests, collates information and prints results.\n\n``` pony\nactor tag PonyTest\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/pony_test/#L270)\n\nCreate a PonyTest object and use it to run the tests from the given TestList\n\n``` pony\nnew tag create(\n  env: Env val,\n  list: TestList tag)\n: PonyTest tag^\n```\n\n#### Parameters\n\n- env: [Env](builtin-env) val\n- list: [TestList](ponytest-testlist) tag\n\n#### Returns\n\n- [PonyTest](index) tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/pony_test/#L282)\n\nRun the given test, subject to our filters and options.\n\n``` pony\nbe apply(\n  test: UnitTest iso)\n```\n\n#### Parameters\n\n- test: [UnitTest](ponytest-unittest) iso\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-PonyTest](https://stdlib.ponylang.io/ponytest-PonyTest)"
- name: PonyTest.apply()
  id: ponytest-ponytest#apply
  summary: Run the given test, subject to our filters and options
  belongs_to: PonyTest
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/pony_test/#L282)\n\nRun the given test, subject to our filters and options.\n\n``` pony\nbe apply(\n  test: UnitTest iso)\n```\n\n#### Parameters\n\n- test: [UnitTest](ponytest-unittest) iso\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-PonyTest](https://stdlib.ponylang.io/ponytest-PonyTest)"
- name: PonyTest.create()
  id: ponytest-ponytest#create
  summary: null
  belongs_to: PonyTest
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/pony_test/#L270)

    Create a PonyTest object and use it to run the tests from the given TestList

    ``` pony
    new tag create(
      env: Env val,
      list: TestList tag)
    : PonyTest tag^
    ```

    #### Parameters

    - env: [Env](builtin-env) val
    - list: [TestList](ponytest-testlist) tag

    #### Returns

    - [PonyTest](index) tag^

    ## Public Behaviours
- name: PosixDate
  id: time-posixdate
  summary: Represents a proleptic Gregorian date and time, without specifying a time zone
  description: "# PosixDate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L1)\n\nRepresents a proleptic Gregorian date and time, without specifying a time zone. The day of month, month, day of week, and day of year are all indexed from 1, i.e. January is 1, Monday is 1.\n\n``` pony\nclass ref PosixDate\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L17)\n\nCreate a date from a POSIX time. Negative arguments will be changed to zero.\n\n``` pony\nnew ref create(\n  seconds: I64 val = 0,\n  nanoseconds: I64 val = 0)\n: PosixDate ref^\n```\n\n#### Parameters\n\n- seconds: [I64](builtin-i64) val = 0\n- nanoseconds: [I64](builtin-i64) val = 0\n\n#### Returns\n\n- [PosixDate](index) ref^\n\n## Public fields\n\n### var nsec: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L7)\n\n### var sec: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L8)\n\n### var min: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L9)\n\n### var hour: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L10)\n\n### var day_of_month: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L11)\n\n### var month: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L12)\n\n### var year: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L13)\n\n### var day_of_week: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L14)\n\n### var day_of_year: [I32](builtin-i32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L15)\n\n## Public Functions\n\n### time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L25)\n\nReturn a POSIX time. Treats the date as UTC.\n\n``` pony\nfun box time()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### normal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L31)\n\nNormalise all the fields of the date. For example, if the hour is 24, it is set to 0 and the day is advanced. This allows fields to be changed naively, eg. adding 1000 to hours to advance the time by 1000 hours, and then normalising the date.\n\n``` pony\nfun ref normal()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### format\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L40)\n\nFormat the time as for strftime.\n\n``` pony\nfun box format(\n  fmt: String val)\n: String val ?\n```\n\n#### Parameters\n\n- fmt: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-PosixDate](https://stdlib.ponylang.io/time-PosixDate)"
- name: PosixDate.create()
  id: time-posixdate#create
  summary: Create a date from a POSIX time
  belongs_to: PosixDate
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L17)

    Create a date from a POSIX time. Negative arguments will be changed to zero.

    ``` pony
    new ref create(
      seconds: I64 val = 0,
      nanoseconds: I64 val = 0)
    : PosixDate ref^
    ```

    #### Parameters

    - seconds: [I64](builtin-i64) val = 0
    - nanoseconds: [I64](builtin-i64) val = 0

    #### Returns

    - [PosixDate](index) ref^

    ## Public fields
- name: PosixDate.format()
  id: time-posixdate#format
  summary: Format the time as for strftime
  belongs_to: PosixDate
  description: "### format\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/posix_date/#L40)\n\nFormat the time as for strftime.\n\n``` pony\nfun box format(\n  fmt: String val)\n: String val ?\n```\n\n#### Parameters\n\n- fmt: [String](builtin-string) val\n\n#### Returns\n\n- [String](builtin-string) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-PosixDate](https://stdlib.ponylang.io/time-PosixDate)"
- name: PosixDate.normal()
  id: time-posixdate#normal
  summary: Normalise all the fields of the date
  belongs_to: PosixDate
  description: |-
    ### normal

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L31)

    Normalise all the fields of the date. For example, if the hour is 24, it is set to 0 and the day is advanced. This allows fields to be changed naively, eg. adding 1000 to hours to advance the time by 1000 hours, and then normalising the date.

    ``` pony
    fun ref normal()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: PosixDate.time()
  id: time-posixdate#time
  summary: Return a POSIX time
  belongs_to: PosixDate
  description: |-
    ### time

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L25)

    Return a POSIX time. Treats the date as UTC.

    ``` pony
    fun box time()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val
- name: PosixDate.var()
  id: time-posixdate#var-nsec-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var nsec: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L7)
- name: PosixDate.var()
  id: time-posixdate#var-sec-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var sec: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L8)
- name: PosixDate.var()
  id: time-posixdate#var-min-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var min: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L9)
- name: PosixDate.var()
  id: time-posixdate#var-hour-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var hour: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L10)
- name: PosixDate.var()
  id: time-posixdate#var-day_of_month-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var day_of_month: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L11)
- name: PosixDate.var()
  id: time-posixdate#var-month-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var month: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L12)
- name: PosixDate.var()
  id: time-posixdate#var-year-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var year: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L13)
- name: PosixDate.var()
  id: time-posixdate#var-day_of_week-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var day_of_week: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L14)
- name: PosixDate.var()
  id: time-posixdate#var-day_of_year-i32-val
  summary: null
  belongs_to: PosixDate
  description: |-
    ### var day_of_year: [I32](builtin-i32) val

    [\[Source\]](https://stdlib.ponylang.io/src/time/posix_date/#L15)

    ## Public Functions
- name: PrefixDefault
  id: format-prefixdefault
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PrefixDefault\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L3)\n\n``` pony\nprimitive val PrefixDefault is\n  PrefixSpec val\n```\n\n#### Implements\n\n- [PrefixSpec](format-prefixspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L3)\n\n``` pony\nnew val create()\n: PrefixDefault val^\n```\n\n#### Returns\n\n- [PrefixDefault](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)\n\n``` pony\nfun box eq(\n  that: PrefixDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)\n\n``` pony\nfun box ne(\n  that: PrefixDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixDefault](https://stdlib.ponylang.io/format-PrefixDefault)"
- name: PrefixDefault.create()
  id: format-prefixdefault#create
  summary: null
  belongs_to: PrefixDefault
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L3)

    ``` pony
    new val create()
    : PrefixDefault val^
    ```

    #### Returns

    - [PrefixDefault](index) val^

    ## Public Functions
- name: PrefixDefault.eq()
  id: format-prefixdefault#eq
  summary: null
  belongs_to: PrefixDefault
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)

    ``` pony
    fun box eq(
      that: PrefixDefault val)
    : Bool val
    ```

    #### Parameters

    - that: [PrefixDefault](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: PrefixDefault.ne()
  id: format-prefixdefault#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: PrefixDefault
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)\n\n``` pony\nfun box ne(\n  that: PrefixDefault val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixDefault](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixDefault](https://stdlib.ponylang.io/format-PrefixDefault)"
- name: PrefixNumber
  id: format-prefixnumber
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PrefixNumber\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L8)\n\n``` pony\ntype PrefixNumber is\n  (PrefixDefault val | PrefixSpace val | PrefixSign val)\n```\n\n#### Type Alias For\n\n- ([PrefixDefault](format-prefixdefault) val \\| [PrefixSpace](format-prefixspace) val \\| [PrefixSign](format-prefixsign) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixNumber](https://stdlib.ponylang.io/format-PrefixNumber)"
- name: PrefixSign
  id: format-prefixsign
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PrefixSign\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)\n\n``` pony\nprimitive val PrefixSign is\n  PrefixSpec val\n```\n\n#### Implements\n\n- [PrefixSpec](format-prefixspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)\n\n``` pony\nnew val create()\n: PrefixSign val^\n```\n\n#### Returns\n\n- [PrefixSign](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L8)\n\n``` pony\nfun box eq(\n  that: PrefixSign val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSign](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L8)\n\n``` pony\nfun box ne(\n  that: PrefixSign val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSign](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixSign](https://stdlib.ponylang.io/format-PrefixSign)"
- name: PrefixSign.create()
  id: format-prefixsign#create
  summary: null
  belongs_to: PrefixSign
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)

    ``` pony
    new val create()
    : PrefixSign val^
    ```

    #### Returns

    - [PrefixSign](index) val^

    ## Public Functions
- name: PrefixSign.eq()
  id: format-prefixsign#eq
  summary: null
  belongs_to: PrefixSign
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L8)

    ``` pony
    fun box eq(
      that: PrefixSign val)
    : Bool val
    ```

    #### Parameters

    - that: [PrefixSign](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: PrefixSign.ne()
  id: format-prefixsign#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: PrefixSign
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L8)\n\n``` pony\nfun box ne(\n  that: PrefixSign val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSign](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixSign](https://stdlib.ponylang.io/format-PrefixSign)"
- name: PrefixSpace
  id: format-prefixspace
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PrefixSpace\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)\n\n``` pony\nprimitive val PrefixSpace is\n  PrefixSpec val\n```\n\n#### Implements\n\n- [PrefixSpec](format-prefixspec) val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)\n\n``` pony\nnew val create()\n: PrefixSpace val^\n```\n\n#### Returns\n\n- [PrefixSpace](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)\n\n``` pony\nfun box eq(\n  that: PrefixSpace val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSpace](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)\n\n``` pony\nfun box ne(\n  that: PrefixSpace val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSpace](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixSpace](https://stdlib.ponylang.io/format-PrefixSpace)"
- name: PrefixSpace.create()
  id: format-prefixspace#create
  summary: null
  belongs_to: PrefixSpace
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L5)

    ``` pony
    new val create()
    : PrefixSpace val^
    ```

    #### Returns

    - [PrefixSpace](index) val^

    ## Public Functions
- name: PrefixSpace.eq()
  id: format-prefixspace#eq
  summary: null
  belongs_to: PrefixSpace
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)

    ``` pony
    fun box eq(
      that: PrefixSpace val)
    : Bool val
    ```

    #### Parameters

    - that: [PrefixSpace](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: PrefixSpace.ne()
  id: format-prefixspace#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: PrefixSpace
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L6)\n\n``` pony\nfun box ne(\n  that: PrefixSpace val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [PrefixSpace](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixSpace](https://stdlib.ponylang.io/format-PrefixSpace)"
- name: PrefixSpec
  id: format-prefixspec
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# PrefixSpec\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/format/prefix_spec/#L1)\n\n``` pony\ntrait val PrefixSpec\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/format-PrefixSpec](https://stdlib.ponylang.io/format-PrefixSpec)"
- name: ProcessError
  id: process-processerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ProcessError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L1)\n\n``` pony\nclass val ProcessError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L5)\n\n``` pony\nnew val create(\n  error_type': (ExecveError val | PipeError val | ForkError val | \n    WaitpidError val | WriteError val | KillError val | \n    CapError val | ChdirError val | UnknownError val),\n  message': (String val | None val) = reference)\n: ProcessError val^\n```\n\n#### Parameters\n\n- error_type': ([ExecveError](process-execveerror) val \\| [PipeError](process-pipeerror) val \\| [ForkError](process-forkerror) val \\| [WaitpidError](process-waitpiderror) val \\| [WriteError](process-writeerror) val \\| [KillError](process-killerror) val \\| [CapError](process-caperror) val \\| [ChdirError](process-chdirerror) val \\| [UnknownError](process-unknownerror) val)\n- message': ([String](builtin-string) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ProcessError](index) val^\n\n## Public fields\n\n### let error_type: ([ExecveError](process-execveerror) val \\| [PipeError](process-pipeerror) val \\| [ForkError](process-forkerror) val \\|\n\n``` pony\n[WaitpidError](process-WaitpidError.md) val | [WriteError](process-WriteError.md) val | [KillError](process-KillError.md) val | \n[CapError](process-CapError.md) val | [ChdirError](process-ChdirError.md) val | [UnknownError](process-UnknownError.md) val)\n```\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L2)\n\n### let message: ([String](builtin-string) val \\| [None](builtin-none) val)\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L3)\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L11)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessError](https://stdlib.ponylang.io/process-ProcessError)"
- name: ProcessError.create()
  id: process-processerror#create
  summary: null
  belongs_to: ProcessError
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L5)\n\n``` pony\nnew val create(\n  error_type': (ExecveError val | PipeError val | ForkError val | \n    WaitpidError val | WriteError val | KillError val | \n    CapError val | ChdirError val | UnknownError val),\n  message': (String val | None val) = reference)\n: ProcessError val^\n```\n\n#### Parameters\n\n- error_type': ([ExecveError](process-execveerror) val \\| [PipeError](process-pipeerror) val \\| [ForkError](process-forkerror) val \\| [WaitpidError](process-waitpiderror) val \\| [WriteError](process-writeerror) val \\| [KillError](process-killerror) val \\| [CapError](process-caperror) val \\| [ChdirError](process-chdirerror) val \\| [UnknownError](process-unknownerror) val)\n- message': ([String](builtin-string) val \\| [None](builtin-none) val) = reference\n\n#### Returns\n\n- [ProcessError](index) val^\n\n## Public fields"
- name: ProcessError.error_type
  id: process-processerror#let-error_type-execveerror-val-pipeerror-val-forkerror-val
  summary: null
  belongs_to: ProcessError
  description: "### let error_type: ([ExecveError](process-execveerror) val \\| [PipeError](process-pipeerror) val \\| [ForkError](process-forkerror) val \\|\n\n``` pony\n[WaitpidError](process-WaitpidError.md) val | [WriteError](process-WriteError.md) val | [KillError](process-KillError.md) val | \n[CapError](process-CapError.md) val | [ChdirError](process-ChdirError.md) val | [UnknownError](process-UnknownError.md) val)\n```\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L2)"
- name: ProcessError.message
  id: process-processerror#let-message-string-val-none-val
  summary: null
  belongs_to: ProcessError
  description: |-
    ### let message: ([String](builtin-string) val \| [None](builtin-none) val)

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L3)

    ## Public Functions
- name: ProcessError.string()
  id: process-processerror#string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ProcessError
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L11)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessError](https://stdlib.ponylang.io/process-ProcessError)"
- name: ProcessErrorType
  id: process-processerrortype
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ProcessErrorType\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L26)\n\n``` pony\ntype ProcessErrorType is\n  (ExecveError val | PipeError val | ForkError val | WaitpidError val | WriteError val | KillError val | CapError val | ChdirError val | UnknownError val)\n```\n\n#### Type Alias For\n\n- ([ExecveError](process-execveerror) val \\| [PipeError](process-pipeerror) val \\| [ForkError](process-forkerror) val \\| [WaitpidError](process-waitpiderror) val \\| [WriteError](process-writeerror) val \\| [KillError](process-killerror) val \\| [CapError](process-caperror) val \\| [ChdirError](process-chdirerror) val \\| [UnknownError](process-unknownerror) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessErrorType](https://stdlib.ponylang.io/process-ProcessErrorType)"
- name: ProcessExitStatus
  id: process-processexitstatus
  summary: Representing possible exit states of processes
  description: "# ProcessExitStatus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L135)\n\nRepresenting possible exit states of processes. A process either exited with an exit code or, only on posix systems, has been terminated by a signal.\n\n``` pony\ntype ProcessExitStatus is\n  (Exited val | Signaled val)\n```\n\n#### Type Alias For\n\n- ([Exited](process-exited) val \\| [Signaled](process-signaled) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessExitStatus](https://stdlib.ponylang.io/process-ProcessExitStatus)"
- name: ProcessMonitor
  id: process-processmonitor
  summary: Fork+execs / creates a child process and monitors it
  description: "# ProcessMonitor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L102)\n\nFork+execs / creates a child process and monitors it. Notifies a client about STDOUT / STDERR events.\n\n``` pony\nactor tag ProcessMonitor\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L128)\n\nCreate infrastructure to communicate with a forked child process and register the asio events. Fork child process and notify our user about incoming data via the notifier.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | StartProcessAuth val),\n  backpressure_auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val),\n  notifier: ProcessNotify iso,\n  filepath: FilePath val,\n  args: Array[String val] val,\n  vars: Array[String val] val,\n  wdir: (FilePath val | None val) = reference,\n  process_poll_interval: U64 val = call)\n: ProcessMonitor tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [StartProcessAuth](process-startprocessauth) val)\n- backpressure_auth: ([AmbientAuth](builtin-ambientauth) val \\| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)\n- notifier: [ProcessNotify](process-processnotify) iso\n- filepath: [FilePath](files-filepath) val\n- args: [Array](builtin-array)\\[[String](builtin-string) val\\] val\n- vars: [Array](builtin-array)\\[[String](builtin-string) val\\] val\n- wdir: ([FilePath](files-filepath) val \\| [None](builtin-none) val) = reference\n- process_poll_interval: [U64](builtin-u64) val = call\n\n#### Returns\n\n- [ProcessMonitor](index) tag^\n\n## Public Behaviours\n\n### print\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L243)\n\nPrint some bytes and append a newline.\n\n``` pony\nbe print(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L252)\n\nWrite to STDIN of the child process.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### printv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L260)\n\nPrint an iterable collection of ByteSeqs.\n\n``` pony\nbe printv(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L269)\n\nWrite an iterable collection of ByteSeqs.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### done_writing\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L277)\n\nSet the \\_done_writing flag to true. If \\_pending is empty we can close the \\_stdin pipe.\n\n``` pony\nbe done_writing()\n```\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L288)\n\nTerminate child and close down everything.\n\n``` pony\nbe dispose()\n```\n\n### timer_notify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L336)\n\nWindows IO polling timer has fired\n\n``` pony\nbe timer_notify()\n```\n\n## Public Functions\n\n### expect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L296)\n\nA `stdout` call on the notifier must contain exactly `qty` bytes. If `qty` is zero, the call can contain any amount of data.\n\n``` pony\nfun ref expect(\n  qty: USize val = 0)\n: None val\n```\n\n#### Parameters\n\n- qty: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessMonitor](https://stdlib.ponylang.io/process-ProcessMonitor)"
- name: ProcessMonitor.create()
  id: process-processmonitor#create
  summary: Create infrastructure to communicate with a forked child process and register the asio events
  belongs_to: ProcessMonitor
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L128)

    Create infrastructure to communicate with a forked child process and register the asio events. Fork child process and notify our user about incoming data via the notifier.

    ``` pony
    new tag create(
      auth: (AmbientAuth val | StartProcessAuth val),
      backpressure_auth: (AmbientAuth val | ApplyReleaseBackpressureAuth val),
      notifier: ProcessNotify iso,
      filepath: FilePath val,
      args: Array[String val] val,
      vars: Array[String val] val,
      wdir: (FilePath val | None val) = reference,
      process_poll_interval: U64 val = call)
    : ProcessMonitor tag^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [StartProcessAuth](process-startprocessauth) val)
    - backpressure_auth: ([AmbientAuth](builtin-ambientauth) val \| [ApplyReleaseBackpressureAuth](backpressure-applyreleasebackpressureauth) val)
    - notifier: [ProcessNotify](process-processnotify) iso
    - filepath: [FilePath](files-filepath) val
    - args: [Array](builtin-array)\[[String](builtin-string) val\] val
    - vars: [Array](builtin-array)\[[String](builtin-string) val\] val
    - wdir: ([FilePath](files-filepath) val \| [None](builtin-none) val) = reference
    - process_poll_interval: [U64](builtin-u64) val = call

    #### Returns

    - [ProcessMonitor](index) tag^

    ## Public Behaviours
- name: ProcessMonitor.dispose()
  id: process-processmonitor#dispose
  summary: Terminate child and close down everything
  belongs_to: ProcessMonitor
  description: |-
    ### dispose

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L288)

    Terminate child and close down everything.

    ``` pony
    be dispose()
    ```
- name: ProcessMonitor.done_writing()
  id: process-processmonitor#done_writing
  summary: Set the _done_writing flag to true
  belongs_to: ProcessMonitor
  description: |-
    ### done_writing

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L277)

    Set the \_done_writing flag to true. If \_pending is empty we can close the \_stdin pipe.

    ``` pony
    be done_writing()
    ```
- name: ProcessMonitor.expect()
  id: process-processmonitor#expect
  summary: A stdout call on the notifier must contain exactly qty bytes
  belongs_to: ProcessMonitor
  description: "### expect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L296)\n\nA `stdout` call on the notifier must contain exactly `qty` bytes. If `qty` is zero, the call can contain any amount of data.\n\n``` pony\nfun ref expect(\n  qty: USize val = 0)\n: None val\n```\n\n#### Parameters\n\n- qty: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessMonitor](https://stdlib.ponylang.io/process-ProcessMonitor)"
- name: ProcessMonitor.print()
  id: process-processmonitor#print
  summary: Print some bytes and append a newline
  belongs_to: ProcessMonitor
  description: |-
    ### print

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L243)

    Print some bytes and append a newline.

    ``` pony
    be print(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)
- name: ProcessMonitor.printv()
  id: process-processmonitor#printv
  summary: Print an iterable collection of ByteSeqs
  belongs_to: ProcessMonitor
  description: |-
    ### printv

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L260)

    Print an iterable collection of ByteSeqs.

    ``` pony
    be printv(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: ProcessMonitor.timer_notify()
  id: process-processmonitor#timer_notify
  summary: null
  belongs_to: ProcessMonitor
  description: |-
    ### timer_notify

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L336)

    Windows IO polling timer has fired

    ``` pony
    be timer_notify()
    ```

    ## Public Functions
- name: ProcessMonitor.write()
  id: process-processmonitor#write
  summary: Write to STDIN of the child process
  belongs_to: ProcessMonitor
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L252)

    Write to STDIN of the child process.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: ProcessMonitor.writev()
  id: process-processmonitor#writev
  summary: Write an iterable collection of ByteSeqs
  belongs_to: ProcessMonitor
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_monitor/#L269)

    Write an iterable collection of ByteSeqs.

    ``` pony
    be writev(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: ProcessMonitorAuth
  id: process-processmonitorauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# ProcessMonitorAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_monitor/#L100)\n\n``` pony\ntype ProcessMonitorAuth is\n  (AmbientAuth val | StartProcessAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [StartProcessAuth](process-startprocessauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessMonitorAuth](https://stdlib.ponylang.io/process-ProcessMonitorAuth)"
- name: ProcessNotify
  id: process-processnotify
  summary: Notifications for Process connections
  description: "# ProcessNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L1)\n\nNotifications for Process connections.\n\n``` pony\ninterface ref ProcessNotify\n```\n\n## Public Functions\n\n### created\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L6)\n\nProcessMonitor calls this when it is created.\n\n``` pony\nfun ref created(\n  process: ProcessMonitor ref)\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### stdout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L11)\n\nProcessMonitor calls this when new data is received on STDOUT of the forked process\n\n``` pony\nfun ref stdout(\n  process: ProcessMonitor ref,\n  data: Array[U8 val] iso)\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n\n#### Returns\n\n- [None](builtin-none) val\n\n### stderr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L17)\n\nProcessMonitor calls this when new data is received on STDERR of the forked process\n\n``` pony\nfun ref stderr(\n  process: ProcessMonitor ref,\n  data: Array[U8 val] iso)\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n\n#### Returns\n\n- [None](builtin-none) val\n\n### failed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L23)\n\nProcessMonitor calls this if we run into errors communicating with the forked process.\n\n``` pony\nfun ref failed(\n  process: ProcessMonitor ref,\n  err: ProcessError val)\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- err: [ProcessError](process-processerror) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### expect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L29)\n\nCalled when the process monitor has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing.\n\n``` pony\nfun ref expect(\n  process: ProcessMonitor ref,\n  qty: USize val)\n: USize val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- qty: [USize](builtin-usize) val\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L37)\n\nCall when ProcessMonitor terminates to cleanup ProcessNotify. We return the exit status of the child process, it can be either an instance of [Exited](process-exited) if the process finished. The childs exit code can be retrieved using [Exited.exit_code()](process-exited#exit_code).\n\nOn Posix systems, if the process has been killed by a signal (e.g. through the `kill` command), `child_exit_status` will be an instance of [Signaled](process-signaled) with the signal number that terminated the process available via [Signaled.signal()](process-signaled#signal).\n\n``` pony\nfun ref dispose(\n  process: ProcessMonitor ref,\n  child_exit_status: (Exited val | Signaled val))\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- child_exit_status: ([Exited](process-exited) val \\| [Signaled](process-signaled) val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessNotify](https://stdlib.ponylang.io/process-ProcessNotify)"
- name: ProcessNotify.created()
  id: process-processnotify#created
  summary: ProcessMonitor calls this when it is created
  belongs_to: ProcessNotify
  description: |-
    ### created

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_notify/#L6)

    ProcessMonitor calls this when it is created.

    ``` pony
    fun ref created(
      process: ProcessMonitor ref)
    : None val
    ```

    #### Parameters

    - process: [ProcessMonitor](process-processmonitor) ref

    #### Returns

    - [None](builtin-none) val
- name: ProcessNotify.dispose()
  id: process-processnotify#dispose
  summary: Call when ProcessMonitor terminates to cleanup ProcessNotify
  belongs_to: ProcessNotify
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_notify/#L37)\n\nCall when ProcessMonitor terminates to cleanup ProcessNotify. We return the exit status of the child process, it can be either an instance of [Exited](process-exited) if the process finished. The childs exit code can be retrieved using [Exited.exit_code()](process-exited#exit_code).\n\nOn Posix systems, if the process has been killed by a signal (e.g. through the `kill` command), `child_exit_status` will be an instance of [Signaled](process-signaled) with the signal number that terminated the process available via [Signaled.signal()](process-signaled#signal).\n\n``` pony\nfun ref dispose(\n  process: ProcessMonitor ref,\n  child_exit_status: (Exited val | Signaled val))\n: None val\n```\n\n#### Parameters\n\n- process: [ProcessMonitor](process-processmonitor) ref\n- child_exit_status: ([Exited](process-exited) val \\| [Signaled](process-signaled) val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-ProcessNotify](https://stdlib.ponylang.io/process-ProcessNotify)"
- name: ProcessNotify.expect()
  id: process-processnotify#expect
  summary: Called when the process monitor has been told to expect a certain quantity of bytes
  belongs_to: ProcessNotify
  description: |-
    ### expect

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_notify/#L29)

    Called when the process monitor has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing.

    ``` pony
    fun ref expect(
      process: ProcessMonitor ref,
      qty: USize val)
    : USize val
    ```

    #### Parameters

    - process: [ProcessMonitor](process-processmonitor) ref
    - qty: [USize](builtin-usize) val

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ProcessNotify.failed()
  id: process-processnotify#failed
  summary: ProcessMonitor calls this if we run into errors communicating with the forked process
  belongs_to: ProcessNotify
  description: |-
    ### failed

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_notify/#L23)

    ProcessMonitor calls this if we run into errors communicating with the forked process.

    ``` pony
    fun ref failed(
      process: ProcessMonitor ref,
      err: ProcessError val)
    : None val
    ```

    #### Parameters

    - process: [ProcessMonitor](process-processmonitor) ref
    - err: [ProcessError](process-processerror) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ProcessNotify.stderr()
  id: process-processnotify#stderr
  summary: null
  belongs_to: ProcessNotify
  description: |-
    ### stderr

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_notify/#L17)

    ProcessMonitor calls this when new data is received on STDERR of the forked process

    ``` pony
    fun ref stderr(
      process: ProcessMonitor ref,
      data: Array[U8 val] iso)
    : None val
    ```

    #### Parameters

    - process: [ProcessMonitor](process-processmonitor) ref
    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ProcessNotify.stdout()
  id: process-processnotify#stdout
  summary: null
  belongs_to: ProcessNotify
  description: |-
    ### stdout

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_notify/#L11)

    ProcessMonitor calls this when new data is received on STDOUT of the forked process

    ``` pony
    fun ref stdout(
      process: ProcessMonitor ref,
      data: Array[U8 val] iso)
    : None val
    ```

    #### Parameters

    - process: [ProcessMonitor](process-processmonitor) ref
    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Promise
  id: promises-promise
  summary: A promise to eventually produce a result of type A
  description: "# Promise\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L94)\n\nA promise to eventually produce a result of type A. This promise can either be fulfilled or rejected.\n\nAny number of promises can be chained after this one.\n\n``` pony\nactor tag Promise[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L94)\n\n``` pony\nnew tag create()\n: Promise[A] tag^\n```\n\n#### Returns\n\n- [Promise](index)\\[A\\] tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L104)\n\nFulfill the promise.\n\n``` pony\nbe apply(\n  value: A)\n```\n\n#### Parameters\n\n- value: A\n\n### reject\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L120)\n\nReject the promise.\n\n``` pony\nbe reject()\n```\n\n## Public Functions\n\n### next\\[B: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L136)\n\nChain a promise after this one.\n\nWhen this promise is fulfilled, the result of type A is passed to the fulfill function, generating in an intermediate result of type B. This is then used to fulfill the next promise in the chain.\n\nIf there is no fulfill function, or if the fulfill function raises an error, then the next promise in the chain will be rejected.\n\nIf this promise is rejected, this step's reject function is called with no input, generating an intermediate result of type B which is used to fulfill the next promise in the chain.\n\nIf there is no reject function, of if the reject function raises an error, then the next promise in the chain will be rejected.\n\n``` pony\nfun tag next[B: Any #share](\n  fulfill: Fulfill[A, B] iso,\n  rejected: Reject[B] iso = qualify)\n: Promise[B] tag\n```\n\n#### Parameters\n\n- fulfill: [Fulfill](promises-fulfill)\\[A, B\\] iso\n- rejected: [Reject](promises-reject)\\[B\\] iso = qualify\n\n#### Returns\n\n- [Promise](index)\\[B\\] tag\n\n### add\\[optional B: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L163)\n\nAdd two promises into one promise that returns the result of both when they are fulfilled. If either of the promises is rejected then the new promise is also rejected.\n\n``` pony\nfun tag add[optional B: Any #share](\n  p: Promise[B] tag)\n: Promise[(A , B)] tag\n```\n\n#### Parameters\n\n- p: [Promise](index)\\[B\\] tag\n\n#### Returns\n\n- [Promise](index)\\[(A , B)\\] tag\n\n### join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L199)\n\nCreate a promise that is fulfilled when the receiver and all promises in the given iterator are fulfilled. If the receiver or any promise in the sequence is rejected then the new promise is also rejected.\n\nJoin `p1` and `p2` with an existing promise, `p3`.\n\n``` pony\nuse \"promises\"\n\nactor Main\n  new create(env: Env) =>\n\n    let p1 = Promise[String val]\n    let p2 = Promise[String val]\n    let p3 = Promise[String val]\n\n    p3.join([p1; p2].values())\n      .next[None]({(a: Array[String val] val) =>\n        for s in a.values() do\n          env.out.print(s)\n        end\n      })\n\n    p2(\"second\")\n    p3(\"third\")\n    p1(\"first\")\n```\n\n``` pony\nfun tag join(\n  ps: Iterator[Promise[A] tag] ref)\n: Promise[Array[A] val] tag\n```\n\n#### Parameters\n\n- ps: [Iterator](builtin-iterator)\\[[Promise](index)\\[A\\] tag\\] ref\n\n#### Returns\n\n- [Promise](index)\\[[Array](builtin-array)\\[A\\] val\\] tag\n\n### select\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L233)\n\nReturn a promise that is fulfilled when either promise is fulfilled, resulting in a tuple of its value and the other promise.\n\n``` pony\nfun tag select(\n  p: Promise[A] tag)\n: Promise[(A , Promise[A] tag)] tag\n```\n\n#### Parameters\n\n- p: [Promise](index)\\[A\\] tag\n\n#### Returns\n\n- [Promise](index)\\[(A , [Promise](index)\\[A\\] tag)\\] tag\n\n### timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L257)\n\nReject the promise after the given expiration in nanoseconds.\n\n``` pony\nfun tag timeout(\n  expiration: U64 val)\n: None val\n```\n\n#### Parameters\n\n- expiration: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Promise](https://stdlib.ponylang.io/promises-Promise)"
- name: Promise.add()
  id: promises-promise#addoptional-b-any-share
  summary: Add two promises into one promise that returns the result of both when they are fulfilled
  belongs_to: Promise
  description: |-
    ### add\[optional B: [Any](builtin-any) \#share\]

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L163)

    Add two promises into one promise that returns the result of both when they are fulfilled. If either of the promises is rejected then the new promise is also rejected.

    ``` pony
    fun tag add[optional B: Any #share](
      p: Promise[B] tag)
    : Promise[(A , B)] tag
    ```

    #### Parameters

    - p: [Promise](index)\[B\] tag

    #### Returns

    - [Promise](index)\[(A , B)\] tag

    &nbsp;
- name: Promise.apply()
  id: promises-promise#apply
  summary: Fulfill the promise
  belongs_to: Promise
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L104)

    Fulfill the promise.

    ``` pony
    be apply(
      value: A)
    ```

    #### Parameters

    - value: A
- name: Promise.create()
  id: promises-promise#create
  summary: null
  belongs_to: Promise
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L94)

    ``` pony
    new tag create()
    : Promise[A] tag^
    ```

    #### Returns

    - [Promise](index)\[A\] tag^

    ## Public Behaviours
- name: Promise.join()
  id: promises-promise#join
  summary: Create a promise that is fulfilled when the receiver and all promises in the given iterator are fulfilled
  belongs_to: Promise
  description: |-
    ### join

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L199)

    Create a promise that is fulfilled when the receiver and all promises in the given iterator are fulfilled. If the receiver or any promise in the sequence is rejected then the new promise is also rejected.

    Join `p1` and `p2` with an existing promise, `p3`.

    ``` pony
    use "promises"

    actor Main
      new create(env: Env) =>

        let p1 = Promise[String val]
        let p2 = Promise[String val]
        let p3 = Promise[String val]

        p3.join([p1; p2].values())
          .next[None]({(a: Array[String val] val) =>
            for s in a.values() do
              env.out.print(s)
            end
          })

        p2("second")
        p3("third")
        p1("first")
    ```

    ``` pony
    fun tag join(
      ps: Iterator[Promise[A] tag] ref)
    : Promise[Array[A] val] tag
    ```

    #### Parameters

    - ps: [Iterator](builtin-iterator)\[[Promise](index)\[A\] tag\] ref

    #### Returns

    - [Promise](index)\[[Array](builtin-array)\[A\] val\] tag

    &nbsp;
- name: Promise.next()
  id: promises-promise#nextb-any-share
  summary: Chain a promise after this one
  belongs_to: Promise
  description: |-
    ### next\[B: [Any](builtin-any) \#share\]

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L136)

    Chain a promise after this one.

    When this promise is fulfilled, the result of type A is passed to the fulfill function, generating in an intermediate result of type B. This is then used to fulfill the next promise in the chain.

    If there is no fulfill function, or if the fulfill function raises an error, then the next promise in the chain will be rejected.

    If this promise is rejected, this step's reject function is called with no input, generating an intermediate result of type B which is used to fulfill the next promise in the chain.

    If there is no reject function, of if the reject function raises an error, then the next promise in the chain will be rejected.

    ``` pony
    fun tag next[B: Any #share](
      fulfill: Fulfill[A, B] iso,
      rejected: Reject[B] iso = qualify)
    : Promise[B] tag
    ```

    #### Parameters

    - fulfill: [Fulfill](promises-fulfill)\[A, B\] iso
    - rejected: [Reject](promises-reject)\[B\] iso = qualify

    #### Returns

    - [Promise](index)\[B\] tag

    &nbsp;
- name: Promise.reject()
  id: promises-promise#reject
  summary: Reject the promise
  belongs_to: Promise
  description: |-
    ### reject

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L120)

    Reject the promise.

    ``` pony
    be reject()
    ```

    ## Public Functions
- name: Promise.select()
  id: promises-promise#select
  summary: Return a promise that is fulfilled when either promise is fulfilled, resulting in a tuple of its value and the other promise
  belongs_to: Promise
  description: |-
    ### select

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L233)

    Return a promise that is fulfilled when either promise is fulfilled, resulting in a tuple of its value and the other promise.

    ``` pony
    fun tag select(
      p: Promise[A] tag)
    : Promise[(A , Promise[A] tag)] tag
    ```

    #### Parameters

    - p: [Promise](index)\[A\] tag

    #### Returns

    - [Promise](index)\[(A , [Promise](index)\[A\] tag)\] tag

    &nbsp;
- name: Promise.timeout()
  id: promises-promise#timeout
  summary: Reject the promise after the given expiration in nanoseconds
  belongs_to: Promise
  description: "### timeout\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L257)\n\nReject the promise after the given expiration in nanoseconds.\n\n``` pony\nfun tag timeout(\n  expiration: U64 val)\n: None val\n```\n\n#### Parameters\n\n- expiration: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Promise](https://stdlib.ponylang.io/promises-Promise)"
- name: Promises
  id: promises-promises
  summary: Create a promise that is fulfilled when all promises in the given sequence are fulfilled
  description: "# Promises\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L284)\n\n``` pony\nprimitive val Promises[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L284)\n\n``` pony\nnew val create()\n: Promises[A] val^\n```\n\n#### Returns\n\n- [Promises](index)\\[A\\] val^\n\n## Public Functions\n\n### join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L285)\n\nCreate a promise that is fulfilled when all promises in the given sequence are fulfilled. If any promise in the sequence is rejected then the new promise is also rejected. The order that values appear in the final array is based on when each promise is fulfilled and not the order that they are given.\n\nJoin three existing promises to make a fourth.\n\n``` pony\nuse \"promises\"\n\nactor Main\n  new create(env: Env) =>\n\n    let p1 = Promise[String val]\n    let p2 = Promise[String val]\n    let p3 = Promise[String val]\n\n    Promises[String val].join([p1; p2; p3].values())\n      .next[None]({(a: Array[String val] val) =>\n        for s in a.values() do\n          env.out.print(s)\n        end\n      })\n\n    p2(\"second\")\n    p3(\"third\")\n    p1(\"first\")\n```\n\n``` pony\nfun box join(\n  ps: Iterator[Promise[A] tag] ref)\n: Promise[Array[A] val] tag\n```\n\n#### Parameters\n\n- ps: [Iterator](builtin-iterator)\\[[Promise](promises-promise)\\[A\\] tag\\] ref\n\n#### Returns\n\n- [Promise](promises-promise)\\[[Array](builtin-array)\\[A\\] val\\] tag\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L285)\n\n``` pony\nfun box eq(\n  that: Promises[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Promises](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L285)\n\n``` pony\nfun box ne(\n  that: Promises[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Promises](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Promises](https://stdlib.ponylang.io/promises-Promises)"
- name: Promises.create()
  id: promises-promises#create
  summary: null
  belongs_to: Promises
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L284)

    ``` pony
    new val create()
    : Promises[A] val^
    ```

    #### Returns

    - [Promises](index)\[A\] val^

    ## Public Functions
- name: Promises.eq()
  id: promises-promises#eq
  summary: null
  belongs_to: Promises
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L285)

    ``` pony
    fun box eq(
      that: Promises[A] val)
    : Bool val
    ```

    #### Parameters

    - that: [Promises](index)\[A\] val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Promises.join()
  id: promises-promises#join
  summary: Create a promise that is fulfilled when all promises in the given sequence are fulfilled
  belongs_to: Promises
  description: |-
    ### join

    [\[Source\]](https://stdlib.ponylang.io/src/promises/promise/#L285)

    Create a promise that is fulfilled when all promises in the given sequence are fulfilled. If any promise in the sequence is rejected then the new promise is also rejected. The order that values appear in the final array is based on when each promise is fulfilled and not the order that they are given.

    Join three existing promises to make a fourth.

    ``` pony
    use "promises"

    actor Main
      new create(env: Env) =>

        let p1 = Promise[String val]
        let p2 = Promise[String val]
        let p3 = Promise[String val]

        Promises[String val].join([p1; p2; p3].values())
          .next[None]({(a: Array[String val] val) =>
            for s in a.values() do
              env.out.print(s)
            end
          })

        p2("second")
        p3("third")
        p1("first")
    ```

    ``` pony
    fun box join(
      ps: Iterator[Promise[A] tag] ref)
    : Promise[Array[A] val] tag
    ```

    #### Parameters

    - ps: [Iterator](builtin-iterator)\[[Promise](promises-promise)\[A\] tag\] ref

    #### Returns

    - [Promise](promises-promise)\[[Array](builtin-array)\[A\] val\] tag
- name: Promises.ne()
  id: promises-promises#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Promises
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/promise/#L285)\n\n``` pony\nfun box ne(\n  that: Promises[A] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Promises](index)\\[A\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Promises](https://stdlib.ponylang.io/promises-Promises)"
- name: Proxy
  id: net-proxy
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Proxy\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L2)\n\n``` pony\ninterface ref Proxy\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L3)\n\n``` pony\nfun box apply(\n  wrap: TCPConnectionNotify iso)\n: TCPConnectionNotify iso^\n```\n\n#### Parameters\n\n- wrap: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-Proxy](https://stdlib.ponylang.io/net-Proxy)"
- name: Proxy.apply()
  id: net-proxy#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Proxy
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/proxy/#L3)\n\n``` pony\nfun box apply(\n  wrap: TCPConnectionNotify iso)\n: TCPConnectionNotify iso^\n```\n\n#### Parameters\n\n- wrap: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-Proxy](https://stdlib.ponylang.io/net-Proxy)"
- name: Rand
  id: random-rand
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Rand\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L19)\n\n``` pony\ntype Rand is\n  XorOshiro128Plus ref\n```\n\n#### Type Alias For\n\n- [XorOshiro128Plus](random-xoroshiro128plus) ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-Rand](https://stdlib.ponylang.io/random-Rand)"
- name: Random
  id: random-random
  summary: The Random trait should be implemented by all random number generators
  description: "# Random\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L21)\n\nThe `Random` trait should be implemented by all random number generators. The only method you need to implement is `fun ref next(): 64`. Once that method has been implemented, the `Random` trait provides default implementations of conversions to other number types.\n\n``` pony\ntrait ref Random\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L28)\n\nCreate with the specified seed. Returned values are deterministic for a given seed.\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: Random ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [Random](index) ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L34)\n\nIf used as an iterator, this always has another value.\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L40)\n\nA random integer in \\[0, 2^64)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L45)\n\nA random integer in \\[0, 2^8)\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L51)\n\nA random integer in \\[0, 2^16)\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L57)\n\nA random integer in \\[0, 2^32)\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L63)\n\nA random integer in \\[0, 2^64)\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L69)\n\nA random integer in \\[0, 2^128)\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L75)\n\nA random integer in \\[0, ULong.max_value()\\]\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L85)\n\nA random integer in \\[0, USize.max_value()\\]\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L95)\n\nA random integer in \\[-2^7, 2^7)\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L101)\n\nA random integer in \\[-2^15, 2^15)\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L107)\n\nA random integer in \\[-2^31, 2^31)\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L113)\n\nA random integer in \\[-2^63, 2^63)\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L119)\n\nA random integer in \\[-2^127, 2^127)\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L125)\n\nA random integer in \\[ILong.min_value(), ILong.max_value()\\]\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L131)\n\nA random integer in \\[ISize.min_value(), ISize.max_value()\\]\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L137)\n\nA random integer in \\[0, n)\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L143)\n\nA random integer in \\[0, n)\n\nUses fixed-point inversion if platform supports native 128 bit operations otherwise uses floating-point multiplication.\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L159)\n\nA random integer in \\[0, n)\n\nNot biased with small values of `n` like `int`.\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L195)\n\nA random number in \\[0, 1)\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L201)\n\nShuffle the elements of the array into a random order, mutating the array.\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-Random](https://stdlib.ponylang.io/random-Random)"
- name: Random.create()
  id: random-random#create
  summary: Create with the specified seed
  belongs_to: Random
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L28)

    Create with the specified seed. Returned values are deterministic for a given seed.

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : Random ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [Random](index) ref^

    ## Public Functions
- name: Random.has_next()
  id: random-random#has_next
  summary: If used as an iterator, this always has another value
  belongs_to: Random
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L34)

    If used as an iterator, this always has another value.

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: Random.i128()
  id: random-random#i128
  summary: null
  belongs_to: Random
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L119)

    A random integer in \[-2^127, 2^127)

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: Random.i16()
  id: random-random#i16
  summary: null
  belongs_to: Random
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L101)

    A random integer in \[-2^15, 2^15)

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: Random.i32()
  id: random-random#i32
  summary: null
  belongs_to: Random
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L107)

    A random integer in \[-2^31, 2^31)

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: Random.i64()
  id: random-random#i64
  summary: null
  belongs_to: Random
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L113)

    A random integer in \[-2^63, 2^63)

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Random.i8()
  id: random-random#i8
  summary: null
  belongs_to: Random
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L95)

    A random integer in \[-2^7, 2^7)

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: Random.ilong()
  id: random-random#ilong
  summary: null
  belongs_to: Random
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L125)

    A random integer in \[ILong.min_value(), ILong.max_value()\]

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: Random.int()
  id: random-random#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: Uses fixed-point inversion if platform supports native 128 bit operations otherwise uses floating-point multiplication
  belongs_to: Random
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L143)\n\nA random integer in \\[0, n)\n\nUses fixed-point inversion if platform supports native 128 bit operations otherwise uses floating-point multiplication.\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: Random.int_fp_mult()
  id: random-random#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: Random
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L137)\n\nA random integer in \\[0, n)\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: Random.int_unbiased()
  id: random-random#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: Not biased with small values of n like int
  belongs_to: Random
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L159)\n\nA random integer in \\[0, n)\n\nNot biased with small values of `n` like `int`.\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: Random.isize()
  id: random-random#isize
  summary: null
  belongs_to: Random
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L131)

    A random integer in \[ISize.min_value(), ISize.max_value()\]

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: Random.next()
  id: random-random#next
  summary: null
  belongs_to: Random
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L40)

    A random integer in \[0, 2^64)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Random.real()
  id: random-random#real
  summary: null
  belongs_to: Random
  description: |-
    ### real

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L195)

    A random number in \[0, 1)

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Random.shuffle()
  id: random-random#shufflea-a
  summary: Shuffle the elements of the array into a random order, mutating the array
  belongs_to: Random
  description: "### shuffle\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/random/#L201)\n\nShuffle the elements of the array into a random order, mutating the array.\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-Random](https://stdlib.ponylang.io/random-Random)"
- name: Random.u128()
  id: random-random#u128
  summary: null
  belongs_to: Random
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L69)

    A random integer in \[0, 2^128)

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: Random.u16()
  id: random-random#u16
  summary: null
  belongs_to: Random
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L51)

    A random integer in \[0, 2^16)

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: Random.u32()
  id: random-random#u32
  summary: null
  belongs_to: Random
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L57)

    A random integer in \[0, 2^32)

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Random.u64()
  id: random-random#u64
  summary: null
  belongs_to: Random
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L63)

    A random integer in \[0, 2^64)

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Random.u8()
  id: random-random#u8
  summary: null
  belongs_to: Random
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L45)

    A random integer in \[0, 2^8)

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: Random.ulong()
  id: random-random#ulong
  summary: null
  belongs_to: Random
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L75)

    A random integer in \[0, ULong.max_value()\]

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: Random.usize()
  id: random-random#usize
  summary: null
  belongs_to: Random
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/random/random/#L85)

    A random integer in \[0, USize.max_value()\]

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Range
  id: collections-range
  summary: Produces [min, max) with a step of inc for any Number type
  description: "# Range\\[optional A: ([Real](builtin-real)\\[A\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L1)\n\nProduces `[min, max)` with a step of `inc` for any `Number` type.\n\n``` pony\n// iterating with for-loop\nfor i in Range(0, 10) do\n  env.out.print(i.string())\nend\n\n// iterating over Range of U8 with while-loop\nlet range = Range[U8](5, 100, 5)\nwhile range.has_next() do\n  try\n    handle_u8(range.next()?)\n  end\nend\n```\n\nSupports `min` being smaller than `max` with negative `inc` but only for signed integer types and floats:\n\n``` pony\nvar previous = 11\nfor left in Range[I64](10, -5, -1) do\n  if not (left < previous) then\n    error\n  end\n  previous = left\nend\n```\n\nIf the `step` is not moving `min` towards `max` or if it is `0`, the Range is considered infinite and iterating over it will never terminate:\n\n``` pony\nlet infinite_range1 = Range(0, 1, 0)\ninfinite_range1.is_infinite() == true\n\nlet infinite_range2 = Range[I8](0, 10, -1)\nfor _ in infinite_range2 do\n  env.out.print(\"will this ever end?\")\n  env.err.print(\"no, never!\")\nend\n```\n\nWhen using `Range` with floating point types (`F32` and `F64`) `inc` steps \\< 1.0 are possible. If any of the arguments contains `NaN`, `+Inf` or `-Inf` the range is considered infinite as operations on any of them won't move `min` towards `max`. The actual values produced by such a `Range` are determined by what IEEE 754 defines as the result of `min` + `inc`:\n\n``` pony\nfor and_a_half in Range[F64](0.5, 100) do\n  handle_half(and_a_half)\nend\n\n// this Range will produce 0 at first, then infinitely NaN\nlet nan: F64 = F64(0) / F64(0)\nfor what_am_i in Range[F64](0, 1000, nan) do\n  wild_guess(what_am_i)\nend\n```\n\n``` pony\nclass ref Range[optional A: (Real[A] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))] is\n  Iterator[A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L75)\n\n``` pony\nnew ref create(\n  min: A,\n  max: A,\n  inc: A = 1)\n: Range[A] ref^\n```\n\n#### Parameters\n\n- min: A\n- max: A\n- inc: A = 1\n\n#### Returns\n\n- [Range](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L95)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L102)\n\n``` pony\nfun ref next()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n### rewind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L109)\n\n``` pony\nfun ref rewind()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### is_infinite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L112)\n\n``` pony\nfun box is_infinite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Range](https://stdlib.ponylang.io/collections-Range)"
- name: Range.create()
  id: collections-range#create
  summary: null
  belongs_to: Range
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/range/#L75)

    ``` pony
    new ref create(
      min: A,
      max: A,
      inc: A = 1)
    : Range[A] ref^
    ```

    #### Parameters

    - min: A
    - max: A
    - inc: A = 1

    #### Returns

    - [Range](index)\[A\] ref^

    ## Public Functions
- name: Range.has_next()
  id: collections-range#has_next
  summary: null
  belongs_to: Range
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/range/#L95)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: Range.is_infinite()
  id: collections-range#is_infinite
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Range
  description: "### is_infinite\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/range/#L112)\n\n``` pony\nfun box is_infinite()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Range](https://stdlib.ponylang.io/collections-Range)"
- name: Range.next()
  id: collections-range#next
  summary: null
  belongs_to: Range
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/range/#L102)

    ``` pony
    fun ref next()
    : A ?
    ```

    #### Returns

    - A ?

    &nbsp;
- name: Range.rewind()
  id: collections-range#rewind
  summary: null
  belongs_to: Range
  description: |-
    ### rewind

    [\[Source\]](https://stdlib.ponylang.io/src/collections/range/#L109)

    ``` pony
    fun ref rewind()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ReadElement
  id: builtin-readelement
  summary: Used to show that a ReadSeq can return an element of a specific unmodified type
  description: "# ReadElement\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L22)\n\nUsed to show that a ReadSeq can return an element of a specific unmodified type.\n\n``` pony\ninterface box ReadElement[A: A]\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L27)\n\n``` pony\nfun box apply(\n  i: USize val)\n: A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ReadElement](https://stdlib.ponylang.io/builtin-ReadElement)"
- name: ReadElement.apply()
  id: builtin-readelement#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ReadElement
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L27)\n\n``` pony\nfun box apply(\n  i: USize val)\n: A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ReadElement](https://stdlib.ponylang.io/builtin-ReadElement)"
- name: Reader
  id: buffered-reader
  summary: Store network data and provide a parsing interface
  description: "# Reader\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L3)\n\nStore network data and provide a parsing interface.\n\n`Reader` provides a way to extract typed data from a sequence of bytes. The `Reader` manages the underlying data structures to provide a read cursor over a contiguous sequence of bytes. It is useful for decoding data that is received over a network or stored in a file. Chunk of bytes are added to the `Reader` using the `append` method, and typed data is extracted using the getter methods.\n\nFor example, suppose we have a UDP-based network data protocol where messages consist of the following:\n\n- `list_size` - the number of items in the following list of items as a big-endian 32-bit integer\n- zero or more items of the following data:\n- a big-endian 64-bit floating point number\n- a string that starts with a big-endian 32-bit integer that specifies the length of the string, followed by a number of bytes that represent the string\n\nA message would be something like this:\n\n``` pony\n[message_length][list_size][float1][string1][float2][string2]...\n```\n\nThe following program uses a `Reader` to decode a message of this type and print them:\n\n``` pony\nuse \"buffered\"\nuse \"collections\"\n\nclass Notify is InputNotify\n  let _env: Env\n  new create(env: Env) =>\n    _env = env\n  fun ref apply(data: Array[U8] iso) =>\n    let rb = Reader\n    rb.append(consume data)\n    try\n      while true do\n        let len = rb.i32_be()?\n        let items = rb.i32_be()?.usize()\n        for range in Range(0, items) do\n          let f = rb.f32_be()?\n          let str_len = rb.i32_be()?.usize()\n          let str = String.from_array(rb.block(str_len)?)\n          _env.out.print(\"[(\" + f.string() + \"), (\" + str + \")]\")\n        end\n      end\n    end\n\nactor Main\n  new create(env: Env) =>\n    env.input(recover Notify(env) end, 1024)\n```\n\n``` pony\nclass ref Reader\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L3)\n\n``` pony\nnew iso create()\n: Reader iso^\n```\n\n#### Returns\n\n- [Reader](index) iso^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L67)\n\nReturn the number of available bytes.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L73)\n\nDiscard all pending data.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L80)\n\nAdd a chunk of data.\n\n``` pony\nfun ref append(\n  data: (String val | Array[U8 val] val))\n: None val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### skip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L93)\n\nSkip n bytes.\n\n``` pony\nfun ref skip(\n  n: USize val)\n: None val ?\n```\n\n#### Parameters\n\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### block\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L119)\n\nReturn a block as a contiguous chunk of memory. Will throw an error if you request a block larger than what is currently stored in the `Reader`.\n\n``` pony\nfun ref block(\n  len: USize val)\n: Array[U8 val] iso^ ?\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^ ?\n\n### read_until\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L159)\n\nFind the first occurrence of the separator and return the block of bytes before its position. The separator is not included in the returned array, but it is removed from the buffer. To read a line of text, prefer line() that handles \\n and \\r\\n.\n\n``` pony\nfun ref read_until(\n  separator: U8 val)\n: Array[U8 val] iso^ ?\n```\n\n#### Parameters\n\n- separator: [U8](builtin-u8) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^ ?\n\n### line\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L170)\n\nReturn a \\n or \\r\\n terminated line as a string. By default the newline is not included in the returned string, but it is removed from the buffer. Set `keep_line_breaks` to `true` to keep the line breaks in the returned line.\n\n``` pony\nfun ref line(\n  keep_line_breaks: Bool val = false)\n: String iso^ ?\n```\n\n#### Parameters\n\n- keep_line_breaks: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [String](builtin-string) iso^ ?\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L213)\n\nGet a U8. Raise an error if there isn't enough data.\n\n``` pony\nfun ref u8()\n: U8 val ?\n```\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L223)\n\nGet an I8.\n\n``` pony\nfun ref i8()\n: I8 val ?\n```\n\n#### Returns\n\n- [I8](builtin-i8) val ?\n\n### u16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L229)\n\nGet a big-endian U16.\n\n``` pony\nfun ref u16_be()\n: U16 val ?\n```\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### u16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L262)\n\nGet a little-endian U16.\n\n``` pony\nfun ref u16_le()\n: U16 val ?\n```\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### i16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L295)\n\nGet a big-endian I16.\n\n``` pony\nfun ref i16_be()\n: I16 val ?\n```\n\n#### Returns\n\n- [I16](builtin-i16) val ?\n\n### i16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L301)\n\nGet a little-endian I16.\n\n``` pony\nfun ref i16_le()\n: I16 val ?\n```\n\n#### Returns\n\n- [I16](builtin-i16) val ?\n\n### u32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L307)\n\nGet a big-endian U32.\n\n``` pony\nfun ref u32_be()\n: U32 val ?\n```\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### u32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L341)\n\nGet a little-endian U32.\n\n``` pony\nfun ref u32_le()\n: U32 val ?\n```\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### i32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L375)\n\nGet a big-endian I32.\n\n``` pony\nfun ref i32_be()\n: I32 val ?\n```\n\n#### Returns\n\n- [I32](builtin-i32) val ?\n\n### i32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L381)\n\nGet a little-endian I32.\n\n``` pony\nfun ref i32_le()\n: I32 val ?\n```\n\n#### Returns\n\n- [I32](builtin-i32) val ?\n\n### u64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L387)\n\nGet a big-endian U64.\n\n``` pony\nfun ref u64_be()\n: U64 val ?\n```\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### u64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L423)\n\nGet a little-endian U64.\n\n``` pony\nfun ref u64_le()\n: U64 val ?\n```\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### i64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L459)\n\nGet a big-endian I64.\n\n``` pony\nfun ref i64_be()\n: I64 val ?\n```\n\n#### Returns\n\n- [I64](builtin-i64) val ?\n\n### i64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L465)\n\nGet a little-endian I64.\n\n``` pony\nfun ref i64_le()\n: I64 val ?\n```\n\n#### Returns\n\n- [I64](builtin-i64) val ?\n\n### u128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L471)\n\nGet a big-endian U128.\n\n``` pony\nfun ref u128_be()\n: U128 val ?\n```\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### u128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L511)\n\nGet a little-endian U128.\n\n``` pony\nfun ref u128_le()\n: U128 val ?\n```\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### i128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L551)\n\nGet a big-endian I129.\n\n``` pony\nfun ref i128_be()\n: I128 val ?\n```\n\n#### Returns\n\n- [I128](builtin-i128) val ?\n\n### i128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L557)\n\nGet a little-endian I128.\n\n``` pony\nfun ref i128_le()\n: I128 val ?\n```\n\n#### Returns\n\n- [I128](builtin-i128) val ?\n\n### f32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L563)\n\nGet a big-endian F32.\n\n``` pony\nfun ref f32_be()\n: F32 val ?\n```\n\n#### Returns\n\n- [F32](builtin-f32) val ?\n\n### f32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L569)\n\nGet a little-endian F32.\n\n``` pony\nfun ref f32_le()\n: F32 val ?\n```\n\n#### Returns\n\n- [F32](builtin-f32) val ?\n\n### f64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L575)\n\nGet a big-endian F64.\n\n``` pony\nfun ref f64_be()\n: F64 val ?\n```\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n### f64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L581)\n\nGet a little-endian F64.\n\n``` pony\nfun ref f64_le()\n: F64 val ?\n```\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n### peek_u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L605)\n\nPeek at a U8 at the given offset. Raise an error if there isn't enough data.\n\n``` pony\nfun box peek_u8(\n  offset: USize val = 0)\n: U8 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### peek_i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L612)\n\nPeek at an I8.\n\n``` pony\nfun box peek_i8(\n  offset: USize val = 0)\n: I8 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I8](builtin-i8) val ?\n\n### peek_u16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L618)\n\nPeek at a big-endian U16.\n\n``` pony\nfun box peek_u16_be(\n  offset: USize val = 0)\n: U16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### peek_u16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L624)\n\nPeek at a little-endian U16.\n\n``` pony\nfun box peek_u16_le(\n  offset: USize val = 0)\n: U16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### peek_i16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L630)\n\nPeek at a big-endian I16.\n\n``` pony\nfun box peek_i16_be(\n  offset: USize val = 0)\n: I16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I16](builtin-i16) val ?\n\n### peek_i16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L636)\n\nPeek at a little-endian I16.\n\n``` pony\nfun box peek_i16_le(\n  offset: USize val = 0)\n: I16 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I16](builtin-i16) val ?\n\n### peek_u32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L642)\n\nPeek at a big-endian U32.\n\n``` pony\nfun box peek_u32_be(\n  offset: USize val = 0)\n: U32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### peek_u32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L648)\n\nPeek at a little-endian U32.\n\n``` pony\nfun box peek_u32_le(\n  offset: USize val = 0)\n: U32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### peek_i32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L654)\n\nPeek at a big-endian I32.\n\n``` pony\nfun box peek_i32_be(\n  offset: USize val = 0)\n: I32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I32](builtin-i32) val ?\n\n### peek_i32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L660)\n\nPeek at a little-endian I32.\n\n``` pony\nfun box peek_i32_le(\n  offset: USize val = 0)\n: I32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I32](builtin-i32) val ?\n\n### peek_u64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L666)\n\nPeek at a big-endian U64.\n\n``` pony\nfun box peek_u64_be(\n  offset: USize val = 0)\n: U64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### peek_u64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L672)\n\nPeek at a little-endian U64.\n\n``` pony\nfun box peek_u64_le(\n  offset: USize val = 0)\n: U64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### peek_i64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L678)\n\nPeek at a big-endian I64.\n\n``` pony\nfun box peek_i64_be(\n  offset: USize val = 0)\n: I64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I64](builtin-i64) val ?\n\n### peek_i64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L684)\n\nPeek at a little-endian I64.\n\n``` pony\nfun box peek_i64_le(\n  offset: USize val = 0)\n: I64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I64](builtin-i64) val ?\n\n### peek_u128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L690)\n\nPeek at a big-endian U128.\n\n``` pony\nfun box peek_u128_be(\n  offset: USize val = 0)\n: U128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### peek_u128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L696)\n\nPeek at a little-endian U128.\n\n``` pony\nfun box peek_u128_le(\n  offset: USize val = 0)\n: U128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### peek_i128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L702)\n\nPeek at a big-endian I129.\n\n``` pony\nfun box peek_i128_be(\n  offset: USize val = 0)\n: I128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I128](builtin-i128) val ?\n\n### peek_i128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L708)\n\nPeek at a little-endian I128.\n\n``` pony\nfun box peek_i128_le(\n  offset: USize val = 0)\n: I128 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [I128](builtin-i128) val ?\n\n### peek_f32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L714)\n\nPeek at a big-endian F32.\n\n``` pony\nfun box peek_f32_be(\n  offset: USize val = 0)\n: F32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [F32](builtin-f32) val ?\n\n### peek_f32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L720)\n\nPeek at a little-endian F32.\n\n``` pony\nfun box peek_f32_le(\n  offset: USize val = 0)\n: F32 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [F32](builtin-f32) val ?\n\n### peek_f64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L726)\n\nPeek at a big-endian F64.\n\n``` pony\nfun box peek_f64_be(\n  offset: USize val = 0)\n: F64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n### peek_f64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L732)\n\nPeek at a little-endian F64.\n\n``` pony\nfun box peek_f64_le(\n  offset: USize val = 0)\n: F64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/buffered-Reader](https://stdlib.ponylang.io/buffered-Reader)"
- name: Reader.append()
  id: buffered-reader#append
  summary: Add a chunk of data
  belongs_to: Reader
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L80)

    Add a chunk of data.

    ``` pony
    fun ref append(
      data: (String val | Array[U8 val] val))
    : None val
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Reader.block()
  id: buffered-reader#block
  summary: Return a block as a contiguous chunk of memory
  belongs_to: Reader
  description: |-
    ### block

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L119)

    Return a block as a contiguous chunk of memory. Will throw an error if you request a block larger than what is currently stored in the `Reader`.

    ``` pony
    fun ref block(
      len: USize val)
    : Array[U8 val] iso^ ?
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] iso^ ?

    &nbsp;
- name: Reader.clear()
  id: buffered-reader#clear
  summary: Discard all pending data
  belongs_to: Reader
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L73)

    Discard all pending data.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Reader.create()
  id: buffered-reader#create
  summary: null
  belongs_to: Reader
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L3)

    ``` pony
    new iso create()
    : Reader iso^
    ```

    #### Returns

    - [Reader](index) iso^

    ## Public Functions
- name: Reader.f32_be()
  id: buffered-reader#f32_be
  summary: Get a big-endian F32
  belongs_to: Reader
  description: |-
    ### f32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L563)

    Get a big-endian F32.

    ``` pony
    fun ref f32_be()
    : F32 val ?
    ```

    #### Returns

    - [F32](builtin-f32) val ?

    &nbsp;
- name: Reader.f32_le()
  id: buffered-reader#f32_le
  summary: Get a little-endian F32
  belongs_to: Reader
  description: |-
    ### f32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L569)

    Get a little-endian F32.

    ``` pony
    fun ref f32_le()
    : F32 val ?
    ```

    #### Returns

    - [F32](builtin-f32) val ?

    &nbsp;
- name: Reader.f64_be()
  id: buffered-reader#f64_be
  summary: Get a big-endian F64
  belongs_to: Reader
  description: |-
    ### f64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L575)

    Get a big-endian F64.

    ``` pony
    fun ref f64_be()
    : F64 val ?
    ```

    #### Returns

    - [F64](builtin-f64) val ?

    &nbsp;
- name: Reader.f64_le()
  id: buffered-reader#f64_le
  summary: Get a little-endian F64
  belongs_to: Reader
  description: |-
    ### f64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L581)

    Get a little-endian F64.

    ``` pony
    fun ref f64_le()
    : F64 val ?
    ```

    #### Returns

    - [F64](builtin-f64) val ?

    &nbsp;
- name: Reader.i128_be()
  id: buffered-reader#i128_be
  summary: Get a big-endian I129
  belongs_to: Reader
  description: |-
    ### i128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L551)

    Get a big-endian I129.

    ``` pony
    fun ref i128_be()
    : I128 val ?
    ```

    #### Returns

    - [I128](builtin-i128) val ?

    &nbsp;
- name: Reader.i128_le()
  id: buffered-reader#i128_le
  summary: Get a little-endian I128
  belongs_to: Reader
  description: |-
    ### i128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L557)

    Get a little-endian I128.

    ``` pony
    fun ref i128_le()
    : I128 val ?
    ```

    #### Returns

    - [I128](builtin-i128) val ?

    &nbsp;
- name: Reader.i16_be()
  id: buffered-reader#i16_be
  summary: Get a big-endian I16
  belongs_to: Reader
  description: |-
    ### i16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L295)

    Get a big-endian I16.

    ``` pony
    fun ref i16_be()
    : I16 val ?
    ```

    #### Returns

    - [I16](builtin-i16) val ?

    &nbsp;
- name: Reader.i16_le()
  id: buffered-reader#i16_le
  summary: Get a little-endian I16
  belongs_to: Reader
  description: |-
    ### i16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L301)

    Get a little-endian I16.

    ``` pony
    fun ref i16_le()
    : I16 val ?
    ```

    #### Returns

    - [I16](builtin-i16) val ?

    &nbsp;
- name: Reader.i32_be()
  id: buffered-reader#i32_be
  summary: Get a big-endian I32
  belongs_to: Reader
  description: |-
    ### i32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L375)

    Get a big-endian I32.

    ``` pony
    fun ref i32_be()
    : I32 val ?
    ```

    #### Returns

    - [I32](builtin-i32) val ?

    &nbsp;
- name: Reader.i32_le()
  id: buffered-reader#i32_le
  summary: Get a little-endian I32
  belongs_to: Reader
  description: |-
    ### i32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L381)

    Get a little-endian I32.

    ``` pony
    fun ref i32_le()
    : I32 val ?
    ```

    #### Returns

    - [I32](builtin-i32) val ?

    &nbsp;
- name: Reader.i64_be()
  id: buffered-reader#i64_be
  summary: Get a big-endian I64
  belongs_to: Reader
  description: |-
    ### i64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L459)

    Get a big-endian I64.

    ``` pony
    fun ref i64_be()
    : I64 val ?
    ```

    #### Returns

    - [I64](builtin-i64) val ?

    &nbsp;
- name: Reader.i64_le()
  id: buffered-reader#i64_le
  summary: Get a little-endian I64
  belongs_to: Reader
  description: |-
    ### i64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L465)

    Get a little-endian I64.

    ``` pony
    fun ref i64_le()
    : I64 val ?
    ```

    #### Returns

    - [I64](builtin-i64) val ?

    &nbsp;
- name: Reader.i8()
  id: buffered-reader#i8
  summary: Get an I8
  belongs_to: Reader
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L223)

    Get an I8.

    ``` pony
    fun ref i8()
    : I8 val ?
    ```

    #### Returns

    - [I8](builtin-i8) val ?

    &nbsp;
- name: Reader.line()
  id: buffered-reader#line
  summary: Return a \n or \r\n terminated line as a string
  belongs_to: Reader
  description: |-
    ### line

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L170)

    Return a \n or \r\n terminated line as a string. By default the newline is not included in the returned string, but it is removed from the buffer. Set `keep_line_breaks` to `true` to keep the line breaks in the returned line.

    ``` pony
    fun ref line(
      keep_line_breaks: Bool val = false)
    : String iso^ ?
    ```

    #### Parameters

    - keep_line_breaks: [Bool](builtin-bool) val = false

    #### Returns

    - [String](builtin-string) iso^ ?

    &nbsp;
- name: Reader.peek_f32_be()
  id: buffered-reader#peek_f32_be
  summary: Peek at a big-endian F32
  belongs_to: Reader
  description: |-
    ### peek_f32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L714)

    Peek at a big-endian F32.

    ``` pony
    fun box peek_f32_be(
      offset: USize val = 0)
    : F32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [F32](builtin-f32) val ?

    &nbsp;
- name: Reader.peek_f32_le()
  id: buffered-reader#peek_f32_le
  summary: Peek at a little-endian F32
  belongs_to: Reader
  description: |-
    ### peek_f32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L720)

    Peek at a little-endian F32.

    ``` pony
    fun box peek_f32_le(
      offset: USize val = 0)
    : F32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [F32](builtin-f32) val ?

    &nbsp;
- name: Reader.peek_f64_be()
  id: buffered-reader#peek_f64_be
  summary: Peek at a big-endian F64
  belongs_to: Reader
  description: |-
    ### peek_f64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L726)

    Peek at a big-endian F64.

    ``` pony
    fun box peek_f64_be(
      offset: USize val = 0)
    : F64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [F64](builtin-f64) val ?

    &nbsp;
- name: Reader.peek_f64_le()
  id: buffered-reader#peek_f64_le
  summary: Peek at a little-endian F64
  belongs_to: Reader
  description: "### peek_f64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/reader/#L732)\n\nPeek at a little-endian F64.\n\n``` pony\nfun box peek_f64_le(\n  offset: USize val = 0)\n: F64 val ?\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/buffered-Reader](https://stdlib.ponylang.io/buffered-Reader)"
- name: Reader.peek_i128_be()
  id: buffered-reader#peek_i128_be
  summary: Peek at a big-endian I129
  belongs_to: Reader
  description: |-
    ### peek_i128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L702)

    Peek at a big-endian I129.

    ``` pony
    fun box peek_i128_be(
      offset: USize val = 0)
    : I128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I128](builtin-i128) val ?

    &nbsp;
- name: Reader.peek_i128_le()
  id: buffered-reader#peek_i128_le
  summary: Peek at a little-endian I128
  belongs_to: Reader
  description: |-
    ### peek_i128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L708)

    Peek at a little-endian I128.

    ``` pony
    fun box peek_i128_le(
      offset: USize val = 0)
    : I128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I128](builtin-i128) val ?

    &nbsp;
- name: Reader.peek_i16_be()
  id: buffered-reader#peek_i16_be
  summary: Peek at a big-endian I16
  belongs_to: Reader
  description: |-
    ### peek_i16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L630)

    Peek at a big-endian I16.

    ``` pony
    fun box peek_i16_be(
      offset: USize val = 0)
    : I16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I16](builtin-i16) val ?

    &nbsp;
- name: Reader.peek_i16_le()
  id: buffered-reader#peek_i16_le
  summary: Peek at a little-endian I16
  belongs_to: Reader
  description: |-
    ### peek_i16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L636)

    Peek at a little-endian I16.

    ``` pony
    fun box peek_i16_le(
      offset: USize val = 0)
    : I16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I16](builtin-i16) val ?

    &nbsp;
- name: Reader.peek_i32_be()
  id: buffered-reader#peek_i32_be
  summary: Peek at a big-endian I32
  belongs_to: Reader
  description: |-
    ### peek_i32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L654)

    Peek at a big-endian I32.

    ``` pony
    fun box peek_i32_be(
      offset: USize val = 0)
    : I32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I32](builtin-i32) val ?

    &nbsp;
- name: Reader.peek_i32_le()
  id: buffered-reader#peek_i32_le
  summary: Peek at a little-endian I32
  belongs_to: Reader
  description: |-
    ### peek_i32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L660)

    Peek at a little-endian I32.

    ``` pony
    fun box peek_i32_le(
      offset: USize val = 0)
    : I32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I32](builtin-i32) val ?

    &nbsp;
- name: Reader.peek_i64_be()
  id: buffered-reader#peek_i64_be
  summary: Peek at a big-endian I64
  belongs_to: Reader
  description: |-
    ### peek_i64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L678)

    Peek at a big-endian I64.

    ``` pony
    fun box peek_i64_be(
      offset: USize val = 0)
    : I64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I64](builtin-i64) val ?

    &nbsp;
- name: Reader.peek_i64_le()
  id: buffered-reader#peek_i64_le
  summary: Peek at a little-endian I64
  belongs_to: Reader
  description: |-
    ### peek_i64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L684)

    Peek at a little-endian I64.

    ``` pony
    fun box peek_i64_le(
      offset: USize val = 0)
    : I64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I64](builtin-i64) val ?

    &nbsp;
- name: Reader.peek_i8()
  id: buffered-reader#peek_i8
  summary: Peek at an I8
  belongs_to: Reader
  description: |-
    ### peek_i8

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L612)

    Peek at an I8.

    ``` pony
    fun box peek_i8(
      offset: USize val = 0)
    : I8 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [I8](builtin-i8) val ?

    &nbsp;
- name: Reader.peek_u128_be()
  id: buffered-reader#peek_u128_be
  summary: Peek at a big-endian U128
  belongs_to: Reader
  description: |-
    ### peek_u128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L690)

    Peek at a big-endian U128.

    ``` pony
    fun box peek_u128_be(
      offset: USize val = 0)
    : U128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Reader.peek_u128_le()
  id: buffered-reader#peek_u128_le
  summary: Peek at a little-endian U128
  belongs_to: Reader
  description: |-
    ### peek_u128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L696)

    Peek at a little-endian U128.

    ``` pony
    fun box peek_u128_le(
      offset: USize val = 0)
    : U128 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Reader.peek_u16_be()
  id: buffered-reader#peek_u16_be
  summary: Peek at a big-endian U16
  belongs_to: Reader
  description: |-
    ### peek_u16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L618)

    Peek at a big-endian U16.

    ``` pony
    fun box peek_u16_be(
      offset: USize val = 0)
    : U16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Reader.peek_u16_le()
  id: buffered-reader#peek_u16_le
  summary: Peek at a little-endian U16
  belongs_to: Reader
  description: |-
    ### peek_u16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L624)

    Peek at a little-endian U16.

    ``` pony
    fun box peek_u16_le(
      offset: USize val = 0)
    : U16 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Reader.peek_u32_be()
  id: buffered-reader#peek_u32_be
  summary: Peek at a big-endian U32
  belongs_to: Reader
  description: |-
    ### peek_u32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L642)

    Peek at a big-endian U32.

    ``` pony
    fun box peek_u32_be(
      offset: USize val = 0)
    : U32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Reader.peek_u32_le()
  id: buffered-reader#peek_u32_le
  summary: Peek at a little-endian U32
  belongs_to: Reader
  description: |-
    ### peek_u32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L648)

    Peek at a little-endian U32.

    ``` pony
    fun box peek_u32_le(
      offset: USize val = 0)
    : U32 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Reader.peek_u64_be()
  id: buffered-reader#peek_u64_be
  summary: Peek at a big-endian U64
  belongs_to: Reader
  description: |-
    ### peek_u64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L666)

    Peek at a big-endian U64.

    ``` pony
    fun box peek_u64_be(
      offset: USize val = 0)
    : U64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Reader.peek_u64_le()
  id: buffered-reader#peek_u64_le
  summary: Peek at a little-endian U64
  belongs_to: Reader
  description: |-
    ### peek_u64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L672)

    Peek at a little-endian U64.

    ``` pony
    fun box peek_u64_le(
      offset: USize val = 0)
    : U64 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Reader.peek_u8()
  id: buffered-reader#peek_u8
  summary: Peek at a U8 at the given offset
  belongs_to: Reader
  description: |-
    ### peek_u8

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L605)

    Peek at a U8 at the given offset. Raise an error if there isn't enough data.

    ``` pony
    fun box peek_u8(
      offset: USize val = 0)
    : U8 val ?
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: Reader.read_until()
  id: buffered-reader#read_until
  summary: Find the first occurrence of the separator and return the block of bytes before its position
  belongs_to: Reader
  description: |-
    ### read_until

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L159)

    Find the first occurrence of the separator and return the block of bytes before its position. The separator is not included in the returned array, but it is removed from the buffer. To read a line of text, prefer line() that handles \n and \r\n.

    ``` pony
    fun ref read_until(
      separator: U8 val)
    : Array[U8 val] iso^ ?
    ```

    #### Parameters

    - separator: [U8](builtin-u8) val

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] iso^ ?

    &nbsp;
- name: Reader.size()
  id: buffered-reader#size
  summary: Return the number of available bytes
  belongs_to: Reader
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L67)

    Return the number of available bytes.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: Reader.skip()
  id: buffered-reader#skip
  summary: Skip n bytes
  belongs_to: Reader
  description: |-
    ### skip

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L93)

    Skip n bytes.

    ``` pony
    fun ref skip(
      n: USize val)
    : None val ?
    ```

    #### Parameters

    - n: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: Reader.u128_be()
  id: buffered-reader#u128_be
  summary: Get a big-endian U128
  belongs_to: Reader
  description: |-
    ### u128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L471)

    Get a big-endian U128.

    ``` pony
    fun ref u128_be()
    : U128 val ?
    ```

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Reader.u128_le()
  id: buffered-reader#u128_le
  summary: Get a little-endian U128
  belongs_to: Reader
  description: |-
    ### u128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L511)

    Get a little-endian U128.

    ``` pony
    fun ref u128_le()
    : U128 val ?
    ```

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: Reader.u16_be()
  id: buffered-reader#u16_be
  summary: Get a big-endian U16
  belongs_to: Reader
  description: |-
    ### u16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L229)

    Get a big-endian U16.

    ``` pony
    fun ref u16_be()
    : U16 val ?
    ```

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Reader.u16_le()
  id: buffered-reader#u16_le
  summary: Get a little-endian U16
  belongs_to: Reader
  description: |-
    ### u16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L262)

    Get a little-endian U16.

    ``` pony
    fun ref u16_le()
    : U16 val ?
    ```

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: Reader.u32_be()
  id: buffered-reader#u32_be
  summary: Get a big-endian U32
  belongs_to: Reader
  description: |-
    ### u32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L307)

    Get a big-endian U32.

    ``` pony
    fun ref u32_be()
    : U32 val ?
    ```

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Reader.u32_le()
  id: buffered-reader#u32_le
  summary: Get a little-endian U32
  belongs_to: Reader
  description: |-
    ### u32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L341)

    Get a little-endian U32.

    ``` pony
    fun ref u32_le()
    : U32 val ?
    ```

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Reader.u64_be()
  id: buffered-reader#u64_be
  summary: Get a big-endian U64
  belongs_to: Reader
  description: |-
    ### u64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L387)

    Get a big-endian U64.

    ``` pony
    fun ref u64_be()
    : U64 val ?
    ```

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Reader.u64_le()
  id: buffered-reader#u64_le
  summary: Get a little-endian U64
  belongs_to: Reader
  description: |-
    ### u64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L423)

    Get a little-endian U64.

    ``` pony
    fun ref u64_le()
    : U64 val ?
    ```

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: Reader.u8()
  id: buffered-reader#u8
  summary: Get a U8
  belongs_to: Reader
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/reader/#L213)

    Get a U8. Raise an error if there isn't enough data.

    ``` pony
    fun ref u8()
    : U8 val ?
    ```

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: Readline
  id: term-readline
  summary: Line editing, history, and tab completion
  description: "# Readline\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L6)\n\nLine editing, history, and tab completion.\n\n``` pony\nclass ref Readline is\n  ANSINotify ref\n```\n\n#### Implements\n\n- [ANSINotify](term-ansinotify) ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L23)\n\nCreate a readline handler to be passed to stdin. It begins blocked. Set an initial prompt on the ANSITerm to begin processing.\n\n``` pony\nnew iso create(\n  notify: ReadlineNotify iso,\n  out: OutStream tag,\n  path: (FilePath val | None val) = reference,\n  maxlen: USize val = 0)\n: Readline iso^\n```\n\n#### Parameters\n\n- notify: [ReadlineNotify](term-readlinenotify) iso\n- out: [OutStream](builtin-outstream) tag\n- path: ([FilePath](files-filepath) val \\| [None](builtin-none) val) = reference\n- maxlen: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Readline](index) iso^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L41)\n\nReceives input.\n\n``` pony\nfun ref apply(\n  term: ANSITerm ref,\n  input: U8 val)\n: None val\n```\n\n#### Parameters\n\n- term: [ANSITerm](term-ansiterm) ref\n- input: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### prompt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L83)\n\nSet a new prompt, unblock, and handle the pending queue.\n\n``` pony\nfun ref prompt(\n  term: ANSITerm ref,\n  value: String val)\n: None val\n```\n\n#### Parameters\n\n- term: [ANSITerm](term-ansiterm) ref\n- value: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L99)\n\nNo more input is available.\n\n``` pony\nfun ref closed()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### up\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L105)\n\nPrevious line.\n\n``` pony\nfun ref up(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### down\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L117)\n\nNext line.\n\n``` pony\nfun ref down(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### left\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L133)\n\nMove left.\n\n``` pony\nfun ref left(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### right\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L152)\n\nMove right.\n\n``` pony\nfun ref right(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### home\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L171)\n\nBeginning of the line.\n\n``` pony\nfun ref home(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### end_key\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L178)\n\nEnd of the line.\n\n``` pony\nfun ref end_key(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline/#L211)\n\nForward delete.\n\n``` pony\nfun ref delete(\n  ctrl: Bool val = false,\n  alt: Bool val = false,\n  shift: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val = false\n- alt: [Bool](builtin-bool) val = false\n- shift: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### insert\n\n``` pony\nfun ref insert(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### page_up\n\n``` pony\nfun ref page_up(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### page_down\n\n``` pony\nfun ref page_down(\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### fn_key\n\n``` pony\nfun ref fn_key(\n  i: U8 val,\n  ctrl: Bool val,\n  alt: Bool val,\n  shift: Bool val)\n: None val\n```\n\n#### Parameters\n\n- i: [U8](builtin-u8) val\n- ctrl: [Bool](builtin-bool) val\n- alt: [Bool](builtin-bool) val\n- shift: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n``` pony\nfun ref size(\n  rows: U16 val,\n  cols: U16 val)\n: None val\n```\n\n#### Parameters\n\n- rows: [U16](builtin-u16) val\n- cols: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-Readline](https://stdlib.ponylang.io/term-Readline)"
- name: Readline.apply()
  id: term-readline#apply
  summary: Receives input
  belongs_to: Readline
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L41)

    Receives input.

    ``` pony
    fun ref apply(
      term: ANSITerm ref,
      input: U8 val)
    : None val
    ```

    #### Parameters

    - term: [ANSITerm](term-ansiterm) ref
    - input: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val
- name: Readline.closed()
  id: term-readline#closed
  summary: No more input is available
  belongs_to: Readline
  description: |-
    ### closed

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L99)

    No more input is available.

    ``` pony
    fun ref closed()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.create()
  id: term-readline#create
  summary: Create a readline handler to be passed to stdin
  belongs_to: Readline
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L23)

    Create a readline handler to be passed to stdin. It begins blocked. Set an initial prompt on the ANSITerm to begin processing.

    ``` pony
    new iso create(
      notify: ReadlineNotify iso,
      out: OutStream tag,
      path: (FilePath val | None val) = reference,
      maxlen: USize val = 0)
    : Readline iso^
    ```

    #### Parameters

    - notify: [ReadlineNotify](term-readlinenotify) iso
    - out: [OutStream](builtin-outstream) tag
    - path: ([FilePath](files-filepath) val \| [None](builtin-none) val) = reference
    - maxlen: [USize](builtin-usize) val = 0

    #### Returns

    - [Readline](index) iso^

    ## Public Functions
- name: Readline.delete()
  id: term-readline#delete
  summary: Forward delete
  belongs_to: Readline
  description: |-
    ### delete

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L211)

    Forward delete.

    ``` pony
    fun ref delete(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.down()
  id: term-readline#down
  summary: Next line
  belongs_to: Readline
  description: |-
    ### down

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L117)

    Next line.

    ``` pony
    fun ref down(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.end_key()
  id: term-readline#end_key
  summary: End of the line
  belongs_to: Readline
  description: |-
    ### end_key

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L178)

    End of the line.

    ``` pony
    fun ref end_key(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.fn_key()
  id: term-readline#fn_key
  summary: null
  belongs_to: Readline
  description: |-
    ### fn_key

    ``` pony
    fun ref fn_key(
      i: U8 val,
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - i: [U8](builtin-u8) val
    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.home()
  id: term-readline#home
  summary: Beginning of the line
  belongs_to: Readline
  description: |-
    ### home

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L171)

    Beginning of the line.

    ``` pony
    fun ref home(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.insert()
  id: term-readline#insert
  summary: null
  belongs_to: Readline
  description: |-
    ### insert

    ``` pony
    fun ref insert(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.left()
  id: term-readline#left
  summary: Move left
  belongs_to: Readline
  description: |-
    ### left

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L133)

    Move left.

    ``` pony
    fun ref left(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.page_down()
  id: term-readline#page_down
  summary: null
  belongs_to: Readline
  description: |-
    ### page_down

    ``` pony
    fun ref page_down(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.page_up()
  id: term-readline#page_up
  summary: null
  belongs_to: Readline
  description: |-
    ### page_up

    ``` pony
    fun ref page_up(
      ctrl: Bool val,
      alt: Bool val,
      shift: Bool val)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val
    - alt: [Bool](builtin-bool) val
    - shift: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.prompt()
  id: term-readline#prompt
  summary: Set a new prompt, unblock, and handle the pending queue
  belongs_to: Readline
  description: |-
    ### prompt

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L83)

    Set a new prompt, unblock, and handle the pending queue.

    ``` pony
    fun ref prompt(
      term: ANSITerm ref,
      value: String val)
    : None val
    ```

    #### Parameters

    - term: [ANSITerm](term-ansiterm) ref
    - value: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.right()
  id: term-readline#right
  summary: Move right
  belongs_to: Readline
  description: |-
    ### right

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L152)

    Move right.

    ``` pony
    fun ref right(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Readline.size()
  id: term-readline#size
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Readline
  description: "### size\n\n``` pony\nfun ref size(\n  rows: U16 val,\n  cols: U16 val)\n: None val\n```\n\n#### Parameters\n\n- rows: [U16](builtin-u16) val\n- cols: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-Readline](https://stdlib.ponylang.io/term-Readline)"
- name: Readline.up()
  id: term-readline#up
  summary: Previous line
  belongs_to: Readline
  description: |-
    ### up

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline/#L105)

    Previous line.

    ``` pony
    fun ref up(
      ctrl: Bool val = false,
      alt: Bool val = false,
      shift: Bool val = false)
    : None val
    ```

    #### Parameters

    - ctrl: [Bool](builtin-bool) val = false
    - alt: [Bool](builtin-bool) val = false
    - shift: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: ReadlineNotify
  id: term-readlinenotify
  summary: Notifier for readline
  description: "# ReadlineNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline_notify/#L3)\n\nNotifier for readline.\n\n``` pony\ninterface ref ReadlineNotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline_notify/#L7)\n\nReceives finished lines. The next prompt is set by fulfilling the promise. If the promise is rejected, readline will stop handling input.\n\n``` pony\nfun ref apply(\n  line: String val,\n  prompt: Promise[String val] tag)\n: None val\n```\n\n#### Parameters\n\n- line: [String](builtin-string) val\n- prompt: [Promise](promises-promise)\\[[String](builtin-string) val\\] tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n### tab\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline_notify/#L14)\n\nReturn tab completion possibilities.\n\n``` pony\nfun ref tab(\n  line: String val)\n: Seq[String val] box\n```\n\n#### Parameters\n\n- line: [String](builtin-string) val\n\n#### Returns\n\n- [Seq](builtin-seq)\\[[String](builtin-string) val\\] box\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ReadlineNotify](https://stdlib.ponylang.io/term-ReadlineNotify)"
- name: ReadlineNotify.apply()
  id: term-readlinenotify#apply
  summary: Receives finished lines
  belongs_to: ReadlineNotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/term/readline_notify/#L7)

    Receives finished lines. The next prompt is set by fulfilling the promise. If the promise is rejected, readline will stop handling input.

    ``` pony
    fun ref apply(
      line: String val,
      prompt: Promise[String val] tag)
    : None val
    ```

    #### Parameters

    - line: [String](builtin-string) val
    - prompt: [Promise](promises-promise)\[[String](builtin-string) val\] tag

    #### Returns

    - [None](builtin-none) val
- name: ReadlineNotify.tab()
  id: term-readlinenotify#tab
  summary: Return tab completion possibilities
  belongs_to: ReadlineNotify
  description: "### tab\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/term/readline_notify/#L14)\n\nReturn tab completion possibilities.\n\n``` pony\nfun ref tab(\n  line: String val)\n: Seq[String val] box\n```\n\n#### Parameters\n\n- line: [String](builtin-string) val\n\n#### Returns\n\n- [Seq](builtin-seq)\\[[String](builtin-string) val\\] box\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/term-ReadlineNotify](https://stdlib.ponylang.io/term-ReadlineNotify)"
- name: ReadSeq
  id: builtin-readseq
  summary: The readable interface of a sequence
  description: "# ReadSeq\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L1)\n\nThe readable interface of a sequence.\n\n``` pony\ninterface box ReadSeq[A: A]\n```\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L5)\n\nReturns the number of elements in the sequence.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L10)\n\nReturns the i-th element of the sequence. Raises an error if the index is out of bounds. Note that this returns this-\\>A, not A.\n\n``` pony\nfun box apply(\n  i: USize val)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>A ?\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L16)\n\nReturns an iterator over the elements of the sequence. Note that this iterates over this-\\>A, not A.\n\n``` pony\nfun box values()\n: Iterator[this->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[this-\\>A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ReadSeq](https://stdlib.ponylang.io/builtin-ReadSeq)"
- name: ReadSeq.apply()
  id: builtin-readseq#apply
  summary: Returns the i-th element of the sequence
  belongs_to: ReadSeq
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L10)

    Returns the i-th element of the sequence. Raises an error if the index is out of bounds. Note that this returns this-\>A, not A.

    ``` pony
    fun box apply(
      i: USize val)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>A ?

    &nbsp;
- name: ReadSeq.size()
  id: builtin-readseq#size
  summary: Returns the number of elements in the sequence
  belongs_to: ReadSeq
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L5)

    Returns the number of elements in the sequence.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: ReadSeq.values()
  id: builtin-readseq#values
  summary: Returns an iterator over the elements of the sequence
  belongs_to: ReadSeq
  description: "### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/read_seq/#L16)\n\nReturns an iterator over the elements of the sequence. Note that this iterates over this-\\>A, not A.\n\n``` pony\nfun box values()\n: Iterator[this->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[this-\\>A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ReadSeq](https://stdlib.ponylang.io/builtin-ReadSeq)"
- name: Real
  id: builtin-real
  summary: Integer division, rounded towards zero
  description: "# Real\\[A: [Real](index)\\[A\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L133)\n\n``` pony\ntrait val Real[A: Real[A] val] is\n  Stringable box,\n  _ArithmeticConvertible val,\n  Comparable[A] ref\n```\n\n#### Implements\n\n- [Stringable](builtin-stringable) box\n- \\_ArithmeticConvertible val\n- [Comparable](builtin-comparable)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L135)\n\n``` pony\nnew val create(\n  value: A)\n: Real[A] val^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Real](index)\\[A\\] val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](index)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](index)\\[A\\] val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L138)\n\n``` pony\nnew val min_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](index)\\[A\\] val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L139)\n\n``` pony\nnew val max_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](index)\\[A\\] val^\n\n## Public Functions\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\nInteger division, rounded towards zero.\n\n``` pony\nfun box div(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\nCalculate the remainder after integer division, rounded towards zero (`div`).\n\nThe result has the sign of the dividend.\n\n``` pony\nfun box rem(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: A\n```\n\n#### Returns\n\n- A\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L161)\n\nFloored integer division, rounded towards negative infinity.\n\n``` pony\nfun box fld(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L165)\n\nCalculate the modulo after floored integer division, rounded towards negative infinity (`fld`).\n\nThe result has the sign of the divisor.\n\n``` pony\nfun box mod(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L179)\n\n``` pony\nfun box min(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L180)\n\n``` pony\nfun box max(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L182)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L198)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L6)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L14)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L49)\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L98)\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Real](https://stdlib.ponylang.io/builtin-Real)"
- name: Real.add()
  id: builtin-real#add
  summary: null
  belongs_to: Real
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.compare()
  id: builtin-real#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Real
  description: "### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Real](https://stdlib.ponylang.io/builtin-Real)"
- name: Real.create()
  id: builtin-real#create
  summary: null
  belongs_to: Real
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L135)

    ``` pony
    new val create(
      value: A)
    : Real[A] val^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Real](index)\[A\] val^
- name: Real.div()
  id: builtin-real#div
  summary: Integer division, rounded towards zero
  belongs_to: Real
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    Integer division, rounded towards zero.

    ``` pony
    fun box div(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.divrem()
  id: builtin-real#divrem
  summary: null
  belongs_to: Real
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: Real.eq()
  id: builtin-real#eq
  summary: null
  belongs_to: Real
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.f32()
  id: builtin-real#f32
  summary: null
  belongs_to: Real
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: Real.f32_unsafe()
  id: builtin-real#f32_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: Real.f64()
  id: builtin-real#f64
  summary: null
  belongs_to: Real
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Real.f64_unsafe()
  id: builtin-real#f64_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: Real.fld()
  id: builtin-real#fld
  summary: Floored integer division, rounded towards negative infinity
  belongs_to: Real
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L161)

    Floored integer division, rounded towards negative infinity.

    ``` pony
    fun box fld(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.from()
  id: builtin-real#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: Real
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](index)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](index)\\[A\\] val^\n\n&nbsp;"
- name: Real.ge()
  id: builtin-real#ge
  summary: null
  belongs_to: Real
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.gt()
  id: builtin-real#gt
  summary: null
  belongs_to: Real
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.hash()
  id: builtin-real#hash
  summary: null
  belongs_to: Real
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L182)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Real.hash64()
  id: builtin-real#hash64
  summary: null
  belongs_to: Real
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L198)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Real.i128()
  id: builtin-real#i128
  summary: null
  belongs_to: Real
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L6)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: Real.i128_unsafe()
  id: builtin-real#i128_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L49)

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: Real.i16()
  id: builtin-real#i16
  summary: null
  belongs_to: Real
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: Real.i16_unsafe()
  id: builtin-real#i16_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: Real.i32()
  id: builtin-real#i32
  summary: null
  belongs_to: Real
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: Real.i32_unsafe()
  id: builtin-real#i32_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: Real.i64()
  id: builtin-real#i64
  summary: null
  belongs_to: Real
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Real.i64_unsafe()
  id: builtin-real#i64_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Real.i8()
  id: builtin-real#i8
  summary: null
  belongs_to: Real
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: Real.i8_unsafe()
  id: builtin-real#i8_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: Real.ilong()
  id: builtin-real#ilong
  summary: null
  belongs_to: Real
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: Real.ilong_unsafe()
  id: builtin-real#ilong_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: Real.isize()
  id: builtin-real#isize
  summary: null
  belongs_to: Real
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: Real.isize_unsafe()
  id: builtin-real#isize_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: Real.le()
  id: builtin-real#le
  summary: null
  belongs_to: Real
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.lt()
  id: builtin-real#lt
  summary: null
  belongs_to: Real
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.max()
  id: builtin-real#max
  summary: null
  belongs_to: Real
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L180)

    ``` pony
    fun box max(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.max_value()
  id: builtin-real#max_value
  summary: null
  belongs_to: Real
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L139)

    ``` pony
    new val max_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](index)\[A\] val^

    ## Public Functions
- name: Real.min()
  id: builtin-real#min
  summary: null
  belongs_to: Real
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L179)

    ``` pony
    fun box min(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.min_value()
  id: builtin-real#min_value
  summary: null
  belongs_to: Real
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L138)

    ``` pony
    new val min_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](index)\[A\] val^

    &nbsp;
- name: Real.mod()
  id: builtin-real#mod
  summary: Calculate the modulo after floored integer division, rounded towards negative infinity (fld)
  belongs_to: Real
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L165)

    Calculate the modulo after floored integer division, rounded towards negative infinity (`fld`).

    The result has the sign of the divisor.

    ``` pony
    fun box mod(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.mul()
  id: builtin-real#mul
  summary: null
  belongs_to: Real
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.ne()
  id: builtin-real#ne
  summary: null
  belongs_to: Real
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Real.neg()
  id: builtin-real#neg
  summary: null
  belongs_to: Real
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Real.rem()
  id: builtin-real#rem
  summary: Calculate the remainder after integer division, rounded towards zero (div)
  belongs_to: Real
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    Calculate the remainder after integer division, rounded towards zero (`div`).

    The result has the sign of the dividend.

    ``` pony
    fun box rem(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.string()
  id: builtin-real#string
  summary: null
  belongs_to: Real
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: Real.sub()
  id: builtin-real#sub
  summary: null
  belongs_to: Real
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: Real.u128()
  id: builtin-real#u128
  summary: null
  belongs_to: Real
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L14)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: Real.u128_unsafe()
  id: builtin-real#u128_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L98)

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: Real.u16()
  id: builtin-real#u16
  summary: null
  belongs_to: Real
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: Real.u16_unsafe()
  id: builtin-real#u16_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: Real.u32()
  id: builtin-real#u32
  summary: null
  belongs_to: Real
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Real.u32_unsafe()
  id: builtin-real#u32_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Real.u64()
  id: builtin-real#u64
  summary: null
  belongs_to: Real
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Real.u64_unsafe()
  id: builtin-real#u64_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Real.u8()
  id: builtin-real#u8
  summary: null
  belongs_to: Real
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: Real.u8_unsafe()
  id: builtin-real#u8_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: Real.ulong()
  id: builtin-real#ulong
  summary: null
  belongs_to: Real
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: Real.ulong_unsafe()
  id: builtin-real#ulong_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: Real.usize()
  id: builtin-real#usize
  summary: null
  belongs_to: Real
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Real.usize_unsafe()
  id: builtin-real#usize_unsafe
  summary: null
  belongs_to: Real
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Registrar
  id: bureaucracy-registrar
  summary: A Registrar keeps a map of lookup string to anything
  description: "# Registrar\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L4)\n\nA Registrar keeps a map of lookup string to anything. Generally, this is used to keep a directory of long-lived service-providing actors that can be looked up name.\n\n``` pony\nactor tag Registrar\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L4)\n\n``` pony\nnew tag create()\n: Registrar tag^\n```\n\n#### Returns\n\n- [Registrar](index) tag^\n\n## Public Behaviours\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L12)\n\nAdd, or change, a lookup mapping.\n\n``` pony\nbe update(\n  key: String val,\n  value: Any tag)\n```\n\n#### Parameters\n\n- key: [String](builtin-string) val\n- value: [Any](builtin-any) tag\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L18)\n\nRemove a mapping. This only takes effect if provided key currently maps to the provided value. If the key maps to some other value (perhaps after updating), the mapping won't be removed.\n\n``` pony\nbe remove(\n  key: String val,\n  value: Any tag)\n```\n\n#### Parameters\n\n- key: [String](builtin-string) val\n- value: [Any](builtin-any) tag\n\n## Public Functions\n\n### apply\\[optional A: [Any](builtin-any) tag\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L30)\n\nLookup by name. Returns a promise that will be fulfilled with the mapped value if it exists and is a subtype of A. Otherwise, the promise will be rejected.\n\n``` pony\nfun tag apply[optional A: Any tag](\n  key: String val)\n: Promise[A] tag\n```\n\n#### Parameters\n\n- key: [String](builtin-string) val\n\n#### Returns\n\n- [Promise](promises-promise)\\[A\\] tag\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/bureaucracy-Registrar](https://stdlib.ponylang.io/bureaucracy-Registrar)"
- name: Registrar.apply()
  id: bureaucracy-registrar#applyoptional-a-any-tag
  summary: Lookup by name
  belongs_to: Registrar
  description: "### apply\\[optional A: [Any](builtin-any) tag\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L30)\n\nLookup by name. Returns a promise that will be fulfilled with the mapped value if it exists and is a subtype of A. Otherwise, the promise will be rejected.\n\n``` pony\nfun tag apply[optional A: Any tag](\n  key: String val)\n: Promise[A] tag\n```\n\n#### Parameters\n\n- key: [String](builtin-string) val\n\n#### Returns\n\n- [Promise](promises-promise)\\[A\\] tag\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/bureaucracy-Registrar](https://stdlib.ponylang.io/bureaucracy-Registrar)"
- name: Registrar.create()
  id: bureaucracy-registrar#create
  summary: null
  belongs_to: Registrar
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L4)

    ``` pony
    new tag create()
    : Registrar tag^
    ```

    #### Returns

    - [Registrar](index) tag^

    ## Public Behaviours
- name: Registrar.remove()
  id: bureaucracy-registrar#remove
  summary: Remove a mapping
  belongs_to: Registrar
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L18)

    Remove a mapping. This only takes effect if provided key currently maps to the provided value. If the key maps to some other value (perhaps after updating), the mapping won't be removed.

    ``` pony
    be remove(
      key: String val,
      value: Any tag)
    ```

    #### Parameters

    - key: [String](builtin-string) val
    - value: [Any](builtin-any) tag

    ## Public Functions
- name: Registrar.update()
  id: bureaucracy-registrar#update
  summary: Add, or change, a lookup mapping
  belongs_to: Registrar
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/bureaucracy/registrar/#L12)

    Add, or change, a lookup mapping.

    ``` pony
    be update(
      key: String val,
      value: Any tag)
    ```

    #### Parameters

    - key: [String](builtin-string) val
    - value: [Any](builtin-any) tag
- name: Reject
  id: promises-reject
  summary: A function on A that is called when a promise is rejected
  description: "# Reject\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L10)\n\nA function on A that is called when a promise is rejected.\n\n``` pony\ninterface iso Reject[A: Any #share]\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L14)\n\n``` pony\nfun ref apply()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Reject](https://stdlib.ponylang.io/promises-Reject)"
- name: Reject.apply()
  id: promises-reject#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Reject
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L14)\n\n``` pony\nfun ref apply()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-Reject](https://stdlib.ponylang.io/promises-Reject)"
- name: RejectAlways
  id: promises-rejectalways
  summary: A reject that always raises an error
  description: "# RejectAlways\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L23)\n\nA reject that always raises an error.\n\n``` pony\nclass iso RejectAlways[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L23)\n\n``` pony\nnew iso create()\n: RejectAlways[A] iso^\n```\n\n#### Returns\n\n- [RejectAlways](index)\\[A\\] iso^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L27)\n\n``` pony\nfun ref apply()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-RejectAlways](https://stdlib.ponylang.io/promises-RejectAlways)"
- name: RejectAlways.apply()
  id: promises-rejectalways#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: RejectAlways
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/promises/fulfill/#L27)\n\n``` pony\nfun ref apply()\n: A ?\n```\n\n#### Returns\n\n- A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/promises-RejectAlways](https://stdlib.ponylang.io/promises-RejectAlways)"
- name: RejectAlways.create()
  id: promises-rejectalways#create
  summary: null
  belongs_to: RejectAlways
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/promises/fulfill/#L23)

    ``` pony
    new iso create()
    : RejectAlways[A] iso^
    ```

    #### Returns

    - [RejectAlways](index)\[A\] iso^

    ## Public Functions
- name: Required
  id: options-required
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Required\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L73)\n\n``` pony\nprimitive val Required\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L73)\n\n``` pony\nnew val create()\n: Required val^\n```\n\n#### Returns\n\n- [Required](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L74)\n\n``` pony\nfun box eq(\n  that: Required val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Required](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L74)\n\n``` pony\nfun box ne(\n  that: Required val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Required](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Required](https://stdlib.ponylang.io/options-Required)"
- name: Required.create()
  id: options-required#create
  summary: null
  belongs_to: Required
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L73)

    ``` pony
    new val create()
    : Required val^
    ```

    #### Returns

    - [Required](index) val^

    ## Public Functions
- name: Required.eq()
  id: options-required#eq
  summary: null
  belongs_to: Required
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L74)

    ``` pony
    fun box eq(
      that: Required val)
    : Bool val
    ```

    #### Parameters

    - that: [Required](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: Required.ne()
  id: options-required#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Required
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L74)\n\n``` pony\nfun box ne(\n  that: Required val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Required](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-Required](https://stdlib.ponylang.io/options-Required)"
- name: Reverse
  id: collections-reverse
  summary: Produces a decreasing range [max, min] with step dec, for any Number type
  description: "# Reverse\\[optional A: ([Real](builtin-real)\\[A\\] val & ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val))\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L1)\n\nProduces a decreasing range \\[max, min\\] with step `dec`, for any `Number` type. (i.e. the reverse of `Range`)\n\nExample program:\n\n``` pony\nuse \"collections\"\nactor Main\n  new create(env: Env) =>\n    for e in Reverse(10, 2, 2) do\n      env.out.print(e.string())\n    end \n```\n\nWhich outputs:\n\n``` pony\n10\n8\n6\n4\n2\n```\n\nIf `dec` is 0, produces an infinite series of `max`.\n\nIf `dec` is negative, produces a range with `max` as the only value.\n\n``` pony\nclass ref Reverse[optional A: (Real[A] val & (I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val))] is\n  Iterator[A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L36)\n\n``` pony\nnew ref create(\n  max: A,\n  min: A,\n  dec: A = 1)\n: Reverse[A] ref^\n```\n\n#### Parameters\n\n- max: A\n- min: A\n- dec: A = 1\n\n#### Returns\n\n- [Reverse](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L42)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L45)\n\n``` pony\nfun ref next()\n: A\n```\n\n#### Returns\n\n- A\n\n### rewind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L52)\n\n``` pony\nfun ref rewind()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Reverse](https://stdlib.ponylang.io/collections-Reverse)"
- name: Reverse.create()
  id: collections-reverse#create
  summary: null
  belongs_to: Reverse
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/reverse/#L36)

    ``` pony
    new ref create(
      max: A,
      min: A,
      dec: A = 1)
    : Reverse[A] ref^
    ```

    #### Parameters

    - max: A
    - min: A
    - dec: A = 1

    #### Returns

    - [Reverse](index)\[A\] ref^

    ## Public Functions
- name: Reverse.has_next()
  id: collections-reverse#has_next
  summary: null
  belongs_to: Reverse
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/reverse/#L42)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: Reverse.next()
  id: collections-reverse#next
  summary: null
  belongs_to: Reverse
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/reverse/#L45)

    ``` pony
    fun ref next()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: Reverse.rewind()
  id: collections-reverse#rewind
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Reverse
  description: "### rewind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/reverse/#L52)\n\n``` pony\nfun ref rewind()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Reverse](https://stdlib.ponylang.io/collections-Reverse)"
- name: RingBuffer
  id: collections-ringbuffer
  summary: A ring buffer
  description: "# RingBuffer\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L1)\n\nA ring buffer.\n\n``` pony\nclass ref RingBuffer[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L9)\n\nCreate a ring buffer with a fixed size. The size will be rounded up to the next power of 2.\n\n``` pony\nnew ref create(\n  len: USize val)\n: RingBuffer[A] ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [RingBuffer](index)\\[A\\] ref^\n\n## Public Functions\n\n### head\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L18)\n\nThe first read that will succeed. If nothing has been written to the ring, this will raise an error.\n\n``` pony\nfun box head()\n: USize val ?\n```\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L33)\n\nThe number of elements that have been added to the ring.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### space\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L39)\n\nThe available space in the ring.\n\n``` pony\nfun box space()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L45)\n\nGet the i-th element from the ring. If the i-th element has not yet been added or is no longer available, this will raise an error.\n\n``` pony\nfun box apply(\n  i: USize val)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>A ?\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L56)\n\nAdd an element to the ring. If the ring is full, this will drop the oldest element in the ring. Returns true if an element was dropped.\n\n``` pony\nfun ref push(\n  value: A)\n: Bool val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L73)\n\nClear the queue.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-RingBuffer](https://stdlib.ponylang.io/collections-RingBuffer)"
- name: RingBuffer.apply()
  id: collections-ringbuffer#apply
  summary: Get the i-th element from the ring
  belongs_to: RingBuffer
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L45)

    Get the i-th element from the ring. If the i-th element has not yet been added or is no longer available, this will raise an error.

    ``` pony
    fun box apply(
      i: USize val)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>A ?

    &nbsp;
- name: RingBuffer.clear()
  id: collections-ringbuffer#clear
  summary: Clear the queue
  belongs_to: RingBuffer
  description: "### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L73)\n\nClear the queue.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-RingBuffer](https://stdlib.ponylang.io/collections-RingBuffer)"
- name: RingBuffer.create()
  id: collections-ringbuffer#create
  summary: Create a ring buffer with a fixed size
  belongs_to: RingBuffer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L9)

    Create a ring buffer with a fixed size. The size will be rounded up to the next power of 2.

    ``` pony
    new ref create(
      len: USize val)
    : RingBuffer[A] ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [RingBuffer](index)\[A\] ref^

    ## Public Functions
- name: RingBuffer.head()
  id: collections-ringbuffer#head
  summary: The first read that will succeed
  belongs_to: RingBuffer
  description: |-
    ### head

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L18)

    The first read that will succeed. If nothing has been written to the ring, this will raise an error.

    ``` pony
    fun box head()
    : USize val ?
    ```

    #### Returns

    - [USize](builtin-usize) val ?
- name: RingBuffer.push()
  id: collections-ringbuffer#push
  summary: Add an element to the ring
  belongs_to: RingBuffer
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L56)

    Add an element to the ring. If the ring is full, this will drop the oldest element in the ring. Returns true if an element was dropped.

    ``` pony
    fun ref push(
      value: A)
    : Bool val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: RingBuffer.size()
  id: collections-ringbuffer#size
  summary: The number of elements that have been added to the ring
  belongs_to: RingBuffer
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L33)

    The number of elements that have been added to the ring.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: RingBuffer.space()
  id: collections-ringbuffer#space
  summary: The available space in the ring
  belongs_to: RingBuffer
  description: |-
    ### space

    [\[Source\]](https://stdlib.ponylang.io/src/collections/ring_buffer/#L39)

    The available space in the ring.

    ``` pony
    fun box space()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: RuntimeOptions
  id: builtin-runtimeoptions
  summary: Pony struct for the Pony runtime options C struct that can be used to override the Pony runtime defaults via code compiled into the program
  description: "# RuntimeOptions\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L1)\n\nPony struct for the Pony runtime options C struct that can be used to override the Pony runtime defaults via code compiled into the program.\n\nThe way this is done is by adding the following function to your `Main` actor:\n\n``` pony\n  fun @runtime_override_defaults(rto: RuntimeOptions) =>\n```\n\nand then overriding the fields of `rto` (the `RuntimeOptions` instance) as needed.\n\nNOTE: Command line arguments still any values set via `@runtime_override_defaults`.\n\nThe following example overrides the `--ponyhelp` argument to default it to `true` instead of `false` causing the compiled program to always display the Pony runtime help:\n\n``` pony\nactor Main\n  new create(env: Env) =>\n    env.out.print(\"Hello, world.\")\n\n  fun @runtime_override_defaults(rto: RuntimeOptions) =>\n    rto.ponyhelp = true\n```\n\n``` pony\nstruct ref RuntimeOptions\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L1)\n\n``` pony\nnew iso create()\n: RuntimeOptions iso^\n```\n\n#### Returns\n\n- [RuntimeOptions](index) iso^\n\n## Public fields\n\n### var ponymaxthreads: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L37)\n\nUse N scheduler threads. Defaults to the number of cores (not hyperthreads) available. This can't be larger than the number of cores available.\n\n### var ponyminthreads: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L44)\n\nMinimum number of active scheduler threads allowed. Defaults to 0, meaning that all scheduler threads are allowed to be suspended when no work is available. This can't be larger than --ponymaxthreads if provided, or the physical cores available.\n\n### var ponynoscale: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L53)\n\nDon't scale down the scheduler threads. See --ponymaxthreads on how to specify the number of threads explicitly. Can't be used with --ponyminthreads.\n\n### var ponysuspendthreshold: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L60)\n\nAmount of idle time before a scheduler thread suspends itself to minimize resource consumption (max 1000 ms, min 1 ms). Defaults to 1 ms.\n\n### var ponycdinterval: [U32](builtin-u32) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L67)\n\nRun cycle detection every N ms (max 1000 ms, min 10 ms). Defaults to 100 ms.\n\n### var ponygcinitial: [USize](builtin-usize) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L73)\n\nDefer garbage collection until an actor is using at least 2^N bytes. Defaults to 2^14.\n\n### var ponygcfactor: [F64](builtin-f64) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L79)\n\nAfter GC, an actor will next be GC'd at a heap memory usage N times its current value. This is a floating point value. Defaults to 2.0.\n\n### var ponynoyield: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L85)\n\nDo not yield the CPU when no work is available.\n\n### var ponynoblock: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L90)\n\nDo not send block messages to the cycle detector.\n\n### var ponypin: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L95)\n\nPin scheduler threads to CPU cores. The ASIO thread can also be pinned if `--ponypinasio` is set.\n\n### var ponypinasio: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L101)\n\nPin the ASIO thread to a CPU the way scheduler threads are pinned to CPUs. Requires `--ponypin` to be set to have any effect.\n\n### var ponyversion: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L107)\n\nPrint the version of the compiler and exit.\n\n### var ponyhelp: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L112)\n\nPrint the runtime usage options and exit.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-RuntimeOptions](https://stdlib.ponylang.io/builtin-RuntimeOptions)"
- name: RuntimeOptions.create()
  id: builtin-runtimeoptions#create
  summary: null
  belongs_to: RuntimeOptions
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L1)

    ``` pony
    new iso create()
    : RuntimeOptions iso^
    ```

    #### Returns

    - [RuntimeOptions](index) iso^

    ## Public fields
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponymaxthreads-u32-val
  summary: Use N scheduler threads
  belongs_to: RuntimeOptions
  description: |-
    ### var ponymaxthreads: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L37)

    Use N scheduler threads. Defaults to the number of cores (not hyperthreads) available. This can't be larger than the number of cores available.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponyminthreads-u32-val
  summary: Minimum number of active scheduler threads allowed
  belongs_to: RuntimeOptions
  description: |-
    ### var ponyminthreads: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L44)

    Minimum number of active scheduler threads allowed. Defaults to 0, meaning that all scheduler threads are allowed to be suspended when no work is available. This can't be larger than --ponymaxthreads if provided, or the physical cores available.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponynoscale-bool-val
  summary: Don't scale down the scheduler threads
  belongs_to: RuntimeOptions
  description: |-
    ### var ponynoscale: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L53)

    Don't scale down the scheduler threads. See --ponymaxthreads on how to specify the number of threads explicitly. Can't be used with --ponyminthreads.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponysuspendthreshold-u32-val
  summary: Amount of idle time before a scheduler thread suspends itself to minimize resource consumption (max 1000 ms, min 1 ms)
  belongs_to: RuntimeOptions
  description: |-
    ### var ponysuspendthreshold: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L60)

    Amount of idle time before a scheduler thread suspends itself to minimize resource consumption (max 1000 ms, min 1 ms). Defaults to 1 ms.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponycdinterval-u32-val
  summary: Run cycle detection every N ms (max 1000 ms, min 10 ms)
  belongs_to: RuntimeOptions
  description: |-
    ### var ponycdinterval: [U32](builtin-u32) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L67)

    Run cycle detection every N ms (max 1000 ms, min 10 ms). Defaults to 100 ms.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponygcinitial-usize-val
  summary: Defer garbage collection until an actor is using at least 2^N bytes
  belongs_to: RuntimeOptions
  description: |-
    ### var ponygcinitial: [USize](builtin-usize) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L73)

    Defer garbage collection until an actor is using at least 2^N bytes. Defaults to 2^14.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponygcfactor-f64-val
  summary: After GC, an actor will next be GC'd at a heap memory usage N times its current value
  belongs_to: RuntimeOptions
  description: |-
    ### var ponygcfactor: [F64](builtin-f64) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L79)

    After GC, an actor will next be GC'd at a heap memory usage N times its current value. This is a floating point value. Defaults to 2.0.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponynoyield-bool-val
  summary: Do not yield the CPU when no work is available
  belongs_to: RuntimeOptions
  description: |-
    ### var ponynoyield: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L85)

    Do not yield the CPU when no work is available.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponynoblock-bool-val
  summary: Do not send block messages to the cycle detector
  belongs_to: RuntimeOptions
  description: |-
    ### var ponynoblock: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L90)

    Do not send block messages to the cycle detector.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponypin-bool-val
  summary: Pin scheduler threads to CPU cores
  belongs_to: RuntimeOptions
  description: |-
    ### var ponypin: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L95)

    Pin scheduler threads to CPU cores. The ASIO thread can also be pinned if `--ponypinasio` is set.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponypinasio-bool-val
  summary: Pin the ASIO thread to a CPU the way scheduler threads are pinned to CPUs
  belongs_to: RuntimeOptions
  description: |-
    ### var ponypinasio: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L101)

    Pin the ASIO thread to a CPU the way scheduler threads are pinned to CPUs. Requires `--ponypin` to be set to have any effect.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponyversion-bool-val
  summary: Print the version of the compiler and exit
  belongs_to: RuntimeOptions
  description: |-
    ### var ponyversion: [Bool](builtin-bool) val

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L107)

    Print the version of the compiler and exit.
- name: RuntimeOptions.var()
  id: builtin-runtimeoptions#var-ponyhelp-bool-val
  summary: Print the runtime usage options and exit
  belongs_to: RuntimeOptions
  description: "### var ponyhelp: [Bool](builtin-bool) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/runtime_options/#L112)\n\nPrint the runtime usage options and exit.\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-RuntimeOptions](https://stdlib.ponylang.io/builtin-RuntimeOptions)"
- name: Seq
  id: builtin-seq
  summary: A sequence of elements
  description: "# Seq\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L1)\n\nA sequence of elements.\n\n``` pony\ninterface ref Seq[A: A]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L5)\n\nCreate a sequence, reserving space for len elements.\n\n``` pony\nnew ref create(\n  len: USize val = 0)\n: Seq[A] ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Seq](index)\\[A\\] ref^\n\n## Public Functions\n\n### reserve\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L10)\n\nReserve space for len elements.\n\n``` pony\nfun ref reserve(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L15)\n\nReturns the number of elements in the sequence.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L20)\n\nReturns the i-th element of the sequence. Raises an error if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: this->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- this-\\>A ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L26)\n\nReplaces the i-th element of the sequence. Returns the previous value. Raises an error if the index is out of bounds.\n\n``` pony\nfun ref update(\n  i: USize val,\n  value: A)\n: A^ ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: A\n\n#### Returns\n\n- A^ ?\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L32)\n\nRemoves all elements from the sequence.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L37)\n\nAdds an element to the end of the sequence.\n\n``` pony\nfun ref push(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L42)\n\nRemoves an element from the end of the sequence.\n\n``` pony\nfun ref pop()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### unshift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L47)\n\nAdds an element to the beginning of the sequence.\n\n``` pony\nfun ref unshift(\n  value: A)\n: None val\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [None](builtin-none) val\n\n### shift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L52)\n\nRemoves an element from the beginning of the sequence.\n\n``` pony\nfun ref shift()\n: A^ ?\n```\n\n#### Returns\n\n- A^ ?\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L57)\n\nAdd len elements to the end of the list, starting from the given offset.\n\n``` pony\nfun ref append(\n  seq: (ReadSeq[A] box & ReadElement[A^] box),\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- seq: ([ReadSeq](builtin-readseq)\\[A\\] box & [ReadElement](builtin-readelement)\\[A^\\] box)\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L66)\n\nAdd len iterated elements to the end of the list, starting from the given offset.\n\n``` pony\nfun ref concat(\n  iter: Iterator[A^] ref,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[A^\\] ref\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### truncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L72)\n\nTruncate the sequence to the given length, discarding excess elements. If the sequence is already smaller than len, do nothing.\n\n``` pony\nfun ref truncate(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L78)\n\nReturns an iterator over the elements of the sequence.\n\n``` pony\nfun box values()\n: Iterator[this->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[this-\\>A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Seq](https://stdlib.ponylang.io/builtin-Seq)"
- name: Seq.append()
  id: builtin-seq#append
  summary: Add len elements to the end of the list, starting from the given offset
  belongs_to: Seq
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L57)

    Add len elements to the end of the list, starting from the given offset.

    ``` pony
    fun ref append(
      seq: (ReadSeq[A] box & ReadElement[A^] box),
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - seq: ([ReadSeq](builtin-readseq)\[A\] box & [ReadElement](builtin-readelement)\[A^\] box)
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.apply()
  id: builtin-seq#apply
  summary: Returns the i-th element of the sequence
  belongs_to: Seq
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L20)

    Returns the i-th element of the sequence. Raises an error if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : this->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - this-\>A ?

    &nbsp;
- name: Seq.clear()
  id: builtin-seq#clear
  summary: Removes all elements from the sequence
  belongs_to: Seq
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L32)

    Removes all elements from the sequence.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.concat()
  id: builtin-seq#concat
  summary: Add len iterated elements to the end of the list, starting from the given offset
  belongs_to: Seq
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L66)

    Add len iterated elements to the end of the list, starting from the given offset.

    ``` pony
    fun ref concat(
      iter: Iterator[A^] ref,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[A^\] ref
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.create()
  id: builtin-seq#create
  summary: Create a sequence, reserving space for len elements
  belongs_to: Seq
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L5)

    Create a sequence, reserving space for len elements.

    ``` pony
    new ref create(
      len: USize val = 0)
    : Seq[A] ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 0

    #### Returns

    - [Seq](index)\[A\] ref^

    ## Public Functions
- name: Seq.pop()
  id: builtin-seq#pop
  summary: Removes an element from the end of the sequence
  belongs_to: Seq
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L42)

    Removes an element from the end of the sequence.

    ``` pony
    fun ref pop()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: Seq.push()
  id: builtin-seq#push
  summary: Adds an element to the end of the sequence
  belongs_to: Seq
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L37)

    Adds an element to the end of the sequence.

    ``` pony
    fun ref push(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.reserve()
  id: builtin-seq#reserve
  summary: Reserve space for len elements
  belongs_to: Seq
  description: |-
    ### reserve

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L10)

    Reserve space for len elements.

    ``` pony
    fun ref reserve(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val
- name: Seq.shift()
  id: builtin-seq#shift
  summary: Removes an element from the beginning of the sequence
  belongs_to: Seq
  description: |-
    ### shift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L52)

    Removes an element from the beginning of the sequence.

    ``` pony
    fun ref shift()
    : A^ ?
    ```

    #### Returns

    - A^ ?

    &nbsp;
- name: Seq.size()
  id: builtin-seq#size
  summary: Returns the number of elements in the sequence
  belongs_to: Seq
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L15)

    Returns the number of elements in the sequence.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Seq.truncate()
  id: builtin-seq#truncate
  summary: Truncate the sequence to the given length, discarding excess elements
  belongs_to: Seq
  description: |-
    ### truncate

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L72)

    Truncate the sequence to the given length, discarding excess elements. If the sequence is already smaller than len, do nothing.

    ``` pony
    fun ref truncate(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.unshift()
  id: builtin-seq#unshift
  summary: Adds an element to the beginning of the sequence
  belongs_to: Seq
  description: |-
    ### unshift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L47)

    Adds an element to the beginning of the sequence.

    ``` pony
    fun ref unshift(
      value: A)
    : None val
    ```

    #### Parameters

    - value: A

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Seq.update()
  id: builtin-seq#update
  summary: Replaces the i-th element of the sequence
  belongs_to: Seq
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/seq/#L26)

    Replaces the i-th element of the sequence. Returns the previous value. Raises an error if the index is out of bounds.

    ``` pony
    fun ref update(
      i: USize val,
      value: A)
    : A^ ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: A

    #### Returns

    - A^ ?

    &nbsp;
- name: Seq.values()
  id: builtin-seq#values
  summary: Returns an iterator over the elements of the sequence
  belongs_to: Seq
  description: "### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/seq/#L78)\n\nReturns an iterator over the elements of the sequence.\n\n``` pony\nfun box values()\n: Iterator[this->A] ref^\n```\n\n#### Returns\n\n- [Iterator](builtin-iterator)\\[this-\\>A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Seq](https://stdlib.ponylang.io/builtin-Seq)"
- name: Serialise
  id: serialise-serialise
  summary: Returns a byte array that is unique to this compiled Pony binary, for the purposes of comparing before deserialising any data from that source
  description: "# Serialise\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L30)\n\n``` pony\nprimitive val Serialise\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L30)\n\n``` pony\nnew val create()\n: Serialise val^\n```\n\n#### Returns\n\n- [Serialise](index) val^\n\n## Public Functions\n\n### signature\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)\n\nReturns a byte array that is unique to this compiled Pony binary, for the purposes of comparing before deserialising any data from that source. It is statistically impossible for two serialisation-incompatible Pony binaries to have the same serialise signature.\n\n``` pony\nfun box signature()\n: Array[U8 val] val\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)\n\n``` pony\nfun box eq(\n  that: Serialise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Serialise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)\n\n``` pony\nfun box ne(\n  that: Serialise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Serialise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-Serialise](https://stdlib.ponylang.io/serialise-Serialise)"
- name: Serialise.create()
  id: serialise-serialise#create
  summary: null
  belongs_to: Serialise
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L30)

    ``` pony
    new val create()
    : Serialise val^
    ```

    #### Returns

    - [Serialise](index) val^

    ## Public Functions
- name: Serialise.eq()
  id: serialise-serialise#eq
  summary: null
  belongs_to: Serialise
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)

    ``` pony
    fun box eq(
      that: Serialise val)
    : Bool val
    ```

    #### Parameters

    - that: [Serialise](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Serialise.ne()
  id: serialise-serialise#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Serialise
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)\n\n``` pony\nfun box ne(\n  that: Serialise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Serialise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-Serialise](https://stdlib.ponylang.io/serialise-Serialise)"
- name: Serialise.signature()
  id: serialise-serialise#signature
  summary: Returns a byte array that is unique to this compiled Pony binary, for the purposes of comparing before deserialising any data from that source
  belongs_to: Serialise
  description: |-
    ### signature

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L31)

    Returns a byte array that is unique to this compiled Pony binary, for the purposes of comparing before deserialising any data from that source. It is statistically impossible for two serialisation-incompatible Pony binaries to have the same serialise signature.

    ``` pony
    fun box signature()
    : Array[U8 val] val
    ```

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] val
- name: SerialiseAuth
  id: serialise-serialiseauth
  summary: This is a capability that allows the holder to serialise objects
  description: "# SerialiseAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L40)\n\nThis is a capability that allows the holder to serialise objects. It does not allow the holder to examine serialised data or to deserialise objects.\n\n``` pony\nprimitive val SerialiseAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)\n\n``` pony\nnew val create(\n  auth: AmbientAuth val)\n: SerialiseAuth val^\n```\n\n#### Parameters\n\n- auth: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [SerialiseAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)\n\n``` pony\nfun box eq(\n  that: SerialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SerialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)\n\n``` pony\nfun box ne(\n  that: SerialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SerialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-SerialiseAuth](https://stdlib.ponylang.io/serialise-SerialiseAuth)"
- name: SerialiseAuth.create()
  id: serialise-serialiseauth#create
  summary: null
  belongs_to: SerialiseAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)

    ``` pony
    new val create(
      auth: AmbientAuth val)
    : SerialiseAuth val^
    ```

    #### Parameters

    - auth: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [SerialiseAuth](index) val^

    ## Public Functions
- name: SerialiseAuth.eq()
  id: serialise-serialiseauth#eq
  summary: null
  belongs_to: SerialiseAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)

    ``` pony
    fun box eq(
      that: SerialiseAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [SerialiseAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: SerialiseAuth.ne()
  id: serialise-serialiseauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: SerialiseAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L45)\n\n``` pony\nfun box ne(\n  that: SerialiseAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SerialiseAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-SerialiseAuth](https://stdlib.ponylang.io/serialise-SerialiseAuth)"
- name: Serialised
  id: serialise-serialised
  summary: This represents serialised data
  description: "# Serialised\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L78)\n\nThis represents serialised data. How it can be used depends on the other capabilities a caller holds.\n\n``` pony\nclass val Serialised\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L85)\n\nA caller with SerialiseAuth can create serialised data from any object.\n\n``` pony\nnew ref create(\n  auth: SerialiseAuth val,\n  data: Any box)\n: Serialised ref^ ?\n```\n\n#### Parameters\n\n- auth: [SerialiseAuth](serialise-serialiseauth) val\n- data: [Any](builtin-any) box\n\n#### Returns\n\n- [Serialised](index) ref^ ?\n\n### input\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L99)\n\nA caller with InputSerialisedAuth can create serialised data from any arbitrary set of bytes. It is the caller's responsibility to ensure that the data is in fact well-formed serialised data. This is currently the most dangerous method, as there is currently no way to check validity at runtime.\n\n``` pony\nnew ref input(\n  auth: InputSerialisedAuth val,\n  data: Array[U8 val] val)\n: Serialised ref^\n```\n\n#### Parameters\n\n- auth: [InputSerialisedAuth](serialise-inputserialisedauth) val\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n#### Returns\n\n- [Serialised](index) ref^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L109)\n\nA caller with DeserialiseAuth can create an object graph from serialised data.\n\n``` pony\nfun box apply(\n  auth: DeserialiseAuth val)\n: Any iso^ ?\n```\n\n#### Parameters\n\n- auth: [DeserialiseAuth](serialise-deserialiseauth) val\n\n#### Returns\n\n- [Any](builtin-any) iso^ ?\n\n### output\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L126)\n\nA caller with OutputSerialisedAuth can gain access to the underlying bytes that contain the serialised data. This can be used to write those bytes to, for example, a file or socket.\n\n``` pony\nfun box output(\n  auth: OutputSerialisedAuth val)\n: Array[U8 val] val\n```\n\n#### Parameters\n\n- auth: [OutputSerialisedAuth](serialise-outputserialisedauth) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-Serialised](https://stdlib.ponylang.io/serialise-Serialised)"
- name: Serialised.apply()
  id: serialise-serialised#apply
  summary: A caller with DeserialiseAuth can create an object graph from serialised data
  belongs_to: Serialised
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L109)

    A caller with DeserialiseAuth can create an object graph from serialised data.

    ``` pony
    fun box apply(
      auth: DeserialiseAuth val)
    : Any iso^ ?
    ```

    #### Parameters

    - auth: [DeserialiseAuth](serialise-deserialiseauth) val

    #### Returns

    - [Any](builtin-any) iso^ ?

    &nbsp;
- name: Serialised.create()
  id: serialise-serialised#create
  summary: A caller with SerialiseAuth can create serialised data from any object
  belongs_to: Serialised
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L85)

    A caller with SerialiseAuth can create serialised data from any object.

    ``` pony
    new ref create(
      auth: SerialiseAuth val,
      data: Any box)
    : Serialised ref^ ?
    ```

    #### Parameters

    - auth: [SerialiseAuth](serialise-serialiseauth) val
    - data: [Any](builtin-any) box

    #### Returns

    - [Serialised](index) ref^ ?
- name: Serialised.input()
  id: serialise-serialised#input
  summary: A caller with InputSerialisedAuth can create serialised data from any arbitrary set of bytes
  belongs_to: Serialised
  description: |-
    ### input

    [\[Source\]](https://stdlib.ponylang.io/src/serialise/serialise/#L99)

    A caller with InputSerialisedAuth can create serialised data from any arbitrary set of bytes. It is the caller's responsibility to ensure that the data is in fact well-formed serialised data. This is currently the most dangerous method, as there is currently no way to check validity at runtime.

    ``` pony
    new ref input(
      auth: InputSerialisedAuth val,
      data: Array[U8 val] val)
    : Serialised ref^
    ```

    #### Parameters

    - auth: [InputSerialisedAuth](serialise-inputserialisedauth) val
    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] val

    #### Returns

    - [Serialised](index) ref^

    ## Public Functions
- name: Serialised.output()
  id: serialise-serialised#output
  summary: A caller with OutputSerialisedAuth can gain access to the underlying bytes that contain the serialised data
  belongs_to: Serialised
  description: "### output\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/serialise/serialise/#L126)\n\nA caller with OutputSerialisedAuth can gain access to the underlying bytes that contain the serialised data. This can be used to write those bytes to, for example, a file or socket.\n\n``` pony\nfun box output(\n  auth: OutputSerialisedAuth val)\n: Array[U8 val] val\n```\n\n#### Parameters\n\n- auth: [OutputSerialisedAuth](serialise-outputserialisedauth) val\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/serialise-Serialised](https://stdlib.ponylang.io/serialise-Serialised)"
- name: Set
  id: collections-set
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Set\\[A: ([Hashable](collections-hashable) \\#read & [Equatable](builtin-equatable)\\[A\\] \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L1)\n\n``` pony\ntype Set[A: (Hashable #read & Equatable[A] #read)] is\n  HashSet[A, HashEq[A] val] ref\n```\n\n#### Type Alias For\n\n- [HashSet](collections-hashset)\\[A, [HashEq](collections-hasheq)\\[A\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Set](https://stdlib.ponylang.io/collections-Set)"
- name: Set
  id: collections-persistent-set
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Set\\[A: ([Hashable](collections-hashable) val & [Equatable](builtin-equatable)\\[A\\])\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L3)\n\n``` pony\ntype Set[A: (Hashable val & Equatable[A])] is\n  HashSet[A, HashEq[A] val] val\n```\n\n#### Type Alias For\n\n- [HashSet](collections-persistent-hashset)\\[A, [HashEq](collections-hasheq)\\[A\\] val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Set](https://stdlib.ponylang.io/collections-persistent-Set)"
- name: SetIs
  id: collections-setis
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# SetIs\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L3)\n\n``` pony\ntype SetIs[A: A] is\n  HashSet[A, HashIs[A!] val] ref\n```\n\n#### Type Alias For\n\n- [HashSet](collections-hashset)\\[A, [HashIs](collections-hashis)\\[A!\\] val\\] ref\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-SetIs](https://stdlib.ponylang.io/collections-SetIs)"
- name: SetIs
  id: collections-persistent-setis
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# SetIs\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/set/#L5)\n\n``` pony\ntype SetIs[A: Any #share] is\n  HashSet[A, HashIs[A] val] val\n```\n\n#### Type Alias For\n\n- [HashSet](collections-persistent-hashset)\\[A, [HashIs](collections-hashis)\\[A\\] val\\] val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-SetIs](https://stdlib.ponylang.io/collections-persistent-SetIs)"
- name: SetValues
  id: collections-setvalues
  summary: An iterator over the values in a set
  description: "# SetValues\\[A: A, H: [HashFunction](collections-hashfunction)\\[A!\\] val, S: [HashSet](collections-hashset)\\[A, H\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L286)\n\nAn iterator over the values in a set.\n\n``` pony\nclass ref SetValues[A: A, H: HashFunction[A!] val, S: HashSet[A, H] #read] is\n  Iterator[S->A] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[S-\\>A\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L295)\n\nCreates an iterator for the given set.\n\n``` pony\nnew ref create(\n  set: S)\n: SetValues[A, H, S] ref^\n```\n\n#### Parameters\n\n- set: S\n\n#### Returns\n\n- [SetValues](index)\\[A, H, S\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L301)\n\nTrue if it believes there are remaining entries. May not be right if values were added or removed from the set.\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L308)\n\nReturns the next value, or raises an error if there isn't one. If values are added during iteration, this may not return all values.\n\n``` pony\nfun ref next()\n: S->A ?\n```\n\n#### Returns\n\n- S-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-SetValues](https://stdlib.ponylang.io/collections-SetValues)"
- name: SetValues.create()
  id: collections-setvalues#create
  summary: Creates an iterator for the given set
  belongs_to: SetValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L295)

    Creates an iterator for the given set.

    ``` pony
    new ref create(
      set: S)
    : SetValues[A, H, S] ref^
    ```

    #### Parameters

    - set: S

    #### Returns

    - [SetValues](index)\[A, H, S\] ref^

    ## Public Functions
- name: SetValues.has_next()
  id: collections-setvalues#has_next
  summary: True if it believes there are remaining entries
  belongs_to: SetValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections/set/#L301)

    True if it believes there are remaining entries. May not be right if values were added or removed from the set.

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: SetValues.next()
  id: collections-setvalues#next
  summary: Returns the next value, or raises an error if there isn't one
  belongs_to: SetValues
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/set/#L308)\n\nReturns the next value, or raises an error if there isn't one. If values are added during iteration, this may not return all values.\n\n``` pony\nfun ref next()\n: S->A ?\n```\n\n#### Returns\n\n- S-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-SetValues](https://stdlib.ponylang.io/collections-SetValues)"
- name: Sig
  id: signals-sig
  summary: Define the portable signal numbers
  description: "# Sig\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L51)\n\nDefine the portable signal numbers. Other signals can be used, but they are not guaranteed to be portable.\n\n``` pony\nprimitive val Sig\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L51)\n\n``` pony\nnew val create()\n: Sig val^\n```\n\n#### Returns\n\n- [Sig](index) val^\n\n## Public Functions\n\n### hup\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L56)\n\n``` pony\nfun box hup()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### int\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L57)\n\n``` pony\nfun box int()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### quit\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L58)\n\n``` pony\nfun box quit()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ill\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L60)\n\n``` pony\nfun box ill()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### trap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L65)\n\n``` pony\nfun box trap()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### abrt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L70)\n\n``` pony\nfun box abrt()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### emt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L72)\n\n``` pony\nfun box emt()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### fpe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L77)\n\n``` pony\nfun box fpe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### kill\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L82)\n\n``` pony\nfun box kill()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### bus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L84)\n\n``` pony\nfun box bus()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### segv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L90)\n\n``` pony\nfun box segv()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### sys\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L95)\n\n``` pony\nfun box sys()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### pipe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L101)\n\n``` pony\nfun box pipe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### alrm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L106)\n\n``` pony\nfun box alrm()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### term\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L107)\n\n``` pony\nfun box term()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### urg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L109)\n\n``` pony\nfun box urg()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### stkflt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L115)\n\n``` pony\nfun box stkflt()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### stop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L120)\n\n``` pony\nfun box stop()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### tstp\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L126)\n\n``` pony\nfun box tstp()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### cont\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L132)\n\n``` pony\nfun box cont()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### chld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L138)\n\n``` pony\nfun box chld()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ttin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L144)\n\n``` pony\nfun box ttin()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### ttou\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L149)\n\n``` pony\nfun box ttou()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### io\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L154)\n\n``` pony\nfun box io()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### xcpu\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L160)\n\n``` pony\nfun box xcpu()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### xfsz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L165)\n\n``` pony\nfun box xfsz()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### vtalrm\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L170)\n\n``` pony\nfun box vtalrm()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### prof\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L175)\n\n``` pony\nfun box prof()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### winch\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L180)\n\n``` pony\nfun box winch()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### info\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L185)\n\n``` pony\nfun box info()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### pwr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L190)\n\n``` pony\nfun box pwr()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### usr1\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L195)\n\n``` pony\nfun box usr1()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### usr2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L201)\n\n``` pony\nfun box usr2()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### rt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L215)\n\n``` pony\nfun box rt(\n  n: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- n: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L56)\n\n``` pony\nfun box eq(\n  that: Sig val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sig](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L56)\n\n``` pony\nfun box ne(\n  that: Sig val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sig](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-Sig](https://stdlib.ponylang.io/signals-Sig)"
- name: Sig.abrt()
  id: signals-sig#abrt
  summary: null
  belongs_to: Sig
  description: |-
    ### abrt

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L70)

    ``` pony
    fun box abrt()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.alrm()
  id: signals-sig#alrm
  summary: null
  belongs_to: Sig
  description: |-
    ### alrm

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L106)

    ``` pony
    fun box alrm()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.bus()
  id: signals-sig#bus
  summary: null
  belongs_to: Sig
  description: |-
    ### bus

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L84)

    ``` pony
    fun box bus()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.chld()
  id: signals-sig#chld
  summary: null
  belongs_to: Sig
  description: |-
    ### chld

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L138)

    ``` pony
    fun box chld()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.cont()
  id: signals-sig#cont
  summary: null
  belongs_to: Sig
  description: |-
    ### cont

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L132)

    ``` pony
    fun box cont()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.create()
  id: signals-sig#create
  summary: null
  belongs_to: Sig
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L51)

    ``` pony
    new val create()
    : Sig val^
    ```

    #### Returns

    - [Sig](index) val^

    ## Public Functions
- name: Sig.emt()
  id: signals-sig#emt
  summary: null
  belongs_to: Sig
  description: |-
    ### emt

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L72)

    ``` pony
    fun box emt()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.eq()
  id: signals-sig#eq
  summary: null
  belongs_to: Sig
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L56)

    ``` pony
    fun box eq(
      that: Sig val)
    : Bool val
    ```

    #### Parameters

    - that: [Sig](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Sig.fpe()
  id: signals-sig#fpe
  summary: null
  belongs_to: Sig
  description: |-
    ### fpe

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L77)

    ``` pony
    fun box fpe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.hup()
  id: signals-sig#hup
  summary: null
  belongs_to: Sig
  description: |-
    ### hup

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L56)

    ``` pony
    fun box hup()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Sig.ill()
  id: signals-sig#ill
  summary: null
  belongs_to: Sig
  description: |-
    ### ill

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L60)

    ``` pony
    fun box ill()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.info()
  id: signals-sig#info
  summary: null
  belongs_to: Sig
  description: |-
    ### info

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L185)

    ``` pony
    fun box info()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.int()
  id: signals-sig#int
  summary: null
  belongs_to: Sig
  description: |-
    ### int

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L57)

    ``` pony
    fun box int()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.io()
  id: signals-sig#io
  summary: null
  belongs_to: Sig
  description: |-
    ### io

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L154)

    ``` pony
    fun box io()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.kill()
  id: signals-sig#kill
  summary: null
  belongs_to: Sig
  description: |-
    ### kill

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L82)

    ``` pony
    fun box kill()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.ne()
  id: signals-sig#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Sig
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/sig/#L56)\n\n``` pony\nfun box ne(\n  that: Sig val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sig](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-Sig](https://stdlib.ponylang.io/signals-Sig)"
- name: Sig.pipe()
  id: signals-sig#pipe
  summary: null
  belongs_to: Sig
  description: |-
    ### pipe

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L101)

    ``` pony
    fun box pipe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.prof()
  id: signals-sig#prof
  summary: null
  belongs_to: Sig
  description: |-
    ### prof

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L175)

    ``` pony
    fun box prof()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.pwr()
  id: signals-sig#pwr
  summary: null
  belongs_to: Sig
  description: |-
    ### pwr

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L190)

    ``` pony
    fun box pwr()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.quit()
  id: signals-sig#quit
  summary: null
  belongs_to: Sig
  description: |-
    ### quit

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L58)

    ``` pony
    fun box quit()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.rt()
  id: signals-sig#rt
  summary: null
  belongs_to: Sig
  description: |-
    ### rt

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L215)

    ``` pony
    fun box rt(
      n: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - n: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: Sig.segv()
  id: signals-sig#segv
  summary: null
  belongs_to: Sig
  description: |-
    ### segv

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L90)

    ``` pony
    fun box segv()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.stkflt()
  id: signals-sig#stkflt
  summary: null
  belongs_to: Sig
  description: |-
    ### stkflt

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L115)

    ``` pony
    fun box stkflt()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.stop()
  id: signals-sig#stop
  summary: null
  belongs_to: Sig
  description: |-
    ### stop

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L120)

    ``` pony
    fun box stop()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.sys()
  id: signals-sig#sys
  summary: null
  belongs_to: Sig
  description: |-
    ### sys

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L95)

    ``` pony
    fun box sys()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.term()
  id: signals-sig#term
  summary: null
  belongs_to: Sig
  description: |-
    ### term

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L107)

    ``` pony
    fun box term()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.trap()
  id: signals-sig#trap
  summary: null
  belongs_to: Sig
  description: |-
    ### trap

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L65)

    ``` pony
    fun box trap()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.tstp()
  id: signals-sig#tstp
  summary: null
  belongs_to: Sig
  description: |-
    ### tstp

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L126)

    ``` pony
    fun box tstp()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.ttin()
  id: signals-sig#ttin
  summary: null
  belongs_to: Sig
  description: |-
    ### ttin

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L144)

    ``` pony
    fun box ttin()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.ttou()
  id: signals-sig#ttou
  summary: null
  belongs_to: Sig
  description: |-
    ### ttou

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L149)

    ``` pony
    fun box ttou()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.urg()
  id: signals-sig#urg
  summary: null
  belongs_to: Sig
  description: |-
    ### urg

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L109)

    ``` pony
    fun box urg()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.usr1()
  id: signals-sig#usr1
  summary: null
  belongs_to: Sig
  description: |-
    ### usr1

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L195)

    ``` pony
    fun box usr1()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.usr2()
  id: signals-sig#usr2
  summary: null
  belongs_to: Sig
  description: |-
    ### usr2

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L201)

    ``` pony
    fun box usr2()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.vtalrm()
  id: signals-sig#vtalrm
  summary: null
  belongs_to: Sig
  description: |-
    ### vtalrm

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L170)

    ``` pony
    fun box vtalrm()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.winch()
  id: signals-sig#winch
  summary: null
  belongs_to: Sig
  description: |-
    ### winch

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L180)

    ``` pony
    fun box winch()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.xcpu()
  id: signals-sig#xcpu
  summary: null
  belongs_to: Sig
  description: |-
    ### xcpu

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L160)

    ``` pony
    fun box xcpu()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Sig.xfsz()
  id: signals-sig#xfsz
  summary: null
  belongs_to: Sig
  description: |-
    ### xfsz

    [\[Source\]](https://stdlib.ponylang.io/src/signals/sig/#L165)

    ``` pony
    fun box xfsz()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: Signaled
  id: process-signaled
  summary: 'Process exit status: Process was terminated by a signal'
  description: "# Signaled\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L103)\n\nProcess exit status: Process was terminated by a signal.\n\n``` pony\nclass val Signaled is\n  Stringable box,\n  Equatable[(Exited val | Signaled val)] ref\n```\n\n#### Implements\n\n- [Stringable](builtin-stringable) box\n- [Equatable](builtin-equatable)\\[([Exited](process-exited) val \\| [Signaled](index) val)\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L109)\n\n``` pony\nnew val create(\n  sig: U32 val)\n: Signaled val^\n```\n\n#### Parameters\n\n- sig: [U32](builtin-u32) val\n\n#### Returns\n\n- [Signaled](index) val^\n\n## Public Functions\n\n### signal\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L112)\n\nRetrieve the signal number that exited the process.\n\n``` pony\nfun box signal()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L118)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/_process/#L126)\n\n``` pony\nfun box eq(\n  other: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- other: ([Exited](process-exited) val \\| [Signaled](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Exited](process-exited) val \\| [Signaled](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-Signaled](https://stdlib.ponylang.io/process-Signaled)"
- name: Signaled.create()
  id: process-signaled#create
  summary: null
  belongs_to: Signaled
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L109)

    ``` pony
    new val create(
      sig: U32 val)
    : Signaled val^
    ```

    #### Parameters

    - sig: [U32](builtin-u32) val

    #### Returns

    - [Signaled](index) val^

    ## Public Functions
- name: Signaled.eq()
  id: process-signaled#eq
  summary: null
  belongs_to: Signaled
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L126)

    ``` pony
    fun box eq(
      other: (Exited val | Signaled val))
    : Bool val
    ```

    #### Parameters

    - other: ([Exited](process-exited) val \| [Signaled](index) val)

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Signaled.ne()
  id: process-signaled#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Signaled
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/compare/#L20)\n\n``` pony\nfun box ne(\n  that: (Exited val | Signaled val))\n: Bool val\n```\n\n#### Parameters\n\n- that: ([Exited](process-exited) val \\| [Signaled](index) val)\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-Signaled](https://stdlib.ponylang.io/process-Signaled)"
- name: Signaled.signal()
  id: process-signaled#signal
  summary: Retrieve the signal number that exited the process
  belongs_to: Signaled
  description: |-
    ### signal

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L112)

    Retrieve the signal number that exited the process.

    ``` pony
    fun box signal()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Signaled.string()
  id: process-signaled#string
  summary: null
  belongs_to: Signaled
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/_process/#L118)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: SignalHandler
  id: signals-signalhandler
  summary: Listen for a specific signal
  description: "# SignalHandler\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L10)\n\nListen for a specific signal. If the wait parameter is true, the program will not terminate until the SignalHandler's dispose method is called, or if the SignalNotify returns false, after handling the signal as this also disposes the SignalHandler and unsubscribes it.\n\n``` pony\nactor tag SignalHandler\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L20)\n\nCreate a signal handler.\n\n``` pony\nnew tag create(\n  notify: SignalNotify iso,\n  sig: U32 val,\n  wait: Bool val = false)\n: SignalHandler tag^\n```\n\n#### Parameters\n\n- notify: [SignalNotify](signals-signalnotify) iso\n- sig: [U32](builtin-u32) val\n- wait: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [SignalHandler](index) tag^\n\n## Public Behaviours\n\n### raise\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L29)\n\nRaise the signal.\n\n``` pony\nbe raise()\n```\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L35)\n\nDispose of the signal handler.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalHandler](https://stdlib.ponylang.io/signals-SignalHandler)"
- name: SignalHandler.create()
  id: signals-signalhandler#create
  summary: Create a signal handler
  belongs_to: SignalHandler
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L20)

    Create a signal handler.

    ``` pony
    new tag create(
      notify: SignalNotify iso,
      sig: U32 val,
      wait: Bool val = false)
    : SignalHandler tag^
    ```

    #### Parameters

    - notify: [SignalNotify](signals-signalnotify) iso
    - sig: [U32](builtin-u32) val
    - wait: [Bool](builtin-bool) val = false

    #### Returns

    - [SignalHandler](index) tag^

    ## Public Behaviours
- name: SignalHandler.dispose()
  id: signals-signalhandler#dispose
  summary: Dispose of the signal handler
  belongs_to: SignalHandler
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L35)\n\nDispose of the signal handler.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalHandler](https://stdlib.ponylang.io/signals-SignalHandler)"
- name: SignalHandler.raise()
  id: signals-signalhandler#raise
  summary: Raise the signal
  belongs_to: SignalHandler
  description: |-
    ### raise

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_handler/#L29)

    Raise the signal.

    ``` pony
    be raise()
    ```
- name: SignalNotify
  id: signals-signalnotify
  summary: Notifications for a signal
  description: "# SignalNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L1)\n\nNotifications for a signal.\n\n``` pony\ninterface ref SignalNotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L5)\n\nCalled with the the number of times the signal has fired since this was last called. Return false to stop listening for the signal.\n\n``` pony\nfun ref apply(\n  count: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- count: [U32](builtin-u32) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L12)\n\nCalled if the signal is disposed. This is also called if the notifier returns false.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalNotify](https://stdlib.ponylang.io/signals-SignalNotify)"
- name: SignalNotify.apply()
  id: signals-signalnotify#apply
  summary: Called with the the number of times the signal has fired since this was last called
  belongs_to: SignalNotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L5)

    Called with the the number of times the signal has fired since this was last called. Return false to stop listening for the signal.

    ``` pony
    fun ref apply(
      count: U32 val)
    : Bool val
    ```

    #### Parameters

    - count: [U32](builtin-u32) val

    #### Returns

    - [Bool](builtin-bool) val
- name: SignalNotify.dispose()
  id: signals-signalnotify#dispose
  summary: Called if the signal is disposed
  belongs_to: SignalNotify
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L12)\n\nCalled if the signal is disposed. This is also called if the notifier returns false.\n\n``` pony\nfun ref dispose()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalNotify](https://stdlib.ponylang.io/signals-SignalNotify)"
- name: SignalRaise
  id: signals-signalraise
  summary: Raise a signal
  description: "# SignalRaise\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L19)\n\nRaise a signal.\n\n``` pony\nprimitive val SignalRaise\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L19)\n\n``` pony\nnew val create()\n: SignalRaise val^\n```\n\n#### Returns\n\n- [SignalRaise](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)\n\n``` pony\nfun box apply(\n  sig: U32 val)\n: None val\n```\n\n#### Parameters\n\n- sig: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)\n\n``` pony\nfun box eq(\n  that: SignalRaise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SignalRaise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)\n\n``` pony\nfun box ne(\n  that: SignalRaise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SignalRaise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalRaise](https://stdlib.ponylang.io/signals-SignalRaise)"
- name: SignalRaise.apply()
  id: signals-signalraise#apply
  summary: null
  belongs_to: SignalRaise
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)

    ``` pony
    fun box apply(
      sig: U32 val)
    : None val
    ```

    #### Parameters

    - sig: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val
- name: SignalRaise.create()
  id: signals-signalraise#create
  summary: null
  belongs_to: SignalRaise
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L19)

    ``` pony
    new val create()
    : SignalRaise val^
    ```

    #### Returns

    - [SignalRaise](index) val^

    ## Public Functions
- name: SignalRaise.eq()
  id: signals-signalraise#eq
  summary: null
  belongs_to: SignalRaise
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)

    ``` pony
    fun box eq(
      that: SignalRaise val)
    : Bool val
    ```

    #### Parameters

    - that: [SignalRaise](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignalRaise.ne()
  id: signals-signalraise#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: SignalRaise
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/signals/signal_notify/#L23)\n\n``` pony\nfun box ne(\n  that: SignalRaise val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [SignalRaise](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/signals-SignalRaise](https://stdlib.ponylang.io/signals-SignalRaise)"
- name: Signed
  id: builtin-signed
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Signed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/signed/#L905)\n\n``` pony\ntype Signed is\n  (I8 val | I16 val | I32 val | I64 val | I128 val | ILong val | ISize val)\n```\n\n#### Type Alias For\n\n- ([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Signed](https://stdlib.ponylang.io/builtin-Signed)"
- name: SignedInteger
  id: builtin-signedinteger
  summary: Unsafe operation
  description: "# SignedInteger\\[A: [SignedInteger](index)\\[A, B\\] val, B: [UnsignedInteger](builtin-unsignedinteger)\\[B\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L397)\n\n``` pony\ntrait val SignedInteger[A: SignedInteger[A, B] val, B: UnsignedInteger[B] val] is\n  Integer[A] val\n```\n\n#### Implements\n\n- [Integer](builtin-integer)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L135)\n\n``` pony\nnew val create(\n  value: A)\n: Real[A] val^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L138)\n\n``` pony\nnew val min_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L139)\n\n``` pony\nnew val max_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L399)\n\n``` pony\nfun box abs()\n: B\n```\n\n#### Returns\n\n- B\n\n### shl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L401)\n\n``` pony\nfun box shl(\n  y: B)\n: A\n```\n\n#### Parameters\n\n- y: B\n\n#### Returns\n\n- A\n\n### shr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L402)\n\n``` pony\nfun box shr(\n  y: B)\n: A\n```\n\n#### Parameters\n\n- y: B\n\n#### Returns\n\n- A\n\n### shl_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L404)\n\nUnsafe operation. If bits differing from the final sign bit are shifted-out, the result is undefined.\n\n``` pony\nfun box shl_unsafe(\n  y: B)\n: A\n```\n\n#### Parameters\n\n- y: B\n\n#### Returns\n\n- A\n\n### shr_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L412)\n\nUnsafe operation. If non-zero bits are shifted-out, the result is undefined.\n\n``` pony\nfun box shr_unsafe(\n  y: B)\n: A\n```\n\n#### Parameters\n\n- y: B\n\n#### Returns\n\n- A\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L419)\n\n``` pony\nfun box popcount()\n: B\n```\n\n#### Returns\n\n- B\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L420)\n\n``` pony\nfun box clz()\n: B\n```\n\n#### Returns\n\n- B\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L421)\n\n``` pony\nfun box ctz()\n: B\n```\n\n#### Returns\n\n- B\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L423)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: B\n```\n\n#### Returns\n\n- B\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L429)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: B\n```\n\n#### Returns\n\n- B\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L435)\n\n``` pony\nfun box bitwidth()\n: B\n```\n\n#### Returns\n\n- B\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L437)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L439)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L214)\n\n``` pony\nfun box add_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L221)\n\n``` pony\nfun box sub_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L228)\n\n``` pony\nfun box mul_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L235)\n\n``` pony\nfun box div_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L245)\n\n``` pony\nfun box divrem_unsafe(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L255)\n\n``` pony\nfun box rem_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L265)\n\n``` pony\nfun box fld_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L276)\n\n``` pony\nfun box mod_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L286)\n\n``` pony\nfun box add_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L293)\n\n``` pony\nfun box sub_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L300)\n\n``` pony\nfun box mul_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L307)\n\n``` pony\nfun box div_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L314)\n\n``` pony\nfun box rem_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L322)\n\n``` pony\nfun box divrem_partial(\n  y: A)\n: (A , A) ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A) ?\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L329)\n\n``` pony\nfun box fld_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L336)\n\n``` pony\nfun box mod_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L344)\n\n``` pony\nfun box neg_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L351)\n\n``` pony\nfun box addc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L355)\n\n``` pony\nfun box subc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L359)\n\n``` pony\nfun box mulc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L363)\n\n``` pony\nfun box divc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L367)\n\n``` pony\nfun box remc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L373)\n\n``` pony\nfun box fldc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L377)\n\n``` pony\nfun box modc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L384)\n\n``` pony\nfun box op_and(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L385)\n\n``` pony\nfun box op_or(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L386)\n\n``` pony\nfun box op_xor(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_not\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L387)\n\n``` pony\nfun box op_not()\n: A\n```\n\n#### Returns\n\n- A\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L389)\n\n``` pony\nfun box bit_reverse()\n: A\n```\n\n#### Returns\n\n- A\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L395)\n\n``` pony\nfun box bswap()\n: A\n```\n\n#### Returns\n\n- A\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: A\n```\n\n#### Returns\n\n- A\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L161)\n\n``` pony\nfun box fld(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L165)\n\n``` pony\nfun box mod(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L179)\n\n``` pony\nfun box min(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L180)\n\n``` pony\nfun box max(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L182)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L198)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L6)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L14)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L49)\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L98)\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-SignedInteger](https://stdlib.ponylang.io/builtin-SignedInteger)"
- name: SignedInteger.abs()
  id: builtin-signedinteger#abs
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L399)

    ``` pony
    fun box abs()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.add()
  id: builtin-signedinteger#add
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.add_partial()
  id: builtin-signedinteger#add_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L286)

    ``` pony
    fun box add_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.add_unsafe()
  id: builtin-signedinteger#add_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L214)

    ``` pony
    fun box add_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.addc()
  id: builtin-signedinteger#addc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L351)

    ``` pony
    fun box addc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.bit_reverse()
  id: builtin-signedinteger#bit_reverse
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L389)

    ``` pony
    fun box bit_reverse()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.bitwidth()
  id: builtin-signedinteger#bitwidth
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L435)

    ``` pony
    fun box bitwidth()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.bswap()
  id: builtin-signedinteger#bswap
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L395)

    ``` pony
    fun box bswap()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.bytewidth()
  id: builtin-signedinteger#bytewidth
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L437)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: SignedInteger.clz()
  id: builtin-signedinteger#clz
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L420)

    ``` pony
    fun box clz()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.clz_unsafe()
  id: builtin-signedinteger#clz_unsafe
  summary: Unsafe operation
  belongs_to: SignedInteger
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L423)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.compare()
  id: builtin-signedinteger#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: SignedInteger
  description: "### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-SignedInteger](https://stdlib.ponylang.io/builtin-SignedInteger)"
- name: SignedInteger.create()
  id: builtin-signedinteger#create
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L135)

    ``` pony
    new val create(
      value: A)
    : Real[A] val^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Real](builtin-real)\[A\] val^
- name: SignedInteger.ctz()
  id: builtin-signedinteger#ctz
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L421)

    ``` pony
    fun box ctz()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.ctz_unsafe()
  id: builtin-signedinteger#ctz_unsafe
  summary: Unsafe operation
  belongs_to: SignedInteger
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L429)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.div()
  id: builtin-signedinteger#div
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.div_partial()
  id: builtin-signedinteger#div_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L307)

    ``` pony
    fun box div_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.div_unsafe()
  id: builtin-signedinteger#div_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L235)

    ``` pony
    fun box div_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.divc()
  id: builtin-signedinteger#divc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L363)

    ``` pony
    fun box divc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.divrem()
  id: builtin-signedinteger#divrem
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: SignedInteger.divrem_partial()
  id: builtin-signedinteger#divrem_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L322)

    ``` pony
    fun box divrem_partial(
      y: A)
    : (A , A) ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A) ?

    &nbsp;
- name: SignedInteger.divrem_unsafe()
  id: builtin-signedinteger#divrem_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L245)

    ``` pony
    fun box divrem_unsafe(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: SignedInteger.eq()
  id: builtin-signedinteger#eq
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.f32()
  id: builtin-signedinteger#f32
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: SignedInteger.f32_unsafe()
  id: builtin-signedinteger#f32_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: SignedInteger.f64()
  id: builtin-signedinteger#f64
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: SignedInteger.f64_unsafe()
  id: builtin-signedinteger#f64_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: SignedInteger.fld()
  id: builtin-signedinteger#fld
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L161)

    ``` pony
    fun box fld(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.fld_partial()
  id: builtin-signedinteger#fld_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L329)

    ``` pony
    fun box fld_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.fld_unsafe()
  id: builtin-signedinteger#fld_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L265)

    ``` pony
    fun box fld_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.fldc()
  id: builtin-signedinteger#fldc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L373)

    ``` pony
    fun box fldc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.from()
  id: builtin-signedinteger#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: SignedInteger
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n&nbsp;"
- name: SignedInteger.ge()
  id: builtin-signedinteger#ge
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.gt()
  id: builtin-signedinteger#gt
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.hash()
  id: builtin-signedinteger#hash
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L182)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: SignedInteger.hash64()
  id: builtin-signedinteger#hash64
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L198)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: SignedInteger.i128()
  id: builtin-signedinteger#i128
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L6)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: SignedInteger.i128_unsafe()
  id: builtin-signedinteger#i128_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L49)

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: SignedInteger.i16()
  id: builtin-signedinteger#i16
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: SignedInteger.i16_unsafe()
  id: builtin-signedinteger#i16_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: SignedInteger.i32()
  id: builtin-signedinteger#i32
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: SignedInteger.i32_unsafe()
  id: builtin-signedinteger#i32_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: SignedInteger.i64()
  id: builtin-signedinteger#i64
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: SignedInteger.i64_unsafe()
  id: builtin-signedinteger#i64_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: SignedInteger.i8()
  id: builtin-signedinteger#i8
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: SignedInteger.i8_unsafe()
  id: builtin-signedinteger#i8_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: SignedInteger.ilong()
  id: builtin-signedinteger#ilong
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: SignedInteger.ilong_unsafe()
  id: builtin-signedinteger#ilong_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: SignedInteger.isize()
  id: builtin-signedinteger#isize
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: SignedInteger.isize_unsafe()
  id: builtin-signedinteger#isize_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: SignedInteger.le()
  id: builtin-signedinteger#le
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.lt()
  id: builtin-signedinteger#lt
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.max()
  id: builtin-signedinteger#max
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L180)

    ``` pony
    fun box max(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.max_value()
  id: builtin-signedinteger#max_value
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L139)

    ``` pony
    new val max_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    ## Public Functions
- name: SignedInteger.min()
  id: builtin-signedinteger#min
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L179)

    ``` pony
    fun box min(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.min_value()
  id: builtin-signedinteger#min_value
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L138)

    ``` pony
    new val min_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    &nbsp;
- name: SignedInteger.mod()
  id: builtin-signedinteger#mod
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L165)

    ``` pony
    fun box mod(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.mod_partial()
  id: builtin-signedinteger#mod_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L336)

    ``` pony
    fun box mod_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.mod_unsafe()
  id: builtin-signedinteger#mod_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L276)

    ``` pony
    fun box mod_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.modc()
  id: builtin-signedinteger#modc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L377)

    ``` pony
    fun box modc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.mul()
  id: builtin-signedinteger#mul
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.mul_partial()
  id: builtin-signedinteger#mul_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L300)

    ``` pony
    fun box mul_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.mul_unsafe()
  id: builtin-signedinteger#mul_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L228)

    ``` pony
    fun box mul_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.mulc()
  id: builtin-signedinteger#mulc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L359)

    ``` pony
    fun box mulc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.ne()
  id: builtin-signedinteger#ne
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SignedInteger.neg()
  id: builtin-signedinteger#neg
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.neg_unsafe()
  id: builtin-signedinteger#neg_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L344)

    ``` pony
    fun box neg_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.op_and()
  id: builtin-signedinteger#op_and
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L384)

    ``` pony
    fun box op_and(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.op_not()
  id: builtin-signedinteger#op_not
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### op_not

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L387)

    ``` pony
    fun box op_not()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.op_or()
  id: builtin-signedinteger#op_or
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L385)

    ``` pony
    fun box op_or(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.op_xor()
  id: builtin-signedinteger#op_xor
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L386)

    ``` pony
    fun box op_xor(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.popcount()
  id: builtin-signedinteger#popcount
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L419)

    ``` pony
    fun box popcount()
    : B
    ```

    #### Returns

    - B

    &nbsp;
- name: SignedInteger.rem()
  id: builtin-signedinteger#rem
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.rem_partial()
  id: builtin-signedinteger#rem_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L314)

    ``` pony
    fun box rem_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.rem_unsafe()
  id: builtin-signedinteger#rem_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L255)

    ``` pony
    fun box rem_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.remc()
  id: builtin-signedinteger#remc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L367)

    ``` pony
    fun box remc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.shl()
  id: builtin-signedinteger#shl
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### shl

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L401)

    ``` pony
    fun box shl(
      y: B)
    : A
    ```

    #### Parameters

    - y: B

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.shl_unsafe()
  id: builtin-signedinteger#shl_unsafe
  summary: Unsafe operation
  belongs_to: SignedInteger
  description: |-
    ### shl_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L404)

    Unsafe operation. If bits differing from the final sign bit are shifted-out, the result is undefined.

    ``` pony
    fun box shl_unsafe(
      y: B)
    : A
    ```

    #### Parameters

    - y: B

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.shr()
  id: builtin-signedinteger#shr
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### shr

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L402)

    ``` pony
    fun box shr(
      y: B)
    : A
    ```

    #### Parameters

    - y: B

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.shr_unsafe()
  id: builtin-signedinteger#shr_unsafe
  summary: Unsafe operation
  belongs_to: SignedInteger
  description: |-
    ### shr_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L412)

    Unsafe operation. If non-zero bits are shifted-out, the result is undefined.

    ``` pony
    fun box shr_unsafe(
      y: B)
    : A
    ```

    #### Parameters

    - y: B

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.string()
  id: builtin-signedinteger#string
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L439)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: SignedInteger.sub()
  id: builtin-signedinteger#sub
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.sub_partial()
  id: builtin-signedinteger#sub_partial
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L293)

    ``` pony
    fun box sub_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: SignedInteger.sub_unsafe()
  id: builtin-signedinteger#sub_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L221)

    ``` pony
    fun box sub_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: SignedInteger.subc()
  id: builtin-signedinteger#subc
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L355)

    ``` pony
    fun box subc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: SignedInteger.u128()
  id: builtin-signedinteger#u128
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L14)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: SignedInteger.u128_unsafe()
  id: builtin-signedinteger#u128_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L98)

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: SignedInteger.u16()
  id: builtin-signedinteger#u16
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: SignedInteger.u16_unsafe()
  id: builtin-signedinteger#u16_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: SignedInteger.u32()
  id: builtin-signedinteger#u32
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: SignedInteger.u32_unsafe()
  id: builtin-signedinteger#u32_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: SignedInteger.u64()
  id: builtin-signedinteger#u64
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: SignedInteger.u64_unsafe()
  id: builtin-signedinteger#u64_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: SignedInteger.u8()
  id: builtin-signedinteger#u8
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: SignedInteger.u8_unsafe()
  id: builtin-signedinteger#u8_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: SignedInteger.ulong()
  id: builtin-signedinteger#ulong
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: SignedInteger.ulong_unsafe()
  id: builtin-signedinteger#ulong_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: SignedInteger.usize()
  id: builtin-signedinteger#usize
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: SignedInteger.usize_unsafe()
  id: builtin-signedinteger#usize_unsafe
  summary: null
  belongs_to: SignedInteger
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Sort
  id: collections-sort
  summary: Implementation of dual-pivot quicksort
  description: "# Sort\\[A: [Seq](builtin-seq)\\[B\\] ref, B: [Comparable](builtin-comparable)\\[B\\] \\#read\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L1)\n\nImplementation of dual-pivot quicksort. It operates in-place on the provided Seq, using a small amount of additional memory. The nature of the element-realation is expressed via the supplied comparator.\n\n(The following is paraphrased from [Wikipedia](https://en.wikipedia.org/wiki/Quicksort).)\n\nQuicksort is a common implementation of a sort algorithm which can sort items of any type for which a \"less-than\" relation (formally, a total order) is defined.\n\nOn average, the algorithm takes O(n log n) comparisons to sort n items. In the worst case, it makes O(n2) comparisons, though this behavior is rare. Multi-pivot implementations (of which dual-pivot is one) make efficient use of modern processor caches.\n\n## Example program\n\nThe following takes an reverse-alphabetical array of Strings (\"third\", \"second\", \"first\"), and sorts it in place alphabetically using the default String Comparator.\n\nIt outputs:\n\n> first second third\n\n``` pony\nuse \"collections\"\n\nactor Main \n  new create(env:Env) => \n    let array = [ \"third\"; \"second\"; \"first\" ]\n    let sorted_array = Sort[Array[String], String](array)\n    for e in sorted_array.values() do\n      env.out.print(e) // prints \"first \\n second \\n third\"\n    end\n```\n\n``` pony\nprimitive val Sort[A: Seq[B] ref, B: Comparable[B] #read]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L1)\n\n``` pony\nnew val create()\n: Sort[A, B] val^\n```\n\n#### Returns\n\n- [Sort](index)\\[A, B\\] val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L38)\n\nSort the given seq.\n\n``` pony\nfun box apply(\n  a: A)\n: A^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- A^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L38)\n\n``` pony\nfun box eq(\n  that: Sort[A, B] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sort](index)\\[A, B\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L38)\n\n``` pony\nfun box ne(\n  that: Sort[A, B] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sort](index)\\[A, B\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Sort](https://stdlib.ponylang.io/collections-Sort)"
- name: Sort.apply()
  id: collections-sort#apply
  summary: Sort the given seq
  belongs_to: Sort
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections/sort/#L38)

    Sort the given seq.

    ``` pony
    fun box apply(
      a: A)
    : A^
    ```

    #### Parameters

    - a: A

    #### Returns

    - A^
- name: Sort.create()
  id: collections-sort#create
  summary: null
  belongs_to: Sort
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections/sort/#L1)

    ``` pony
    new val create()
    : Sort[A, B] val^
    ```

    #### Returns

    - [Sort](index)\[A, B\] val^

    ## Public Functions
- name: Sort.eq()
  id: collections-sort#eq
  summary: null
  belongs_to: Sort
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/collections/sort/#L38)

    ``` pony
    fun box eq(
      that: Sort[A, B] val)
    : Bool val
    ```

    #### Parameters

    - that: [Sort](index)\[A, B\] val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Sort.ne()
  id: collections-sort#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Sort
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections/sort/#L38)\n\n``` pony\nfun box ne(\n  that: Sort[A, B] val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Sort](index)\\[A, B\\] val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-Sort](https://stdlib.ponylang.io/collections-Sort)"
- name: SourceLoc
  id: builtin-sourceloc
  summary: Represents a location in a Pony source file, as reported by __loc
  description: "# SourceLoc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L1)\n\nRepresents a location in a Pony source file, as reported by `__loc`.\n\n``` pony\ninterface val SourceLoc\n```\n\n## Public Functions\n\n### file\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L5)\n\nName and path of source file.\n\n``` pony\nfun box file()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### type_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L10)\n\nName of nearest class, actor, primitive, struct, interface, or trait.\n\n``` pony\nfun box type_name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### method_name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L15)\n\nName of containing method.\n\n``` pony\nfun box method_name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### line\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L20)\n\nLine number within file. Line numbers start at 1.\n\n``` pony\nfun box line()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### pos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L26)\n\nCharacter position on line. Character positions start at 1.\n\n``` pony\nfun box pos()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-SourceLoc](https://stdlib.ponylang.io/builtin-SourceLoc)"
- name: SourceLoc.file()
  id: builtin-sourceloc#file
  summary: Name and path of source file
  belongs_to: SourceLoc
  description: |-
    ### file

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L5)

    Name and path of source file.

    ``` pony
    fun box file()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: SourceLoc.line()
  id: builtin-sourceloc#line
  summary: Line number within file
  belongs_to: SourceLoc
  description: |-
    ### line

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L20)

    Line number within file. Line numbers start at 1.

    ``` pony
    fun box line()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: SourceLoc.method_name()
  id: builtin-sourceloc#method_name
  summary: Name of containing method
  belongs_to: SourceLoc
  description: |-
    ### method_name

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L15)

    Name of containing method.

    ``` pony
    fun box method_name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: SourceLoc.pos()
  id: builtin-sourceloc#pos
  summary: Character position on line
  belongs_to: SourceLoc
  description: "### pos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L26)\n\nCharacter position on line. Character positions start at 1.\n\n``` pony\nfun box pos()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-SourceLoc](https://stdlib.ponylang.io/builtin-SourceLoc)"
- name: SourceLoc.type_name()
  id: builtin-sourceloc#type_name
  summary: Name of nearest class, actor, primitive, struct, interface, or trait
  belongs_to: SourceLoc
  description: |-
    ### type_name

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/source_loc/#L10)

    Name of nearest class, actor, primitive, struct, interface, or trait.

    ``` pony
    fun box type_name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: SplitMix64
  id: random-splitmix64
  summary: Using XorOshiro128StarStar or XorOshiro128Plus should be prefered unless using only 64 bit of state is a requirement
  description: "# SplitMix64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/splitmix64/#L1)\n\nVery fast Pseudo-Random-Number-Generator using only 64 bit of state, as detailed at:\n\nhttp://xoshiro.di.unimi.it/ and http://gee.cs.oswego.edu/dl/papers/oopsla14.pdf\n\nUsing [XorOshiro128StarStar](random-xoroshiro128starstar) or [XorOshiro128Plus](random-xoroshiro128plus) should be prefered unless using only 64 bit of state is a requirement.\n\n``` pony\nclass ref SplitMix64 is\n  Random ref\n```\n\n#### Implements\n\n- [Random](random-random) ref\n\n## Constructors\n\n### from_u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/splitmix64/#L14)\n\n``` pony\nnew ref from_u64(\n  x: U64 val = 5489)\n: SplitMix64 ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n\n#### Returns\n\n- [SplitMix64](index) ref^\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/splitmix64/#L17)\n\nOnly x is used, y is discarded.\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: SplitMix64 ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [SplitMix64](index) ref^\n\n## Public Functions\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/splitmix64/#L23)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### has_next\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### u8\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-SplitMix64](https://stdlib.ponylang.io/random-SplitMix64)"
- name: SplitMix64.create()
  id: random-splitmix64#create
  summary: Only x is used, y is discarded
  belongs_to: SplitMix64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/splitmix64/#L17)

    Only x is used, y is discarded.

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : SplitMix64 ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [SplitMix64](index) ref^

    ## Public Functions
- name: SplitMix64.from_u64()
  id: random-splitmix64#from_u64
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### from_u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/splitmix64/#L14)

    ``` pony
    new ref from_u64(
      x: U64 val = 5489)
    : SplitMix64 ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489

    #### Returns

    - [SplitMix64](index) ref^
- name: SplitMix64.has_next()
  id: random-splitmix64#has_next
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### has_next

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: SplitMix64.i128()
  id: random-splitmix64#i128
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### i128

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: SplitMix64.i16()
  id: random-splitmix64#i16
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### i16

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: SplitMix64.i32()
  id: random-splitmix64#i32
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### i32

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: SplitMix64.i64()
  id: random-splitmix64#i64
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### i64

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: SplitMix64.i8()
  id: random-splitmix64#i8
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### i8

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: SplitMix64.ilong()
  id: random-splitmix64#ilong
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### ilong

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: SplitMix64.int()
  id: random-splitmix64#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: SplitMix64
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: SplitMix64.int_fp_mult()
  id: random-splitmix64#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: SplitMix64
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: SplitMix64.int_unbiased()
  id: random-splitmix64#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: SplitMix64
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: SplitMix64.isize()
  id: random-splitmix64#isize
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### isize

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: SplitMix64.next()
  id: random-splitmix64#next
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/splitmix64/#L23)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: SplitMix64.real()
  id: random-splitmix64#real
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### real

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: SplitMix64.shuffle()
  id: random-splitmix64#shufflea-a
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: SplitMix64
  description: "### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-SplitMix64](https://stdlib.ponylang.io/random-SplitMix64)"
- name: SplitMix64.u128()
  id: random-splitmix64#u128
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### u128

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: SplitMix64.u16()
  id: random-splitmix64#u16
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### u16

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: SplitMix64.u32()
  id: random-splitmix64#u32
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### u32

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: SplitMix64.u64()
  id: random-splitmix64#u64
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### u64

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: SplitMix64.u8()
  id: random-splitmix64#u8
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### u8

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: SplitMix64.ulong()
  id: random-splitmix64#ulong
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### ulong

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: SplitMix64.usize()
  id: random-splitmix64#usize
  summary: null
  belongs_to: SplitMix64
  description: |-
    ### usize

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: StartProcessAuth
  id: process-startprocessauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# StartProcessAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/auth/#L1)\n\n``` pony\nprimitive val StartProcessAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/auth/#L2)\n\n``` pony\nnew val create(\n  from: AmbientAuth val)\n: StartProcessAuth val^\n```\n\n#### Parameters\n\n- from: [AmbientAuth](builtin-ambientauth) val\n\n#### Returns\n\n- [StartProcessAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/auth/#L2)\n\n``` pony\nfun box eq(\n  that: StartProcessAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StartProcessAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/auth/#L2)\n\n``` pony\nfun box ne(\n  that: StartProcessAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StartProcessAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-StartProcessAuth](https://stdlib.ponylang.io/process-StartProcessAuth)"
- name: StartProcessAuth.create()
  id: process-startprocessauth#create
  summary: null
  belongs_to: StartProcessAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/auth/#L2)

    ``` pony
    new val create(
      from: AmbientAuth val)
    : StartProcessAuth val^
    ```

    #### Parameters

    - from: [AmbientAuth](builtin-ambientauth) val

    #### Returns

    - [StartProcessAuth](index) val^

    ## Public Functions
- name: StartProcessAuth.eq()
  id: process-startprocessauth#eq
  summary: null
  belongs_to: StartProcessAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/auth/#L2)

    ``` pony
    fun box eq(
      that: StartProcessAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [StartProcessAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: StartProcessAuth.ne()
  id: process-startprocessauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: StartProcessAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/auth/#L2)\n\n``` pony\nfun box ne(\n  that: StartProcessAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StartProcessAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-StartProcessAuth](https://stdlib.ponylang.io/process-StartProcessAuth)"
- name: Stdin
  id: builtin-stdin
  summary: Asynchronous access to stdin
  description: "# Stdin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L43)\n\nAsynchronous access to stdin. The constructor is private to ensure that access is provided only via an environment.\n\nReading from stdin is done by registering an `InputNotify`:\n\n``` pony\nactor Main\n  new create(env: Env) =>\n    // do not forget to call `env.input.dispose` at some point\n    env.input(\n      object iso is InputNotify\n        fun ref apply(data: Array[U8] iso) =>\n          env.out.write(String.from_iso_array(consume data))\n\n        fun ref dispose() =>\n          env.out.print(\"Done.\")\n      end,\n      512)\n```\n\n**Note:** For reading user input from a terminal, use the [term](term--index) package.\n\n``` pony\nactor tag Stdin\n```\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L78)\n\nSet the notifier. Optionally, also sets the chunk size, dictating the maximum number of bytes of each chunk that will be passed to the notifier.\n\n``` pony\nbe apply(\n  notify: (InputNotify iso | None val),\n  chunk_size: USize val = 32)\n```\n\n#### Parameters\n\n- notify: ([InputNotify](builtin-inputnotify) iso \\| [None](builtin-none) val)\n- chunk_size: [USize](builtin-usize) val = 32\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L86)\n\nClear the notifier in order to shut down input.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Stdin](https://stdlib.ponylang.io/builtin-Stdin)"
- name: Stdin.apply()
  id: builtin-stdin#apply
  summary: Set the notifier
  belongs_to: Stdin
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/stdin/#L78)

    Set the notifier. Optionally, also sets the chunk size, dictating the maximum number of bytes of each chunk that will be passed to the notifier.

    ``` pony
    be apply(
      notify: (InputNotify iso | None val),
      chunk_size: USize val = 32)
    ```

    #### Parameters

    - notify: ([InputNotify](builtin-inputnotify) iso \| [None](builtin-none) val)
    - chunk_size: [USize](builtin-usize) val = 32
- name: Stdin.dispose()
  id: builtin-stdin#dispose
  summary: Clear the notifier in order to shut down input
  belongs_to: Stdin
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stdin/#L86)\n\nClear the notifier in order to shut down input.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Stdin](https://stdlib.ponylang.io/builtin-Stdin)"
- name: StdStream
  id: builtin-stdstream
  summary: Asynchronous access to stdout and stderr
  description: "# StdStream\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L38)\n\nAsynchronous access to stdout and stderr. The constructors are private to ensure that access is provided only via an environment.\n\n``` pony\nactor tag StdStream\n```\n\n## Public Behaviours\n\n### print\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L57)\n\nPrint some bytes and insert a newline afterwards.\n\n``` pony\nbe print(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L63)\n\nPrint some bytes without inserting a newline afterwards.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### printv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L69)\n\nPrint an iterable collection of ByteSeqs.\n\n``` pony\nbe printv(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L77)\n\nWrite an iterable collection of ByteSeqs.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L85)\n\nFlush any data out to the os (ignoring failures).\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StdStream](https://stdlib.ponylang.io/builtin-StdStream)"
- name: StdStream.flush()
  id: builtin-stdstream#flush
  summary: Flush any data out to the os (ignoring failures)
  belongs_to: StdStream
  description: "### flush\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L85)\n\nFlush any data out to the os (ignoring failures).\n\n``` pony\nbe flush()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StdStream](https://stdlib.ponylang.io/builtin-StdStream)"
- name: StdStream.print()
  id: builtin-stdstream#print
  summary: Print some bytes and insert a newline afterwards
  belongs_to: StdStream
  description: |-
    ### print

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L57)

    Print some bytes and insert a newline afterwards.

    ``` pony
    be print(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)
- name: StdStream.printv()
  id: builtin-stdstream#printv
  summary: Print an iterable collection of ByteSeqs
  belongs_to: StdStream
  description: |-
    ### printv

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L69)

    Print an iterable collection of ByteSeqs.

    ``` pony
    be printv(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: StdStream.write()
  id: builtin-stdstream#write
  summary: Print some bytes without inserting a newline afterwards
  belongs_to: StdStream
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L63)

    Print some bytes without inserting a newline afterwards.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: StdStream.writev()
  id: builtin-stdstream#writev
  summary: Write an iterable collection of ByteSeqs
  belongs_to: StdStream
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/std_stream/#L77)

    Write an iterable collection of ByteSeqs.

    ``` pony
    be writev(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: String
  id: builtin-string
  summary: A String is an ordered collection of bytes
  description: "# String\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L9)\n\nA String is an ordered collection of bytes.\n\nStrings don't specify an encoding.\n\nExample usage of some common String methods:\n\n``` pony\nactor Main\n  new create(env: Env) =>\n    try\n      // construct a new string\n      let str = \"Hello\"\n\n      // make an uppercased version\n      let str_upper = str.upper()\n      // make a reversed version\n      let str_reversed = str.reverse()\n\n      // add \" world\" to the end of our original string\n      let str_new = str.add(\" world\")\n\n      // count occurrences of letter \"l\"\n      let count = str_new.count(\"l\")\n\n      // find first occurrence of letter \"w\"\n      let first_w = str_new.find(\"w\")\n      // find first occurrence of letter \"d\"\n      let first_d = str_new.find(\"d\")\n\n      // get substring capturing \"world\"\n      let substr = str_new.substring(first_w, first_d+1)\n      // clone substring\n      let substr_clone = substr.clone()\n\n      // print our substr\n      env.out.print(consume substr)\n  end\n```\n\n``` pony\nclass val String is\n  Seq[U8 val] ref,\n  Comparable[String box] ref,\n  Stringable box\n```\n\n#### Implements\n\n- [Seq](builtin-seq)\\[[U8](builtin-u8) val\\] ref\n- [Comparable](builtin-comparable)\\[[String](index) box\\] ref\n- [Stringable](builtin-stringable) box\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L54)\n\nAn empty string. Enough space for len bytes is reserved.\n\n``` pony\nnew ref create(\n  len: USize val = 0)\n: String ref^\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [String](index) ref^\n\n### from_array\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L63)\n\nCreate a string from an array, reusing the underlying data pointer.\n\n``` pony\nnew val from_array(\n  data: Array[U8 val] val)\n: String val^\n```\n\n#### Parameters\n\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n#### Returns\n\n- [String](index) val^\n\n### from_iso_array\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L71)\n\nCreate a string from an array, reusing the underlying data pointer\n\n``` pony\nnew iso from_iso_array(\n  data: Array[U8 val] iso)\n: String iso^\n```\n\n#### Parameters\n\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n\n#### Returns\n\n- [String](index) iso^\n\n### from_cpointer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L82)\n\nReturn a string from binary pointer data without making a copy. This must be done only with C-FFI functions that return pony_alloc'd character arrays. If a null pointer is given then an empty string is returned.\n\n``` pony\nnew ref from_cpointer(\n  str: Pointer[U8 val] ref,\n  len: USize val,\n  alloc: USize val = 0)\n: String ref^\n```\n\n#### Parameters\n\n- str: [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] ref\n- len: [USize](builtin-usize) val\n- alloc: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [String](index) ref^\n\n### from_cstring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L100)\n\nReturn a string from a pointer to a null-terminated cstring without making a copy. The data is not copied. This must be done only with C-FFI functions that return pony_alloc'd character arrays. The pointer is scanned for the first null byte, which will be interpreted as the null terminator. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.\n\n``` pony\nnew ref from_cstring(\n  str: Pointer[U8 val] ref)\n: String ref^\n```\n\n#### Parameters\n\n- str: [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] ref\n\n#### Returns\n\n- [String](index) ref^\n\n### copy_cpointer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L128)\n\nCreate a string by copying a fixed number of bytes from a pointer.\n\n``` pony\nnew ref copy_cpointer(\n  str: Pointer[U8 val] box,\n  len: USize val)\n: String ref^\n```\n\n#### Parameters\n\n- str: [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] box\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [String](index) ref^\n\n### copy_cstring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L144)\n\nCreate a string by copying a null-terminated C string. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.\n\n``` pony\nnew ref copy_cstring(\n  str: Pointer[U8 val] box)\n: String ref^\n```\n\n#### Parameters\n\n- str: [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] box\n\n#### Returns\n\n- [String](index) ref^\n\n### from_utf32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L169)\n\nCreate a UTF-8 string from a single UTF-32 code point.\n\n``` pony\nnew ref from_utf32(\n  value: U32 val)\n: String ref^\n```\n\n#### Parameters\n\n- value: [U32](builtin-u32) val\n\n#### Returns\n\n- [String](index) ref^\n\n## Public Functions\n\n### push_utf32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L189)\n\nPush a UTF-32 code point.\n\n``` pony\nfun ref push_utf32(\n  value: U32 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### cpointer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L216)\n\nReturns a C compatible pointer to the underlying string allocation.\n\n``` pony\nfun box cpointer(\n  offset: USize val = 0)\n: Pointer[U8 val] tag\n```\n\n#### Parameters\n\n- offset: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] tag\n\n### cstring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L222)\n\nReturns a C compatible pointer to a null-terminated version of the string, safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. If the underlying string is already null terminated, this is returned; otherwise the string is copied into a new, null-terminated allocation.\n\n``` pony\nfun box cstring()\n: Pointer[U8 val] tag\n```\n\n#### Returns\n\n- [Pointer](builtin-pointer)\\[[U8](builtin-u8) val\\] tag\n\n### array\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L239)\n\nReturns an Array\\[U8\\] that reuses the underlying data pointer.\n\n``` pony\nfun val array()\n: Array[U8 val] val\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] val\n\n### iso_array\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L247)\n\nReturns an Array\\[U8\\] iso that reuses the underlying data pointer.\n\n``` pony\nfun iso iso_array()\n: Array[U8 val] iso^\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L255)\n\nReturns the length of the string data in bytes.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### codepoints\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L261)\n\nReturns the number of unicode code points in the string between the two offsets. Index range \\[`from` .. `to`) is half-open.\n\n``` pony\nfun box codepoints(\n  from: ISize val = 0,\n  to: ISize val = call)\n: USize val\n```\n\n#### Parameters\n\n- from: [ISize](builtin-isize) val = 0\n- to: [ISize](builtin-isize) val = call\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### space\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L284)\n\nReturns the space available for data, not including the null terminator.\n\n``` pony\nfun box space()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### reserve\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L290)\n\nReserve space for len bytes. An additional byte will be reserved for the null terminator.\n\n``` pony\nfun ref reserve(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### compact\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L306)\n\nTry to remove unused space, making it available for garbage collection. The request may be ignored. The string is returned to allow call chaining.\n\n``` pony\nfun ref compact()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### recalc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L325)\n\nRecalculates the string length. This is only needed if the string is changed via an FFI call. If a null terminator byte is not found within the allocated length, the size will not be changed.\n\n``` pony\nfun ref recalc()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### truncate\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L341)\n\nTruncates the string at the minimum of len and space. Ensures there is a null terminator. Does not check for null terminators inside the string.\n\nNote that memory is not freed by this operation.\n\n``` pony\nfun ref truncate(\n  len: USize val)\n: None val\n```\n\n#### Parameters\n\n- len: [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### trim_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L357)\n\nTrim the string to a portion of itself, covering `from` until `to`. Unlike slice, the operation does not allocate a new string nor copy elements.\n\n``` pony\nfun ref trim_in_place(\n  from: USize val = 0,\n  to: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### trim\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L385)\n\nReturn a shared portion of this string, covering `from` until `to`. Both the original and the new string are immutable, as they share memory. The operation does not allocate a new string pointer nor copy elements.\n\n``` pony\nfun val trim(\n  from: USize val = 0,\n  to: USize val = call)\n: String val\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [String](index) val\n\n### chop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L409)\n\nChops the string in half at the split point requested and returns both the left and right portions. The original string is trimmed in place and returned as the left portion. If the split point is larger than the string, the left portion is the original string and the right portion is a new empty string. Both strings are isolated and mutable, as they do not share memory. The operation does not allocate a new string pointer nor copy elements.\n\n``` pony\nfun iso chop(\n  split_point: USize val)\n: (String iso^ , String iso^)\n```\n\n#### Parameters\n\n- split_point: [USize](builtin-usize) val\n\n#### Returns\n\n- ([String](index) iso^ , [String](index) iso^)\n\n### unchop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L435)\n\nUnchops two iso strings to return the original string they were chopped from. Both input strings are isolated and mutable and were originally chopped from a single string. This function checks that they are indeed two strings chopped from the same original string and can be unchopped before doing the unchopping and returning the unchopped string. If the two strings cannot be unchopped it returns both strings without modifying them. The operation does not allocate a new string pointer nor copy elements.\n\n``` pony\nfun iso unchop(\n  b: String iso)\n: ((String iso^ , String iso^) | String iso^)\n```\n\n#### Parameters\n\n- b: [String](index) iso\n\n#### Returns\n\n- (([String](index) iso^ , [String](index) iso^) \\| [String](index) iso^)\n\n### is_null_terminated\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L477)\n\nReturn true if the string is null-terminated and safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. This method checks that there is a null byte just after the final position of populated bytes in the string, but does not check for other null bytes which may be present earlier in the content of the string. If you need a null-terminated copy of this string, use the clone method.\n\n``` pony\nfun box is_null_terminated()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### utf32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L488)\n\nReturn a UTF32 representation of the character at the given offset and the number of bytes needed to encode that character. If the offset does not point to the beginning of a valid UTF8 encoding, return 0xFFFD (the unicode replacement character) and a length of one. Raise an error if the offset is out of bounds.\n\n``` pony\nfun box utf32(\n  offset: ISize val)\n: (U32 val , U8 val) ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U8](builtin-u8) val) ?\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L574)\n\nReturns the i-th byte. Raise an error if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: U8 val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L580)\n\nChange the i-th byte. Raise an error if the index is out of bounds.\n\n``` pony\nfun ref update(\n  i: USize val,\n  value: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### at_offset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L590)\n\nReturns the byte at the given offset. Raise an error if the offset is out of bounds.\n\n``` pony\nfun box at_offset(\n  offset: ISize val)\n: U8 val ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### update_offset\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L597)\n\nChanges a byte in the string, returning the previous byte at that offset. Raise an error if the offset is out of bounds.\n\n``` pony\nfun ref update_offset(\n  offset: ISize val,\n  value: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### clone\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L604)\n\nReturns a copy of the string. The resulting string is null-terminated even if the original is not.\n\n``` pony\nfun box clone()\n: String iso^\n```\n\n#### Returns\n\n- [String](index) iso^\n\n### repeat_str\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L616)\n\nReturns a copy of the string repeated `num` times with an optional separator added inbetween repeats.\n\n``` pony\nfun box repeat_str(\n  num: USize val = 1,\n  sep: String val = \"\")\n: String iso^\n```\n\n#### Parameters\n\n- num: [USize](builtin-usize) val = 1\n- sep: [String](index) val = \"\"\n\n#### Returns\n\n- [String](index) iso^\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L634)\n\nReturns a copy of the string repeated `num` times.\n\n``` pony\nfun box mul(\n  num: USize val)\n: String iso^\n```\n\n#### Parameters\n\n- num: [USize](builtin-usize) val\n\n#### Returns\n\n- [String](index) iso^\n\n### find\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L640)\n\nReturn the index of the n-th instance of s in the string starting from the beginning. Raise an error if there is no n-th occurrence of s or s is empty.\n\n``` pony\nfun box find(\n  s: String box,\n  offset: ISize val = 0,\n  nth: USize val = 0)\n: ISize val ?\n```\n\n#### Parameters\n\n- s: [String](index) box\n- offset: [ISize](builtin-isize) val = 0\n- nth: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [ISize](builtin-isize) val ?\n\n### rfind\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L669)\n\nReturn the index of n-th instance of `s` in the string starting from the end. The `offset` represents the highest index to included in the search. Raise an error if there is no n-th occurrence of `s` or `s` is empty.\n\n``` pony\nfun box rfind(\n  s: String box,\n  offset: ISize val = call,\n  nth: USize val = 0)\n: ISize val ?\n```\n\n#### Parameters\n\n- s: [String](index) box\n- offset: [ISize](builtin-isize) val = call\n- nth: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [ISize](builtin-isize) val ?\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L700)\n\nReturns true if contains s as a substring, false otherwise.\n\n``` pony\nfun box contains(\n  s: String box,\n  offset: ISize val = 0,\n  nth: USize val = 0)\n: Bool val\n```\n\n#### Parameters\n\n- s: [String](index) box\n- offset: [ISize](builtin-isize) val = 0\n- nth: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### count\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L728)\n\nCounts the non-overlapping occurrences of s in the string.\n\n``` pony\nfun box count(\n  s: String box,\n  offset: ISize val = 0)\n: USize val\n```\n\n#### Parameters\n\n- s: [String](index) box\n- offset: [ISize](builtin-isize) val = 0\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### at\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L751)\n\nReturns true if the substring s is present at the given offset.\n\n``` pony\nfun box at(\n  s: String box,\n  offset: ISize val = 0)\n: Bool val\n```\n\n#### Parameters\n\n- s: [String](index) box\n- offset: [ISize](builtin-isize) val = 0\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L763)\n\nDelete len bytes at the supplied offset, compacting the string in place.\n\n``` pony\nfun ref delete(\n  offset: ISize val,\n  len: USize val = 1)\n: None val\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n- len: [USize](builtin-usize) val = 1\n\n#### Returns\n\n- [None](builtin-none) val\n\n### substring\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L776)\n\nReturns a substring. Index range \\[`from` .. `to`) is half-open. Returns an empty string if nothing is in the range.\n\nNote that this operation allocates a new string to be returned. For similar operations that don't allocate a new string, see `trim` and `trim_in_place`.\n\n``` pony\nfun box substring(\n  from: ISize val,\n  to: ISize val = call)\n: String iso^\n```\n\n#### Parameters\n\n- from: [ISize](builtin-isize) val\n- to: [ISize](builtin-isize) val = call\n\n#### Returns\n\n- [String](index) iso^\n\n### lower\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L799)\n\nReturns a lower case version of the string.\n\n``` pony\nfun box lower()\n: String iso^\n```\n\n#### Returns\n\n- [String](index) iso^\n\n### lower_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L807)\n\nTransforms the string to lower case. Currently only knows ASCII case.\n\n``` pony\nfun ref lower_in_place()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### upper\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L823)\n\nReturns an upper case version of the string. Currently only knows ASCII case.\n\n``` pony\nfun box upper()\n: String iso^\n```\n\n#### Returns\n\n- [String](index) iso^\n\n### upper_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L832)\n\nTransforms the string to upper case.\n\n``` pony\nfun ref upper_in_place()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L848)\n\nReturns a reversed version of the string.\n\n``` pony\nfun box reverse()\n: String iso^\n```\n\n#### Returns\n\n- [String](index) iso^\n\n### reverse_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L856)\n\nReverses the byte order in the string. This needs to be changed to handle UTF-8 correctly.\n\n``` pony\nfun ref reverse_in_place()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L874)\n\nAdd a byte to the end of the string.\n\n``` pony\nfun ref push(\n  value: U8 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L883)\n\nRemove a byte from the end of the string.\n\n``` pony\nfun ref pop()\n: U8 val ?\n```\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### unshift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L894)\n\nAdds a byte to the beginning of the string.\n\n``` pony\nfun ref unshift(\n  value: U8 val)\n: None val\n```\n\n#### Parameters\n\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### shift\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L908)\n\nRemoves a byte from the beginning of the string.\n\n``` pony\nfun ref shift()\n: U8 val ?\n```\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### append\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L921)\n\nAppend the elements from a sequence, starting from the given offset.\n\n``` pony\nfun ref append(\n  seq: ReadSeq[U8 val] box,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- seq: [ReadSeq](builtin-readseq)\\[[U8](builtin-u8) val\\] box\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L949)\n\nAdd len iterated bytes to the end of the string, starting from the given offset.\n\n``` pony\nfun ref concat(\n  iter: Iterator[U8 val] ref,\n  offset: USize val = 0,\n  len: USize val = call)\n: None val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[[U8](builtin-u8) val\\] ref\n- offset: [USize](builtin-usize) val = 0\n- len: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### clear\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L980)\n\nTruncate the string to zero length.\n\n``` pony\nfun ref clear()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### insert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L987)\n\nReturns a version of the string with the given string inserted at the given offset.\n\n``` pony\nfun box insert(\n  offset: ISize val,\n  that: String val)\n: String iso^\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n- that: [String](index) val\n\n#### Returns\n\n- [String](index) iso^\n\n### insert_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L996)\n\nInserts the given string at the given offset. Appends the string if the offset is out of bounds.\n\n``` pony\nfun ref insert_in_place(\n  offset: ISize val,\n  that: String box)\n: None val\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n- that: [String](index) box\n\n#### Returns\n\n- [None](builtin-none) val\n\n### insert_byte\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1009)\n\nInserts a byte at the given offset. Appends if the offset is out of bounds.\n\n``` pony\nfun ref insert_byte(\n  offset: ISize val,\n  value: U8 val)\n: None val\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val\n- value: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### cut\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1021)\n\nReturns a version of the string with the given range deleted. Index range \\[`from` .. `to`) is half-open.\n\n``` pony\nfun box cut(\n  from: ISize val,\n  to: ISize val = call)\n: String iso^\n```\n\n#### Parameters\n\n- from: [ISize](builtin-isize) val\n- to: [ISize](builtin-isize) val = call\n\n#### Returns\n\n- [String](index) iso^\n\n### cut_in_place\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1030)\n\nCuts the given range out of the string. Index range \\[`from` .. `to`) is half-open.\n\n``` pony\nfun ref cut_in_place(\n  from: ISize val,\n  to: ISize val = call)\n: None val\n```\n\n#### Parameters\n\n- from: [ISize](builtin-isize) val\n- to: [ISize](builtin-isize) val = call\n\n#### Returns\n\n- [None](builtin-none) val\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1052)\n\nRemove all instances of s from the string. Returns the count of removed instances.\n\n``` pony\nfun ref remove(\n  s: String box)\n: USize val\n```\n\n#### Parameters\n\n- s: [String](index) box\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### replace\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1069)\n\nReplace up to n occurrences of `from` in `this` with `to`. If n is 0, all occurrences will be replaced. Returns the count of replaced occurrences.\n\n``` pony\nfun ref replace(\n  from: String box,\n  to: String box,\n  n: USize val = 0)\n: USize val\n```\n\n#### Parameters\n\n- from: [String](index) box\n- to: [String](index) box\n- n: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### split_by\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1094)\n\nSplit the string into an array of strings that are delimited by `delim` in the original string. If `n > 0`, then the split count is limited to n.\n\nExample:\n\n``` pony\nlet original: String = \"<b><span>Hello!</span></b>\"\nlet delimiter: String = \"><\"\nlet split_array: Array[String] = original.split_by(delimiter)\nenv.out.print(\"OUTPUT:\")\nfor value in split_array.values() do\n  env.out.print(value)\nend\n\n// OUTPUT:\n// <b\n// span>Hello!</span\n// b>\n```\n\nAdjacent delimiters result in a zero length entry in the array. For example, `\"1CutCut2\".split_by(\"Cut\") => [\"1\", \"\", \"2\"]`.\n\nAn empty delimiter results in an array that contains a single element equal to the whole string.\n\nIf you want to split the string with each individual character of `delim`, use [`split`](#split).\n\n``` pony\nfun box split_by(\n  delim: String val,\n  n: USize val = call)\n: Array[String val] iso^\n```\n\n#### Parameters\n\n- delim: [String](index) val\n- n: [USize](builtin-usize) val = call\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](index) val\\] iso^\n\n### split\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1145)\n\nSplit the string into an array of strings with any character in the delimiter string. By default, the string is split with whitespace characters. If `n > 0`, then the split count is limited to n.\n\nExample:\n\n``` pony\nlet original: String = \"name,job;department\"\nlet delimiter: String = \".,;\"\nlet split_array: Array[String] = original.split(delimiter)\nenv.out.print(\"OUTPUT:\")\nfor value in split_array.values() do\n  env.out.print(value)\nend\n\n// OUTPUT:\n// name\n// job\n// department\n```\n\nAdjacent delimiters result in a zero length entry in the array. For example, `\"1,,2\".split(\",\") => [\"1\", \"\", \"2\"]`.\n\nIf you want to split the string with the entire delimiter string `delim`, use [`split_by`](#split_by).\n\n``` pony\nfun box split(\n  delim: String val = \"     \n\",\n  n: USize val = 0)\n: Array[String val] iso^\n```\n\n#### Parameters\n\n- delim: [String](index) val = \" \"\n- n: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](index) val\\] iso^\n\n### strip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1225)\n\nRemove all leading and trailing characters from the string that are in s.\n\n``` pony\nfun ref strip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### rstrip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1231)\n\nRemove all trailing characters within the string that are in s. By default, trailing whitespace is removed.\n\n``` pony\nfun ref rstrip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### lstrip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1263)\n\nRemove all leading characters within the string that are in s. By default, leading whitespace is removed.\n\n``` pony\nfun ref lstrip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1304)\n\nReturn a string that is a concatenation of this and that.\n\n``` pony\nfun box add(\n  that: String box)\n: String val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [String](index) val\n\n### join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1312)\n\nReturn a string that is a concatenation of the strings in data, using this as a separator.\n\n``` pony\nfun box join(\n  data: Iterator[Stringable box] ref)\n: String iso^\n```\n\n#### Parameters\n\n- data: [Iterator](builtin-iterator)\\[[Stringable](builtin-stringable) box\\] ref\n\n#### Returns\n\n- [String](index) iso^\n\n### compare\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1329)\n\nLexically compare two strings.\n\n``` pony\nfun box compare(\n  that: String box)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n### compare_sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1335)\n\nLexically compare at most `n` bytes of the substring of `this` starting at `offset` with the substring of `that` starting at `that_offset`. The comparison is case sensitive unless `ignore_case` is `true`.\n\nIf the substring of `this` is a proper prefix of the substring of `that`, then `this` is `Less` than `that`. Likewise, if `that` is a proper prefix of `this`, then `this` is `Greater` than `that`.\n\nBoth `offset` and `that_offset` can be negative, in which case the offsets are computed from the end of the string.\n\nIf `n + offset` is greater than the length of `this`, or `n + that_offset` is greater than the length of `that`, then the number of positions compared will be reduced to the length of the longest substring.\n\nNeeds to be made UTF-8 safe.\n\n``` pony\nfun box compare_sub(\n  that: String box,\n  n: USize val,\n  offset: ISize val = 0,\n  that_offset: ISize val = 0,\n  ignore_case: Bool val = false)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [String](index) box\n- n: [USize](builtin-usize) val\n- offset: [ISize](builtin-isize) val = 0\n- that_offset: [ISize](builtin-isize) val = 0\n- ignore_case: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1392)\n\nReturns true if the two strings have the same contents.\n\n``` pony\nfun box eq(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1402)\n\nReturns true if this is lexically less than that. Needs to be made UTF-8 safe.\n\n``` pony\nfun box lt(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1420)\n\nReturns true if this is lexically less than or equal to that. Needs to be made UTF-8 safe.\n\n``` pony\nfun box le(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### offset_to_index\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1438)\n\n``` pony\nfun box offset_to_index(\n  i: ISize val)\n: USize val\n```\n\n#### Parameters\n\n- i: [ISize](builtin-isize) val\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### bool\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1441)\n\n``` pony\nfun box bool()\n: Bool val ?\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val ?\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1449)\n\n``` pony\nfun box i8(\n  base: U8 val = 0)\n: I8 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [I8](builtin-i8) val ?\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1450)\n\n``` pony\nfun box i16(\n  base: U8 val = 0)\n: I16 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [I16](builtin-i16) val ?\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1451)\n\n``` pony\nfun box i32(\n  base: U8 val = 0)\n: I32 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [I32](builtin-i32) val ?\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1452)\n\n``` pony\nfun box i64(\n  base: U8 val = 0)\n: I64 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [I64](builtin-i64) val ?\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1453)\n\n``` pony\nfun box i128(\n  base: U8 val = 0)\n: I128 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [I128](builtin-i128) val ?\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1454)\n\n``` pony\nfun box ilong(\n  base: U8 val = 0)\n: ILong val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [ILong](builtin-ilong) val ?\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1455)\n\n``` pony\nfun box isize(\n  base: U8 val = 0)\n: ISize val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [ISize](builtin-isize) val ?\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1456)\n\n``` pony\nfun box u8(\n  base: U8 val = 0)\n: U8 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1457)\n\n``` pony\nfun box u16(\n  base: U8 val = 0)\n: U16 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [U16](builtin-u16) val ?\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1458)\n\n``` pony\nfun box u32(\n  base: U8 val = 0)\n: U32 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1459)\n\n``` pony\nfun box u64(\n  base: U8 val = 0)\n: U64 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [U64](builtin-u64) val ?\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1460)\n\n``` pony\nfun box u128(\n  base: U8 val = 0)\n: U128 val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [U128](builtin-u128) val ?\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1461)\n\n``` pony\nfun box ulong(\n  base: U8 val = 0)\n: ULong val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [ULong](builtin-ulong) val ?\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1462)\n\n``` pony\nfun box usize(\n  base: U8 val = 0)\n: USize val ?\n```\n\n#### Parameters\n\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### read_int\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1475)\n\nRead an integer from the specified location in this string. The integer value read and the number of bytes consumed are reported. The base parameter specifies the base to use, 0 indicates using the prefix, if any, to detect base 2, 10 or 16. If no integer is found at the specified location, then (0, 0) is returned, since no characters have been used. An integer out of range for the target type throws an error. A leading minus is allowed for signed integer types. Underscore characters are allowed throughout the integer and are ignored.\n\n``` pony\nfun box read_int[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val) & Integer[A] val)](\n  offset: ISize val = 0,\n  base: U8 val = 0)\n: (A , USize val) ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val = 0\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- (A , [USize](builtin-usize) val) ?\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1590)\n\nConvert this string starting at the given offset to a 32-bit floating point number ([F32](builtin-f32)).\n\nThis method errors if this string cannot be parsed to a float, if the result would over- or underflow, the offset exceeds the size of this string or there are leftover characters in the string after conversion.\n\nExamples:\n\n``` pony\n\"1.5\".f32()? == F32(1.5)\n\"1.19208e-07\".f32()? == F32(1.19208e-07)\n\"NaN\".f32()?.nan() == true\n```\n\n``` pony\nfun box f32(\n  offset: ISize val = 0)\n: F32 val ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val = 0\n\n#### Returns\n\n- [F32](builtin-f32) val ?\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1623)\n\nConvert this string starting at the given offset to a 64-bit floating point number ([F64](builtin-f64)).\n\nThis method errors if this string cannot be parsed to a float, if the result would over- or underflow, the offset exceeds the size of this string or there are leftover characters in the string after conversion.\n\nExamples:\n\n``` pony\n\"1.5\".f64()? == F64(1.5)\n\"1.19208e-07\".f64()? == F64(1.19208e-07)\n\"Inf\".f64()?.infinite() == true\n```\n\n``` pony\nfun box f64(\n  offset: ISize val = 0)\n: F64 val ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val = 0\n\n#### Returns\n\n- [F64](builtin-f64) val ?\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1656)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1659)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1662)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](index) iso^\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1665)\n\nReturn an iterator over the bytes in the string.\n\n``` pony\nfun box values()\n: StringBytes ref^\n```\n\n#### Returns\n\n- [StringBytes](builtin-stringbytes) ref^\n\n### runes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1671)\n\nReturn an iterator over the codepoints in the string.\n\n``` pony\nfun box runes()\n: StringRunes ref^\n```\n\n#### Returns\n\n- [StringRunes](builtin-stringrunes) ref^\n\n### ge\n\n``` pony\nfun box ge(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-String](https://stdlib.ponylang.io/builtin-String)"
- name: String.add()
  id: builtin-string#add
  summary: Return a string that is a concatenation of this and that
  belongs_to: String
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1304)

    Return a string that is a concatenation of this and that.

    ``` pony
    fun box add(
      that: String box)
    : String val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [String](index) val

    &nbsp;
- name: String.append()
  id: builtin-string#append
  summary: Append the elements from a sequence, starting from the given offset
  belongs_to: String
  description: |-
    ### append

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L921)

    Append the elements from a sequence, starting from the given offset.

    ``` pony
    fun ref append(
      seq: ReadSeq[U8 val] box,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - seq: [ReadSeq](builtin-readseq)\[[U8](builtin-u8) val\] box
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.apply()
  id: builtin-string#apply
  summary: Returns the i-th byte
  belongs_to: String
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L574)

    Returns the i-th byte. Raise an error if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : U8 val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.array()
  id: builtin-string#array
  summary: Returns an Array[U8] that reuses the underlying data pointer
  belongs_to: String
  description: |-
    ### array

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L239)

    Returns an Array\[U8\] that reuses the underlying data pointer.

    ``` pony
    fun val array()
    : Array[U8 val] val
    ```

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] val

    &nbsp;
- name: String.at()
  id: builtin-string#at
  summary: Returns true if the substring s is present at the given offset
  belongs_to: String
  description: |-
    ### at

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L751)

    Returns true if the substring s is present at the given offset.

    ``` pony
    fun box at(
      s: String box,
      offset: ISize val = 0)
    : Bool val
    ```

    #### Parameters

    - s: [String](index) box
    - offset: [ISize](builtin-isize) val = 0

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.at_offset()
  id: builtin-string#at_offset
  summary: Returns the byte at the given offset
  belongs_to: String
  description: |-
    ### at_offset

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L590)

    Returns the byte at the given offset. Raise an error if the offset is out of bounds.

    ``` pony
    fun box at_offset(
      offset: ISize val)
    : U8 val ?
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.bool()
  id: builtin-string#bool
  summary: null
  belongs_to: String
  description: |-
    ### bool

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1441)

    ``` pony
    fun box bool()
    : Bool val ?
    ```

    #### Returns

    - [Bool](builtin-bool) val ?

    &nbsp;
- name: String.chop()
  id: builtin-string#chop
  summary: Chops the string in half at the split point requested and returns both the left and right portions
  belongs_to: String
  description: |-
    ### chop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L409)

    Chops the string in half at the split point requested and returns both the left and right portions. The original string is trimmed in place and returned as the left portion. If the split point is larger than the string, the left portion is the original string and the right portion is a new empty string. Both strings are isolated and mutable, as they do not share memory. The operation does not allocate a new string pointer nor copy elements.

    ``` pony
    fun iso chop(
      split_point: USize val)
    : (String iso^ , String iso^)
    ```

    #### Parameters

    - split_point: [USize](builtin-usize) val

    #### Returns

    - ([String](index) iso^ , [String](index) iso^)

    &nbsp;
- name: String.clear()
  id: builtin-string#clear
  summary: Truncate the string to zero length
  belongs_to: String
  description: |-
    ### clear

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L980)

    Truncate the string to zero length.

    ``` pony
    fun ref clear()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.clone()
  id: builtin-string#clone
  summary: Returns a copy of the string
  belongs_to: String
  description: |-
    ### clone

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L604)

    Returns a copy of the string. The resulting string is null-terminated even if the original is not.

    ``` pony
    fun box clone()
    : String iso^
    ```

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.codepoints()
  id: builtin-string#codepoints
  summary: Returns the number of unicode code points in the string between the two offsets
  belongs_to: String
  description: |-
    ### codepoints

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L261)

    Returns the number of unicode code points in the string between the two offsets. Index range \[`from` .. `to`) is half-open.

    ``` pony
    fun box codepoints(
      from: ISize val = 0,
      to: ISize val = call)
    : USize val
    ```

    #### Parameters

    - from: [ISize](builtin-isize) val = 0
    - to: [ISize](builtin-isize) val = call

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.compact()
  id: builtin-string#compact
  summary: Try to remove unused space, making it available for garbage collection
  belongs_to: String
  description: |-
    ### compact

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L306)

    Try to remove unused space, making it available for garbage collection. The request may be ignored. The string is returned to allow call chaining.

    ``` pony
    fun ref compact()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.compare()
  id: builtin-string#compare
  summary: Lexically compare two strings
  belongs_to: String
  description: |-
    ### compare

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1329)

    Lexically compare two strings.

    ``` pony
    fun box compare(
      that: String box)
    : (Less val | Equal val | Greater val)
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    &nbsp;
- name: String.compare_sub()
  id: builtin-string#compare_sub
  summary: Lexically compare at most n bytes of the substring of this starting at offset with the substring of that starting at that_offset
  belongs_to: String
  description: |-
    ### compare_sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1335)

    Lexically compare at most `n` bytes of the substring of `this` starting at `offset` with the substring of `that` starting at `that_offset`. The comparison is case sensitive unless `ignore_case` is `true`.

    If the substring of `this` is a proper prefix of the substring of `that`, then `this` is `Less` than `that`. Likewise, if `that` is a proper prefix of `this`, then `this` is `Greater` than `that`.

    Both `offset` and `that_offset` can be negative, in which case the offsets are computed from the end of the string.

    If `n + offset` is greater than the length of `this`, or `n + that_offset` is greater than the length of `that`, then the number of positions compared will be reduced to the length of the longest substring.

    Needs to be made UTF-8 safe.

    ``` pony
    fun box compare_sub(
      that: String box,
      n: USize val,
      offset: ISize val = 0,
      that_offset: ISize val = 0,
      ignore_case: Bool val = false)
    : (Less val | Equal val | Greater val)
    ```

    #### Parameters

    - that: [String](index) box
    - n: [USize](builtin-usize) val
    - offset: [ISize](builtin-isize) val = 0
    - that_offset: [ISize](builtin-isize) val = 0
    - ignore_case: [Bool](builtin-bool) val = false

    #### Returns

    - ([Less](builtin-less) val \| [Equal](builtin-equal) val \| [Greater](builtin-greater) val)

    &nbsp;
- name: String.concat()
  id: builtin-string#concat
  summary: Add len iterated bytes to the end of the string, starting from the given offset
  belongs_to: String
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L949)

    Add len iterated bytes to the end of the string, starting from the given offset.

    ``` pony
    fun ref concat(
      iter: Iterator[U8 val] ref,
      offset: USize val = 0,
      len: USize val = call)
    : None val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[[U8](builtin-u8) val\] ref
    - offset: [USize](builtin-usize) val = 0
    - len: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.contains()
  id: builtin-string#contains
  summary: Returns true if contains s as a substring, false otherwise
  belongs_to: String
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L700)

    Returns true if contains s as a substring, false otherwise.

    ``` pony
    fun box contains(
      s: String box,
      offset: ISize val = 0,
      nth: USize val = 0)
    : Bool val
    ```

    #### Parameters

    - s: [String](index) box
    - offset: [ISize](builtin-isize) val = 0
    - nth: [USize](builtin-usize) val = 0

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.copy_cpointer()
  id: builtin-string#copy_cpointer
  summary: Create a string by copying a fixed number of bytes from a pointer
  belongs_to: String
  description: |-
    ### copy_cpointer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L128)

    Create a string by copying a fixed number of bytes from a pointer.

    ``` pony
    new ref copy_cpointer(
      str: Pointer[U8 val] box,
      len: USize val)
    : String ref^
    ```

    #### Parameters

    - str: [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] box
    - len: [USize](builtin-usize) val

    #### Returns

    - [String](index) ref^

    &nbsp;
- name: String.copy_cstring()
  id: builtin-string#copy_cstring
  summary: Create a string by copying a null-terminated C string
  belongs_to: String
  description: |-
    ### copy_cstring

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L144)

    Create a string by copying a null-terminated C string. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.

    ``` pony
    new ref copy_cstring(
      str: Pointer[U8 val] box)
    : String ref^
    ```

    #### Parameters

    - str: [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] box

    #### Returns

    - [String](index) ref^

    &nbsp;
- name: String.count()
  id: builtin-string#count
  summary: Counts the non-overlapping occurrences of s in the string
  belongs_to: String
  description: |-
    ### count

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L728)

    Counts the non-overlapping occurrences of s in the string.

    ``` pony
    fun box count(
      s: String box,
      offset: ISize val = 0)
    : USize val
    ```

    #### Parameters

    - s: [String](index) box
    - offset: [ISize](builtin-isize) val = 0

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.cpointer()
  id: builtin-string#cpointer
  summary: Returns a C compatible pointer to the underlying string allocation
  belongs_to: String
  description: |-
    ### cpointer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L216)

    Returns a C compatible pointer to the underlying string allocation.

    ``` pony
    fun box cpointer(
      offset: USize val = 0)
    : Pointer[U8 val] tag
    ```

    #### Parameters

    - offset: [USize](builtin-usize) val = 0

    #### Returns

    - [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] tag

    &nbsp;
- name: String.create()
  id: builtin-string#create
  summary: An empty string
  belongs_to: String
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L54)

    An empty string. Enough space for len bytes is reserved.

    ``` pony
    new ref create(
      len: USize val = 0)
    : String ref^
    ```

    #### Parameters

    - len: [USize](builtin-usize) val = 0

    #### Returns

    - [String](index) ref^
- name: String.cstring()
  id: builtin-string#cstring
  summary: Returns a C compatible pointer to a null-terminated version of the string, safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator
  belongs_to: String
  description: |-
    ### cstring

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L222)

    Returns a C compatible pointer to a null-terminated version of the string, safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. If the underlying string is already null terminated, this is returned; otherwise the string is copied into a new, null-terminated allocation.

    ``` pony
    fun box cstring()
    : Pointer[U8 val] tag
    ```

    #### Returns

    - [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] tag

    &nbsp;
- name: String.cut()
  id: builtin-string#cut
  summary: Returns a version of the string with the given range deleted
  belongs_to: String
  description: |-
    ### cut

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1021)

    Returns a version of the string with the given range deleted. Index range \[`from` .. `to`) is half-open.

    ``` pony
    fun box cut(
      from: ISize val,
      to: ISize val = call)
    : String iso^
    ```

    #### Parameters

    - from: [ISize](builtin-isize) val
    - to: [ISize](builtin-isize) val = call

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.cut_in_place()
  id: builtin-string#cut_in_place
  summary: Cuts the given range out of the string
  belongs_to: String
  description: |-
    ### cut_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1030)

    Cuts the given range out of the string. Index range \[`from` .. `to`) is half-open.

    ``` pony
    fun ref cut_in_place(
      from: ISize val,
      to: ISize val = call)
    : None val
    ```

    #### Parameters

    - from: [ISize](builtin-isize) val
    - to: [ISize](builtin-isize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.delete()
  id: builtin-string#delete
  summary: Delete len bytes at the supplied offset, compacting the string in place
  belongs_to: String
  description: |-
    ### delete

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L763)

    Delete len bytes at the supplied offset, compacting the string in place.

    ``` pony
    fun ref delete(
      offset: ISize val,
      len: USize val = 1)
    : None val
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val
    - len: [USize](builtin-usize) val = 1

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.eq()
  id: builtin-string#eq
  summary: Returns true if the two strings have the same contents
  belongs_to: String
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1392)

    Returns true if the two strings have the same contents.

    ``` pony
    fun box eq(
      that: String box)
    : Bool val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.f32()
  id: builtin-string#f32
  summary: Convert this string starting at the given offset to a 32-bit floating point number (F32)
  belongs_to: String
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1590)

    Convert this string starting at the given offset to a 32-bit floating point number ([F32](builtin-f32)).

    This method errors if this string cannot be parsed to a float, if the result would over- or underflow, the offset exceeds the size of this string or there are leftover characters in the string after conversion.

    Examples:

    ``` pony
    "1.5".f32()? == F32(1.5)
    "1.19208e-07".f32()? == F32(1.19208e-07)
    "NaN".f32()?.nan() == true
    ```

    ``` pony
    fun box f32(
      offset: ISize val = 0)
    : F32 val ?
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val = 0

    #### Returns

    - [F32](builtin-f32) val ?

    &nbsp;
- name: String.f64()
  id: builtin-string#f64
  summary: Convert this string starting at the given offset to a 64-bit floating point number (F64)
  belongs_to: String
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1623)

    Convert this string starting at the given offset to a 64-bit floating point number ([F64](builtin-f64)).

    This method errors if this string cannot be parsed to a float, if the result would over- or underflow, the offset exceeds the size of this string or there are leftover characters in the string after conversion.

    Examples:

    ``` pony
    "1.5".f64()? == F64(1.5)
    "1.19208e-07".f64()? == F64(1.19208e-07)
    "Inf".f64()?.infinite() == true
    ```

    ``` pony
    fun box f64(
      offset: ISize val = 0)
    : F64 val ?
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val = 0

    #### Returns

    - [F64](builtin-f64) val ?

    &nbsp;
- name: String.find()
  id: builtin-string#find
  summary: Return the index of the n-th instance of s in the string starting from the beginning
  belongs_to: String
  description: |-
    ### find

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L640)

    Return the index of the n-th instance of s in the string starting from the beginning. Raise an error if there is no n-th occurrence of s or s is empty.

    ``` pony
    fun box find(
      s: String box,
      offset: ISize val = 0,
      nth: USize val = 0)
    : ISize val ?
    ```

    #### Parameters

    - s: [String](index) box
    - offset: [ISize](builtin-isize) val = 0
    - nth: [USize](builtin-usize) val = 0

    #### Returns

    - [ISize](builtin-isize) val ?

    &nbsp;
- name: String.from_array()
  id: builtin-string#from_array
  summary: Create a string from an array, reusing the underlying data pointer
  belongs_to: String
  description: |-
    ### from_array

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L63)

    Create a string from an array, reusing the underlying data pointer.

    ``` pony
    new val from_array(
      data: Array[U8 val] val)
    : String val^
    ```

    #### Parameters

    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] val

    #### Returns

    - [String](index) val^

    &nbsp;
- name: String.from_cpointer()
  id: builtin-string#from_cpointer
  summary: Return a string from binary pointer data without making a copy
  belongs_to: String
  description: |-
    ### from_cpointer

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L82)

    Return a string from binary pointer data without making a copy. This must be done only with C-FFI functions that return pony_alloc'd character arrays. If a null pointer is given then an empty string is returned.

    ``` pony
    new ref from_cpointer(
      str: Pointer[U8 val] ref,
      len: USize val,
      alloc: USize val = 0)
    : String ref^
    ```

    #### Parameters

    - str: [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] ref
    - len: [USize](builtin-usize) val
    - alloc: [USize](builtin-usize) val = 0

    #### Returns

    - [String](index) ref^

    &nbsp;
- name: String.from_cstring()
  id: builtin-string#from_cstring
  summary: Return a string from a pointer to a null-terminated cstring without making a copy
  belongs_to: String
  description: |-
    ### from_cstring

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L100)

    Return a string from a pointer to a null-terminated cstring without making a copy. The data is not copied. This must be done only with C-FFI functions that return pony_alloc'd character arrays. The pointer is scanned for the first null byte, which will be interpreted as the null terminator. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.

    ``` pony
    new ref from_cstring(
      str: Pointer[U8 val] ref)
    : String ref^
    ```

    #### Parameters

    - str: [Pointer](builtin-pointer)\[[U8](builtin-u8) val\] ref

    #### Returns

    - [String](index) ref^

    &nbsp;
- name: String.from_iso_array()
  id: builtin-string#from_iso_array
  summary: null
  belongs_to: String
  description: |-
    ### from_iso_array

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L71)

    Create a string from an array, reusing the underlying data pointer

    ``` pony
    new iso from_iso_array(
      data: Array[U8 val] iso)
    : String iso^
    ```

    #### Parameters

    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.from_utf32()
  id: builtin-string#from_utf32
  summary: Create a UTF-8 string from a single UTF-32 code point
  belongs_to: String
  description: |-
    ### from_utf32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L169)

    Create a UTF-8 string from a single UTF-32 code point.

    ``` pony
    new ref from_utf32(
      value: U32 val)
    : String ref^
    ```

    #### Parameters

    - value: [U32](builtin-u32) val

    #### Returns

    - [String](index) ref^

    ## Public Functions
- name: String.ge()
  id: builtin-string#ge
  summary: null
  belongs_to: String
  description: |-
    ### ge

    ``` pony
    fun box ge(
      that: String box)
    : Bool val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.gt()
  id: builtin-string#gt
  summary: null
  belongs_to: String
  description: |-
    ### gt

    ``` pony
    fun box gt(
      that: String box)
    : Bool val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.hash()
  id: builtin-string#hash
  summary: null
  belongs_to: String
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1656)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.hash64()
  id: builtin-string#hash64
  summary: null
  belongs_to: String
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1659)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: String.i128()
  id: builtin-string#i128
  summary: null
  belongs_to: String
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1453)

    ``` pony
    fun box i128(
      base: U8 val = 0)
    : I128 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [I128](builtin-i128) val ?

    &nbsp;
- name: String.i16()
  id: builtin-string#i16
  summary: null
  belongs_to: String
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1450)

    ``` pony
    fun box i16(
      base: U8 val = 0)
    : I16 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [I16](builtin-i16) val ?

    &nbsp;
- name: String.i32()
  id: builtin-string#i32
  summary: null
  belongs_to: String
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1451)

    ``` pony
    fun box i32(
      base: U8 val = 0)
    : I32 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [I32](builtin-i32) val ?

    &nbsp;
- name: String.i64()
  id: builtin-string#i64
  summary: null
  belongs_to: String
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1452)

    ``` pony
    fun box i64(
      base: U8 val = 0)
    : I64 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [I64](builtin-i64) val ?

    &nbsp;
- name: String.i8()
  id: builtin-string#i8
  summary: null
  belongs_to: String
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1449)

    ``` pony
    fun box i8(
      base: U8 val = 0)
    : I8 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [I8](builtin-i8) val ?

    &nbsp;
- name: String.ilong()
  id: builtin-string#ilong
  summary: null
  belongs_to: String
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1454)

    ``` pony
    fun box ilong(
      base: U8 val = 0)
    : ILong val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [ILong](builtin-ilong) val ?

    &nbsp;
- name: String.insert()
  id: builtin-string#insert
  summary: Returns a version of the string with the given string inserted at the given offset
  belongs_to: String
  description: |-
    ### insert

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L987)

    Returns a version of the string with the given string inserted at the given offset.

    ``` pony
    fun box insert(
      offset: ISize val,
      that: String val)
    : String iso^
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val
    - that: [String](index) val

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.insert_byte()
  id: builtin-string#insert_byte
  summary: Inserts a byte at the given offset
  belongs_to: String
  description: |-
    ### insert_byte

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1009)

    Inserts a byte at the given offset. Appends if the offset is out of bounds.

    ``` pony
    fun ref insert_byte(
      offset: ISize val,
      value: U8 val)
    : None val
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val
    - value: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.insert_in_place()
  id: builtin-string#insert_in_place
  summary: Inserts the given string at the given offset
  belongs_to: String
  description: |-
    ### insert_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L996)

    Inserts the given string at the given offset. Appends the string if the offset is out of bounds.

    ``` pony
    fun ref insert_in_place(
      offset: ISize val,
      that: String box)
    : None val
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val
    - that: [String](index) box

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.is_null_terminated()
  id: builtin-string#is_null_terminated
  summary: Return true if the string is null-terminated and safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator
  belongs_to: String
  description: |-
    ### is_null_terminated

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L477)

    Return true if the string is null-terminated and safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. This method checks that there is a null byte just after the final position of populated bytes in the string, but does not check for other null bytes which may be present earlier in the content of the string. If you need a null-terminated copy of this string, use the clone method.

    ``` pony
    fun box is_null_terminated()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.isize()
  id: builtin-string#isize
  summary: null
  belongs_to: String
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1455)

    ``` pony
    fun box isize(
      base: U8 val = 0)
    : ISize val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [ISize](builtin-isize) val ?

    &nbsp;
- name: String.iso_array()
  id: builtin-string#iso_array
  summary: Returns an Array[U8] iso that reuses the underlying data pointer
  belongs_to: String
  description: |-
    ### iso_array

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L247)

    Returns an Array\[U8\] iso that reuses the underlying data pointer.

    ``` pony
    fun iso iso_array()
    : Array[U8 val] iso^
    ```

    #### Returns

    - [Array](builtin-array)\[[U8](builtin-u8) val\] iso^

    &nbsp;
- name: String.join()
  id: builtin-string#join
  summary: Return a string that is a concatenation of the strings in data, using this as a separator
  belongs_to: String
  description: |-
    ### join

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1312)

    Return a string that is a concatenation of the strings in data, using this as a separator.

    ``` pony
    fun box join(
      data: Iterator[Stringable box] ref)
    : String iso^
    ```

    #### Parameters

    - data: [Iterator](builtin-iterator)\[[Stringable](builtin-stringable) box\] ref

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.le()
  id: builtin-string#le
  summary: Returns true if this is lexically less than or equal to that
  belongs_to: String
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1420)

    Returns true if this is lexically less than or equal to that. Needs to be made UTF-8 safe.

    ``` pony
    fun box le(
      that: String box)
    : Bool val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.lower()
  id: builtin-string#lower
  summary: Returns a lower case version of the string
  belongs_to: String
  description: |-
    ### lower

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L799)

    Returns a lower case version of the string.

    ``` pony
    fun box lower()
    : String iso^
    ```

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.lower_in_place()
  id: builtin-string#lower_in_place
  summary: Transforms the string to lower case
  belongs_to: String
  description: |-
    ### lower_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L807)

    Transforms the string to lower case. Currently only knows ASCII case.

    ``` pony
    fun ref lower_in_place()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.lstrip()
  id: builtin-string#lstrip
  summary: Remove all leading characters within the string that are in s
  belongs_to: String
  description: "### lstrip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1263)\n\nRemove all leading characters within the string that are in s. By default, leading whitespace is removed.\n\n``` pony\nfun ref lstrip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n&nbsp;"
- name: String.lt()
  id: builtin-string#lt
  summary: Returns true if this is lexically less than that
  belongs_to: String
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1402)

    Returns true if this is lexically less than that. Needs to be made UTF-8 safe.

    ``` pony
    fun box lt(
      that: String box)
    : Bool val
    ```

    #### Parameters

    - that: [String](index) box

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: String.mul()
  id: builtin-string#mul
  summary: Returns a copy of the string repeated num times
  belongs_to: String
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L634)

    Returns a copy of the string repeated `num` times.

    ``` pony
    fun box mul(
      num: USize val)
    : String iso^
    ```

    #### Parameters

    - num: [USize](builtin-usize) val

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.ne()
  id: builtin-string#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: String
  description: "### ne\n\n``` pony\nfun box ne(\n  that: String box)\n: Bool val\n```\n\n#### Parameters\n\n- that: [String](index) box\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-String](https://stdlib.ponylang.io/builtin-String)"
- name: String.offset_to_index()
  id: builtin-string#offset_to_index
  summary: null
  belongs_to: String
  description: |-
    ### offset_to_index

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1438)

    ``` pony
    fun box offset_to_index(
      i: ISize val)
    : USize val
    ```

    #### Parameters

    - i: [ISize](builtin-isize) val

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.pop()
  id: builtin-string#pop
  summary: Remove a byte from the end of the string
  belongs_to: String
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L883)

    Remove a byte from the end of the string.

    ``` pony
    fun ref pop()
    : U8 val ?
    ```

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.push()
  id: builtin-string#push
  summary: Add a byte to the end of the string
  belongs_to: String
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L874)

    Add a byte to the end of the string.

    ``` pony
    fun ref push(
      value: U8 val)
    : None val
    ```

    #### Parameters

    - value: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.push_utf32()
  id: builtin-string#push_utf32
  summary: Push a UTF-32 code point
  belongs_to: String
  description: |-
    ### push_utf32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L189)

    Push a UTF-32 code point.

    ``` pony
    fun ref push_utf32(
      value: U32 val)
    : None val
    ```

    #### Parameters

    - value: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.read_int()
  id: builtin-string#read_inta-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-integera-val
  summary: Read an integer from the specified location in this string
  belongs_to: String
  description: "### read_int\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Integer](builtin-integer)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1475)\n\nRead an integer from the specified location in this string. The integer value read and the number of bytes consumed are reported. The base parameter specifies the base to use, 0 indicates using the prefix, if any, to detect base 2, 10 or 16. If no integer is found at the specified location, then (0, 0) is returned, since no characters have been used. An integer out of range for the target type throws an error. A leading minus is allowed for signed integer types. Underscore characters are allowed throughout the integer and are ignored.\n\n``` pony\nfun box read_int[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val) & Integer[A] val)](\n  offset: ISize val = 0,\n  base: U8 val = 0)\n: (A , USize val) ?\n```\n\n#### Parameters\n\n- offset: [ISize](builtin-isize) val = 0\n- base: [U8](builtin-u8) val = 0\n\n#### Returns\n\n- (A , [USize](builtin-usize) val) ?\n\n&nbsp;"
- name: String.recalc()
  id: builtin-string#recalc
  summary: Recalculates the string length
  belongs_to: String
  description: |-
    ### recalc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L325)

    Recalculates the string length. This is only needed if the string is changed via an FFI call. If a null terminator byte is not found within the allocated length, the size will not be changed.

    ``` pony
    fun ref recalc()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.remove()
  id: builtin-string#remove
  summary: Remove all instances of s from the string
  belongs_to: String
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1052)

    Remove all instances of s from the string. Returns the count of removed instances.

    ``` pony
    fun ref remove(
      s: String box)
    : USize val
    ```

    #### Parameters

    - s: [String](index) box

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.repeat_str()
  id: builtin-string#repeat_str
  summary: Returns a copy of the string repeated num times with an optional separator added inbetween repeats
  belongs_to: String
  description: |-
    ### repeat_str

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L616)

    Returns a copy of the string repeated `num` times with an optional separator added inbetween repeats.

    ``` pony
    fun box repeat_str(
      num: USize val = 1,
      sep: String val = "")
    : String iso^
    ```

    #### Parameters

    - num: [USize](builtin-usize) val = 1
    - sep: [String](index) val = ""

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.replace()
  id: builtin-string#replace
  summary: Replace up to n occurrences of from in this with to
  belongs_to: String
  description: |-
    ### replace

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1069)

    Replace up to n occurrences of `from` in `this` with `to`. If n is 0, all occurrences will be replaced. Returns the count of replaced occurrences.

    ``` pony
    fun ref replace(
      from: String box,
      to: String box,
      n: USize val = 0)
    : USize val
    ```

    #### Parameters

    - from: [String](index) box
    - to: [String](index) box
    - n: [USize](builtin-usize) val = 0

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.reserve()
  id: builtin-string#reserve
  summary: Reserve space for len bytes
  belongs_to: String
  description: |-
    ### reserve

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L290)

    Reserve space for len bytes. An additional byte will be reserved for the null terminator.

    ``` pony
    fun ref reserve(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.reverse()
  id: builtin-string#reverse
  summary: Returns a reversed version of the string
  belongs_to: String
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L848)

    Returns a reversed version of the string.

    ``` pony
    fun box reverse()
    : String iso^
    ```

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.reverse_in_place()
  id: builtin-string#reverse_in_place
  summary: Reverses the byte order in the string
  belongs_to: String
  description: |-
    ### reverse_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L856)

    Reverses the byte order in the string. This needs to be changed to handle UTF-8 correctly.

    ``` pony
    fun ref reverse_in_place()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.rfind()
  id: builtin-string#rfind
  summary: Return the index of n-th instance of s in the string starting from the end
  belongs_to: String
  description: |-
    ### rfind

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L669)

    Return the index of n-th instance of `s` in the string starting from the end. The `offset` represents the highest index to included in the search. Raise an error if there is no n-th occurrence of `s` or `s` is empty.

    ``` pony
    fun box rfind(
      s: String box,
      offset: ISize val = call,
      nth: USize val = 0)
    : ISize val ?
    ```

    #### Parameters

    - s: [String](index) box
    - offset: [ISize](builtin-isize) val = call
    - nth: [USize](builtin-usize) val = 0

    #### Returns

    - [ISize](builtin-isize) val ?

    &nbsp;
- name: String.rstrip()
  id: builtin-string#rstrip
  summary: Remove all trailing characters within the string that are in s
  belongs_to: String
  description: "### rstrip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1231)\n\nRemove all trailing characters within the string that are in s. By default, trailing whitespace is removed.\n\n``` pony\nfun ref rstrip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n&nbsp;"
- name: String.runes()
  id: builtin-string#runes
  summary: Return an iterator over the codepoints in the string
  belongs_to: String
  description: |-
    ### runes

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1671)

    Return an iterator over the codepoints in the string.

    ``` pony
    fun box runes()
    : StringRunes ref^
    ```

    #### Returns

    - [StringRunes](builtin-stringrunes) ref^

    &nbsp;
- name: String.shift()
  id: builtin-string#shift
  summary: Removes a byte from the beginning of the string
  belongs_to: String
  description: |-
    ### shift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L908)

    Removes a byte from the beginning of the string.

    ``` pony
    fun ref shift()
    : U8 val ?
    ```

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.size()
  id: builtin-string#size
  summary: Returns the length of the string data in bytes
  belongs_to: String
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L255)

    Returns the length of the string data in bytes.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.space()
  id: builtin-string#space
  summary: Returns the space available for data, not including the null terminator
  belongs_to: String
  description: |-
    ### space

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L284)

    Returns the space available for data, not including the null terminator.

    ``` pony
    fun box space()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: String.split()
  id: builtin-string#split
  summary: Split the string into an array of strings with any character in the delimiter string
  belongs_to: String
  description: "### split\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1145)\n\nSplit the string into an array of strings with any character in the delimiter string. By default, the string is split with whitespace characters. If `n > 0`, then the split count is limited to n.\n\nExample:\n\n``` pony\nlet original: String = \"name,job;department\"\nlet delimiter: String = \".,;\"\nlet split_array: Array[String] = original.split(delimiter)\nenv.out.print(\"OUTPUT:\")\nfor value in split_array.values() do\n  env.out.print(value)\nend\n\n// OUTPUT:\n// name\n// job\n// department\n```\n\nAdjacent delimiters result in a zero length entry in the array. For example, `\"1,,2\".split(\",\") => [\"1\", \"\", \"2\"]`.\n\nIf you want to split the string with the entire delimiter string `delim`, use [`split_by`](#split_by).\n\n``` pony\nfun box split(\n  delim: String val = \"     \n\",\n  n: USize val = 0)\n: Array[String val] iso^\n```\n\n#### Parameters\n\n- delim: [String](index) val = \" \"\n- n: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [Array](builtin-array)\\[[String](index) val\\] iso^\n\n&nbsp;"
- name: String.split_by()
  id: builtin-string#split_by
  summary: Split the string into an array of strings that are delimited by delim in the original string
  belongs_to: String
  description: |-
    ### split_by

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1094)

    Split the string into an array of strings that are delimited by `delim` in the original string. If `n > 0`, then the split count is limited to n.

    Example:

    ``` pony
    let original: String = "<b><span>Hello!</span></b>"
    let delimiter: String = "><"
    let split_array: Array[String] = original.split_by(delimiter)
    env.out.print("OUTPUT:")
    for value in split_array.values() do
      env.out.print(value)
    end

    // OUTPUT:
    // <b
    // span>Hello!</span
    // b>
    ```

    Adjacent delimiters result in a zero length entry in the array. For example, `"1CutCut2".split_by("Cut") => ["1", "", "2"]`.

    An empty delimiter results in an array that contains a single element equal to the whole string.

    If you want to split the string with each individual character of `delim`, use [`split`](#split).

    ``` pony
    fun box split_by(
      delim: String val,
      n: USize val = call)
    : Array[String val] iso^
    ```

    #### Parameters

    - delim: [String](index) val
    - n: [USize](builtin-usize) val = call

    #### Returns

    - [Array](builtin-array)\[[String](index) val\] iso^

    &nbsp;
- name: String.string()
  id: builtin-string#string_1
  summary: null
  belongs_to: String
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1662)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.strip()
  id: builtin-string#strip
  summary: Remove all leading and trailing characters from the string that are in s
  belongs_to: String
  description: "### strip\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1225)\n\nRemove all leading and trailing characters from the string that are in s.\n\n``` pony\nfun ref strip(\n  s: String box = \"     \n\")\n: None val\n```\n\n#### Parameters\n\n- s: [String](index) box = \" \"\n\n#### Returns\n\n- [None](builtin-none) val\n\n&nbsp;"
- name: String.substring()
  id: builtin-string#substring
  summary: Returns a substring
  belongs_to: String
  description: |-
    ### substring

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L776)

    Returns a substring. Index range \[`from` .. `to`) is half-open. Returns an empty string if nothing is in the range.

    Note that this operation allocates a new string to be returned. For similar operations that don't allocate a new string, see `trim` and `trim_in_place`.

    ``` pony
    fun box substring(
      from: ISize val,
      to: ISize val = call)
    : String iso^
    ```

    #### Parameters

    - from: [ISize](builtin-isize) val
    - to: [ISize](builtin-isize) val = call

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.trim()
  id: builtin-string#trim
  summary: Return a shared portion of this string, covering from until to
  belongs_to: String
  description: |-
    ### trim

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L385)

    Return a shared portion of this string, covering `from` until `to`. Both the original and the new string are immutable, as they share memory. The operation does not allocate a new string pointer nor copy elements.

    ``` pony
    fun val trim(
      from: USize val = 0,
      to: USize val = call)
    : String val
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call

    #### Returns

    - [String](index) val

    &nbsp;
- name: String.trim_in_place()
  id: builtin-string#trim_in_place
  summary: Trim the string to a portion of itself, covering from until to
  belongs_to: String
  description: |-
    ### trim_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L357)

    Trim the string to a portion of itself, covering `from` until `to`. Unlike slice, the operation does not allocate a new string nor copy elements.

    ``` pony
    fun ref trim_in_place(
      from: USize val = 0,
      to: USize val = call)
    : None val
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.truncate()
  id: builtin-string#truncate
  summary: Truncates the string at the minimum of len and space
  belongs_to: String
  description: |-
    ### truncate

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L341)

    Truncates the string at the minimum of len and space. Ensures there is a null terminator. Does not check for null terminators inside the string.

    Note that memory is not freed by this operation.

    ``` pony
    fun ref truncate(
      len: USize val)
    : None val
    ```

    #### Parameters

    - len: [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.u128()
  id: builtin-string#u128
  summary: null
  belongs_to: String
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1460)

    ``` pony
    fun box u128(
      base: U8 val = 0)
    : U128 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [U128](builtin-u128) val ?

    &nbsp;
- name: String.u16()
  id: builtin-string#u16
  summary: null
  belongs_to: String
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1457)

    ``` pony
    fun box u16(
      base: U8 val = 0)
    : U16 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [U16](builtin-u16) val ?

    &nbsp;
- name: String.u32()
  id: builtin-string#u32
  summary: null
  belongs_to: String
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1458)

    ``` pony
    fun box u32(
      base: U8 val = 0)
    : U32 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [U32](builtin-u32) val ?

    &nbsp;
- name: String.u64()
  id: builtin-string#u64
  summary: null
  belongs_to: String
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1459)

    ``` pony
    fun box u64(
      base: U8 val = 0)
    : U64 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [U64](builtin-u64) val ?

    &nbsp;
- name: String.u8()
  id: builtin-string#u8
  summary: null
  belongs_to: String
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1456)

    ``` pony
    fun box u8(
      base: U8 val = 0)
    : U8 val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.ulong()
  id: builtin-string#ulong
  summary: null
  belongs_to: String
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1461)

    ``` pony
    fun box ulong(
      base: U8 val = 0)
    : ULong val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [ULong](builtin-ulong) val ?

    &nbsp;
- name: String.unchop()
  id: builtin-string#unchop
  summary: Unchops two iso strings to return the original string they were chopped from
  belongs_to: String
  description: |-
    ### unchop

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L435)

    Unchops two iso strings to return the original string they were chopped from. Both input strings are isolated and mutable and were originally chopped from a single string. This function checks that they are indeed two strings chopped from the same original string and can be unchopped before doing the unchopping and returning the unchopped string. If the two strings cannot be unchopped it returns both strings without modifying them. The operation does not allocate a new string pointer nor copy elements.

    ``` pony
    fun iso unchop(
      b: String iso)
    : ((String iso^ , String iso^) | String iso^)
    ```

    #### Parameters

    - b: [String](index) iso

    #### Returns

    - (([String](index) iso^ , [String](index) iso^) \| [String](index) iso^)

    &nbsp;
- name: String.unshift()
  id: builtin-string#unshift
  summary: Adds a byte to the beginning of the string
  belongs_to: String
  description: |-
    ### unshift

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L894)

    Adds a byte to the beginning of the string.

    ``` pony
    fun ref unshift(
      value: U8 val)
    : None val
    ```

    #### Parameters

    - value: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.update()
  id: builtin-string#update
  summary: Change the i-th byte
  belongs_to: String
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L580)

    Change the i-th byte. Raise an error if the index is out of bounds.

    ``` pony
    fun ref update(
      i: USize val,
      value: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: [U8](builtin-u8) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.update_offset()
  id: builtin-string#update_offset
  summary: Changes a byte in the string, returning the previous byte at that offset
  belongs_to: String
  description: |-
    ### update_offset

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L597)

    Changes a byte in the string, returning the previous byte at that offset. Raise an error if the offset is out of bounds.

    ``` pony
    fun ref update_offset(
      offset: ISize val,
      value: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val
    - value: [U8](builtin-u8) val

    #### Returns

    - [U8](builtin-u8) val ?

    &nbsp;
- name: String.upper()
  id: builtin-string#upper
  summary: Returns an upper case version of the string
  belongs_to: String
  description: |-
    ### upper

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L823)

    Returns an upper case version of the string. Currently only knows ASCII case.

    ``` pony
    fun box upper()
    : String iso^
    ```

    #### Returns

    - [String](index) iso^

    &nbsp;
- name: String.upper_in_place()
  id: builtin-string#upper_in_place
  summary: Transforms the string to upper case
  belongs_to: String
  description: |-
    ### upper_in_place

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L832)

    Transforms the string to upper case.

    ``` pony
    fun ref upper_in_place()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: String.usize()
  id: builtin-string#usize
  summary: null
  belongs_to: String
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1462)

    ``` pony
    fun box usize(
      base: U8 val = 0)
    : USize val ?
    ```

    #### Parameters

    - base: [U8](builtin-u8) val = 0

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: String.utf32()
  id: builtin-string#utf32
  summary: Return a UTF32 representation of the character at the given offset and the number of bytes needed to encode that character
  belongs_to: String
  description: |-
    ### utf32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L488)

    Return a UTF32 representation of the character at the given offset and the number of bytes needed to encode that character. If the offset does not point to the beginning of a valid UTF8 encoding, return 0xFFFD (the unicode replacement character) and a length of one. Raise an error if the offset is out of bounds.

    ``` pony
    fun box utf32(
      offset: ISize val)
    : (U32 val , U8 val) ?
    ```

    #### Parameters

    - offset: [ISize](builtin-isize) val

    #### Returns

    - ([U32](builtin-u32) val , [U8](builtin-u8) val) ?

    &nbsp;
- name: String.values()
  id: builtin-string#values
  summary: Return an iterator over the bytes in the string
  belongs_to: String
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1665)

    Return an iterator over the bytes in the string.

    ``` pony
    fun box values()
    : StringBytes ref^
    ```

    #### Returns

    - [StringBytes](builtin-stringbytes) ref^

    &nbsp;
- name: Stringable
  id: builtin-stringable
  summary: Things that can be turned into a String
  description: "# Stringable\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stringable/#L1)\n\nThings that can be turned into a String.\n\n``` pony\ninterface box Stringable\n```\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)\n\nGenerate a string representation of this object.\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Stringable](https://stdlib.ponylang.io/builtin-Stringable)"
- name: Stringable.string()
  id: builtin-stringable#string
  summary: Generate a string representation of this object
  belongs_to: Stringable
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/stringable/#L5)\n\nGenerate a string representation of this object.\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Stringable](https://stdlib.ponylang.io/builtin-Stringable)"
- name: StringArgument
  id: options-stringargument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# StringArgument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L69)\n\n``` pony\nprimitive val StringArgument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L69)\n\n``` pony\nnew val create()\n: StringArgument val^\n```\n\n#### Returns\n\n- [StringArgument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L70)\n\n``` pony\nfun box eq(\n  that: StringArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L70)\n\n``` pony\nfun box ne(\n  that: StringArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-StringArgument](https://stdlib.ponylang.io/options-StringArgument)"
- name: StringArgument.create()
  id: options-stringargument#create
  summary: null
  belongs_to: StringArgument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L69)

    ``` pony
    new val create()
    : StringArgument val^
    ```

    #### Returns

    - [StringArgument](index) val^

    ## Public Functions
- name: StringArgument.eq()
  id: options-stringargument#eq
  summary: null
  belongs_to: StringArgument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L70)

    ``` pony
    fun box eq(
      that: StringArgument val)
    : Bool val
    ```

    #### Parameters

    - that: [StringArgument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: StringArgument.ne()
  id: options-stringargument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: StringArgument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L70)\n\n``` pony\nfun box ne(\n  that: StringArgument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringArgument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-StringArgument](https://stdlib.ponylang.io/options-StringArgument)"
- name: StringBytes
  id: builtin-stringbytes
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# StringBytes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1683)\n\n``` pony\nclass ref StringBytes is\n  Iterator[U8 val] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[[U8](builtin-u8) val\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1687)\n\n``` pony\nnew ref create(\n  string: String box)\n: StringBytes ref^\n```\n\n#### Parameters\n\n- string: [String](builtin-string) box\n\n#### Returns\n\n- [StringBytes](index) ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1691)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1694)\n\n``` pony\nfun ref next()\n: U8 val ?\n```\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StringBytes](https://stdlib.ponylang.io/builtin-StringBytes)"
- name: StringBytes.create()
  id: builtin-stringbytes#create
  summary: null
  belongs_to: StringBytes
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1687)

    ``` pony
    new ref create(
      string: String box)
    : StringBytes ref^
    ```

    #### Parameters

    - string: [String](builtin-string) box

    #### Returns

    - [StringBytes](index) ref^

    ## Public Functions
- name: StringBytes.has_next()
  id: builtin-stringbytes#has_next
  summary: null
  belongs_to: StringBytes
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1691)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: StringBytes.next()
  id: builtin-stringbytes#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: StringBytes
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1694)\n\n``` pony\nfun ref next()\n: U8 val ?\n```\n\n#### Returns\n\n- [U8](builtin-u8) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StringBytes](https://stdlib.ponylang.io/builtin-StringBytes)"
- name: StringLogger
  id: logger-stringlogger
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# StringLogger\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L134)\n\n``` pony\nprimitive val StringLogger\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L134)\n\n``` pony\nnew val create()\n: StringLogger val^\n```\n\n#### Returns\n\n- [StringLogger](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L135)\n\n``` pony\nfun box apply(\n  level: (Fine val | Info val | Warn val | \n    Error val),\n  out: OutStream tag,\n  formatter: LogFormatter val = reference)\n: Logger[String val] val\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n- out: [OutStream](builtin-outstream) tag\n- formatter: [LogFormatter](logger-logformatter) val = reference\n\n#### Returns\n\n- [Logger](logger-logger)\\[[String](builtin-string) val\\] val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L135)\n\n``` pony\nfun box eq(\n  that: StringLogger val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringLogger](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L135)\n\n``` pony\nfun box ne(\n  that: StringLogger val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringLogger](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-StringLogger](https://stdlib.ponylang.io/logger-StringLogger)"
- name: StringLogger.apply()
  id: logger-stringlogger#apply
  summary: null
  belongs_to: StringLogger
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L135)\n\n``` pony\nfun box apply(\n  level: (Fine val | Info val | Warn val | \n    Error val),\n  out: OutStream tag,\n  formatter: LogFormatter val = reference)\n: Logger[String val] val\n```\n\n#### Parameters\n\n- level: ([Fine](logger-fine) val \\| [Info](logger-info) val \\| [Warn](logger-warn) val \\| [Error](logger-error) val)\n- out: [OutStream](builtin-outstream) tag\n- formatter: [LogFormatter](logger-logformatter) val = reference\n\n#### Returns\n\n- [Logger](logger-logger)\\[[String](builtin-string) val\\] val"
- name: StringLogger.create()
  id: logger-stringlogger#create
  summary: null
  belongs_to: StringLogger
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L134)

    ``` pony
    new val create()
    : StringLogger val^
    ```

    #### Returns

    - [StringLogger](index) val^

    ## Public Functions
- name: StringLogger.eq()
  id: logger-stringlogger#eq
  summary: null
  belongs_to: StringLogger
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L135)

    ``` pony
    fun box eq(
      that: StringLogger val)
    : Bool val
    ```

    #### Parameters

    - that: [StringLogger](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: StringLogger.ne()
  id: logger-stringlogger#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: StringLogger
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L135)\n\n``` pony\nfun box ne(\n  that: StringLogger val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [StringLogger](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-StringLogger](https://stdlib.ponylang.io/logger-StringLogger)"
- name: StringRunes
  id: builtin-stringrunes
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# StringRunes\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1697)\n\n``` pony\nclass ref StringRunes is\n  Iterator[U32 val] ref\n```\n\n#### Implements\n\n- [Iterator](builtin-iterator)\\[[U32](builtin-u32) val\\] ref\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1701)\n\n``` pony\nnew ref create(\n  string: String box)\n: StringRunes ref^\n```\n\n#### Parameters\n\n- string: [String](builtin-string) box\n\n#### Returns\n\n- [StringRunes](index) ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1705)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1708)\n\n``` pony\nfun ref next()\n: U32 val ?\n```\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StringRunes](https://stdlib.ponylang.io/builtin-StringRunes)"
- name: StringRunes.create()
  id: builtin-stringrunes#create
  summary: null
  belongs_to: StringRunes
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1701)

    ``` pony
    new ref create(
      string: String box)
    : StringRunes ref^
    ```

    #### Parameters

    - string: [String](builtin-string) box

    #### Returns

    - [StringRunes](index) ref^

    ## Public Functions
- name: StringRunes.has_next()
  id: builtin-stringrunes#has_next
  summary: null
  belongs_to: StringRunes
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/string/#L1705)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: StringRunes.next()
  id: builtin-stringrunes#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: StringRunes
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/string/#L1708)\n\n``` pony\nfun ref next()\n: U32 val ?\n```\n\n#### Returns\n\n- [U32](builtin-u32) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-StringRunes](https://stdlib.ponylang.io/builtin-StringRunes)"
- name: SyntaxError
  id: cli-syntaxerror
  summary: SyntaxError summarizes a syntax error in a given parsed command line
  description: "# SyntaxError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L181)\n\nSyntaxError summarizes a syntax error in a given parsed command line.\n\n``` pony\nclass val SyntaxError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L188)\n\n``` pony\nnew val create(\n  token': String val,\n  msg': String val)\n: SyntaxError val^\n```\n\n#### Parameters\n\n- token': [String](builtin-string) val\n- msg': [String](builtin-string) val\n\n#### Returns\n\n- [SyntaxError](index) val^\n\n## Public Functions\n\n### token\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L192)\n\n``` pony\nfun box token()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L194)\n\n``` pony\nfun box string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-SyntaxError](https://stdlib.ponylang.io/cli-SyntaxError)"
- name: SyntaxError.create()
  id: cli-syntaxerror#create
  summary: null
  belongs_to: SyntaxError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L188)

    ``` pony
    new val create(
      token': String val,
      msg': String val)
    : SyntaxError val^
    ```

    #### Parameters

    - token': [String](builtin-string) val
    - msg': [String](builtin-string) val

    #### Returns

    - [SyntaxError](index) val^

    ## Public Functions
- name: SyntaxError.string()
  id: cli-syntaxerror#string
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: SyntaxError
  description: "### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/cli/command/#L194)\n\n``` pony\nfun box string()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/cli-SyntaxError](https://stdlib.ponylang.io/cli-SyntaxError)"
- name: SyntaxError.token()
  id: cli-syntaxerror#token
  summary: null
  belongs_to: SyntaxError
  description: |-
    ### token

    [\[Source\]](https://stdlib.ponylang.io/src/cli/command/#L192)

    ``` pony
    fun box token()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: TCPAuth
  id: net-tcpauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# TCPAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L13)\n\n``` pony\nprimitive val TCPAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L14)\n\n``` pony\nnew val create(\n  from: (AmbientAuth val | NetAuth val))\n: TCPAuth val^\n```\n\n#### Parameters\n\n- from: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val)\n\n#### Returns\n\n- [TCPAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L14)\n\n``` pony\nfun box eq(\n  that: TCPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L14)\n\n``` pony\nfun box ne(\n  that: TCPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPAuth](https://stdlib.ponylang.io/net-TCPAuth)"
- name: TCPAuth.create()
  id: net-tcpauth#create
  summary: null
  belongs_to: TCPAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L14)

    ``` pony
    new val create(
      from: (AmbientAuth val | NetAuth val))
    : TCPAuth val^
    ```

    #### Parameters

    - from: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val)

    #### Returns

    - [TCPAuth](index) val^

    ## Public Functions
- name: TCPAuth.eq()
  id: net-tcpauth#eq
  summary: null
  belongs_to: TCPAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L14)

    ``` pony
    fun box eq(
      that: TCPAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [TCPAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: TCPAuth.ne()
  id: net-tcpauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: TCPAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L14)\n\n``` pony\nfun box ne(\n  that: TCPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPAuth](https://stdlib.ponylang.io/net-TCPAuth)"
- name: TCPConnectAuth
  id: net-tcpconnectauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# TCPConnectAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L21)\n\n``` pony\nprimitive val TCPConnectAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L22)\n\n``` pony\nnew val create(\n  from: (AmbientAuth val | NetAuth val | TCPAuth val))\n: TCPConnectAuth val^\n```\n\n#### Parameters\n\n- from: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val)\n\n#### Returns\n\n- [TCPConnectAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L22)\n\n``` pony\nfun box eq(\n  that: TCPConnectAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPConnectAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L22)\n\n``` pony\nfun box ne(\n  that: TCPConnectAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPConnectAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnectAuth](https://stdlib.ponylang.io/net-TCPConnectAuth)"
- name: TCPConnectAuth.create()
  id: net-tcpconnectauth#create
  summary: null
  belongs_to: TCPConnectAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L22)

    ``` pony
    new val create(
      from: (AmbientAuth val | NetAuth val | TCPAuth val))
    : TCPConnectAuth val^
    ```

    #### Parameters

    - from: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [TCPAuth](net-tcpauth) val)

    #### Returns

    - [TCPConnectAuth](index) val^

    ## Public Functions
- name: TCPConnectAuth.eq()
  id: net-tcpconnectauth#eq
  summary: null
  belongs_to: TCPConnectAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L22)

    ``` pony
    fun box eq(
      that: TCPConnectAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [TCPConnectAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: TCPConnectAuth.ne()
  id: net-tcpconnectauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: TCPConnectAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L22)\n\n``` pony\nfun box ne(\n  that: TCPConnectAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPConnectAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnectAuth](https://stdlib.ponylang.io/net-TCPConnectAuth)"
- name: TCPConnection
  id: net-tcpconnection
  summary: A TCP connection
  description: "# TCPConnection\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L16)\n\nA TCP connection. When connecting, the Happy Eyeballs algorithm is used.\n\nThe following code creates a client that connects to port 8989 of the local host, writes \"hello world\", and listens for a response, which it then prints.\n\n``` pony\nuse \"net\"\n\nclass MyTCPConnectionNotify is TCPConnectionNotify\n  let _out: OutStream\n\n  new create(out: OutStream) =>\n    _out = out\n\n  fun ref connected(conn: TCPConnection ref) =>\n    conn.write(\"hello world\")\n\n  fun ref received(\n    conn: TCPConnection ref,\n    data: Array[U8] iso,\n    times: USize)\n    : Bool\n  =>\n    _out.print(\"GOT:\" + String.from_array(consume data))\n    conn.close()\n    true\n\n  fun ref connect_failed(conn: TCPConnection ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      TCPConnection(env.root as AmbientAuth,\n        recover MyTCPConnectionNotify(env.out) end, \"\", \"8989\")\n    end\n```\n\nNote: when writing to the connection data will be silently discarded if the connection has not yet been established.\n\n## Backpressure support\n\n### Write\n\nThe TCP protocol has built-in backpressure support. This is generally experienced as the outgoing write buffer becoming full and being unable to write all requested data to the socket. In `TCPConnection`, this is hidden from the programmer. When this occurs, `TCPConnection` will buffer the extra data until such time as it is able to be sent. Left unchecked, this could result in uncontrolled queuing. To address this, `TCPConnectionNotify` implements two methods `throttled` and `unthrottled` that are called when backpressure is applied and released.\n\nUpon receiving a `throttled` notification, your application has two choices on how to handle it. One is to inform the Pony runtime that it can no longer make progress and that runtime backpressure should be applied to any actors sending this one messages. For example, you might construct your application like:\n\n``` pony\n// Here we have a TCPConnectionNotify that upon construction\n// is given a BackpressureAuth token. This allows the notifier\n// to inform the Pony runtime when to apply and release backpressure\n// as the connection experiences it.\n// Note the calls to\n//\n// Backpressure.apply(_auth)\n// Backpressure.release(_auth)\n//\n// that apply and release backpressure as needed\n\nuse \"backpressure\"\nuse \"collections\"\nuse \"net\"\n\nclass SlowDown is TCPConnectionNotify\n  let _auth: BackpressureAuth\n  let _out: StdStream\n\n  new iso create(auth: BackpressureAuth, out: StdStream) =>\n    _auth = auth\n    _out = out\n\n  fun ref throttled(connection: TCPConnection ref) =>\n    _out.print(\"Experiencing backpressure!\")\n    Backpressure.apply(_auth)\n\n  fun ref unthrottled(connection: TCPConnection ref) =>\n    _out.print(\"Releasing backpressure!\")\n    Backpressure.release(_auth)\n\n  fun ref closed(connection: TCPConnection ref) =>\n    // if backpressure has been applied, make sure we release\n    // when shutting down\n    _out.print(\"Releasing backpressure if applied!\")\n    Backpressure.release(_auth)\n\n  fun ref connect_failed(conn: TCPConnection ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      let auth = env.root as AmbientAuth\n      let socket = TCPConnection(auth, recover SlowDown(auth, env.out) end,\n        \"\", \"7669\")\n    end\n```\n\nOr if you want, you could handle backpressure by shedding load, that is, dropping the extra data rather than carrying out the send. This might look like:\n\n``` pony\nuse \"net\"\n\nclass ThrowItAway is TCPConnectionNotify\n  var _throttled: Bool = false\n\n  fun ref sent(conn: TCPConnection ref, data: ByteSeq): ByteSeq =>\n    if not _throttled then\n      data\n    else\n      \"\"\n    end\n\n  fun ref sentv(conn: TCPConnection ref, data: ByteSeqIter): ByteSeqIter =>\n    if not _throttled then\n      data\n    else\n      recover Array[String] end\n    end\n\n  fun ref throttled(connection: TCPConnection ref) =>\n    _throttled = true\n\n  fun ref unthrottled(connection: TCPConnection ref) =>\n    _throttled = false\n\n  fun ref connect_failed(conn: TCPConnection ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      TCPConnection(env.root as AmbientAuth,\n        recover ThrowItAway end, \"\", \"7669\")\n    end\n```\n\nIn general, unless you have a very specific use case, we strongly advise that you don't implement a load shedding scheme where you drop data.\n\n### Read\n\nIf your application is unable to keep up with data being sent to it over a `TCPConnection` you can use the builtin read backpressure support to pause reading the socket which will in turn start to exert backpressure on the corresponding writer on the other end of that socket.\n\nThe `mute` behavior allow any other actors in your application to request the cessation of additional reads until such time as `unmute` is called. Please note that this cessation is not guaranteed to happen immediately as it is the result of an asynchronous behavior call and as such will have to wait for existing messages in the `TCPConnection`'s mailbox to be handled.\n\nOn non-windows platforms, your `TCPConnection` will not notice if the other end of the connection closes until you unmute it. Unix type systems like FreeBSD, Linux and OSX learn about a closed connection upon read. On these platforms, you **must** call `unmute` on a muted connection to have it close. Without calling `unmute` the `TCPConnection` actor will never exit.\n\n## Proxy support\n\nUsing the `proxy_via` callback in a `TCPConnectionNotify` it is possible to implement proxies. The function takes the intended destination host and service as parameters and returns a 2-tuple of the proxy host and service.\n\nThe proxy `TCPConnectionNotify` should decorate another implementation of `TCPConnectionNotify` passing relevent data through.\n\n### Example proxy implementation\n\n``` pony\nactor Main\n  new create(env: Env) =>\n    MyClient.create(\n      \"example.com\", // we actually want to connect to this host\n      \"80\",\n      ExampleProxy.create(\"proxy.example.com\", \"80\")) // we connect via this proxy\n\nactor MyClient\n  new create(host: String, service: String, proxy: Proxy = NoProxy) =>\n    let conn: TCPConnection = TCPConnection.create(\n      env.root as AmbientAuth,\n      proxy.apply(MyConnectionNotify.create()),\n      host,\n      service)\n\nclass ExampleProxy is Proxy\n  let _proxy_host: String\n  let _proxy_service: String\n\n  new create(proxy_host: String, proxy_service: String) =>\n    _proxy_host = proxy_host\n    _proxy_service = proxy_service\n\n  fun apply(wrap: TCPConnectionNotify iso): TCPConnectionNotify iso^ =>\n    ExampleProxyNotify.create(consume wrap, _proxy_service, _proxy_service)\n\nclass iso ExampleProxyNotify is TCPConnectionNotify\n  // Fictional proxy implementation that has no error\n  // conditions, and always forwards the connection.\n  let _proxy_host: String\n  let _proxy_service: String\n  var _destination_host: (None | String) = None\n  var _destination_service: (None | String) = None\n  let _wrapped: TCPConnectionNotify iso\n\n  new iso create(wrap: TCPConnectionNotify iso, proxy_host: String, proxy_service: String) =>\n    _wrapped = wrap\n    _proxy_host = proxy_host\n    _proxy_service = proxy_service\n\n  fun ref proxy_via(host: String, service: String): (String, String) =>\n    // Stash the original host & service; return the host & service\n    // for the proxy; indicating that the initial TCP connection should\n    // be made to the proxy\n    _destination_host = host\n    _destination_service = service\n    (_proxy_host, _proxy_service)\n\n  fun ref connected(conn: TCPConnection ref) =>\n    // conn is the connection to the *proxy* server. We need to ask the\n    // proxy server to forward this connection to our intended final\n    // destination.\n    conn.write((_destination_host + \"\\n\").array())\n    conn.write((_destination_service + \"\\n\").array())\n    wrapped.connected(conn)\n\n  fun ref received(conn, data, times) => _wrapped.received(conn, data, times)\n  fun ref connect_failed(conn: TCPConnection ref) => None\n```\n\n``` pony\nactor tag TCPConnection\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L300)\n\nConnect via IPv4 or IPv6. If `from` is a non-empty string, the connection will be made from the specified interface.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^\n\n### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L331)\n\nConnect via IPv4.\n\n``` pony\nnew tag ip4(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^\n\n### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L361)\n\nConnect via IPv6.\n\n``` pony\nnew tag ip6(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^\n\n## Public Behaviours\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L429)\n\nWrite a single sequence of bytes. Data will be silently discarded if the connection has not yet been established though.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val))\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L440)\n\nWrite a sequence of sequences of bytes. Data will be silently discarded if the connection has not yet been established though.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n### mute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L497)\n\nTemporarily suspend reading off this TCPConnection until such time as `unmute` is called.\n\n``` pony\nbe mute()\n```\n\n### unmute\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L504)\n\nStart reading off this TCPConnection again after having been muted.\n\n``` pony\nbe unmute()\n```\n\n### set_notify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L513)\n\nChange the notifier.\n\n``` pony\nbe set_notify(\n  notify: TCPConnectionNotify iso)\n```\n\n#### Parameters\n\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L519)\n\nClose the connection gracefully once all writes are sent.\n\n``` pony\nbe dispose()\n```\n\n## Public Functions\n\n### local_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L525)\n\nReturn the local IP address. If this TCPConnection is closed then the address returned is invalid.\n\n``` pony\nfun box local_address()\n: NetAddress val\n```\n\n#### Returns\n\n- [NetAddress](net-netaddress) val\n\n### remote_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L534)\n\nReturn the remote IP address. If this TCPConnection is closed then the address returned is invalid.\n\n``` pony\nfun box remote_address()\n: NetAddress val\n```\n\n#### Returns\n\n- [NetAddress](net-netaddress) val\n\n### expect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L543)\n\nA `received` call on the notifier must contain exactly `qty` bytes. If `qty` is zero, the call can contain any amount of data. This has no effect if called in the `sent` notifier callback.\n\nErrors if `qty` exceeds the max buffer size as indicated by the `read_buffer_size` supplied when the connection was created.\n\n``` pony\nfun ref expect(\n  qty: USize val = 0)\n: None val ?\n```\n\n#### Parameters\n\n- qty: [USize](builtin-usize) val = 0\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### set_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L562)\n\nTurn Nagle on/off. Defaults to on. This can only be set on a connected socket.\n\n``` pony\nfun ref set_nodelay(\n  state: Bool val)\n: None val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### set_keepalive\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L571)\n\nSets the TCP keepalive timeout to approximately `secs` seconds. Exact timing is OS dependent. If `secs` is zero, TCP keepalive is disabled. TCP keepalive is disabled by default. This can only be set on a connected socket.\n\n``` pony\nfun ref set_keepalive(\n  secs: U32 val)\n: None val\n```\n\n#### Parameters\n\n- secs: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### write_final\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L673)\n\nWrite as much as possible to the socket. Set `_writeable` to `false` if not everything was written. On an error, close the connection. This is for data that has already been transformed by the notifier. Data will be silently discarded if the connection has not yet been established though.\n\n``` pony\nfun ref write_final(\n  data: (String val | Array[U8 val] val))\n: None val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### close\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1017)\n\nAttempt to perform a graceful shutdown. Don't accept new writes. If the connection isn't muted then we won't finish closing until we get a zero length read. If the connection is muted, perform a hard close and shut down immediately.\n\n``` pony\nfun ref close()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### hard_close\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1073)\n\nWhen an error happens, do a non-graceful close.\n\n``` pony\nfun ref hard_close()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n### getsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1139)\n\nGeneral wrapper for TCP sockets to the `getsockopt(2)` system call.\n\nThe caller must provide an array that is pre-allocated to be at least as large as the largest data structure that the kernel may return for the requested option.\n\nIn case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. An `Array[U8]` of data returned by the system call's `void *` 4th argument. Its size is specified by the kernel via the system call's `sockopt_len_t *` 5th argument.\n\nIn case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.\n\nUsage example:\n\n``` pony\n// connected() is a callback function for class TCPConnectionNotify\nfun ref connected(conn: TCPConnection ref) =>\n  match conn.getsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), 4)\n    | (0, let gbytes: Array[U8] iso) =>\n      try\n        let br = Reader.create().>append(consume gbytes)\n        ifdef littleendian then\n          let buffer_size = br.u32_le()?\n        else\n          let buffer_size = br.u32_be()?\n        end\n      end\n    | (let errno: U32, _) =>\n      // System call failed\n  end\n```\n\n``` pony\nfun ref getsockopt(\n  level: I32 val,\n  option_name: I32 val,\n  option_max_size: USize val = 4)\n: (U32 val , Array[U8 val] iso^)\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option_max_size: [USize](builtin-usize) val = 4\n\n#### Returns\n\n- ([U32](builtin-u32) val , [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^)\n\n### getsockopt_u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1180)\n\nWrapper for TCP sockets to the `getsockopt(2)` system call where the kernel's returned option value is a C `uint32_t` type / Pony type `U32`.\n\nIn case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. The `*option_value` returned by the kernel converted to a Pony `U32`.\n\nIn case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.\n\n``` pony\nfun ref getsockopt_u32(\n  level: I32 val,\n  option_name: I32 val)\n: (U32 val , U32 val)\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### setsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1196)\n\nGeneral wrapper for TCP sockets to the `setsockopt(2)` system call.\n\nThe caller is responsible for the correct size and byte contents of the `option` array for the requested `level` and `option_name`, including using the appropriate machine endian byte order.\n\nThis function returns `0` on success, else the value of `errno` on failure.\n\nUsage example:\n\n``` pony\n// connected() is a callback function for class TCPConnectionNotify\nfun ref connected(conn: TCPConnection ref) =>\n  let sb = Writer\n\n  sb.u32_le(7744)             // Our desired socket buffer size\n  let sbytes = Array[U8]\n  for bs in sb.done().values() do\n    sbytes.append(bs)\n  end\n  match conn.setsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), sbytes)\n    | 0 =>\n      // System call was successful\n    | let errno: U32 =>\n      // System call failed\n  end\n```\n\n``` pony\nfun ref setsockopt(\n  level: I32 val,\n  option_name: I32 val,\n  option: Array[U8 val] ref)\n: U32 val\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option: [Array](builtin-array)\\[[U8](builtin-u8) val\\] ref\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### setsockopt_u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1229)\n\nGeneral wrapper for TCP sockets to the `setsockopt(2)` system call where the kernel expects an option value of a C `uint32_t` type / Pony type `U32`.\n\nThis function returns `0` on success, else the value of `errno` on failure.\n\n``` pony\nfun ref setsockopt_u32(\n  level: I32 val,\n  option_name: I32 val,\n  option: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### get_so_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1241)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_ERROR, ...)`\n\n``` pony\nfun ref get_so_error()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### get_so_rcvbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1247)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`\n\n``` pony\nfun ref get_so_rcvbuf()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### get_so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1253)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`\n\n``` pony\nfun ref get_so_sndbuf()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### get_tcp_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1259)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, TCP_NODELAY, ...)`\n\n``` pony\nfun ref get_tcp_nodelay()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### set_so_rcvbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1266)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`\n\n``` pony\nfun ref set_so_rcvbuf(\n  bufsize: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- bufsize: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1272)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`\n\n``` pony\nfun ref set_so_sndbuf(\n  bufsize: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- bufsize: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_tcp_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1278)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, TCP_NODELAY, ...)`\n\n``` pony\nfun ref set_tcp_nodelay(\n  state: Bool val)\n: U32 val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnection](https://stdlib.ponylang.io/net-TCPConnection)"
- name: TCPConnection.close()
  id: net-tcpconnection#close
  summary: Attempt to perform a graceful shutdown
  belongs_to: TCPConnection
  description: |-
    ### close

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1017)

    Attempt to perform a graceful shutdown. Don't accept new writes. If the connection isn't muted then we won't finish closing until we get a zero length read. If the connection is muted, perform a hard close and shut down immediately.

    ``` pony
    fun ref close()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnection.create()
  id: net-tcpconnection#create
  summary: Connect via IPv4 or IPv6
  belongs_to: TCPConnection
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L300)\n\nConnect via IPv4 or IPv6. If `from` is a non-empty string, the connection will be made from the specified interface.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^"
- name: TCPConnection.dispose()
  id: net-tcpconnection#dispose
  summary: Close the connection gracefully once all writes are sent
  belongs_to: TCPConnection
  description: |-
    ### dispose

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L519)

    Close the connection gracefully once all writes are sent.

    ``` pony
    be dispose()
    ```

    ## Public Functions
- name: TCPConnection.Example()
  id: net-tcpconnection#example-proxy-implementation
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### Example proxy implementation

    ``` pony
    actor Main
      new create(env: Env) =>
        MyClient.create(
          "example.com", // we actually want to connect to this host
          "80",
          ExampleProxy.create("proxy.example.com", "80")) // we connect via this proxy

    actor MyClient
      new create(host: String, service: String, proxy: Proxy = NoProxy) =>
        let conn: TCPConnection = TCPConnection.create(
          env.root as AmbientAuth,
          proxy.apply(MyConnectionNotify.create()),
          host,
          service)

    class ExampleProxy is Proxy
      let _proxy_host: String
      let _proxy_service: String

      new create(proxy_host: String, proxy_service: String) =>
        _proxy_host = proxy_host
        _proxy_service = proxy_service

      fun apply(wrap: TCPConnectionNotify iso): TCPConnectionNotify iso^ =>
        ExampleProxyNotify.create(consume wrap, _proxy_service, _proxy_service)

    class iso ExampleProxyNotify is TCPConnectionNotify
      // Fictional proxy implementation that has no error
      // conditions, and always forwards the connection.
      let _proxy_host: String
      let _proxy_service: String
      var _destination_host: (None | String) = None
      var _destination_service: (None | String) = None
      let _wrapped: TCPConnectionNotify iso

      new iso create(wrap: TCPConnectionNotify iso, proxy_host: String, proxy_service: String) =>
        _wrapped = wrap
        _proxy_host = proxy_host
        _proxy_service = proxy_service

      fun ref proxy_via(host: String, service: String): (String, String) =>
        // Stash the original host & service; return the host & service
        // for the proxy; indicating that the initial TCP connection should
        // be made to the proxy
        _destination_host = host
        _destination_service = service
        (_proxy_host, _proxy_service)

      fun ref connected(conn: TCPConnection ref) =>
        // conn is the connection to the *proxy* server. We need to ask the
        // proxy server to forward this connection to our intended final
        // destination.
        conn.write((_destination_host + "\n").array())
        conn.write((_destination_service + "\n").array())
        wrapped.connected(conn)

      fun ref received(conn, data, times) => _wrapped.received(conn, data, times)
      fun ref connect_failed(conn: TCPConnection ref) => None
    ```

    ``` pony
    actor tag TCPConnection
    ```

    ## Constructors
- name: TCPConnection.expect()
  id: net-tcpconnection#expect
  summary: A received call on the notifier must contain exactly qty bytes
  belongs_to: TCPConnection
  description: |-
    ### expect

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L543)

    A `received` call on the notifier must contain exactly `qty` bytes. If `qty` is zero, the call can contain any amount of data. This has no effect if called in the `sent` notifier callback.

    Errors if `qty` exceeds the max buffer size as indicated by the `read_buffer_size` supplied when the connection was created.

    ``` pony
    fun ref expect(
      qty: USize val = 0)
    : None val ?
    ```

    #### Parameters

    - qty: [USize](builtin-usize) val = 0

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: TCPConnection.get_so_error()
  id: net-tcpconnection#get_so_error
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### get_so_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1241)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_ERROR, ...)`

    ``` pony
    fun ref get_so_error()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: TCPConnection.get_so_rcvbuf()
  id: net-tcpconnection#get_so_rcvbuf
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### get_so_rcvbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1247)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`

    ``` pony
    fun ref get_so_rcvbuf()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: TCPConnection.get_so_sndbuf()
  id: net-tcpconnection#get_so_sndbuf
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### get_so_sndbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1253)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`

    ``` pony
    fun ref get_so_sndbuf()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: TCPConnection.get_tcp_nodelay()
  id: net-tcpconnection#get_tcp_nodelay
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### get_tcp_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1259)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, TCP_NODELAY, ...)`

    ``` pony
    fun ref get_tcp_nodelay()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: TCPConnection.getsockopt()
  id: net-tcpconnection#getsockopt
  summary: General wrapper for TCP sockets to the getsockopt(2) system call
  belongs_to: TCPConnection
  description: |-
    ### getsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1139)

    General wrapper for TCP sockets to the `getsockopt(2)` system call.

    The caller must provide an array that is pre-allocated to be at least as large as the largest data structure that the kernel may return for the requested option.

    In case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. An `Array[U8]` of data returned by the system call's `void *` 4th argument. Its size is specified by the kernel via the system call's `sockopt_len_t *` 5th argument.

    In case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.

    Usage example:

    ``` pony
    // connected() is a callback function for class TCPConnectionNotify
    fun ref connected(conn: TCPConnection ref) =>
      match conn.getsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), 4)
        | (0, let gbytes: Array[U8] iso) =>
          try
            let br = Reader.create().>append(consume gbytes)
            ifdef littleendian then
              let buffer_size = br.u32_le()?
            else
              let buffer_size = br.u32_be()?
            end
          end
        | (let errno: U32, _) =>
          // System call failed
      end
    ```

    ``` pony
    fun ref getsockopt(
      level: I32 val,
      option_name: I32 val,
      option_max_size: USize val = 4)
    : (U32 val , Array[U8 val] iso^)
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option_max_size: [USize](builtin-usize) val = 4

    #### Returns

    - ([U32](builtin-u32) val , [Array](builtin-array)\[[U8](builtin-u8) val\] iso^)

    &nbsp;
- name: TCPConnection.getsockopt_u32()
  id: net-tcpconnection#getsockopt_u32
  summary: Wrapper for TCP sockets to the getsockopt(2) system call where the kernel's returned option value is a C uint32_t type / Pony type U32
  belongs_to: TCPConnection
  description: |-
    ### getsockopt_u32

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1180)

    Wrapper for TCP sockets to the `getsockopt(2)` system call where the kernel's returned option value is a C `uint32_t` type / Pony type `U32`.

    In case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. The `*option_value` returned by the kernel converted to a Pony `U32`.

    In case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.

    ``` pony
    fun ref getsockopt_u32(
      level: I32 val,
      option_name: I32 val)
    : (U32 val , U32 val)
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: TCPConnection.hard_close()
  id: net-tcpconnection#hard_close
  summary: When an error happens, do a non-graceful close
  belongs_to: TCPConnection
  description: |-
    ### hard_close

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1073)

    When an error happens, do a non-graceful close.

    ``` pony
    fun ref hard_close()
    : None val
    ```

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnection.ip4()
  id: net-tcpconnection#ip4
  summary: Connect via IPv4
  belongs_to: TCPConnection
  description: "### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L331)\n\nConnect via IPv4.\n\n``` pony\nnew tag ip4(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^\n\n&nbsp;"
- name: TCPConnection.ip6()
  id: net-tcpconnection#ip6
  summary: Connect via IPv6
  belongs_to: TCPConnection
  description: "### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L361)\n\nConnect via IPv6.\n\n``` pony\nnew tag ip6(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPConnectAuth val),\n  notify: TCPConnectionNotify iso,\n  host: String val,\n  service: String val,\n  from: String val = \"\",\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPConnection tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n- notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n- from: [String](builtin-string) val = \"\"\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPConnection](index) tag^\n\n## Public Behaviours"
- name: TCPConnection.local_address()
  id: net-tcpconnection#local_address
  summary: Return the local IP address
  belongs_to: TCPConnection
  description: |-
    ### local_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L525)

    Return the local IP address. If this TCPConnection is closed then the address returned is invalid.

    ``` pony
    fun box local_address()
    : NetAddress val
    ```

    #### Returns

    - [NetAddress](net-netaddress) val

    &nbsp;
- name: TCPConnection.mute()
  id: net-tcpconnection#mute
  summary: Temporarily suspend reading off this TCPConnection until such time as unmute is called
  belongs_to: TCPConnection
  description: |-
    ### mute

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L497)

    Temporarily suspend reading off this TCPConnection until such time as `unmute` is called.

    ``` pony
    be mute()
    ```
- name: TCPConnection.Read()
  id: net-tcpconnection#read
  summary: If your application is unable to keep up with data being sent to it over a TCPConnection you can use the builtin read backpressure support to pause reading the socket which will in turn start to exert backpressure on the corresponding writer on the other end of that socket
  belongs_to: TCPConnection
  description: |-
    ### Read

    If your application is unable to keep up with data being sent to it over a `TCPConnection` you can use the builtin read backpressure support to pause reading the socket which will in turn start to exert backpressure on the corresponding writer on the other end of that socket.

    The `mute` behavior allow any other actors in your application to request the cessation of additional reads until such time as `unmute` is called. Please note that this cessation is not guaranteed to happen immediately as it is the result of an asynchronous behavior call and as such will have to wait for existing messages in the `TCPConnection`'s mailbox to be handled.

    On non-windows platforms, your `TCPConnection` will not notice if the other end of the connection closes until you unmute it. Unix type systems like FreeBSD, Linux and OSX learn about a closed connection upon read. On these platforms, you **must** call `unmute` on a muted connection to have it close. Without calling `unmute` the `TCPConnection` actor will never exit.

    ## Proxy support

    Using the `proxy_via` callback in a `TCPConnectionNotify` it is possible to implement proxies. The function takes the intended destination host and service as parameters and returns a 2-tuple of the proxy host and service.

    The proxy `TCPConnectionNotify` should decorate another implementation of `TCPConnectionNotify` passing relevent data through.
- name: TCPConnection.remote_address()
  id: net-tcpconnection#remote_address
  summary: Return the remote IP address
  belongs_to: TCPConnection
  description: |-
    ### remote_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L534)

    Return the remote IP address. If this TCPConnection is closed then the address returned is invalid.

    ``` pony
    fun box remote_address()
    : NetAddress val
    ```

    #### Returns

    - [NetAddress](net-netaddress) val

    &nbsp;
- name: TCPConnection.set_keepalive()
  id: net-tcpconnection#set_keepalive
  summary: Sets the TCP keepalive timeout to approximately secs seconds
  belongs_to: TCPConnection
  description: |-
    ### set_keepalive

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L571)

    Sets the TCP keepalive timeout to approximately `secs` seconds. Exact timing is OS dependent. If `secs` is zero, TCP keepalive is disabled. TCP keepalive is disabled by default. This can only be set on a connected socket.

    ``` pony
    fun ref set_keepalive(
      secs: U32 val)
    : None val
    ```

    #### Parameters

    - secs: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnection.set_nodelay()
  id: net-tcpconnection#set_nodelay
  summary: Turn Nagle on/off
  belongs_to: TCPConnection
  description: |-
    ### set_nodelay

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L562)

    Turn Nagle on/off. Defaults to on. This can only be set on a connected socket.

    ``` pony
    fun ref set_nodelay(
      state: Bool val)
    : None val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnection.set_notify()
  id: net-tcpconnection#set_notify
  summary: Change the notifier
  belongs_to: TCPConnection
  description: |-
    ### set_notify

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L513)

    Change the notifier.

    ``` pony
    be set_notify(
      notify: TCPConnectionNotify iso)
    ```

    #### Parameters

    - notify: [TCPConnectionNotify](net-tcpconnectionnotify) iso

    &nbsp;
- name: TCPConnection.set_so_rcvbuf()
  id: net-tcpconnection#set_so_rcvbuf
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### set_so_rcvbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1266)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`

    ``` pony
    fun ref set_so_rcvbuf(
      bufsize: U32 val)
    : U32 val
    ```

    #### Parameters

    - bufsize: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: TCPConnection.set_so_sndbuf()
  id: net-tcpconnection#set_so_sndbuf
  summary: null
  belongs_to: TCPConnection
  description: |-
    ### set_so_sndbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1272)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`

    ``` pony
    fun ref set_so_sndbuf(
      bufsize: U32 val)
    : U32 val
    ```

    #### Parameters

    - bufsize: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: TCPConnection.set_tcp_nodelay()
  id: net-tcpconnection#set_tcp_nodelay
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: TCPConnection
  description: "### set_tcp_nodelay\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1278)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, TCP_NODELAY, ...)`\n\n``` pony\nfun ref set_tcp_nodelay(\n  state: Bool val)\n: U32 val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnection](https://stdlib.ponylang.io/net-TCPConnection)"
- name: TCPConnection.setsockopt()
  id: net-tcpconnection#setsockopt
  summary: General wrapper for TCP sockets to the setsockopt(2) system call
  belongs_to: TCPConnection
  description: |-
    ### setsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1196)

    General wrapper for TCP sockets to the `setsockopt(2)` system call.

    The caller is responsible for the correct size and byte contents of the `option` array for the requested `level` and `option_name`, including using the appropriate machine endian byte order.

    This function returns `0` on success, else the value of `errno` on failure.

    Usage example:

    ``` pony
    // connected() is a callback function for class TCPConnectionNotify
    fun ref connected(conn: TCPConnection ref) =>
      let sb = Writer

      sb.u32_le(7744)             // Our desired socket buffer size
      let sbytes = Array[U8]
      for bs in sb.done().values() do
        sbytes.append(bs)
      end
      match conn.setsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), sbytes)
        | 0 =>
          // System call was successful
        | let errno: U32 =>
          // System call failed
      end
    ```

    ``` pony
    fun ref setsockopt(
      level: I32 val,
      option_name: I32 val,
      option: Array[U8 val] ref)
    : U32 val
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option: [Array](builtin-array)\[[U8](builtin-u8) val\] ref

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: TCPConnection.setsockopt_u32()
  id: net-tcpconnection#setsockopt_u32
  summary: General wrapper for TCP sockets to the setsockopt(2) system call where the kernel expects an option value of a C uint32_t type / Pony type U32
  belongs_to: TCPConnection
  description: |-
    ### setsockopt_u32

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L1229)

    General wrapper for TCP sockets to the `setsockopt(2)` system call where the kernel expects an option value of a C `uint32_t` type / Pony type `U32`.

    This function returns `0` on success, else the value of `errno` on failure.

    ``` pony
    fun ref setsockopt_u32(
      level: I32 val,
      option_name: I32 val,
      option: U32 val)
    : U32 val
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: TCPConnection.unmute()
  id: net-tcpconnection#unmute
  summary: Start reading off this TCPConnection again after having been muted
  belongs_to: TCPConnection
  description: |-
    ### unmute

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L504)

    Start reading off this TCPConnection again after having been muted.

    ``` pony
    be unmute()
    ```
- name: TCPConnection.Write()
  id: net-tcpconnection#write
  summary: The TCP protocol has built-in backpressure support
  belongs_to: TCPConnection
  description: |-
    ### Write

    The TCP protocol has built-in backpressure support. This is generally experienced as the outgoing write buffer becoming full and being unable to write all requested data to the socket. In `TCPConnection`, this is hidden from the programmer. When this occurs, `TCPConnection` will buffer the extra data until such time as it is able to be sent. Left unchecked, this could result in uncontrolled queuing. To address this, `TCPConnectionNotify` implements two methods `throttled` and `unthrottled` that are called when backpressure is applied and released.

    Upon receiving a `throttled` notification, your application has two choices on how to handle it. One is to inform the Pony runtime that it can no longer make progress and that runtime backpressure should be applied to any actors sending this one messages. For example, you might construct your application like:

    ``` pony
    // Here we have a TCPConnectionNotify that upon construction
    // is given a BackpressureAuth token. This allows the notifier
    // to inform the Pony runtime when to apply and release backpressure
    // as the connection experiences it.
    // Note the calls to
    //
    // Backpressure.apply(_auth)
    // Backpressure.release(_auth)
    //
    // that apply and release backpressure as needed

    use "backpressure"
    use "collections"
    use "net"

    class SlowDown is TCPConnectionNotify
      let _auth: BackpressureAuth
      let _out: StdStream

      new iso create(auth: BackpressureAuth, out: StdStream) =>
        _auth = auth
        _out = out

      fun ref throttled(connection: TCPConnection ref) =>
        _out.print("Experiencing backpressure!")
        Backpressure.apply(_auth)

      fun ref unthrottled(connection: TCPConnection ref) =>
        _out.print("Releasing backpressure!")
        Backpressure.release(_auth)

      fun ref closed(connection: TCPConnection ref) =>
        // if backpressure has been applied, make sure we release
        // when shutting down
        _out.print("Releasing backpressure if applied!")
        Backpressure.release(_auth)

      fun ref connect_failed(conn: TCPConnection ref) =>
        None

    actor Main
      new create(env: Env) =>
        try
          let auth = env.root as AmbientAuth
          let socket = TCPConnection(auth, recover SlowDown(auth, env.out) end,
            "", "7669")
        end
    ```

    Or if you want, you could handle backpressure by shedding load, that is, dropping the extra data rather than carrying out the send. This might look like:

    ``` pony
    use "net"

    class ThrowItAway is TCPConnectionNotify
      var _throttled: Bool = false

      fun ref sent(conn: TCPConnection ref, data: ByteSeq): ByteSeq =>
        if not _throttled then
          data
        else
          ""
        end

      fun ref sentv(conn: TCPConnection ref, data: ByteSeqIter): ByteSeqIter =>
        if not _throttled then
          data
        else
          recover Array[String] end
        end

      fun ref throttled(connection: TCPConnection ref) =>
        _throttled = true

      fun ref unthrottled(connection: TCPConnection ref) =>
        _throttled = false

      fun ref connect_failed(conn: TCPConnection ref) =>
        None

    actor Main
      new create(env: Env) =>
        try
          TCPConnection(env.root as AmbientAuth,
            recover ThrowItAway end, "", "7669")
        end
    ```

    In general, unless you have a very specific use case, we strongly advise that you don't implement a load shedding scheme where you drop data.
- name: TCPConnection.write()
  id: net-tcpconnection#write_1
  summary: Write a single sequence of bytes
  belongs_to: TCPConnection
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L429)

    Write a single sequence of bytes. Data will be silently discarded if the connection has not yet been established though.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val))
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: TCPConnection.write_final()
  id: net-tcpconnection#write_final
  summary: Write as much as possible to the socket
  belongs_to: TCPConnection
  description: |-
    ### write_final

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L673)

    Write as much as possible to the socket. Set `_writeable` to `false` if not everything was written. On an error, close the connection. This is for data that has already been transformed by the notifier. Data will be silently discarded if the connection has not yet been established though.

    ``` pony
    fun ref write_final(
      data: (String val | Array[U8 val] val))
    : None val
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnection.writev()
  id: net-tcpconnection#writev
  summary: Write a sequence of sequences of bytes
  belongs_to: TCPConnection
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L440)

    Write a sequence of sequences of bytes. Data will be silently discarded if the connection has not yet been established though.

    ``` pony
    be writev(
      data: ByteSeqIter val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: TCPConnectionAuth
  id: net-tcpconnectionauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# TCPConnectionAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection/#L14)\n\n``` pony\ntype TCPConnectionAuth is\n  (AmbientAuth val | NetAuth val | TCPAuth val | TCPConnectAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPConnectAuth](net-tcpconnectauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnectionAuth](https://stdlib.ponylang.io/net-TCPConnectionAuth)"
- name: TCPConnectionNotify
  id: net-tcpconnectionnotify
  summary: Notifications for TCP connections
  description: "# TCPConnectionNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L1)\n\nNotifications for TCP connections.\n\nFor an example of using this class please see the documentation for the `TCPConnection` and `TCPListener` actors.\n\n``` pony\ninterface ref TCPConnectionNotify\n```\n\n## Public Functions\n\n### accepted\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L8)\n\nCalled when a TCPConnection is accepted by a TCPListener.\n\n``` pony\nfun ref accepted(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### proxy_via\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L14)\n\nCalled before before attempting to connect to the destination server In order to connect via proxy, return the host & service for the proxy server.\n\nAn implementation of this function might look like:\n\n``` pony\nlet _proxy_host = \"some-proxy.example.com\"\nlet _proxy_service = \"80\"\nvar _destination_host: ( None | String )\nvar _destination_service: ( None | String )\n\nfun ref proxy_via(host: String, service: String): (String, String) =>\n  _destination_host = host\n  _destination_service = service\n  ( _proxy_host, _proxy_service )\n```\n\n``` pony\nfun ref proxy_via(\n  host: String val,\n  service: String val)\n: (String val , String val)\n```\n\n#### Parameters\n\n- host: [String](builtin-string) val\n- service: [String](builtin-string) val\n\n#### Returns\n\n- ([String](builtin-string) val , [String](builtin-string) val)\n\n### connecting\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L35)\n\nCalled if name resolution succeeded for a TCPConnection and we are now waiting for a connection to the server to succeed. The count is the number of connections we're trying. The notifier will be informed each time the count changes, until a connection is made or connect_failed() is called.\n\n``` pony\nfun ref connecting(\n  conn: TCPConnection ref,\n  count: U32 val)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n- count: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L44)\n\nCalled when we have successfully connected to the server.\n\n``` pony\nfun ref connected(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### connect_failed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L50)\n\nCalled when we have failed to connect to all possible addresses for the server. At this point, the connection will never be established.\n\nIt is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:\n\n``` pony\nfun ref connect_failed(conn: TCPConnection ref) =>\n  None\n```\n\n``` pony\nfun ref connect_failed(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### auth_failed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L64)\n\nA raw TCPConnection has no authentication mechanism. However, when protocols are wrapped in other protocols, this can be used to report an authentication failure in a lower level protocol (e.g. SSL).\n\n``` pony\nfun ref auth_failed(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### sent\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L72)\n\nCalled when data is sent on the connection. This gives the notifier an opportunity to modify sent data before it is written. To swallow data, return an empty string.\n\n``` pony\nfun ref sent(\n  conn: TCPConnection ref,\n  data: (String val | Array[U8 val] val))\n: (String val | Array[U8 val] val)\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n#### Returns\n\n- ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n### sentv\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L80)\n\nCalled when multiple chunks of data are sent to the connection in a single call. This gives the notifier an opportunity to modify the sent data chunks before they are written. To swallow the send, return an empty Array\\[String\\].\n\n``` pony\nfun ref sentv(\n  conn: TCPConnection ref,\n  data: ByteSeqIter val)\n: ByteSeqIter val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n#### Returns\n\n- [ByteSeqIter](builtin-byteseqiter) val\n\n### received\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L89)\n\nCalled when new data is received on the connection. Return true if you want to continue receiving messages without yielding until you read max_size on the TCPConnection. Return false to cause the TCPConnection to yield now.\n\nIncludes the number of times during the current behavior, that received has been called. This allows the notifier to end reads on a regular basis.\n\n``` pony\nfun ref received(\n  conn: TCPConnection ref,\n  data: Array[U8 val] iso,\n  times: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n- times: [USize](builtin-usize) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### expect\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L106)\n\nCalled when the connection has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing (e.g. SSL).\n\n``` pony\nfun ref expect(\n  conn: TCPConnection ref,\n  qty: USize val)\n: USize val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n- qty: [USize](builtin-usize) val\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L114)\n\nCalled when the connection is closed.\n\n``` pony\nfun ref closed(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### throttled\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L120)\n\nCalled when the connection starts experiencing TCP backpressure. You should respond to this by pausing additional calls to `write` and `writev` until you are informed that pressure has been released. Failure to respond to the `throttled` notification will result in outgoing data queuing in the connection and increasing memory usage.\n\n``` pony\nfun ref throttled(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### unthrottled\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L130)\n\nCalled when the connection stops experiencing TCP backpressure. Upon receiving this notification, you should feel free to start making calls to `write` and `writev` again.\n\n``` pony\nfun ref unthrottled(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnectionNotify](https://stdlib.ponylang.io/net-TCPConnectionNotify)"
- name: TCPConnectionNotify.accepted()
  id: net-tcpconnectionnotify#accepted
  summary: Called when a TCPConnection is accepted by a TCPListener
  belongs_to: TCPConnectionNotify
  description: |-
    ### accepted

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L8)

    Called when a TCPConnection is accepted by a TCPListener.

    ``` pony
    fun ref accepted(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val
- name: TCPConnectionNotify.auth_failed()
  id: net-tcpconnectionnotify#auth_failed
  summary: A raw TCPConnection has no authentication mechanism
  belongs_to: TCPConnectionNotify
  description: |-
    ### auth_failed

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L64)

    A raw TCPConnection has no authentication mechanism. However, when protocols are wrapped in other protocols, this can be used to report an authentication failure in a lower level protocol (e.g. SSL).

    ``` pony
    fun ref auth_failed(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.closed()
  id: net-tcpconnectionnotify#closed
  summary: Called when the connection is closed
  belongs_to: TCPConnectionNotify
  description: |-
    ### closed

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L114)

    Called when the connection is closed.

    ``` pony
    fun ref closed(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.connect_failed()
  id: net-tcpconnectionnotify#connect_failed
  summary: Called when we have failed to connect to all possible addresses for the server
  belongs_to: TCPConnectionNotify
  description: |-
    ### connect_failed

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L50)

    Called when we have failed to connect to all possible addresses for the server. At this point, the connection will never be established.

    It is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:

    ``` pony
    fun ref connect_failed(conn: TCPConnection ref) =>
      None
    ```

    ``` pony
    fun ref connect_failed(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.connected()
  id: net-tcpconnectionnotify#connected
  summary: Called when we have successfully connected to the server
  belongs_to: TCPConnectionNotify
  description: |-
    ### connected

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L44)

    Called when we have successfully connected to the server.

    ``` pony
    fun ref connected(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.connecting()
  id: net-tcpconnectionnotify#connecting
  summary: Called if name resolution succeeded for a TCPConnection and we are now waiting for a connection to the server to succeed
  belongs_to: TCPConnectionNotify
  description: |-
    ### connecting

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L35)

    Called if name resolution succeeded for a TCPConnection and we are now waiting for a connection to the server to succeed. The count is the number of connections we're trying. The notifier will be informed each time the count changes, until a connection is made or connect_failed() is called.

    ``` pony
    fun ref connecting(
      conn: TCPConnection ref,
      count: U32 val)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref
    - count: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.expect()
  id: net-tcpconnectionnotify#expect
  summary: Called when the connection has been told to expect a certain quantity of bytes
  belongs_to: TCPConnectionNotify
  description: |-
    ### expect

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L106)

    Called when the connection has been told to expect a certain quantity of bytes. This allows nested notifiers to change the expected quantity, which allows a lower level protocol to handle any framing (e.g. SSL).

    ``` pony
    fun ref expect(
      conn: TCPConnection ref,
      qty: USize val)
    : USize val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref
    - qty: [USize](builtin-usize) val

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: TCPConnectionNotify.proxy_via()
  id: net-tcpconnectionnotify#proxy_via
  summary: Called before before attempting to connect to the destination server In order to connect via proxy, return the host & service for the proxy server
  belongs_to: TCPConnectionNotify
  description: |-
    ### proxy_via

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L14)

    Called before before attempting to connect to the destination server In order to connect via proxy, return the host & service for the proxy server.

    An implementation of this function might look like:

    ``` pony
    let _proxy_host = "some-proxy.example.com"
    let _proxy_service = "80"
    var _destination_host: ( None | String )
    var _destination_service: ( None | String )

    fun ref proxy_via(host: String, service: String): (String, String) =>
      _destination_host = host
      _destination_service = service
      ( _proxy_host, _proxy_service )
    ```

    ``` pony
    fun ref proxy_via(
      host: String val,
      service: String val)
    : (String val , String val)
    ```

    #### Parameters

    - host: [String](builtin-string) val
    - service: [String](builtin-string) val

    #### Returns

    - ([String](builtin-string) val , [String](builtin-string) val)

    &nbsp;
- name: TCPConnectionNotify.received()
  id: net-tcpconnectionnotify#received
  summary: Called when new data is received on the connection
  belongs_to: TCPConnectionNotify
  description: |-
    ### received

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L89)

    Called when new data is received on the connection. Return true if you want to continue receiving messages without yielding until you read max_size on the TCPConnection. Return false to cause the TCPConnection to yield now.

    Includes the number of times during the current behavior, that received has been called. This allows the notifier to end reads on a regular basis.

    ``` pony
    fun ref received(
      conn: TCPConnection ref,
      data: Array[U8 val] iso,
      times: USize val)
    : Bool val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref
    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso
    - times: [USize](builtin-usize) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TCPConnectionNotify.sent()
  id: net-tcpconnectionnotify#sent
  summary: Called when data is sent on the connection
  belongs_to: TCPConnectionNotify
  description: |-
    ### sent

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L72)

    Called when data is sent on the connection. This gives the notifier an opportunity to modify sent data before it is written. To swallow data, return an empty string.

    ``` pony
    fun ref sent(
      conn: TCPConnection ref,
      data: (String val | Array[U8 val] val))
    : (String val | Array[U8 val] val)
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref
    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    #### Returns

    - ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    &nbsp;
- name: TCPConnectionNotify.sentv()
  id: net-tcpconnectionnotify#sentv
  summary: Called when multiple chunks of data are sent to the connection in a single call
  belongs_to: TCPConnectionNotify
  description: |-
    ### sentv

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L80)

    Called when multiple chunks of data are sent to the connection in a single call. This gives the notifier an opportunity to modify the sent data chunks before they are written. To swallow the send, return an empty Array\[String\].

    ``` pony
    fun ref sentv(
      conn: TCPConnection ref,
      data: ByteSeqIter val)
    : ByteSeqIter val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref
    - data: [ByteSeqIter](builtin-byteseqiter) val

    #### Returns

    - [ByteSeqIter](builtin-byteseqiter) val

    &nbsp;
- name: TCPConnectionNotify.throttled()
  id: net-tcpconnectionnotify#throttled
  summary: Called when the connection starts experiencing TCP backpressure
  belongs_to: TCPConnectionNotify
  description: |-
    ### throttled

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L120)

    Called when the connection starts experiencing TCP backpressure. You should respond to this by pausing additional calls to `write` and `writev` until you are informed that pressure has been released. Failure to respond to the `throttled` notification will result in outgoing data queuing in the connection and increasing memory usage.

    ``` pony
    fun ref throttled(
      conn: TCPConnection ref)
    : None val
    ```

    #### Parameters

    - conn: [TCPConnection](net-tcpconnection) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPConnectionNotify.unthrottled()
  id: net-tcpconnectionnotify#unthrottled
  summary: Called when the connection stops experiencing TCP backpressure
  belongs_to: TCPConnectionNotify
  description: "### unthrottled\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_connection_notify/#L130)\n\nCalled when the connection stops experiencing TCP backpressure. Upon receiving this notification, you should feel free to start making calls to `write` and `writev` again.\n\n``` pony\nfun ref unthrottled(\n  conn: TCPConnection ref)\n: None val\n```\n\n#### Parameters\n\n- conn: [TCPConnection](net-tcpconnection) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPConnectionNotify](https://stdlib.ponylang.io/net-TCPConnectionNotify)"
- name: TCPListenAuth
  id: net-tcplistenauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# TCPListenAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L17)\n\n``` pony\nprimitive val TCPListenAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L18)\n\n``` pony\nnew val create(\n  from: (AmbientAuth val | NetAuth val | TCPAuth val))\n: TCPListenAuth val^\n```\n\n#### Parameters\n\n- from: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val)\n\n#### Returns\n\n- [TCPListenAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L18)\n\n``` pony\nfun box eq(\n  that: TCPListenAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPListenAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L18)\n\n``` pony\nfun box ne(\n  that: TCPListenAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPListenAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListenAuth](https://stdlib.ponylang.io/net-TCPListenAuth)"
- name: TCPListenAuth.create()
  id: net-tcplistenauth#create
  summary: null
  belongs_to: TCPListenAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L18)

    ``` pony
    new val create(
      from: (AmbientAuth val | NetAuth val | TCPAuth val))
    : TCPListenAuth val^
    ```

    #### Parameters

    - from: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [TCPAuth](net-tcpauth) val)

    #### Returns

    - [TCPListenAuth](index) val^

    ## Public Functions
- name: TCPListenAuth.eq()
  id: net-tcplistenauth#eq
  summary: null
  belongs_to: TCPListenAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L18)

    ``` pony
    fun box eq(
      that: TCPListenAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [TCPListenAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: TCPListenAuth.ne()
  id: net-tcplistenauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: TCPListenAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L18)\n\n``` pony\nfun box ne(\n  that: TCPListenAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [TCPListenAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListenAuth](https://stdlib.ponylang.io/net-TCPListenAuth)"
- name: TCPListener
  id: net-tcplistener
  summary: Listens for new network connections
  description: "# TCPListener\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L3)\n\nListens for new network connections.\n\nThe following program creates an echo server that listens for connections on port 8989 and echoes back any data it receives.\n\n``` pony\nuse \"net\"\n\nclass MyTCPConnectionNotify is TCPConnectionNotify\n  fun ref received(\n    conn: TCPConnection ref,\n    data: Array[U8] iso,\n    times: USize)\n    : Bool\n  =>\n    conn.write(String.from_array(consume data))\n    true\n\n  fun ref connect_failed(conn: TCPConnection ref) =>\n    None\n\nclass MyTCPListenNotify is TCPListenNotify\n  fun ref connected(listen: TCPListener ref): TCPConnectionNotify iso^ =>\n    MyTCPConnectionNotify\n\n  fun ref not_listening(listen: TCPListener ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      TCPListener(env.root as AmbientAuth,\n        recover MyTCPListenNotify end, \"\", \"8989\")\n    end\n```\n\n``` pony\nactor tag TCPListener\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L52)\n\nListens for both IPv4 and IPv6 connections.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^\n\n### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L76)\n\nListens for IPv4 connections.\n\n``` pony\nnew tag ip4(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^\n\n### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L100)\n\nListens for IPv6 connections.\n\n``` pony\nnew tag ip6(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^\n\n## Public Behaviours\n\n### set_notify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L124)\n\nChange the notifier.\n\n``` pony\nbe set_notify(\n  notify: TCPListenNotify iso)\n```\n\n#### Parameters\n\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L130)\n\nStop listening.\n\n``` pony\nbe dispose()\n```\n\n## Public Functions\n\n### local_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L136)\n\nReturn the bound IP address.\n\n``` pony\nfun box local_address()\n: NetAddress val\n```\n\n#### Returns\n\n- [NetAddress](net-netaddress) val\n\n### close\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L245)\n\nDispose of resources.\n\n``` pony\nfun ref close()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListener](https://stdlib.ponylang.io/net-TCPListener)"
- name: TCPListener.close()
  id: net-tcplistener#close
  summary: Dispose of resources
  belongs_to: TCPListener
  description: "### close\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L245)\n\nDispose of resources.\n\n``` pony\nfun ref close()\n: None val\n```\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListener](https://stdlib.ponylang.io/net-TCPListener)"
- name: TCPListener.create()
  id: net-tcplistener#create
  summary: Listens for both IPv4 and IPv6 connections
  belongs_to: TCPListener
  description: "### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L52)\n\nListens for both IPv4 and IPv6 connections.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^"
- name: TCPListener.dispose()
  id: net-tcplistener#dispose
  summary: Stop listening
  belongs_to: TCPListener
  description: |-
    ### dispose

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L130)

    Stop listening.

    ``` pony
    be dispose()
    ```

    ## Public Functions
- name: TCPListener.ip4()
  id: net-tcplistener#ip4
  summary: Listens for IPv4 connections
  belongs_to: TCPListener
  description: "### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L76)\n\nListens for IPv4 connections.\n\n``` pony\nnew tag ip4(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^\n\n&nbsp;"
- name: TCPListener.ip6()
  id: net-tcplistener#ip6
  summary: Listens for IPv6 connections
  belongs_to: TCPListener
  description: "### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L100)\n\nListens for IPv6 connections.\n\n``` pony\nnew tag ip6(\n  auth: (AmbientAuth val | NetAuth val | TCPAuth val | \n    TCPListenAuth val),\n  notify: TCPListenNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  limit: USize val = 0,\n  read_buffer_size: USize val = 16384,\n  yield_after_reading: USize val = 16384,\n  yield_after_writing: USize val = 16384)\n: TCPListener tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n- notify: [TCPListenNotify](net-tcplistennotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- limit: [USize](builtin-usize) val = 0\n- read_buffer_size: [USize](builtin-usize) val = 16384\n- yield_after_reading: [USize](builtin-usize) val = 16384\n- yield_after_writing: [USize](builtin-usize) val = 16384\n\n#### Returns\n\n- [TCPListener](index) tag^\n\n## Public Behaviours"
- name: TCPListener.local_address()
  id: net-tcplistener#local_address
  summary: Return the bound IP address
  belongs_to: TCPListener
  description: |-
    ### local_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L136)

    Return the bound IP address.

    ``` pony
    fun box local_address()
    : NetAddress val
    ```

    #### Returns

    - [NetAddress](net-netaddress) val

    &nbsp;
- name: TCPListener.set_notify()
  id: net-tcplistener#set_notify
  summary: Change the notifier
  belongs_to: TCPListener
  description: |-
    ### set_notify

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L124)

    Change the notifier.

    ``` pony
    be set_notify(
      notify: TCPListenNotify iso)
    ```

    #### Parameters

    - notify: [TCPListenNotify](net-tcplistennotify) iso

    &nbsp;
- name: TCPListenerAuth
  id: net-tcplistenerauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# TCPListenerAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listener/#L1)\n\n``` pony\ntype TCPListenerAuth is\n  (AmbientAuth val | NetAuth val | TCPAuth val | TCPListenAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [TCPAuth](net-tcpauth) val \\| [TCPListenAuth](net-tcplistenauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListenerAuth](https://stdlib.ponylang.io/net-TCPListenerAuth)"
- name: TCPListenNotify
  id: net-tcplistennotify
  summary: Notifications for TCP listeners
  description: "# TCPListenNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L1)\n\nNotifications for TCP listeners.\n\nFor an example of using this class, please see the documentation for the `TCPListener` actor.\n\n``` pony\ninterface ref TCPListenNotify\n```\n\n## Public Functions\n\n### listening\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L8)\n\nCalled when the listener has been bound to an address.\n\n``` pony\nfun ref listening(\n  listen: TCPListener ref)\n: None val\n```\n\n#### Parameters\n\n- listen: [TCPListener](net-tcplistener) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### not_listening\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L14)\n\nCalled if it wasn't possible to bind the listener to an address.\n\nIt is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:\n\n``` pony\nfun ref not_listening(listen: TCPListener ref) =>\n  None\n```\n\n``` pony\nfun ref not_listening(\n  listen: TCPListener ref)\n: None val\n```\n\n#### Parameters\n\n- listen: [TCPListener](net-tcplistener) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L27)\n\nCalled when the listener is closed.\n\n``` pony\nfun ref closed(\n  listen: TCPListener ref)\n: None val\n```\n\n#### Parameters\n\n- listen: [TCPListener](net-tcplistener) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L33)\n\nCreate a new TCPConnectionNotify to attach to a new TCPConnection for a newly established connection to the server.\n\n``` pony\nfun ref connected(\n  listen: TCPListener ref)\n: TCPConnectionNotify iso^ ?\n```\n\n#### Parameters\n\n- listen: [TCPListener](net-tcplistener) ref\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^ ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListenNotify](https://stdlib.ponylang.io/net-TCPListenNotify)"
- name: TCPListenNotify.closed()
  id: net-tcplistennotify#closed
  summary: Called when the listener is closed
  belongs_to: TCPListenNotify
  description: |-
    ### closed

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L27)

    Called when the listener is closed.

    ``` pony
    fun ref closed(
      listen: TCPListener ref)
    : None val
    ```

    #### Parameters

    - listen: [TCPListener](net-tcplistener) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TCPListenNotify.connected()
  id: net-tcplistennotify#connected
  summary: Create a new TCPConnectionNotify to attach to a new TCPConnection for a newly established connection to the server
  belongs_to: TCPListenNotify
  description: "### connected\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L33)\n\nCreate a new TCPConnectionNotify to attach to a new TCPConnection for a newly established connection to the server.\n\n``` pony\nfun ref connected(\n  listen: TCPListener ref)\n: TCPConnectionNotify iso^ ?\n```\n\n#### Parameters\n\n- listen: [TCPListener](net-tcplistener) ref\n\n#### Returns\n\n- [TCPConnectionNotify](net-tcpconnectionnotify) iso^ ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-TCPListenNotify](https://stdlib.ponylang.io/net-TCPListenNotify)"
- name: TCPListenNotify.listening()
  id: net-tcplistennotify#listening
  summary: Called when the listener has been bound to an address
  belongs_to: TCPListenNotify
  description: |-
    ### listening

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L8)

    Called when the listener has been bound to an address.

    ``` pony
    fun ref listening(
      listen: TCPListener ref)
    : None val
    ```

    #### Parameters

    - listen: [TCPListener](net-tcplistener) ref

    #### Returns

    - [None](builtin-none) val
- name: TCPListenNotify.not_listening()
  id: net-tcplistennotify#not_listening
  summary: Called if it wasn't possible to bind the listener to an address
  belongs_to: TCPListenNotify
  description: |-
    ### not_listening

    [\[Source\]](https://stdlib.ponylang.io/src/net/tcp_listen_notify/#L14)

    Called if it wasn't possible to bind the listener to an address.

    It is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:

    ``` pony
    fun ref not_listening(listen: TCPListener ref) =>
      None
    ```

    ``` pony
    fun ref not_listening(
      listen: TCPListener ref)
    : None val
    ```

    #### Parameters

    - listen: [TCPListener](net-tcplistener) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper
  id: ponytest-testhelper
  summary: Per unit test class that provides control, logging and assertion functions
  description: "# TestHelper\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L4)\n\nPer unit test class that provides control, logging and assertion functions.\n\nEach unit test is given a TestHelper when it is run. This is val and so can be passed between methods and actors within the test without restriction.\n\nThe assertion functions check the relevant condition and mark the test as a failure if appropriate. The success or failure of the condition is reported back as a Bool which can be checked if a different code path is needed when that condition fails.\n\nAll assert functions take an optional message argument. This is simply a string that is printed as part of the error message when the condition fails. It is intended to aid identifying what failed.\n\n``` pony\nclass val TestHelper\n```\n\n## Public fields\n\n### let env: [Env](builtin-env) val\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L22)\n\nThe process environment.\n\nThis is useful for getting the [root authority](builtin-ambientauth) in order to access the filesystem (See [files](files--index)) or the network (See [net](net--index)) in your tests.\n\n## Public Functions\n\n### log\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L38)\n\nLog the given message.\n\nThe verbose parameter allows messages to be printed only when the --verbose command line option is used. For example, by default assert failures are logged, but passes are not. With --verbose both passes and fails are reported.\n\nLogs are printed one test at a time to avoid interleaving log lines from concurrent tests.\n\n``` pony\nfun box log(\n  msg: String val,\n  verbose: Bool val = false)\n: None val\n```\n\n#### Parameters\n\n- msg: [String](builtin-string) val\n- verbose: [Bool](builtin-bool) val = false\n\n#### Returns\n\n- [None](builtin-none) val\n\n### fail\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L52)\n\nFlag the test as having failed.\n\n``` pony\nfun box fail(\n  msg: String val = \"Test failed\")\n: None val\n```\n\n#### Parameters\n\n- msg: [String](builtin-string) val = \"Test failed\"\n\n#### Returns\n\n- [None](builtin-none) val\n\n### assert_true\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L58)\n\nAssert that the given expression is true.\n\n``` pony\nfun box assert_true(\n  actual: Bool val,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- actual: [Bool](builtin-bool) val\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_false\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L71)\n\nAssert that the given expression is false.\n\n``` pony\nfun box assert_false(\n  actual: Bool val,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- actual: [Bool](builtin-bool) val\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L84)\n\nAssert that the given test function throws an error when run.\n\n``` pony\nfun box assert_error(\n  test: ITest box,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- test: [ITest](ponytest-itest) box\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_no_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L99)\n\nAssert that the gived test function does not throw an error when run.\n\n``` pony\nfun box assert_no_error(\n  test: ITest box,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- test: [ITest](ponytest-itest) box\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_is\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L117)\n\nAssert that the 2 given expressions resolve to the same instance\n\n``` pony\nfun box assert_is[A: A](\n  expect: A,\n  actual: A,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- expect: A\n- actual: A\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_eq\\[A: ([Equatable](builtin-equatable)\\[A\\] \\#read & [Stringable](builtin-stringable) \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L154)\n\nAssert that the 2 given expressions are equal.\n\n``` pony\nfun box assert_eq[A: (Equatable[A] #read & Stringable #read)](\n  expect: A,\n  actual: A,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- expect: A\n- actual: A\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_isnt\\[A: A\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L179)\n\nAssert that the 2 given expressions resolve to different instances.\n\n``` pony\nfun box assert_isnt[A: A](\n  not_expect: A,\n  actual: A,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- not_expect: A\n- actual: A\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_ne\\[A: ([Equatable](builtin-equatable)\\[A\\] \\#read & [Stringable](builtin-stringable) \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L216)\n\nAssert that the 2 given expressions are not equal.\n\n``` pony\nfun box assert_ne[A: (Equatable[A] #read & Stringable #read)](\n  not_expect: A,\n  actual: A,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- not_expect: A\n- actual: A\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_array_eq\\[A: ([Equatable](builtin-equatable)\\[A\\] \\#read & [Stringable](builtin-stringable) \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L244)\n\nAssert that the contents of the 2 given ReadSeqs are equal.\n\nThe type parameter of this function is the type parameter of the elements in both ReadSeqs. For instance, when comparing two `Array[U8]`, you should call this method as follows:\n\n``` pony\nfun apply(h: TestHelper) =>\n  let a: Array[U8] = [1; 2; 3]\n  let b: Array[U8] = [1; 2; 3]\n  h.assert_array_eq[U8](a, b)\n```\n\n``` pony\nfun box assert_array_eq[A: (Equatable[A] #read & Stringable #read)](\n  expect: ReadSeq[A] box,\n  actual: ReadSeq[A] box,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- expect: [ReadSeq](builtin-readseq)\\[A\\] box\n- actual: [ReadSeq](builtin-readseq)\\[A\\] box\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### assert_array_eq_unordered\\[A: ([Equatable](builtin-equatable)\\[A\\] \\#read & [Stringable](builtin-stringable) \\#read)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L297)\n\nAssert that the contents of the 2 given ReadSeqs are equal ignoring order.\n\nThe type parameter of this function is the type parameter of the elements in both ReadSeqs. For instance, when comparing two `Array[U8]`, you should call this method as follows:\n\n``` pony\nfun apply(h: TestHelper) =>\n  let a: Array[U8] = [1; 2; 3]\n  let b: Array[U8] = [1; 3; 2]\n  h.assert_array_eq_unordered[U8](a, b)\n```\n\n``` pony\nfun box assert_array_eq_unordered[A: (Equatable[A] #read & Stringable #read)](\n  expect: ReadSeq[A] box,\n  actual: ReadSeq[A] box,\n  msg: String val = \"\",\n  loc: SourceLoc val = __loc)\n: Bool val\n```\n\n#### Parameters\n\n- expect: [ReadSeq](builtin-readseq)\\[A\\] box\n- actual: [ReadSeq](builtin-readseq)\\[A\\] box\n- msg: [String](builtin-string) val = \"\"\n- loc: [SourceLoc](builtin-sourceloc) val = \\_\\_loc\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### long_test\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L375)\n\nIndicate that this is a long running test that may continue after the test function exits. Once this function is called, complete() must be called to finish the test, unless a timeout occurs. The timeout is specified in nanseconds.\n\n``` pony\nfun box long_test(\n  timeout: U64 val)\n: None val\n```\n\n#### Parameters\n\n- timeout: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### complete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L385)\n\nMUST be called by each long test to indicate the test has finished, unless a timeout occurs.\n\nThe \"success\" parameter specifies whether the test succeeded. However if any asserts fail the test will be considered a failure, regardless of the value of this parameter.\n\nOnce this is called tear_down() may be called at any time.\n\n``` pony\nfun box complete(\n  success: Bool val)\n: None val\n```\n\n#### Parameters\n\n- success: [Bool](builtin-bool) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### expect_action\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L398)\n\nCan be called in a long test to set up expectations for one or more actions that, when all completed, will complete the test.\n\nThis pattern is useful for cases where you have multiple things that need to happen to complete your test, but don't want to have to collect them all yourself into a single actor that calls the complete method.\n\nThe order of calls to expect_action don't matter - the actions may be completed in any other order to complete the test.\n\n``` pony\nfun box expect_action(\n  name: String val)\n: None val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### complete_action\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L412)\n\nMUST be called for each action expectation that was set up in a long test to fulfill the expectations. Any expectations that are still outstanding when the long test timeout runs out will be printed by name when it fails.\n\nCompleting all outstanding actions is enough to finish the test. There's no need to also call the complete method when the actions are finished.\n\nCalling the complete method will finish the test immediately, without waiting for any outstanding actions to be completed.\n\n``` pony\nfun box complete_action(\n  name: String val)\n: None val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### fail_action\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L426)\n\nCall to fail an action, which will also cause the entire test to fail immediately, without waiting the rest of the outstanding actions.\n\nThe name of the failed action will be included in the failure output.\n\nUsually the action name should be an expected action set up by a call to expect_action, but failing unexpected actions will also fail the test.\n\n``` pony\nfun box fail_action(\n  name: String val)\n: None val\n```\n\n#### Parameters\n\n- name: [String](builtin-string) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### dispose_when_done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L438)\n\nPass a disposable actor to be disposed of when the test is complete. The actor will be disposed no matter whether the test succeeds or fails.\n\nIf the test is already tearing down, the actor will be disposed immediately.\n\n``` pony\nfun box dispose_when_done(\n  disposable: DisposableActor tag)\n: None val\n```\n\n#### Parameters\n\n- disposable: [DisposableActor](builtin-disposableactor) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-TestHelper](https://stdlib.ponylang.io/ponytest-TestHelper)"
- name: TestHelper.assert_array_eq()
  id: ponytest-testhelper#assert_array_eqa-equatablea-read-stringable-read
  summary: Assert that the contents of the 2 given ReadSeqs are equal
  belongs_to: TestHelper
  description: |-
    ### assert_array_eq\[A: ([Equatable](builtin-equatable)\[A\] \#read & [Stringable](builtin-stringable) \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L244)

    Assert that the contents of the 2 given ReadSeqs are equal.

    The type parameter of this function is the type parameter of the elements in both ReadSeqs. For instance, when comparing two `Array[U8]`, you should call this method as follows:

    ``` pony
    fun apply(h: TestHelper) =>
      let a: Array[U8] = [1; 2; 3]
      let b: Array[U8] = [1; 2; 3]
      h.assert_array_eq[U8](a, b)
    ```

    ``` pony
    fun box assert_array_eq[A: (Equatable[A] #read & Stringable #read)](
      expect: ReadSeq[A] box,
      actual: ReadSeq[A] box,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - expect: [ReadSeq](builtin-readseq)\[A\] box
    - actual: [ReadSeq](builtin-readseq)\[A\] box
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_array_eq_unordered()
  id: ponytest-testhelper#assert_array_eq_unordereda-equatablea-read-stringable-read
  summary: Assert that the contents of the 2 given ReadSeqs are equal ignoring order
  belongs_to: TestHelper
  description: |-
    ### assert_array_eq_unordered\[A: ([Equatable](builtin-equatable)\[A\] \#read & [Stringable](builtin-stringable) \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L297)

    Assert that the contents of the 2 given ReadSeqs are equal ignoring order.

    The type parameter of this function is the type parameter of the elements in both ReadSeqs. For instance, when comparing two `Array[U8]`, you should call this method as follows:

    ``` pony
    fun apply(h: TestHelper) =>
      let a: Array[U8] = [1; 2; 3]
      let b: Array[U8] = [1; 3; 2]
      h.assert_array_eq_unordered[U8](a, b)
    ```

    ``` pony
    fun box assert_array_eq_unordered[A: (Equatable[A] #read & Stringable #read)](
      expect: ReadSeq[A] box,
      actual: ReadSeq[A] box,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - expect: [ReadSeq](builtin-readseq)\[A\] box
    - actual: [ReadSeq](builtin-readseq)\[A\] box
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_eq()
  id: ponytest-testhelper#assert_eqa-equatablea-read-stringable-read
  summary: Assert that the 2 given expressions are equal
  belongs_to: TestHelper
  description: |-
    ### assert_eq\[A: ([Equatable](builtin-equatable)\[A\] \#read & [Stringable](builtin-stringable) \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L154)

    Assert that the 2 given expressions are equal.

    ``` pony
    fun box assert_eq[A: (Equatable[A] #read & Stringable #read)](
      expect: A,
      actual: A,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - expect: A
    - actual: A
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_error()
  id: ponytest-testhelper#assert_error
  summary: Assert that the given test function throws an error when run
  belongs_to: TestHelper
  description: |-
    ### assert_error

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L84)

    Assert that the given test function throws an error when run.

    ``` pony
    fun box assert_error(
      test: ITest box,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - test: [ITest](ponytest-itest) box
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_false()
  id: ponytest-testhelper#assert_false
  summary: Assert that the given expression is false
  belongs_to: TestHelper
  description: |-
    ### assert_false

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L71)

    Assert that the given expression is false.

    ``` pony
    fun box assert_false(
      actual: Bool val,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - actual: [Bool](builtin-bool) val
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_is()
  id: ponytest-testhelper#assert_isa-a
  summary: null
  belongs_to: TestHelper
  description: |-
    ### assert_is\[A: A\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L117)

    Assert that the 2 given expressions resolve to the same instance

    ``` pony
    fun box assert_is[A: A](
      expect: A,
      actual: A,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - expect: A
    - actual: A
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_isnt()
  id: ponytest-testhelper#assert_isnta-a
  summary: Assert that the 2 given expressions resolve to different instances
  belongs_to: TestHelper
  description: |-
    ### assert_isnt\[A: A\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L179)

    Assert that the 2 given expressions resolve to different instances.

    ``` pony
    fun box assert_isnt[A: A](
      not_expect: A,
      actual: A,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - not_expect: A
    - actual: A
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_ne()
  id: ponytest-testhelper#assert_nea-equatablea-read-stringable-read
  summary: Assert that the 2 given expressions are not equal
  belongs_to: TestHelper
  description: |-
    ### assert_ne\[A: ([Equatable](builtin-equatable)\[A\] \#read & [Stringable](builtin-stringable) \#read)\]

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L216)

    Assert that the 2 given expressions are not equal.

    ``` pony
    fun box assert_ne[A: (Equatable[A] #read & Stringable #read)](
      not_expect: A,
      actual: A,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - not_expect: A
    - actual: A
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_no_error()
  id: ponytest-testhelper#assert_no_error
  summary: Assert that the gived test function does not throw an error when run
  belongs_to: TestHelper
  description: |-
    ### assert_no_error

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L99)

    Assert that the gived test function does not throw an error when run.

    ``` pony
    fun box assert_no_error(
      test: ITest box,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - test: [ITest](ponytest-itest) box
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.assert_true()
  id: ponytest-testhelper#assert_true
  summary: Assert that the given expression is true
  belongs_to: TestHelper
  description: |-
    ### assert_true

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L58)

    Assert that the given expression is true.

    ``` pony
    fun box assert_true(
      actual: Bool val,
      msg: String val = "",
      loc: SourceLoc val = __loc)
    : Bool val
    ```

    #### Parameters

    - actual: [Bool](builtin-bool) val
    - msg: [String](builtin-string) val = ""
    - loc: [SourceLoc](builtin-sourceloc) val = \_\_loc

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: TestHelper.complete()
  id: ponytest-testhelper#complete
  summary: MUST be called by each long test to indicate the test has finished, unless a timeout occurs
  belongs_to: TestHelper
  description: |-
    ### complete

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L385)

    MUST be called by each long test to indicate the test has finished, unless a timeout occurs.

    The "success" parameter specifies whether the test succeeded. However if any asserts fail the test will be considered a failure, regardless of the value of this parameter.

    Once this is called tear_down() may be called at any time.

    ``` pony
    fun box complete(
      success: Bool val)
    : None val
    ```

    #### Parameters

    - success: [Bool](builtin-bool) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper.complete_action()
  id: ponytest-testhelper#complete_action
  summary: MUST be called for each action expectation that was set up in a long test to fulfill the expectations
  belongs_to: TestHelper
  description: |-
    ### complete_action

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L412)

    MUST be called for each action expectation that was set up in a long test to fulfill the expectations. Any expectations that are still outstanding when the long test timeout runs out will be printed by name when it fails.

    Completing all outstanding actions is enough to finish the test. There's no need to also call the complete method when the actions are finished.

    Calling the complete method will finish the test immediately, without waiting for any outstanding actions to be completed.

    ``` pony
    fun box complete_action(
      name: String val)
    : None val
    ```

    #### Parameters

    - name: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper.dispose_when_done()
  id: ponytest-testhelper#dispose_when_done
  summary: Pass a disposable actor to be disposed of when the test is complete
  belongs_to: TestHelper
  description: "### dispose_when_done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L438)\n\nPass a disposable actor to be disposed of when the test is complete. The actor will be disposed no matter whether the test succeeds or fails.\n\nIf the test is already tearing down, the actor will be disposed immediately.\n\n``` pony\nfun box dispose_when_done(\n  disposable: DisposableActor tag)\n: None val\n```\n\n#### Parameters\n\n- disposable: [DisposableActor](builtin-disposableactor) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-TestHelper](https://stdlib.ponylang.io/ponytest-TestHelper)"
- name: TestHelper.env
  id: ponytest-testhelper#let-env-env-val
  summary: The process environment
  belongs_to: TestHelper
  description: |-
    ### let env: [Env](builtin-env) val

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L22)

    The process environment.

    This is useful for getting the [root authority](builtin-ambientauth) in order to access the filesystem (See [files](files--index)) or the network (See [net](net--index)) in your tests.

    ## Public Functions
- name: TestHelper.expect_action()
  id: ponytest-testhelper#expect_action
  summary: Can be called in a long test to set up expectations for one or more actions that, when all completed, will complete the test
  belongs_to: TestHelper
  description: |-
    ### expect_action

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L398)

    Can be called in a long test to set up expectations for one or more actions that, when all completed, will complete the test.

    This pattern is useful for cases where you have multiple things that need to happen to complete your test, but don't want to have to collect them all yourself into a single actor that calls the complete method.

    The order of calls to expect_action don't matter - the actions may be completed in any other order to complete the test.

    ``` pony
    fun box expect_action(
      name: String val)
    : None val
    ```

    #### Parameters

    - name: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper.fail()
  id: ponytest-testhelper#fail
  summary: Flag the test as having failed
  belongs_to: TestHelper
  description: |-
    ### fail

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L52)

    Flag the test as having failed.

    ``` pony
    fun box fail(
      msg: String val = "Test failed")
    : None val
    ```

    #### Parameters

    - msg: [String](builtin-string) val = "Test failed"

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper.fail_action()
  id: ponytest-testhelper#fail_action
  summary: Call to fail an action, which will also cause the entire test to fail immediately, without waiting the rest of the outstanding actions
  belongs_to: TestHelper
  description: |-
    ### fail_action

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L426)

    Call to fail an action, which will also cause the entire test to fail immediately, without waiting the rest of the outstanding actions.

    The name of the failed action will be included in the failure output.

    Usually the action name should be an expected action set up by a call to expect_action, but failing unexpected actions will also fail the test.

    ``` pony
    fun box fail_action(
      name: String val)
    : None val
    ```

    #### Parameters

    - name: [String](builtin-string) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestHelper.log()
  id: ponytest-testhelper#log
  summary: Log the given message
  belongs_to: TestHelper
  description: |-
    ### log

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L38)

    Log the given message.

    The verbose parameter allows messages to be printed only when the --verbose command line option is used. For example, by default assert failures are logged, but passes are not. With --verbose both passes and fails are reported.

    Logs are printed one test at a time to avoid interleaving log lines from concurrent tests.

    ``` pony
    fun box log(
      msg: String val,
      verbose: Bool val = false)
    : None val
    ```

    #### Parameters

    - msg: [String](builtin-string) val
    - verbose: [Bool](builtin-bool) val = false

    #### Returns

    - [None](builtin-none) val
- name: TestHelper.long_test()
  id: ponytest-testhelper#long_test
  summary: Indicate that this is a long running test that may continue after the test function exits
  belongs_to: TestHelper
  description: |-
    ### long_test

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/test_helper/#L375)

    Indicate that this is a long running test that may continue after the test function exits. Once this function is called, complete() must be called to finish the test, unless a timeout occurs. The timeout is specified in nanseconds.

    ``` pony
    fun box long_test(
      timeout: U64 val)
    : None val
    ```

    #### Parameters

    - timeout: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: TestList
  id: ponytest-testlist
  summary: Source of unit tests for a PonyTest object
  description: "# TestList\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_list/#L1)\n\nSource of unit tests for a PonyTest object. See package doc string for further information and example use.\n\n``` pony\ntrait ref TestList\n```\n\n## Public Functions\n\n### tests\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_list/#L7)\n\nAdd all the tests in this suite to the given test object. Typically the implementation of this function will be of the form:\n\n``` pony\nfun tests(test: PonyTest) =>\n  test(_TestClass1)\n  test(_TestClass2)\n  test(_TestClass3)\n```\n\n``` pony\nfun tag tests(\n  test: PonyTest tag)\n: None val\n```\n\n#### Parameters\n\n- test: [PonyTest](ponytest-ponytest) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-TestList](https://stdlib.ponylang.io/ponytest-TestList)"
- name: TestList.tests()
  id: ponytest-testlist#tests
  summary: Add all the tests in this suite to the given test object
  belongs_to: TestList
  description: "### tests\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/test_list/#L7)\n\nAdd all the tests in this suite to the given test object. Typically the implementation of this function will be of the form:\n\n``` pony\nfun tests(test: PonyTest) =>\n  test(_TestClass1)\n  test(_TestClass2)\n  test(_TestClass3)\n```\n\n``` pony\nfun tag tests(\n  test: PonyTest tag)\n: None val\n```\n\n#### Parameters\n\n- test: [PonyTest](ponytest-ponytest) tag\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-TestList](https://stdlib.ponylang.io/ponytest-TestList)"
- name: Time
  id: time-time
  summary: A collection of ways to fetch the current time
  description: "# Time\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L38)\n\nA collection of ways to fetch the current time.\n\n``` pony\nprimitive val Time\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L38)\n\n``` pony\nnew val create()\n: Time val^\n```\n\n#### Returns\n\n- [Time](index) val^\n\n## Public Functions\n\n### now\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L42)\n\nThe wall-clock adjusted system time with nanoseconds. Return: (seconds, nanoseconds)\n\n``` pony\nfun box now()\n: (I64 val , I64 val)\n```\n\n#### Returns\n\n- ([I64](builtin-i64) val , [I64](builtin-i64) val)\n\n### seconds\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L65)\n\nThe wall-clock adjusted system time.\n\n``` pony\nfun box seconds()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### millis\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L71)\n\nMonotonic unadjusted milliseconds.\n\n``` pony\nfun box millis()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### micros\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L87)\n\nMonotonic unadjusted microseconds.\n\n``` pony\nfun box micros()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### nanos\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L103)\n\nMonotonic unadjusted nanoseconds.\n\n``` pony\nfun box nanos()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### cycles\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L119)\n\nProcessor cycle count. Don't use this for performance timing, as it does not control for out-of-order execution.\n\n``` pony\nfun box cycles()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### perf_begin\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L126)\n\nGet a cycle count for beginning a performance testing block. This will will prevent instructions from before this call leaking into the block and instructions after this call being executed earlier.\n\n``` pony\nfun box perf_begin()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### perf_end\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L139)\n\nGet a cycle count for ending a performance testing block. This will will prevent instructions from after this call leaking into the block and instructions before this call being executed later.\n\n``` pony\nfun box perf_end()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L42)\n\n``` pony\nfun box eq(\n  that: Time val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Time](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L42)\n\n``` pony\nfun box ne(\n  that: Time val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Time](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Time](https://stdlib.ponylang.io/time-Time)"
- name: Time.create()
  id: time-time#create
  summary: null
  belongs_to: Time
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L38)

    ``` pony
    new val create()
    : Time val^
    ```

    #### Returns

    - [Time](index) val^

    ## Public Functions
- name: Time.cycles()
  id: time-time#cycles
  summary: Processor cycle count
  belongs_to: Time
  description: |-
    ### cycles

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L119)

    Processor cycle count. Don't use this for performance timing, as it does not control for out-of-order execution.

    ``` pony
    fun box cycles()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.eq()
  id: time-time#eq
  summary: null
  belongs_to: Time
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L42)

    ``` pony
    fun box eq(
      that: Time val)
    : Bool val
    ```

    #### Parameters

    - that: [Time](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Time.micros()
  id: time-time#micros
  summary: Monotonic unadjusted microseconds
  belongs_to: Time
  description: |-
    ### micros

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L87)

    Monotonic unadjusted microseconds.

    ``` pony
    fun box micros()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.millis()
  id: time-time#millis
  summary: Monotonic unadjusted milliseconds
  belongs_to: Time
  description: |-
    ### millis

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L71)

    Monotonic unadjusted milliseconds.

    ``` pony
    fun box millis()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.nanos()
  id: time-time#nanos
  summary: Monotonic unadjusted nanoseconds
  belongs_to: Time
  description: |-
    ### nanos

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L103)

    Monotonic unadjusted nanoseconds.

    ``` pony
    fun box nanos()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.ne()
  id: time-time#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Time
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/time/#L42)\n\n``` pony\nfun box ne(\n  that: Time val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Time](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Time](https://stdlib.ponylang.io/time-Time)"
- name: Time.now()
  id: time-time#now
  summary: The wall-clock adjusted system time with nanoseconds
  belongs_to: Time
  description: |-
    ### now

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L42)

    The wall-clock adjusted system time with nanoseconds. Return: (seconds, nanoseconds)

    ``` pony
    fun box now()
    : (I64 val , I64 val)
    ```

    #### Returns

    - ([I64](builtin-i64) val , [I64](builtin-i64) val)
- name: Time.perf_begin()
  id: time-time#perf_begin
  summary: Get a cycle count for beginning a performance testing block
  belongs_to: Time
  description: |-
    ### perf_begin

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L126)

    Get a cycle count for beginning a performance testing block. This will will prevent instructions from before this call leaking into the block and instructions after this call being executed earlier.

    ``` pony
    fun box perf_begin()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.perf_end()
  id: time-time#perf_end
  summary: Get a cycle count for ending a performance testing block
  belongs_to: Time
  description: |-
    ### perf_end

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L139)

    Get a cycle count for ending a performance testing block. This will will prevent instructions from after this call leaking into the block and instructions before this call being executed later.

    ``` pony
    fun box perf_end()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: Time.seconds()
  id: time-time#seconds
  summary: The wall-clock adjusted system time
  belongs_to: Time
  description: |-
    ### seconds

    [\[Source\]](https://stdlib.ponylang.io/src/time/time/#L65)

    The wall-clock adjusted system time.

    ``` pony
    fun box seconds()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: Timer
  id: time-timer
  summary: The Timer class represents a timer that fires after an expiration time, and then fires at an interval
  description: "# Timer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer/#L3)\n\nThe `Timer` class represents a timer that fires after an expiration time, and then fires at an interval. When a `Timer` fires, it calls the `apply` method of the `TimerNotify` object that was passed to it when it was created.\n\nThe following example waits 5 seconds and then fires every 2 seconds, and when it fires the `TimerNotify` object prints how many times it has been called:\n\n``` pony\nuse \"time\"\n\nactor Main\n  new create(env: Env) =>\n    let timers = Timers\n    let timer = Timer(Notify(env), 5_000_000_000, 2_000_000_000)\n    timers(consume timer)\n\nclass Notify is TimerNotify\n  let _env: Env\n  var _counter: U32 = 0\n  new iso create(env: Env) =>\n    _env = env\n  fun ref apply(timer: Timer, count: U64): Bool =>\n    _env.out.print(_counter.string())\n    _counter = _counter + 1\n    true\n```\n\n``` pony\nclass ref Timer\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer/#L39)\n\nCreate a new timer. The expiration time should be a nanosecond count until the first expiration. The interval should also be in nanoseconds.\n\n``` pony\nnew iso create(\n  notify: TimerNotify iso,\n  expiration: U64 val,\n  interval: U64 val = 0)\n: Timer iso^\n```\n\n#### Parameters\n\n- notify: [TimerNotify](time-timernotify) iso\n- expiration: [U64](builtin-u64) val\n- interval: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [Timer](index) iso^\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer/#L54)\n\nCreates a new timer with an absolute expiration time rather than a relative time. The expiration time is wall-clock adjusted system time.\n\n``` pony\nnew ref abs(\n  notify: TimerNotify ref,\n  expiration: (I64 val , I64 val),\n  interval: U64 val = 0)\n: Timer ref^\n```\n\n#### Parameters\n\n- notify: [TimerNotify](time-timernotify) ref\n- expiration: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- interval: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [Timer](index) ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Timer](https://stdlib.ponylang.io/time-Timer)"
- name: Timer.abs()
  id: time-timer#abs
  summary: Creates a new timer with an absolute expiration time rather than a relative time
  belongs_to: Timer
  description: "### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer/#L54)\n\nCreates a new timer with an absolute expiration time rather than a relative time. The expiration time is wall-clock adjusted system time.\n\n``` pony\nnew ref abs(\n  notify: TimerNotify ref,\n  expiration: (I64 val , I64 val),\n  interval: U64 val = 0)\n: Timer ref^\n```\n\n#### Parameters\n\n- notify: [TimerNotify](time-timernotify) ref\n- expiration: ([I64](builtin-i64) val , [I64](builtin-i64) val)\n- interval: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [Timer](index) ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Timer](https://stdlib.ponylang.io/time-Timer)"
- name: Timer.create()
  id: time-timer#create
  summary: Create a new timer
  belongs_to: Timer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/time/timer/#L39)

    Create a new timer. The expiration time should be a nanosecond count until the first expiration. The interval should also be in nanoseconds.

    ``` pony
    new iso create(
      notify: TimerNotify iso,
      expiration: U64 val,
      interval: U64 val = 0)
    : Timer iso^
    ```

    #### Parameters

    - notify: [TimerNotify](time-timernotify) iso
    - expiration: [U64](builtin-u64) val
    - interval: [U64](builtin-u64) val = 0

    #### Returns

    - [Timer](index) iso^
- name: TimerNotify
  id: time-timernotify
  summary: Notifications for timer
  description: "# TimerNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer_notify/#L1)\n\nNotifications for timer.\n\n``` pony\ninterface ref TimerNotify\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer_notify/#L5)\n\nCalled with the the number of times the timer has fired since this was last called. Usually, the value of `count` will be 1. If it is not 1, it means that the timer isn't firing on schedule.\n\nFor example, if your timer is set to fire every 10 milliseconds, and `count` is 2, that means it has been between 20-29 milliseconds since the last time your timer fired. Non 1 values for a timer are rare and indicate a system under heavy load.\n\nReturn true to reschedule the timer (if it has an interval), or false to cancel the timer (even if it has an interval).\n\n``` pony\nfun ref apply(\n  timer: Timer ref,\n  count: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- timer: [Timer](time-timer) ref\n- count: [U64](builtin-u64) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### cancel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer_notify/#L21)\n\nCalled if the timer is cancelled. This is also called if the notifier returns false from its `apply` method.\n\n``` pony\nfun ref cancel(\n  timer: Timer ref)\n: None val\n```\n\n#### Parameters\n\n- timer: [Timer](time-timer) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-TimerNotify](https://stdlib.ponylang.io/time-TimerNotify)"
- name: TimerNotify.apply()
  id: time-timernotify#apply
  summary: Called with the the number of times the timer has fired since this was last called
  belongs_to: TimerNotify
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/time/timer_notify/#L5)

    Called with the the number of times the timer has fired since this was last called. Usually, the value of `count` will be 1. If it is not 1, it means that the timer isn't firing on schedule.

    For example, if your timer is set to fire every 10 milliseconds, and `count` is 2, that means it has been between 20-29 milliseconds since the last time your timer fired. Non 1 values for a timer are rare and indicate a system under heavy load.

    Return true to reschedule the timer (if it has an interval), or false to cancel the timer (even if it has an interval).

    ``` pony
    fun ref apply(
      timer: Timer ref,
      count: U64 val)
    : Bool val
    ```

    #### Parameters

    - timer: [Timer](time-timer) ref
    - count: [U64](builtin-u64) val

    #### Returns

    - [Bool](builtin-bool) val
- name: TimerNotify.cancel()
  id: time-timernotify#cancel
  summary: Called if the timer is cancelled
  belongs_to: TimerNotify
  description: "### cancel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timer_notify/#L21)\n\nCalled if the timer is cancelled. This is also called if the notifier returns false from its `apply` method.\n\n``` pony\nfun ref cancel(\n  timer: Timer ref)\n: None val\n```\n\n#### Parameters\n\n- timer: [Timer](time-timer) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-TimerNotify](https://stdlib.ponylang.io/time-TimerNotify)"
- name: Timers
  id: time-timers
  summary: A hierarchical set of timing wheels
  description: "# Timers\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L13)\n\nA hierarchical set of timing wheels.\n\n``` pony\nactor tag Timers\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L24)\n\nCreate a timer handler with the specified number of slop bits. No slop bits means trying for nanosecond resolution. 10 slop bits is approximately microsecond resolution, 20 slop bits is approximately millisecond resolution.\n\n``` pony\nnew tag create(\n  slop: USize val = 20)\n: Timers tag^\n```\n\n#### Parameters\n\n- slop: [USize](builtin-usize) val = 20\n\n#### Returns\n\n- [Timers](index) tag^\n\n## Public Behaviours\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L38)\n\nSets a timer. Fire it if need be, schedule it on the right timing wheel, then rearm the timer.\n\n``` pony\nbe apply(\n  timer: Timer iso)\n```\n\n#### Parameters\n\n- timer: [Timer](time-timer) iso\n\n### cancel\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L49)\n\nCancels a timer.\n\n``` pony\nbe cancel(\n  timer: Timer tag)\n```\n\n#### Parameters\n\n- timer: [Timer](time-timer) tag\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L64)\n\nDispose of this set of timing wheels.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Timers](https://stdlib.ponylang.io/time-Timers)"
- name: Timers.apply()
  id: time-timers#apply
  summary: Sets a timer
  belongs_to: Timers
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/time/timers/#L38)

    Sets a timer. Fire it if need be, schedule it on the right timing wheel, then rearm the timer.

    ``` pony
    be apply(
      timer: Timer iso)
    ```

    #### Parameters

    - timer: [Timer](time-timer) iso
- name: Timers.cancel()
  id: time-timers#cancel
  summary: Cancels a timer
  belongs_to: Timers
  description: |-
    ### cancel

    [\[Source\]](https://stdlib.ponylang.io/src/time/timers/#L49)

    Cancels a timer.

    ``` pony
    be cancel(
      timer: Timer tag)
    ```

    #### Parameters

    - timer: [Timer](time-timer) tag

    &nbsp;
- name: Timers.create()
  id: time-timers#create
  summary: Create a timer handler with the specified number of slop bits
  belongs_to: Timers
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/time/timers/#L24)

    Create a timer handler with the specified number of slop bits. No slop bits means trying for nanosecond resolution. 10 slop bits is approximately microsecond resolution, 20 slop bits is approximately millisecond resolution.

    ``` pony
    new tag create(
      slop: USize val = 20)
    : Timers tag^
    ```

    #### Parameters

    - slop: [USize](builtin-usize) val = 20

    #### Returns

    - [Timers](index) tag^

    ## Public Behaviours
- name: Timers.dispose()
  id: time-timers#dispose
  summary: Dispose of this set of timing wheels
  belongs_to: Timers
  description: "### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/time/timers/#L64)\n\nDispose of this set of timing wheels.\n\n``` pony\nbe dispose()\n```\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/time-Timers](https://stdlib.ponylang.io/time-Timers)"
- name: U128
  id: builtin-u128
  summary: Unsafe operation
  description: "# U128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L559)\n\n``` pony\nprimitive val U128 is\n  UnsignedInteger[U128 val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[U128](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L560)\n\n``` pony\nnew val create(\n  value: U128 val)\n: U128 val^\n```\n\n#### Parameters\n\n- value: [U128](index) val\n\n#### Returns\n\n- [U128](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](index) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L561)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U128 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U128](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L563)\n\n``` pony\nnew val min_value()\n: U128 val^\n```\n\n#### Returns\n\n- [U128](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L564)\n\n``` pony\nnew val max_value()\n: U128 val^\n```\n\n#### Returns\n\n- [U128](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L566)\n\n``` pony\nfun box next_pow2()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L570)\n\n``` pony\nfun box abs()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L571)\n\n``` pony\nfun box bit_reverse()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L572)\n\n``` pony\nfun box bswap()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L573)\n\n``` pony\nfun box popcount()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L574)\n\n``` pony\nfun box clz()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L575)\n\n``` pony\nfun box ctz()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L577)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L584)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L591)\n\n``` pony\nfun box bitwidth()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L593)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L595)\n\n``` pony\nfun box min(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L596)\n\n``` pony\nfun box max(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L598)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L608)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L611)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L614)\n\n``` pony\nfun box mul(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L643)\n\n``` pony\nfun box divrem(\n  y: U128 val)\n: (U128 val , U128 val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [U128](index) val)\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L673)\n\n``` pony\nfun box div(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L681)\n\n``` pony\nfun box rem(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L689)\n\nUnsafe operation. If the operation overflows, the result is undefined.\n\n``` pony\nfun box mul_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L700)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box divrem_unsafe(\n  y: U128 val)\n: (U128 val , U128 val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [U128](index) val)\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L712)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box div_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L724)\n\nUnsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.\n\n``` pony\nfun box rem_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L736)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L744)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L778)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L785)\n\nUnsafe operation. If the value doesn't fit in the destination type, the result is undefined.\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L792)\n\n``` pony\nfun box addc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L800)\n\n``` pony\nfun box subc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L808)\n\n``` pony\nfun box mulc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L817)\n\n``` pony\nfun box divc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L820)\n\n``` pony\nfun box remc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L823)\n\n``` pony\nfun box add_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L826)\n\n``` pony\nfun box sub_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L829)\n\n``` pony\nfun box mul_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L832)\n\n``` pony\nfun box div_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L835)\n\n``` pony\nfun box rem_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L838)\n\n``` pony\nfun box divrem_partial(\n  y: U128 val)\n: (U128 val , U128 val) ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [U128](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: U128 val)\n: (U128 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- ([U128](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: U128 val)\n: U128 val ?\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: U128 val)\n: U128 val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [U128](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: U128 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U128](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](index) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: U128 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U128](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U128](https://stdlib.ponylang.io/builtin-U128)"
- name: U128.abs()
  id: builtin-u128#abs
  summary: null
  belongs_to: U128
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L570)

    ``` pony
    fun box abs()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.add()
  id: builtin-u128#add
  summary: null
  belongs_to: U128
  description: |-
    ### add

    ``` pony
    fun box add(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.add_partial()
  id: builtin-u128#add_partial
  summary: null
  belongs_to: U128
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L823)

    ``` pony
    fun box add_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.add_unsafe()
  id: builtin-u128#add_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.addc()
  id: builtin-u128#addc
  summary: null
  belongs_to: U128
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L792)

    ``` pony
    fun box addc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.bit_reverse()
  id: builtin-u128#bit_reverse
  summary: null
  belongs_to: U128
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L571)

    ``` pony
    fun box bit_reverse()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.bitwidth()
  id: builtin-u128#bitwidth
  summary: null
  belongs_to: U128
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L591)

    ``` pony
    fun box bitwidth()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.bswap()
  id: builtin-u128#bswap
  summary: null
  belongs_to: U128
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L572)

    ``` pony
    fun box bswap()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.bytewidth()
  id: builtin-u128#bytewidth
  summary: null
  belongs_to: U128
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L593)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U128.clz()
  id: builtin-u128#clz
  summary: null
  belongs_to: U128
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L574)

    ``` pony
    fun box clz()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.clz_unsafe()
  id: builtin-u128#clz_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L577)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.compare()
  id: builtin-u128#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U128
  description: "### compare\n\n``` pony\nfun box compare(\n  that: U128 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U128](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U128](https://stdlib.ponylang.io/builtin-U128)"
- name: U128.create()
  id: builtin-u128#create
  summary: null
  belongs_to: U128
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L560)

    ``` pony
    new val create(
      value: U128 val)
    : U128 val^
    ```

    #### Parameters

    - value: [U128](index) val

    #### Returns

    - [U128](index) val^
- name: U128.ctz()
  id: builtin-u128#ctz
  summary: null
  belongs_to: U128
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L575)

    ``` pony
    fun box ctz()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.ctz_unsafe()
  id: builtin-u128#ctz_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L584)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.div()
  id: builtin-u128#div
  summary: null
  belongs_to: U128
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L673)

    ``` pony
    fun box div(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.div_partial()
  id: builtin-u128#div_partial
  summary: null
  belongs_to: U128
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L832)

    ``` pony
    fun box div_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.div_unsafe()
  id: builtin-u128#div_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L712)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box div_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.divc()
  id: builtin-u128#divc
  summary: null
  belongs_to: U128
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L817)

    ``` pony
    fun box divc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.divrem()
  id: builtin-u128#divrem
  summary: null
  belongs_to: U128
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L643)

    ``` pony
    fun box divrem(
      y: U128 val)
    : (U128 val , U128 val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [U128](index) val)

    &nbsp;
- name: U128.divrem_partial()
  id: builtin-u128#divrem_partial
  summary: null
  belongs_to: U128
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L838)

    ``` pony
    fun box divrem_partial(
      y: U128 val)
    : (U128 val , U128 val) ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [U128](index) val) ?

    &nbsp;
- name: U128.divrem_unsafe()
  id: builtin-u128#divrem_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L700)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box divrem_unsafe(
      y: U128 val)
    : (U128 val , U128 val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [U128](index) val)

    &nbsp;
- name: U128.eq()
  id: builtin-u128#eq
  summary: null
  belongs_to: U128
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.f32()
  id: builtin-u128#f32
  summary: null
  belongs_to: U128
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L736)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U128.f32_unsafe()
  id: builtin-u128#f32_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L778)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U128.f64()
  id: builtin-u128#f64
  summary: null
  belongs_to: U128
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L744)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U128.f64_unsafe()
  id: builtin-u128#f64_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L785)

    Unsafe operation. If the value doesn't fit in the destination type, the result is undefined.

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U128.fld()
  id: builtin-u128#fld
  summary: null
  belongs_to: U128
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.fld_partial()
  id: builtin-u128#fld_partial
  summary: null
  belongs_to: U128
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.fld_unsafe()
  id: builtin-u128#fld_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.fldc()
  id: builtin-u128#fldc
  summary: null
  belongs_to: U128
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.from()
  id: builtin-u128#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: U128
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](index) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L561)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U128 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U128](index) val^\n\n&nbsp;"
- name: U128.ge()
  id: builtin-u128#ge
  summary: null
  belongs_to: U128
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.gt()
  id: builtin-u128#gt
  summary: null
  belongs_to: U128
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.hash()
  id: builtin-u128#hash
  summary: null
  belongs_to: U128
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L598)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U128.hash64()
  id: builtin-u128#hash64
  summary: null
  belongs_to: U128
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L608)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U128.i128()
  id: builtin-u128#i128
  summary: null
  belongs_to: U128
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U128.i128_unsafe()
  id: builtin-u128#i128_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U128.i16()
  id: builtin-u128#i16
  summary: null
  belongs_to: U128
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U128.i16_unsafe()
  id: builtin-u128#i16_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U128.i32()
  id: builtin-u128#i32
  summary: null
  belongs_to: U128
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U128.i32_unsafe()
  id: builtin-u128#i32_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U128.i64()
  id: builtin-u128#i64
  summary: null
  belongs_to: U128
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U128.i64_unsafe()
  id: builtin-u128#i64_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U128.i8()
  id: builtin-u128#i8
  summary: null
  belongs_to: U128
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U128.i8_unsafe()
  id: builtin-u128#i8_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U128.ilong()
  id: builtin-u128#ilong
  summary: null
  belongs_to: U128
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U128.ilong_unsafe()
  id: builtin-u128#ilong_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U128.isize()
  id: builtin-u128#isize
  summary: null
  belongs_to: U128
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U128.isize_unsafe()
  id: builtin-u128#isize_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U128.le()
  id: builtin-u128#le
  summary: null
  belongs_to: U128
  description: |-
    ### le

    ``` pony
    fun box le(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.lt()
  id: builtin-u128#lt
  summary: null
  belongs_to: U128
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.max()
  id: builtin-u128#max
  summary: null
  belongs_to: U128
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L596)

    ``` pony
    fun box max(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.max_value()
  id: builtin-u128#max_value
  summary: null
  belongs_to: U128
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L564)

    ``` pony
    new val max_value()
    : U128 val^
    ```

    #### Returns

    - [U128](index) val^

    ## Public Functions
- name: U128.min()
  id: builtin-u128#min
  summary: null
  belongs_to: U128
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L595)

    ``` pony
    fun box min(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.min_value()
  id: builtin-u128#min_value
  summary: null
  belongs_to: U128
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L563)

    ``` pony
    new val min_value()
    : U128 val^
    ```

    #### Returns

    - [U128](index) val^

    &nbsp;
- name: U128.mod()
  id: builtin-u128#mod
  summary: null
  belongs_to: U128
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.mod_partial()
  id: builtin-u128#mod_partial
  summary: null
  belongs_to: U128
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.mod_unsafe()
  id: builtin-u128#mod_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.modc()
  id: builtin-u128#modc
  summary: null
  belongs_to: U128
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.mul()
  id: builtin-u128#mul
  summary: null
  belongs_to: U128
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L614)

    ``` pony
    fun box mul(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.mul_partial()
  id: builtin-u128#mul_partial
  summary: null
  belongs_to: U128
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L829)

    ``` pony
    fun box mul_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.mul_unsafe()
  id: builtin-u128#mul_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L689)

    Unsafe operation. If the operation overflows, the result is undefined.

    ``` pony
    fun box mul_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.mulc()
  id: builtin-u128#mulc
  summary: null
  belongs_to: U128
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L808)

    ``` pony
    fun box mulc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.ne()
  id: builtin-u128#ne
  summary: null
  belongs_to: U128
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: U128 val)
    : Bool val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U128.neg()
  id: builtin-u128#neg
  summary: null
  belongs_to: U128
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.neg_unsafe()
  id: builtin-u128#neg_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.next_pow2()
  id: builtin-u128#next_pow2
  summary: null
  belongs_to: U128
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L566)

    ``` pony
    fun box next_pow2()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.op_and()
  id: builtin-u128#op_and
  summary: null
  belongs_to: U128
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.op_not()
  id: builtin-u128#op_not
  summary: null
  belongs_to: U128
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.op_or()
  id: builtin-u128#op_or
  summary: null
  belongs_to: U128
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.op_xor()
  id: builtin-u128#op_xor
  summary: null
  belongs_to: U128
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.popcount()
  id: builtin-u128#popcount
  summary: null
  belongs_to: U128
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L573)

    ``` pony
    fun box popcount()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.rem()
  id: builtin-u128#rem
  summary: null
  belongs_to: U128
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L681)

    ``` pony
    fun box rem(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.rem_partial()
  id: builtin-u128#rem_partial
  summary: null
  belongs_to: U128
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L835)

    ``` pony
    fun box rem_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.rem_unsafe()
  id: builtin-u128#rem_unsafe
  summary: Unsafe operation
  belongs_to: U128
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L724)

    Unsafe operation. If y is 0, the result is undefined. If the operation overflows, the result is undefined.

    ``` pony
    fun box rem_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.remc()
  id: builtin-u128#remc
  summary: null
  belongs_to: U128
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L820)

    ``` pony
    fun box remc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.rotl()
  id: builtin-u128#rotl
  summary: null
  belongs_to: U128
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.rotr()
  id: builtin-u128#rotr
  summary: null
  belongs_to: U128
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.shl()
  id: builtin-u128#shl
  summary: null
  belongs_to: U128
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.shl_unsafe()
  id: builtin-u128#shl_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.shr()
  id: builtin-u128#shr
  summary: null
  belongs_to: U128
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.shr_unsafe()
  id: builtin-u128#shr_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.string()
  id: builtin-u128#string
  summary: null
  belongs_to: U128
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L611)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: U128.sub()
  id: builtin-u128#sub
  summary: null
  belongs_to: U128
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.sub_partial()
  id: builtin-u128#sub_partial
  summary: null
  belongs_to: U128
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L826)

    ``` pony
    fun box sub_partial(
      y: U128 val)
    : U128 val ?
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val ?

    &nbsp;
- name: U128.sub_unsafe()
  id: builtin-u128#sub_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: U128 val)
    : U128 val
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.subc()
  id: builtin-u128#subc
  summary: null
  belongs_to: U128
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L800)

    ``` pony
    fun box subc(
      y: U128 val)
    : (U128 val , Bool val)
    ```

    #### Parameters

    - y: [U128](index) val

    #### Returns

    - ([U128](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U128.u128()
  id: builtin-u128#u128_1
  summary: null
  belongs_to: U128
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.u128_unsafe()
  id: builtin-u128#u128_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](index) val

    &nbsp;
- name: U128.u16()
  id: builtin-u128#u16
  summary: null
  belongs_to: U128
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U128.u16_unsafe()
  id: builtin-u128#u16_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U128.u32()
  id: builtin-u128#u32
  summary: null
  belongs_to: U128
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U128.u32_unsafe()
  id: builtin-u128#u32_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U128.u64()
  id: builtin-u128#u64
  summary: null
  belongs_to: U128
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U128.u64_unsafe()
  id: builtin-u128#u64_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U128.u8()
  id: builtin-u128#u8
  summary: null
  belongs_to: U128
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U128.u8_unsafe()
  id: builtin-u128#u8_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U128.ulong()
  id: builtin-u128#ulong
  summary: null
  belongs_to: U128
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U128.ulong_unsafe()
  id: builtin-u128#ulong_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U128.usize()
  id: builtin-u128#usize
  summary: null
  belongs_to: U128
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U128.usize_unsafe()
  id: builtin-u128#usize_unsafe
  summary: null
  belongs_to: U128
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U16
  id: builtin-u16
  summary: Unsafe operation
  description: "# U16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L73)\n\n``` pony\nprimitive val U16 is\n  UnsignedInteger[U16 val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[U16](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L74)\n\n``` pony\nnew val create(\n  value: U16 val)\n: U16 val^\n```\n\n#### Parameters\n\n- value: [U16](index) val\n\n#### Returns\n\n- [U16](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](index) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L75)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U16 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U16](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L77)\n\n``` pony\nnew val min_value()\n: U16 val^\n```\n\n#### Returns\n\n- [U16](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L78)\n\n``` pony\nnew val max_value()\n: U16 val^\n```\n\n#### Returns\n\n- [U16](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L80)\n\n``` pony\nfun box next_pow2()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L84)\n\n``` pony\nfun box abs()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L85)\n\n``` pony\nfun box bit_reverse()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L86)\n\n``` pony\nfun box bswap()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L87)\n\n``` pony\nfun box popcount()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L88)\n\n``` pony\nfun box clz()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L89)\n\n``` pony\nfun box ctz()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L91)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L98)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L105)\n\n``` pony\nfun box bitwidth()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L107)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L109)\n\n``` pony\nfun box min(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L110)\n\n``` pony\nfun box max(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L112)\n\n``` pony\nfun box addc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L115)\n\n``` pony\nfun box subc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L118)\n\n``` pony\nfun box mulc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L121)\n\n``` pony\nfun box divc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L124)\n\n``` pony\nfun box remc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L127)\n\n``` pony\nfun box add_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L130)\n\n``` pony\nfun box sub_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L133)\n\n``` pony\nfun box mul_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L136)\n\n``` pony\nfun box div_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L139)\n\n``` pony\nfun box rem_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L142)\n\n``` pony\nfun box divrem_partial(\n  y: U16 val)\n: (U16 val , U16 val) ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [U16](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: U16 val)\n: (U16 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: U16 val)\n: U16 val ?\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: U16 val)\n: (U16 val , U16 val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [U16](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: U16 val)\n: (U16 val , U16 val)\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- ([U16](index) val , [U16](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: U16 val)\n: U16 val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [U16](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: U16 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U16](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](index) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: U16 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U16](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U16](https://stdlib.ponylang.io/builtin-U16)"
- name: U16.abs()
  id: builtin-u16#abs
  summary: null
  belongs_to: U16
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L84)

    ``` pony
    fun box abs()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.add()
  id: builtin-u16#add
  summary: null
  belongs_to: U16
  description: |-
    ### add

    ``` pony
    fun box add(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.add_partial()
  id: builtin-u16#add_partial
  summary: null
  belongs_to: U16
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L127)

    ``` pony
    fun box add_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.add_unsafe()
  id: builtin-u16#add_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.addc()
  id: builtin-u16#addc
  summary: null
  belongs_to: U16
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L112)

    ``` pony
    fun box addc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.bit_reverse()
  id: builtin-u16#bit_reverse
  summary: null
  belongs_to: U16
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L85)

    ``` pony
    fun box bit_reverse()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.bitwidth()
  id: builtin-u16#bitwidth
  summary: null
  belongs_to: U16
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L105)

    ``` pony
    fun box bitwidth()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.bswap()
  id: builtin-u16#bswap
  summary: null
  belongs_to: U16
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L86)

    ``` pony
    fun box bswap()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.bytewidth()
  id: builtin-u16#bytewidth
  summary: null
  belongs_to: U16
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L107)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U16.clz()
  id: builtin-u16#clz
  summary: null
  belongs_to: U16
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L88)

    ``` pony
    fun box clz()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.clz_unsafe()
  id: builtin-u16#clz_unsafe
  summary: Unsafe operation
  belongs_to: U16
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L91)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.compare()
  id: builtin-u16#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U16
  description: "### compare\n\n``` pony\nfun box compare(\n  that: U16 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U16](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U16](https://stdlib.ponylang.io/builtin-U16)"
- name: U16.create()
  id: builtin-u16#create
  summary: null
  belongs_to: U16
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L74)

    ``` pony
    new val create(
      value: U16 val)
    : U16 val^
    ```

    #### Parameters

    - value: [U16](index) val

    #### Returns

    - [U16](index) val^
- name: U16.ctz()
  id: builtin-u16#ctz
  summary: null
  belongs_to: U16
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L89)

    ``` pony
    fun box ctz()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.ctz_unsafe()
  id: builtin-u16#ctz_unsafe
  summary: Unsafe operation
  belongs_to: U16
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L98)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.div()
  id: builtin-u16#div
  summary: null
  belongs_to: U16
  description: |-
    ### div

    ``` pony
    fun box div(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.div_partial()
  id: builtin-u16#div_partial
  summary: null
  belongs_to: U16
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L136)

    ``` pony
    fun box div_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.div_unsafe()
  id: builtin-u16#div_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.divc()
  id: builtin-u16#divc
  summary: null
  belongs_to: U16
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L121)

    ``` pony
    fun box divc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.divrem()
  id: builtin-u16#divrem
  summary: null
  belongs_to: U16
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: U16 val)
    : (U16 val , U16 val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [U16](index) val)

    &nbsp;
- name: U16.divrem_partial()
  id: builtin-u16#divrem_partial
  summary: null
  belongs_to: U16
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L142)

    ``` pony
    fun box divrem_partial(
      y: U16 val)
    : (U16 val , U16 val) ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [U16](index) val) ?

    &nbsp;
- name: U16.divrem_unsafe()
  id: builtin-u16#divrem_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: U16 val)
    : (U16 val , U16 val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [U16](index) val)

    &nbsp;
- name: U16.eq()
  id: builtin-u16#eq
  summary: null
  belongs_to: U16
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.f32()
  id: builtin-u16#f32
  summary: null
  belongs_to: U16
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U16.f32_unsafe()
  id: builtin-u16#f32_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U16.f64()
  id: builtin-u16#f64
  summary: null
  belongs_to: U16
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U16.f64_unsafe()
  id: builtin-u16#f64_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U16.fld()
  id: builtin-u16#fld
  summary: null
  belongs_to: U16
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.fld_partial()
  id: builtin-u16#fld_partial
  summary: null
  belongs_to: U16
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.fld_unsafe()
  id: builtin-u16#fld_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.fldc()
  id: builtin-u16#fldc
  summary: null
  belongs_to: U16
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.from()
  id: builtin-u16#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: U16
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](index) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L75)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U16 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U16](index) val^\n\n&nbsp;"
- name: U16.ge()
  id: builtin-u16#ge
  summary: null
  belongs_to: U16
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.gt()
  id: builtin-u16#gt
  summary: null
  belongs_to: U16
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.hash()
  id: builtin-u16#hash
  summary: null
  belongs_to: U16
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U16.hash64()
  id: builtin-u16#hash64
  summary: null
  belongs_to: U16
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U16.i128()
  id: builtin-u16#i128
  summary: null
  belongs_to: U16
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U16.i128_unsafe()
  id: builtin-u16#i128_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U16.i16()
  id: builtin-u16#i16
  summary: null
  belongs_to: U16
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U16.i16_unsafe()
  id: builtin-u16#i16_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U16.i32()
  id: builtin-u16#i32
  summary: null
  belongs_to: U16
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U16.i32_unsafe()
  id: builtin-u16#i32_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U16.i64()
  id: builtin-u16#i64
  summary: null
  belongs_to: U16
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U16.i64_unsafe()
  id: builtin-u16#i64_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U16.i8()
  id: builtin-u16#i8
  summary: null
  belongs_to: U16
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U16.i8_unsafe()
  id: builtin-u16#i8_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U16.ilong()
  id: builtin-u16#ilong
  summary: null
  belongs_to: U16
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U16.ilong_unsafe()
  id: builtin-u16#ilong_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U16.isize()
  id: builtin-u16#isize
  summary: null
  belongs_to: U16
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U16.isize_unsafe()
  id: builtin-u16#isize_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U16.le()
  id: builtin-u16#le
  summary: null
  belongs_to: U16
  description: |-
    ### le

    ``` pony
    fun box le(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.lt()
  id: builtin-u16#lt
  summary: null
  belongs_to: U16
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.max()
  id: builtin-u16#max
  summary: null
  belongs_to: U16
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L110)

    ``` pony
    fun box max(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.max_value()
  id: builtin-u16#max_value
  summary: null
  belongs_to: U16
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L78)

    ``` pony
    new val max_value()
    : U16 val^
    ```

    #### Returns

    - [U16](index) val^

    ## Public Functions
- name: U16.min()
  id: builtin-u16#min
  summary: null
  belongs_to: U16
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L109)

    ``` pony
    fun box min(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.min_value()
  id: builtin-u16#min_value
  summary: null
  belongs_to: U16
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L77)

    ``` pony
    new val min_value()
    : U16 val^
    ```

    #### Returns

    - [U16](index) val^

    &nbsp;
- name: U16.mod()
  id: builtin-u16#mod
  summary: null
  belongs_to: U16
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.mod_partial()
  id: builtin-u16#mod_partial
  summary: null
  belongs_to: U16
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.mod_unsafe()
  id: builtin-u16#mod_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.modc()
  id: builtin-u16#modc
  summary: null
  belongs_to: U16
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.mul()
  id: builtin-u16#mul
  summary: null
  belongs_to: U16
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.mul_partial()
  id: builtin-u16#mul_partial
  summary: null
  belongs_to: U16
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L133)

    ``` pony
    fun box mul_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.mul_unsafe()
  id: builtin-u16#mul_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.mulc()
  id: builtin-u16#mulc
  summary: null
  belongs_to: U16
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L118)

    ``` pony
    fun box mulc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.ne()
  id: builtin-u16#ne
  summary: null
  belongs_to: U16
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: U16 val)
    : Bool val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U16.neg()
  id: builtin-u16#neg
  summary: null
  belongs_to: U16
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.neg_unsafe()
  id: builtin-u16#neg_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.next_pow2()
  id: builtin-u16#next_pow2
  summary: null
  belongs_to: U16
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L80)

    ``` pony
    fun box next_pow2()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.op_and()
  id: builtin-u16#op_and
  summary: null
  belongs_to: U16
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.op_not()
  id: builtin-u16#op_not
  summary: null
  belongs_to: U16
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.op_or()
  id: builtin-u16#op_or
  summary: null
  belongs_to: U16
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.op_xor()
  id: builtin-u16#op_xor
  summary: null
  belongs_to: U16
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.popcount()
  id: builtin-u16#popcount
  summary: null
  belongs_to: U16
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L87)

    ``` pony
    fun box popcount()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.rem()
  id: builtin-u16#rem
  summary: null
  belongs_to: U16
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.rem_partial()
  id: builtin-u16#rem_partial
  summary: null
  belongs_to: U16
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L139)

    ``` pony
    fun box rem_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.rem_unsafe()
  id: builtin-u16#rem_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.remc()
  id: builtin-u16#remc
  summary: null
  belongs_to: U16
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L124)

    ``` pony
    fun box remc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.rotl()
  id: builtin-u16#rotl
  summary: null
  belongs_to: U16
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.rotr()
  id: builtin-u16#rotr
  summary: null
  belongs_to: U16
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.shl()
  id: builtin-u16#shl
  summary: null
  belongs_to: U16
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.shl_unsafe()
  id: builtin-u16#shl_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.shr()
  id: builtin-u16#shr
  summary: null
  belongs_to: U16
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.shr_unsafe()
  id: builtin-u16#shr_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.string()
  id: builtin-u16#string
  summary: null
  belongs_to: U16
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: U16.sub()
  id: builtin-u16#sub
  summary: null
  belongs_to: U16
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.sub_partial()
  id: builtin-u16#sub_partial
  summary: null
  belongs_to: U16
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L130)

    ``` pony
    fun box sub_partial(
      y: U16 val)
    : U16 val ?
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val ?

    &nbsp;
- name: U16.sub_unsafe()
  id: builtin-u16#sub_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: U16 val)
    : U16 val
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.subc()
  id: builtin-u16#subc
  summary: null
  belongs_to: U16
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L115)

    ``` pony
    fun box subc(
      y: U16 val)
    : (U16 val , Bool val)
    ```

    #### Parameters

    - y: [U16](index) val

    #### Returns

    - ([U16](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U16.u128()
  id: builtin-u16#u128
  summary: null
  belongs_to: U16
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U16.u128_unsafe()
  id: builtin-u16#u128_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U16.u16()
  id: builtin-u16#u16_1
  summary: null
  belongs_to: U16
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.u16_unsafe()
  id: builtin-u16#u16_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](index) val

    &nbsp;
- name: U16.u32()
  id: builtin-u16#u32
  summary: null
  belongs_to: U16
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U16.u32_unsafe()
  id: builtin-u16#u32_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U16.u64()
  id: builtin-u16#u64
  summary: null
  belongs_to: U16
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U16.u64_unsafe()
  id: builtin-u16#u64_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U16.u8()
  id: builtin-u16#u8
  summary: null
  belongs_to: U16
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U16.u8_unsafe()
  id: builtin-u16#u8_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U16.ulong()
  id: builtin-u16#ulong
  summary: null
  belongs_to: U16
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U16.ulong_unsafe()
  id: builtin-u16#ulong_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U16.usize()
  id: builtin-u16#usize
  summary: null
  belongs_to: U16
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U16.usize_unsafe()
  id: builtin-u16#usize_unsafe
  summary: null
  belongs_to: U16
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U32
  id: builtin-u32
  summary: Unsafe operation
  description: "# U32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L145)\n\n``` pony\nprimitive val U32 is\n  UnsignedInteger[U32 val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[U32](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L146)\n\n``` pony\nnew val create(\n  value: U32 val)\n: U32 val^\n```\n\n#### Parameters\n\n- value: [U32](index) val\n\n#### Returns\n\n- [U32](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](index) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L147)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U32 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U32](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L149)\n\n``` pony\nnew val min_value()\n: U32 val^\n```\n\n#### Returns\n\n- [U32](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L150)\n\n``` pony\nnew val max_value()\n: U32 val^\n```\n\n#### Returns\n\n- [U32](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L152)\n\n``` pony\nfun box next_pow2()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L156)\n\n``` pony\nfun box abs()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L157)\n\n``` pony\nfun box bit_reverse()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L158)\n\n``` pony\nfun box bswap()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L159)\n\n``` pony\nfun box popcount()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L160)\n\n``` pony\nfun box clz()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L161)\n\n``` pony\nfun box ctz()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L163)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L170)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L177)\n\n``` pony\nfun box bitwidth()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L179)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L181)\n\n``` pony\nfun box min(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L182)\n\n``` pony\nfun box max(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L184)\n\n``` pony\nfun box addc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L187)\n\n``` pony\nfun box subc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L190)\n\n``` pony\nfun box mulc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L193)\n\n``` pony\nfun box divc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L196)\n\n``` pony\nfun box remc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L199)\n\n``` pony\nfun box add_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L202)\n\n``` pony\nfun box sub_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L205)\n\n``` pony\nfun box mul_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L208)\n\n``` pony\nfun box div_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L211)\n\n``` pony\nfun box rem_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L214)\n\n``` pony\nfun box divrem_partial(\n  y: U32 val)\n: (U32 val , U32 val) ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [U32](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: U32 val)\n: (U32 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: U32 val)\n: U32 val ?\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: U32 val)\n: (U32 val , U32 val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [U32](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: U32 val)\n: (U32 val , U32 val)\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- ([U32](index) val , [U32](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [U32](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: U32 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U32](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](index) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: U32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U32](https://stdlib.ponylang.io/builtin-U32)"
- name: U32.abs()
  id: builtin-u32#abs
  summary: null
  belongs_to: U32
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L156)

    ``` pony
    fun box abs()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.add()
  id: builtin-u32#add
  summary: null
  belongs_to: U32
  description: |-
    ### add

    ``` pony
    fun box add(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.add_partial()
  id: builtin-u32#add_partial
  summary: null
  belongs_to: U32
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L199)

    ``` pony
    fun box add_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.add_unsafe()
  id: builtin-u32#add_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.addc()
  id: builtin-u32#addc
  summary: null
  belongs_to: U32
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L184)

    ``` pony
    fun box addc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.bit_reverse()
  id: builtin-u32#bit_reverse
  summary: null
  belongs_to: U32
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L157)

    ``` pony
    fun box bit_reverse()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.bitwidth()
  id: builtin-u32#bitwidth
  summary: null
  belongs_to: U32
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L177)

    ``` pony
    fun box bitwidth()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.bswap()
  id: builtin-u32#bswap
  summary: null
  belongs_to: U32
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L158)

    ``` pony
    fun box bswap()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.bytewidth()
  id: builtin-u32#bytewidth
  summary: null
  belongs_to: U32
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L179)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U32.clz()
  id: builtin-u32#clz
  summary: null
  belongs_to: U32
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L160)

    ``` pony
    fun box clz()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.clz_unsafe()
  id: builtin-u32#clz_unsafe
  summary: Unsafe operation
  belongs_to: U32
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L163)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.compare()
  id: builtin-u32#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U32
  description: "### compare\n\n``` pony\nfun box compare(\n  that: U32 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U32](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U32](https://stdlib.ponylang.io/builtin-U32)"
- name: U32.create()
  id: builtin-u32#create
  summary: null
  belongs_to: U32
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L146)

    ``` pony
    new val create(
      value: U32 val)
    : U32 val^
    ```

    #### Parameters

    - value: [U32](index) val

    #### Returns

    - [U32](index) val^
- name: U32.ctz()
  id: builtin-u32#ctz
  summary: null
  belongs_to: U32
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L161)

    ``` pony
    fun box ctz()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.ctz_unsafe()
  id: builtin-u32#ctz_unsafe
  summary: Unsafe operation
  belongs_to: U32
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L170)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.div()
  id: builtin-u32#div
  summary: null
  belongs_to: U32
  description: |-
    ### div

    ``` pony
    fun box div(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.div_partial()
  id: builtin-u32#div_partial
  summary: null
  belongs_to: U32
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L208)

    ``` pony
    fun box div_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.div_unsafe()
  id: builtin-u32#div_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.divc()
  id: builtin-u32#divc
  summary: null
  belongs_to: U32
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L193)

    ``` pony
    fun box divc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.divrem()
  id: builtin-u32#divrem
  summary: null
  belongs_to: U32
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: U32 val)
    : (U32 val , U32 val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [U32](index) val)

    &nbsp;
- name: U32.divrem_partial()
  id: builtin-u32#divrem_partial
  summary: null
  belongs_to: U32
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L214)

    ``` pony
    fun box divrem_partial(
      y: U32 val)
    : (U32 val , U32 val) ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [U32](index) val) ?

    &nbsp;
- name: U32.divrem_unsafe()
  id: builtin-u32#divrem_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: U32 val)
    : (U32 val , U32 val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [U32](index) val)

    &nbsp;
- name: U32.eq()
  id: builtin-u32#eq
  summary: null
  belongs_to: U32
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.f32()
  id: builtin-u32#f32
  summary: null
  belongs_to: U32
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U32.f32_unsafe()
  id: builtin-u32#f32_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U32.f64()
  id: builtin-u32#f64
  summary: null
  belongs_to: U32
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U32.f64_unsafe()
  id: builtin-u32#f64_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U32.fld()
  id: builtin-u32#fld
  summary: null
  belongs_to: U32
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.fld_partial()
  id: builtin-u32#fld_partial
  summary: null
  belongs_to: U32
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.fld_unsafe()
  id: builtin-u32#fld_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.fldc()
  id: builtin-u32#fldc
  summary: null
  belongs_to: U32
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.from()
  id: builtin-u32#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: U32
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](index) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L147)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U32 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U32](index) val^\n\n&nbsp;"
- name: U32.ge()
  id: builtin-u32#ge
  summary: null
  belongs_to: U32
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.gt()
  id: builtin-u32#gt
  summary: null
  belongs_to: U32
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.hash()
  id: builtin-u32#hash
  summary: null
  belongs_to: U32
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U32.hash64()
  id: builtin-u32#hash64
  summary: null
  belongs_to: U32
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U32.i128()
  id: builtin-u32#i128
  summary: null
  belongs_to: U32
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U32.i128_unsafe()
  id: builtin-u32#i128_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U32.i16()
  id: builtin-u32#i16
  summary: null
  belongs_to: U32
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U32.i16_unsafe()
  id: builtin-u32#i16_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U32.i32()
  id: builtin-u32#i32
  summary: null
  belongs_to: U32
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U32.i32_unsafe()
  id: builtin-u32#i32_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U32.i64()
  id: builtin-u32#i64
  summary: null
  belongs_to: U32
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U32.i64_unsafe()
  id: builtin-u32#i64_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U32.i8()
  id: builtin-u32#i8
  summary: null
  belongs_to: U32
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U32.i8_unsafe()
  id: builtin-u32#i8_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U32.ilong()
  id: builtin-u32#ilong
  summary: null
  belongs_to: U32
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U32.ilong_unsafe()
  id: builtin-u32#ilong_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U32.isize()
  id: builtin-u32#isize
  summary: null
  belongs_to: U32
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U32.isize_unsafe()
  id: builtin-u32#isize_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U32.le()
  id: builtin-u32#le
  summary: null
  belongs_to: U32
  description: |-
    ### le

    ``` pony
    fun box le(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.lt()
  id: builtin-u32#lt
  summary: null
  belongs_to: U32
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.max()
  id: builtin-u32#max
  summary: null
  belongs_to: U32
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L182)

    ``` pony
    fun box max(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.max_value()
  id: builtin-u32#max_value
  summary: null
  belongs_to: U32
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L150)

    ``` pony
    new val max_value()
    : U32 val^
    ```

    #### Returns

    - [U32](index) val^

    ## Public Functions
- name: U32.min()
  id: builtin-u32#min
  summary: null
  belongs_to: U32
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L181)

    ``` pony
    fun box min(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.min_value()
  id: builtin-u32#min_value
  summary: null
  belongs_to: U32
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L149)

    ``` pony
    new val min_value()
    : U32 val^
    ```

    #### Returns

    - [U32](index) val^

    &nbsp;
- name: U32.mod()
  id: builtin-u32#mod
  summary: null
  belongs_to: U32
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.mod_partial()
  id: builtin-u32#mod_partial
  summary: null
  belongs_to: U32
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.mod_unsafe()
  id: builtin-u32#mod_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.modc()
  id: builtin-u32#modc
  summary: null
  belongs_to: U32
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.mul()
  id: builtin-u32#mul
  summary: null
  belongs_to: U32
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.mul_partial()
  id: builtin-u32#mul_partial
  summary: null
  belongs_to: U32
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L205)

    ``` pony
    fun box mul_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.mul_unsafe()
  id: builtin-u32#mul_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.mulc()
  id: builtin-u32#mulc
  summary: null
  belongs_to: U32
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L190)

    ``` pony
    fun box mulc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.ne()
  id: builtin-u32#ne
  summary: null
  belongs_to: U32
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: U32 val)
    : Bool val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U32.neg()
  id: builtin-u32#neg
  summary: null
  belongs_to: U32
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.neg_unsafe()
  id: builtin-u32#neg_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.next_pow2()
  id: builtin-u32#next_pow2
  summary: null
  belongs_to: U32
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L152)

    ``` pony
    fun box next_pow2()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.op_and()
  id: builtin-u32#op_and
  summary: null
  belongs_to: U32
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.op_not()
  id: builtin-u32#op_not
  summary: null
  belongs_to: U32
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.op_or()
  id: builtin-u32#op_or
  summary: null
  belongs_to: U32
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.op_xor()
  id: builtin-u32#op_xor
  summary: null
  belongs_to: U32
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.popcount()
  id: builtin-u32#popcount
  summary: null
  belongs_to: U32
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L159)

    ``` pony
    fun box popcount()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.rem()
  id: builtin-u32#rem
  summary: null
  belongs_to: U32
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.rem_partial()
  id: builtin-u32#rem_partial
  summary: null
  belongs_to: U32
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L211)

    ``` pony
    fun box rem_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.rem_unsafe()
  id: builtin-u32#rem_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.remc()
  id: builtin-u32#remc
  summary: null
  belongs_to: U32
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L196)

    ``` pony
    fun box remc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.rotl()
  id: builtin-u32#rotl
  summary: null
  belongs_to: U32
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.rotr()
  id: builtin-u32#rotr
  summary: null
  belongs_to: U32
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.shl()
  id: builtin-u32#shl
  summary: null
  belongs_to: U32
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.shl_unsafe()
  id: builtin-u32#shl_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.shr()
  id: builtin-u32#shr
  summary: null
  belongs_to: U32
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.shr_unsafe()
  id: builtin-u32#shr_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.string()
  id: builtin-u32#string
  summary: null
  belongs_to: U32
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: U32.sub()
  id: builtin-u32#sub
  summary: null
  belongs_to: U32
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.sub_partial()
  id: builtin-u32#sub_partial
  summary: null
  belongs_to: U32
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L202)

    ``` pony
    fun box sub_partial(
      y: U32 val)
    : U32 val ?
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val ?

    &nbsp;
- name: U32.sub_unsafe()
  id: builtin-u32#sub_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: U32 val)
    : U32 val
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.subc()
  id: builtin-u32#subc
  summary: null
  belongs_to: U32
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L187)

    ``` pony
    fun box subc(
      y: U32 val)
    : (U32 val , Bool val)
    ```

    #### Parameters

    - y: [U32](index) val

    #### Returns

    - ([U32](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U32.u128()
  id: builtin-u32#u128
  summary: null
  belongs_to: U32
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U32.u128_unsafe()
  id: builtin-u32#u128_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U32.u16()
  id: builtin-u32#u16
  summary: null
  belongs_to: U32
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U32.u16_unsafe()
  id: builtin-u32#u16_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U32.u32()
  id: builtin-u32#u32_1
  summary: null
  belongs_to: U32
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.u32_unsafe()
  id: builtin-u32#u32_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](index) val

    &nbsp;
- name: U32.u64()
  id: builtin-u32#u64
  summary: null
  belongs_to: U32
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U32.u64_unsafe()
  id: builtin-u32#u64_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U32.u8()
  id: builtin-u32#u8
  summary: null
  belongs_to: U32
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U32.u8_unsafe()
  id: builtin-u32#u8_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U32.ulong()
  id: builtin-u32#ulong
  summary: null
  belongs_to: U32
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U32.ulong_unsafe()
  id: builtin-u32#ulong_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U32.usize()
  id: builtin-u32#usize
  summary: null
  belongs_to: U32
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U32.usize_unsafe()
  id: builtin-u32#usize_unsafe
  summary: null
  belongs_to: U32
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U64
  id: builtin-u64
  summary: Unsafe operation
  description: "# U64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L217)\n\n``` pony\nprimitive val U64 is\n  UnsignedInteger[U64 val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[U64](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L218)\n\n``` pony\nnew val create(\n  value: U64 val)\n: U64 val^\n```\n\n#### Parameters\n\n- value: [U64](index) val\n\n#### Returns\n\n- [U64](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](index) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L219)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U64 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U64](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L221)\n\n``` pony\nnew val min_value()\n: U64 val^\n```\n\n#### Returns\n\n- [U64](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L222)\n\n``` pony\nnew val max_value()\n: U64 val^\n```\n\n#### Returns\n\n- [U64](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L224)\n\n``` pony\nfun box next_pow2()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L228)\n\n``` pony\nfun box abs()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L229)\n\n``` pony\nfun box bit_reverse()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L230)\n\n``` pony\nfun box bswap()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L231)\n\n``` pony\nfun box popcount()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L232)\n\n``` pony\nfun box clz()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L233)\n\n``` pony\nfun box ctz()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L235)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L242)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L249)\n\n``` pony\nfun box bitwidth()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L251)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L253)\n\n``` pony\nfun box min(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L254)\n\n``` pony\nfun box max(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L256)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L263)\n\n``` pony\nfun box addc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L266)\n\n``` pony\nfun box subc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L269)\n\n``` pony\nfun box mulc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L272)\n\n``` pony\nfun box divc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L275)\n\n``` pony\nfun box remc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L278)\n\n``` pony\nfun box add_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L281)\n\n``` pony\nfun box sub_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L284)\n\n``` pony\nfun box mul_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L287)\n\n``` pony\nfun box div_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L290)\n\n``` pony\nfun box rem_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L293)\n\n``` pony\nfun box divrem_partial(\n  y: U64 val)\n: (U64 val , U64 val) ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [U64](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: U64 val)\n: (U64 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: U64 val)\n: U64 val ?\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: U64 val)\n: (U64 val , U64 val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [U64](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: U64 val)\n: (U64 val , U64 val)\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- ([U64](index) val , [U64](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: U64 val)\n: U64 val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [U64](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: U64 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U64](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](index) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: U64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U64](https://stdlib.ponylang.io/builtin-U64)"
- name: U64.abs()
  id: builtin-u64#abs
  summary: null
  belongs_to: U64
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L228)

    ``` pony
    fun box abs()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.add()
  id: builtin-u64#add
  summary: null
  belongs_to: U64
  description: |-
    ### add

    ``` pony
    fun box add(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.add_partial()
  id: builtin-u64#add_partial
  summary: null
  belongs_to: U64
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L278)

    ``` pony
    fun box add_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.add_unsafe()
  id: builtin-u64#add_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.addc()
  id: builtin-u64#addc
  summary: null
  belongs_to: U64
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L263)

    ``` pony
    fun box addc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.bit_reverse()
  id: builtin-u64#bit_reverse
  summary: null
  belongs_to: U64
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L229)

    ``` pony
    fun box bit_reverse()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.bitwidth()
  id: builtin-u64#bitwidth
  summary: null
  belongs_to: U64
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L249)

    ``` pony
    fun box bitwidth()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.bswap()
  id: builtin-u64#bswap
  summary: null
  belongs_to: U64
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L230)

    ``` pony
    fun box bswap()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.bytewidth()
  id: builtin-u64#bytewidth
  summary: null
  belongs_to: U64
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L251)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U64.clz()
  id: builtin-u64#clz
  summary: null
  belongs_to: U64
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L232)

    ``` pony
    fun box clz()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.clz_unsafe()
  id: builtin-u64#clz_unsafe
  summary: Unsafe operation
  belongs_to: U64
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L235)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.compare()
  id: builtin-u64#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U64
  description: "### compare\n\n``` pony\nfun box compare(\n  that: U64 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U64](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U64](https://stdlib.ponylang.io/builtin-U64)"
- name: U64.create()
  id: builtin-u64#create
  summary: null
  belongs_to: U64
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L218)

    ``` pony
    new val create(
      value: U64 val)
    : U64 val^
    ```

    #### Parameters

    - value: [U64](index) val

    #### Returns

    - [U64](index) val^
- name: U64.ctz()
  id: builtin-u64#ctz
  summary: null
  belongs_to: U64
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L233)

    ``` pony
    fun box ctz()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.ctz_unsafe()
  id: builtin-u64#ctz_unsafe
  summary: Unsafe operation
  belongs_to: U64
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L242)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.div()
  id: builtin-u64#div
  summary: null
  belongs_to: U64
  description: |-
    ### div

    ``` pony
    fun box div(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.div_partial()
  id: builtin-u64#div_partial
  summary: null
  belongs_to: U64
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L287)

    ``` pony
    fun box div_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.div_unsafe()
  id: builtin-u64#div_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.divc()
  id: builtin-u64#divc
  summary: null
  belongs_to: U64
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L272)

    ``` pony
    fun box divc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.divrem()
  id: builtin-u64#divrem
  summary: null
  belongs_to: U64
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: U64 val)
    : (U64 val , U64 val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [U64](index) val)

    &nbsp;
- name: U64.divrem_partial()
  id: builtin-u64#divrem_partial
  summary: null
  belongs_to: U64
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L293)

    ``` pony
    fun box divrem_partial(
      y: U64 val)
    : (U64 val , U64 val) ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [U64](index) val) ?

    &nbsp;
- name: U64.divrem_unsafe()
  id: builtin-u64#divrem_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: U64 val)
    : (U64 val , U64 val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [U64](index) val)

    &nbsp;
- name: U64.eq()
  id: builtin-u64#eq
  summary: null
  belongs_to: U64
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.f32()
  id: builtin-u64#f32
  summary: null
  belongs_to: U64
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U64.f32_unsafe()
  id: builtin-u64#f32_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U64.f64()
  id: builtin-u64#f64
  summary: null
  belongs_to: U64
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U64.f64_unsafe()
  id: builtin-u64#f64_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U64.fld()
  id: builtin-u64#fld
  summary: null
  belongs_to: U64
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.fld_partial()
  id: builtin-u64#fld_partial
  summary: null
  belongs_to: U64
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.fld_unsafe()
  id: builtin-u64#fld_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.fldc()
  id: builtin-u64#fldc
  summary: null
  belongs_to: U64
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.from()
  id: builtin-u64#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: U64
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](index) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L219)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: U64 val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [U64](index) val^\n\n&nbsp;"
- name: U64.ge()
  id: builtin-u64#ge
  summary: null
  belongs_to: U64
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.gt()
  id: builtin-u64#gt
  summary: null
  belongs_to: U64
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.hash()
  id: builtin-u64#hash
  summary: null
  belongs_to: U64
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L256)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U64.hash64()
  id: builtin-u64#hash64
  summary: null
  belongs_to: U64
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.i128()
  id: builtin-u64#i128
  summary: null
  belongs_to: U64
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U64.i128_unsafe()
  id: builtin-u64#i128_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U64.i16()
  id: builtin-u64#i16
  summary: null
  belongs_to: U64
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U64.i16_unsafe()
  id: builtin-u64#i16_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U64.i32()
  id: builtin-u64#i32
  summary: null
  belongs_to: U64
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U64.i32_unsafe()
  id: builtin-u64#i32_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U64.i64()
  id: builtin-u64#i64
  summary: null
  belongs_to: U64
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U64.i64_unsafe()
  id: builtin-u64#i64_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U64.i8()
  id: builtin-u64#i8
  summary: null
  belongs_to: U64
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U64.i8_unsafe()
  id: builtin-u64#i8_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U64.ilong()
  id: builtin-u64#ilong
  summary: null
  belongs_to: U64
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U64.ilong_unsafe()
  id: builtin-u64#ilong_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U64.isize()
  id: builtin-u64#isize
  summary: null
  belongs_to: U64
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U64.isize_unsafe()
  id: builtin-u64#isize_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U64.le()
  id: builtin-u64#le
  summary: null
  belongs_to: U64
  description: |-
    ### le

    ``` pony
    fun box le(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.lt()
  id: builtin-u64#lt
  summary: null
  belongs_to: U64
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.max()
  id: builtin-u64#max
  summary: null
  belongs_to: U64
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L254)

    ``` pony
    fun box max(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.max_value()
  id: builtin-u64#max_value
  summary: null
  belongs_to: U64
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L222)

    ``` pony
    new val max_value()
    : U64 val^
    ```

    #### Returns

    - [U64](index) val^

    ## Public Functions
- name: U64.min()
  id: builtin-u64#min
  summary: null
  belongs_to: U64
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L253)

    ``` pony
    fun box min(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.min_value()
  id: builtin-u64#min_value
  summary: null
  belongs_to: U64
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L221)

    ``` pony
    new val min_value()
    : U64 val^
    ```

    #### Returns

    - [U64](index) val^

    &nbsp;
- name: U64.mod()
  id: builtin-u64#mod
  summary: null
  belongs_to: U64
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.mod_partial()
  id: builtin-u64#mod_partial
  summary: null
  belongs_to: U64
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.mod_unsafe()
  id: builtin-u64#mod_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.modc()
  id: builtin-u64#modc
  summary: null
  belongs_to: U64
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.mul()
  id: builtin-u64#mul
  summary: null
  belongs_to: U64
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.mul_partial()
  id: builtin-u64#mul_partial
  summary: null
  belongs_to: U64
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L284)

    ``` pony
    fun box mul_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.mul_unsafe()
  id: builtin-u64#mul_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.mulc()
  id: builtin-u64#mulc
  summary: null
  belongs_to: U64
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L269)

    ``` pony
    fun box mulc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.ne()
  id: builtin-u64#ne
  summary: null
  belongs_to: U64
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: U64 val)
    : Bool val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U64.neg()
  id: builtin-u64#neg
  summary: null
  belongs_to: U64
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.neg_unsafe()
  id: builtin-u64#neg_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.next_pow2()
  id: builtin-u64#next_pow2
  summary: null
  belongs_to: U64
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L224)

    ``` pony
    fun box next_pow2()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.op_and()
  id: builtin-u64#op_and
  summary: null
  belongs_to: U64
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.op_not()
  id: builtin-u64#op_not
  summary: null
  belongs_to: U64
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.op_or()
  id: builtin-u64#op_or
  summary: null
  belongs_to: U64
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.op_xor()
  id: builtin-u64#op_xor
  summary: null
  belongs_to: U64
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.popcount()
  id: builtin-u64#popcount
  summary: null
  belongs_to: U64
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L231)

    ``` pony
    fun box popcount()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.rem()
  id: builtin-u64#rem
  summary: null
  belongs_to: U64
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.rem_partial()
  id: builtin-u64#rem_partial
  summary: null
  belongs_to: U64
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L290)

    ``` pony
    fun box rem_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.rem_unsafe()
  id: builtin-u64#rem_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.remc()
  id: builtin-u64#remc
  summary: null
  belongs_to: U64
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L275)

    ``` pony
    fun box remc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.rotl()
  id: builtin-u64#rotl
  summary: null
  belongs_to: U64
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.rotr()
  id: builtin-u64#rotr
  summary: null
  belongs_to: U64
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.shl()
  id: builtin-u64#shl
  summary: null
  belongs_to: U64
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.shl_unsafe()
  id: builtin-u64#shl_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.shr()
  id: builtin-u64#shr
  summary: null
  belongs_to: U64
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.shr_unsafe()
  id: builtin-u64#shr_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.string()
  id: builtin-u64#string
  summary: null
  belongs_to: U64
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: U64.sub()
  id: builtin-u64#sub
  summary: null
  belongs_to: U64
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.sub_partial()
  id: builtin-u64#sub_partial
  summary: null
  belongs_to: U64
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L281)

    ``` pony
    fun box sub_partial(
      y: U64 val)
    : U64 val ?
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val ?

    &nbsp;
- name: U64.sub_unsafe()
  id: builtin-u64#sub_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: U64 val)
    : U64 val
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.subc()
  id: builtin-u64#subc
  summary: null
  belongs_to: U64
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L266)

    ``` pony
    fun box subc(
      y: U64 val)
    : (U64 val , Bool val)
    ```

    #### Parameters

    - y: [U64](index) val

    #### Returns

    - ([U64](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U64.u128()
  id: builtin-u64#u128
  summary: null
  belongs_to: U64
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U64.u128_unsafe()
  id: builtin-u64#u128_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U64.u16()
  id: builtin-u64#u16
  summary: null
  belongs_to: U64
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U64.u16_unsafe()
  id: builtin-u64#u16_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U64.u32()
  id: builtin-u64#u32
  summary: null
  belongs_to: U64
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U64.u32_unsafe()
  id: builtin-u64#u32_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U64.u64()
  id: builtin-u64#u64_1
  summary: null
  belongs_to: U64
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.u64_unsafe()
  id: builtin-u64#u64_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](index) val

    &nbsp;
- name: U64.u8()
  id: builtin-u64#u8
  summary: null
  belongs_to: U64
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U64.u8_unsafe()
  id: builtin-u64#u8_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: U64.ulong()
  id: builtin-u64#ulong
  summary: null
  belongs_to: U64
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U64.ulong_unsafe()
  id: builtin-u64#ulong_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U64.usize()
  id: builtin-u64#usize
  summary: null
  belongs_to: U64
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U64.usize_unsafe()
  id: builtin-u64#usize_unsafe
  summary: null
  belongs_to: U64
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U64Argument
  id: options-u64argument
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# U64Argument\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L71)\n\n``` pony\nprimitive val U64Argument\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L71)\n\n``` pony\nnew val create()\n: U64Argument val^\n```\n\n#### Returns\n\n- [U64Argument](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L72)\n\n``` pony\nfun box eq(\n  that: U64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [U64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L72)\n\n``` pony\nfun box ne(\n  that: U64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [U64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-U64Argument](https://stdlib.ponylang.io/options-U64Argument)"
- name: U64Argument.create()
  id: options-u64argument#create
  summary: null
  belongs_to: U64Argument
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L71)

    ``` pony
    new val create()
    : U64Argument val^
    ```

    #### Returns

    - [U64Argument](index) val^

    ## Public Functions
- name: U64Argument.eq()
  id: options-u64argument#eq
  summary: null
  belongs_to: U64Argument
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L72)

    ``` pony
    fun box eq(
      that: U64Argument val)
    : Bool val
    ```

    #### Parameters

    - that: [U64Argument](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: U64Argument.ne()
  id: options-u64argument#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U64Argument
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L72)\n\n``` pony\nfun box ne(\n  that: U64Argument val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [U64Argument](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-U64Argument](https://stdlib.ponylang.io/options-U64Argument)"
- name: U8
  id: builtin-u8
  summary: Unsafe operation
  description: "# U8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L1)\n\n``` pony\nprimitive val U8 is\n  UnsignedInteger[U8 val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[U8](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L2)\n\n``` pony\nnew val create(\n  value: U8 val)\n: U8 val^\n```\n\n#### Parameters\n\n- value: [U8](index) val\n\n#### Returns\n\n- [U8](index) val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](index) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L3)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: U8 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [U8](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L5)\n\n``` pony\nnew val min_value()\n: U8 val^\n```\n\n#### Returns\n\n- [U8](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L6)\n\n``` pony\nnew val max_value()\n: U8 val^\n```\n\n#### Returns\n\n- [U8](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L8)\n\n``` pony\nfun box next_pow2()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L12)\n\n``` pony\nfun box abs()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L13)\n\n``` pony\nfun box bit_reverse()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L14)\n\n``` pony\nfun box bswap()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L15)\n\n``` pony\nfun box popcount()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L16)\n\n``` pony\nfun box clz()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L17)\n\n``` pony\nfun box ctz()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L19)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L26)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L33)\n\n``` pony\nfun box bitwidth()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L35)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L37)\n\n``` pony\nfun box min(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L38)\n\n``` pony\nfun box max(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L40)\n\n``` pony\nfun box addc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L43)\n\n``` pony\nfun box subc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L46)\n\n``` pony\nfun box mulc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L49)\n\n``` pony\nfun box divc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L52)\n\n``` pony\nfun box remc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L55)\n\n``` pony\nfun box add_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L58)\n\n``` pony\nfun box sub_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L61)\n\n``` pony\nfun box mul_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L64)\n\n``` pony\nfun box div_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L67)\n\n``` pony\nfun box rem_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L70)\n\n``` pony\nfun box divrem_partial(\n  y: U8 val)\n: (U8 val , U8 val) ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [U8](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: U8 val)\n: (U8 val , Bool val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: U8 val)\n: U8 val ?\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: U8 val)\n: (U8 val , U8 val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [U8](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: U8 val)\n: (U8 val , U8 val)\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- ([U8](index) val , [U8](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: U8 val)\n: U8 val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [U8](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: U8 val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [U8](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](index) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: U8 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U8](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U8](https://stdlib.ponylang.io/builtin-U8)"
- name: U8.abs()
  id: builtin-u8#abs
  summary: null
  belongs_to: U8
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L12)

    ``` pony
    fun box abs()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.add()
  id: builtin-u8#add
  summary: null
  belongs_to: U8
  description: |-
    ### add

    ``` pony
    fun box add(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.add_partial()
  id: builtin-u8#add_partial
  summary: null
  belongs_to: U8
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L55)

    ``` pony
    fun box add_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.add_unsafe()
  id: builtin-u8#add_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.addc()
  id: builtin-u8#addc
  summary: null
  belongs_to: U8
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L40)

    ``` pony
    fun box addc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.bit_reverse()
  id: builtin-u8#bit_reverse
  summary: null
  belongs_to: U8
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L13)

    ``` pony
    fun box bit_reverse()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.bitwidth()
  id: builtin-u8#bitwidth
  summary: null
  belongs_to: U8
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L33)

    ``` pony
    fun box bitwidth()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.bswap()
  id: builtin-u8#bswap
  summary: null
  belongs_to: U8
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L14)

    ``` pony
    fun box bswap()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.bytewidth()
  id: builtin-u8#bytewidth
  summary: null
  belongs_to: U8
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L35)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U8.clz()
  id: builtin-u8#clz
  summary: null
  belongs_to: U8
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L16)

    ``` pony
    fun box clz()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.clz_unsafe()
  id: builtin-u8#clz_unsafe
  summary: Unsafe operation
  belongs_to: U8
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L19)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.compare()
  id: builtin-u8#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: U8
  description: "### compare\n\n``` pony\nfun box compare(\n  that: U8 val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [U8](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-U8](https://stdlib.ponylang.io/builtin-U8)"
- name: U8.create()
  id: builtin-u8#create
  summary: null
  belongs_to: U8
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L2)

    ``` pony
    new val create(
      value: U8 val)
    : U8 val^
    ```

    #### Parameters

    - value: [U8](index) val

    #### Returns

    - [U8](index) val^
- name: U8.ctz()
  id: builtin-u8#ctz
  summary: null
  belongs_to: U8
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L17)

    ``` pony
    fun box ctz()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.ctz_unsafe()
  id: builtin-u8#ctz_unsafe
  summary: Unsafe operation
  belongs_to: U8
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L26)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.div()
  id: builtin-u8#div
  summary: null
  belongs_to: U8
  description: |-
    ### div

    ``` pony
    fun box div(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.div_partial()
  id: builtin-u8#div_partial
  summary: null
  belongs_to: U8
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L64)

    ``` pony
    fun box div_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.div_unsafe()
  id: builtin-u8#div_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.divc()
  id: builtin-u8#divc
  summary: null
  belongs_to: U8
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L49)

    ``` pony
    fun box divc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.divrem()
  id: builtin-u8#divrem
  summary: null
  belongs_to: U8
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: U8 val)
    : (U8 val , U8 val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [U8](index) val)

    &nbsp;
- name: U8.divrem_partial()
  id: builtin-u8#divrem_partial
  summary: null
  belongs_to: U8
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L70)

    ``` pony
    fun box divrem_partial(
      y: U8 val)
    : (U8 val , U8 val) ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [U8](index) val) ?

    &nbsp;
- name: U8.divrem_unsafe()
  id: builtin-u8#divrem_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: U8 val)
    : (U8 val , U8 val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [U8](index) val)

    &nbsp;
- name: U8.eq()
  id: builtin-u8#eq
  summary: null
  belongs_to: U8
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.f32()
  id: builtin-u8#f32
  summary: null
  belongs_to: U8
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U8.f32_unsafe()
  id: builtin-u8#f32_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: U8.f64()
  id: builtin-u8#f64
  summary: null
  belongs_to: U8
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U8.f64_unsafe()
  id: builtin-u8#f64_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: U8.fld()
  id: builtin-u8#fld
  summary: null
  belongs_to: U8
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.fld_partial()
  id: builtin-u8#fld_partial
  summary: null
  belongs_to: U8
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.fld_unsafe()
  id: builtin-u8#fld_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.fldc()
  id: builtin-u8#fldc
  summary: null
  belongs_to: U8
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.from()
  id: builtin-u8#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: U8
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](index) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L3)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: U8 val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [U8](index) val^\n\n&nbsp;"
- name: U8.ge()
  id: builtin-u8#ge
  summary: null
  belongs_to: U8
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.gt()
  id: builtin-u8#gt
  summary: null
  belongs_to: U8
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.hash()
  id: builtin-u8#hash
  summary: null
  belongs_to: U8
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U8.hash64()
  id: builtin-u8#hash64
  summary: null
  belongs_to: U8
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U8.i128()
  id: builtin-u8#i128
  summary: null
  belongs_to: U8
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U8.i128_unsafe()
  id: builtin-u8#i128_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: U8.i16()
  id: builtin-u8#i16
  summary: null
  belongs_to: U8
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U8.i16_unsafe()
  id: builtin-u8#i16_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: U8.i32()
  id: builtin-u8#i32
  summary: null
  belongs_to: U8
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U8.i32_unsafe()
  id: builtin-u8#i32_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: U8.i64()
  id: builtin-u8#i64
  summary: null
  belongs_to: U8
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U8.i64_unsafe()
  id: builtin-u8#i64_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: U8.i8()
  id: builtin-u8#i8
  summary: null
  belongs_to: U8
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U8.i8_unsafe()
  id: builtin-u8#i8_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: U8.ilong()
  id: builtin-u8#ilong
  summary: null
  belongs_to: U8
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U8.ilong_unsafe()
  id: builtin-u8#ilong_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: U8.isize()
  id: builtin-u8#isize
  summary: null
  belongs_to: U8
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U8.isize_unsafe()
  id: builtin-u8#isize_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: U8.le()
  id: builtin-u8#le
  summary: null
  belongs_to: U8
  description: |-
    ### le

    ``` pony
    fun box le(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.lt()
  id: builtin-u8#lt
  summary: null
  belongs_to: U8
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.max()
  id: builtin-u8#max
  summary: null
  belongs_to: U8
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L38)

    ``` pony
    fun box max(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.max_value()
  id: builtin-u8#max_value
  summary: null
  belongs_to: U8
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L6)

    ``` pony
    new val max_value()
    : U8 val^
    ```

    #### Returns

    - [U8](index) val^

    ## Public Functions
- name: U8.min()
  id: builtin-u8#min
  summary: null
  belongs_to: U8
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L37)

    ``` pony
    fun box min(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.min_value()
  id: builtin-u8#min_value
  summary: null
  belongs_to: U8
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L5)

    ``` pony
    new val min_value()
    : U8 val^
    ```

    #### Returns

    - [U8](index) val^

    &nbsp;
- name: U8.mod()
  id: builtin-u8#mod
  summary: null
  belongs_to: U8
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.mod_partial()
  id: builtin-u8#mod_partial
  summary: null
  belongs_to: U8
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.mod_unsafe()
  id: builtin-u8#mod_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.modc()
  id: builtin-u8#modc
  summary: null
  belongs_to: U8
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.mul()
  id: builtin-u8#mul
  summary: null
  belongs_to: U8
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.mul_partial()
  id: builtin-u8#mul_partial
  summary: null
  belongs_to: U8
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L61)

    ``` pony
    fun box mul_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.mul_unsafe()
  id: builtin-u8#mul_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.mulc()
  id: builtin-u8#mulc
  summary: null
  belongs_to: U8
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L46)

    ``` pony
    fun box mulc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.ne()
  id: builtin-u8#ne
  summary: null
  belongs_to: U8
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: U8 val)
    : Bool val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: U8.neg()
  id: builtin-u8#neg
  summary: null
  belongs_to: U8
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.neg_unsafe()
  id: builtin-u8#neg_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.next_pow2()
  id: builtin-u8#next_pow2
  summary: null
  belongs_to: U8
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L8)

    ``` pony
    fun box next_pow2()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.op_and()
  id: builtin-u8#op_and
  summary: null
  belongs_to: U8
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.op_not()
  id: builtin-u8#op_not
  summary: null
  belongs_to: U8
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.op_or()
  id: builtin-u8#op_or
  summary: null
  belongs_to: U8
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.op_xor()
  id: builtin-u8#op_xor
  summary: null
  belongs_to: U8
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.popcount()
  id: builtin-u8#popcount
  summary: null
  belongs_to: U8
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L15)

    ``` pony
    fun box popcount()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.rem()
  id: builtin-u8#rem
  summary: null
  belongs_to: U8
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.rem_partial()
  id: builtin-u8#rem_partial
  summary: null
  belongs_to: U8
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L67)

    ``` pony
    fun box rem_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.rem_unsafe()
  id: builtin-u8#rem_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.remc()
  id: builtin-u8#remc
  summary: null
  belongs_to: U8
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L52)

    ``` pony
    fun box remc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.rotl()
  id: builtin-u8#rotl
  summary: null
  belongs_to: U8
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.rotr()
  id: builtin-u8#rotr
  summary: null
  belongs_to: U8
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.shl()
  id: builtin-u8#shl
  summary: null
  belongs_to: U8
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.shl_unsafe()
  id: builtin-u8#shl_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.shr()
  id: builtin-u8#shr
  summary: null
  belongs_to: U8
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.shr_unsafe()
  id: builtin-u8#shr_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.string()
  id: builtin-u8#string
  summary: null
  belongs_to: U8
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: U8.sub()
  id: builtin-u8#sub
  summary: null
  belongs_to: U8
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.sub_partial()
  id: builtin-u8#sub_partial
  summary: null
  belongs_to: U8
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L58)

    ``` pony
    fun box sub_partial(
      y: U8 val)
    : U8 val ?
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val ?

    &nbsp;
- name: U8.sub_unsafe()
  id: builtin-u8#sub_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: U8 val)
    : U8 val
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.subc()
  id: builtin-u8#subc
  summary: null
  belongs_to: U8
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L43)

    ``` pony
    fun box subc(
      y: U8 val)
    : (U8 val , Bool val)
    ```

    #### Parameters

    - y: [U8](index) val

    #### Returns

    - ([U8](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: U8.u128()
  id: builtin-u8#u128
  summary: null
  belongs_to: U8
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U8.u128_unsafe()
  id: builtin-u8#u128_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: U8.u16()
  id: builtin-u8#u16
  summary: null
  belongs_to: U8
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U8.u16_unsafe()
  id: builtin-u8#u16_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: U8.u32()
  id: builtin-u8#u32
  summary: null
  belongs_to: U8
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U8.u32_unsafe()
  id: builtin-u8#u32_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: U8.u64()
  id: builtin-u8#u64
  summary: null
  belongs_to: U8
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U8.u64_unsafe()
  id: builtin-u8#u64_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: U8.u8()
  id: builtin-u8#u8_1
  summary: null
  belongs_to: U8
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.u8_unsafe()
  id: builtin-u8#u8_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](index) val

    &nbsp;
- name: U8.ulong()
  id: builtin-u8#ulong
  summary: null
  belongs_to: U8
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U8.ulong_unsafe()
  id: builtin-u8#ulong_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: U8.usize()
  id: builtin-u8#usize
  summary: null
  belongs_to: U8
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: U8.usize_unsafe()
  id: builtin-u8#usize_unsafe
  summary: null
  belongs_to: U8
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: UDPAuth
  id: net-udpauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# UDPAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L9)\n\n``` pony\nprimitive val UDPAuth\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L10)\n\n``` pony\nnew val create(\n  from: (AmbientAuth val | NetAuth val))\n: UDPAuth val^\n```\n\n#### Parameters\n\n- from: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val)\n\n#### Returns\n\n- [UDPAuth](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L10)\n\n``` pony\nfun box eq(\n  that: UDPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UDPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L10)\n\n``` pony\nfun box ne(\n  that: UDPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UDPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPAuth](https://stdlib.ponylang.io/net-UDPAuth)"
- name: UDPAuth.create()
  id: net-udpauth#create
  summary: null
  belongs_to: UDPAuth
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L10)

    ``` pony
    new val create(
      from: (AmbientAuth val | NetAuth val))
    : UDPAuth val^
    ```

    #### Parameters

    - from: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val)

    #### Returns

    - [UDPAuth](index) val^

    ## Public Functions
- name: UDPAuth.eq()
  id: net-udpauth#eq
  summary: null
  belongs_to: UDPAuth
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/net/auth/#L10)

    ``` pony
    fun box eq(
      that: UDPAuth val)
    : Bool val
    ```

    #### Parameters

    - that: [UDPAuth](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: UDPAuth.ne()
  id: net-udpauth#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: UDPAuth
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/auth/#L10)\n\n``` pony\nfun box ne(\n  that: UDPAuth val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UDPAuth](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPAuth](https://stdlib.ponylang.io/net-UDPAuth)"
- name: UDPNotify
  id: net-udpnotify
  summary: Notifications for UDP connections
  description: "# UDPNotify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L1)\n\nNotifications for UDP connections.\n\nFor an example of using this class please see the documentatoin for the `UDPSocket` actor.\n\n``` pony\ninterface ref UDPNotify\n```\n\n## Public Functions\n\n### listening\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L8)\n\nCalled when the socket has been bound to an address.\n\n``` pony\nfun ref listening(\n  sock: UDPSocket ref)\n: None val\n```\n\n#### Parameters\n\n- sock: [UDPSocket](net-udpsocket) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### not_listening\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L14)\n\nCalled if it wasn't possible to bind the socket to an address.\n\nIt is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:\n\n``` pony\nfun ref not_listening(sock: UDPSocket ref) =>\n  None\n```\n\n``` pony\nfun ref not_listening(\n  sock: UDPSocket ref)\n: None val\n```\n\n#### Parameters\n\n- sock: [UDPSocket](net-udpsocket) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n### received\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L27)\n\nCalled when new data is received on the socket.\n\n``` pony\nfun ref received(\n  sock: UDPSocket ref,\n  data: Array[U8 val] iso,\n  from: NetAddress val)\n: None val\n```\n\n#### Parameters\n\n- sock: [UDPSocket](net-udpsocket) ref\n- data: [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso\n- from: [NetAddress](net-netaddress) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L37)\n\nCalled when the socket is closed.\n\n``` pony\nfun ref closed(\n  sock: UDPSocket ref)\n: None val\n```\n\n#### Parameters\n\n- sock: [UDPSocket](net-udpsocket) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPNotify](https://stdlib.ponylang.io/net-UDPNotify)"
- name: UDPNotify.closed()
  id: net-udpnotify#closed
  summary: Called when the socket is closed
  belongs_to: UDPNotify
  description: "### closed\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_notify/#L37)\n\nCalled when the socket is closed.\n\n``` pony\nfun ref closed(\n  sock: UDPSocket ref)\n: None val\n```\n\n#### Parameters\n\n- sock: [UDPSocket](net-udpsocket) ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPNotify](https://stdlib.ponylang.io/net-UDPNotify)"
- name: UDPNotify.listening()
  id: net-udpnotify#listening
  summary: Called when the socket has been bound to an address
  belongs_to: UDPNotify
  description: |-
    ### listening

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_notify/#L8)

    Called when the socket has been bound to an address.

    ``` pony
    fun ref listening(
      sock: UDPSocket ref)
    : None val
    ```

    #### Parameters

    - sock: [UDPSocket](net-udpsocket) ref

    #### Returns

    - [None](builtin-none) val
- name: UDPNotify.not_listening()
  id: net-udpnotify#not_listening
  summary: Called if it wasn't possible to bind the socket to an address
  belongs_to: UDPNotify
  description: |-
    ### not_listening

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_notify/#L14)

    Called if it wasn't possible to bind the socket to an address.

    It is expected to implement proper error handling. You need to opt in to ignoring errors, which can be implemented like this:

    ``` pony
    fun ref not_listening(sock: UDPSocket ref) =>
      None
    ```

    ``` pony
    fun ref not_listening(
      sock: UDPSocket ref)
    : None val
    ```

    #### Parameters

    - sock: [UDPSocket](net-udpsocket) ref

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: UDPNotify.received()
  id: net-udpnotify#received
  summary: Called when new data is received on the socket
  belongs_to: UDPNotify
  description: |-
    ### received

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_notify/#L27)

    Called when new data is received on the socket.

    ``` pony
    fun ref received(
      sock: UDPSocket ref,
      data: Array[U8 val] iso,
      from: NetAddress val)
    : None val
    ```

    #### Parameters

    - sock: [UDPSocket](net-udpsocket) ref
    - data: [Array](builtin-array)\[[U8](builtin-u8) val\] iso
    - from: [NetAddress](net-netaddress) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: UDPSocket
  id: net-udpsocket
  summary: Creates a UDP socket that can be used for sending and receiving UDP messages
  description: "# UDPSocket\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L5)\n\nCreates a UDP socket that can be used for sending and receiving UDP messages.\n\nThe following examples create: \\* an echo server that listens for connections and returns whatever message it receives \\* a client that connects to the server, sends a message, and prints the message it receives in response\n\nThe server is implemented like this:\n\n``` pony\nuse \"net\"\n\nclass MyUDPNotify is UDPNotify\n  fun ref received(\n    sock: UDPSocket ref,\n    data: Array[U8] iso,\n    from: NetAddress)\n  =>\n    sock.write(consume data, from)\n\n  fun ref not_listening(sock: UDPSocket ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      UDPSocket(env.root as AmbientAuth,\n        MyUDPNotify, \"\", \"8989\")\n    end\n```\n\nThe client is implemented like this:\n\n``` pony\nuse \"net\"\n\nclass MyUDPNotify is UDPNotify\n  let _out: OutStream\n  let _destination: NetAddress\n\n  new create(\n    out: OutStream,\n    destination: NetAddress)\n  =>\n    _out = out\n    _destination = destination\n\n  fun ref listening(sock: UDPSocket ref) =>\n    sock.write(\"hello world\", _destination)\n\n  fun ref received(\n    sock: UDPSocket ref,\n    data: Array[U8] iso,\n    from: NetAddress)\n  =>\n    _out.print(\"GOT:\" + String.from_array(consume data))\n    sock.dispose()\n\n  fun ref not_listening(sock: UDPSocket ref) =>\n    None\n\nactor Main\n  new create(env: Env) =>\n    try\n      let destination =\n        DNS.ip4(env.root as AmbientAuth, \"localhost\", \"8989\")(0)?\n      UDPSocket(env.root as AmbientAuth,\n        recover MyUDPNotify(env.out, consume destination) end)\n    end\n```\n\n``` pony\nactor tag UDPSocket\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L89)\n\nListens for both IPv4 and IPv6 datagrams.\n\n``` pony\nnew tag create(\n  auth: (AmbientAuth val | NetAuth val | UDPAuth val),\n  notify: UDPNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  size: USize val = 1024)\n: UDPSocket tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [UDPAuth](net-udpauth) val)\n- notify: [UDPNotify](net-udpnotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- size: [USize](builtin-usize) val = 1024\n\n#### Returns\n\n- [UDPSocket](index) tag^\n\n### ip4\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L110)\n\nListens for IPv4 datagrams.\n\n``` pony\nnew tag ip4(\n  auth: (AmbientAuth val | NetAuth val | UDPAuth val),\n  notify: UDPNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  size: USize val = 1024)\n: UDPSocket tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [UDPAuth](net-udpauth) val)\n- notify: [UDPNotify](net-udpnotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- size: [USize](builtin-usize) val = 1024\n\n#### Returns\n\n- [UDPSocket](index) tag^\n\n### ip6\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L131)\n\nListens for IPv6 datagrams.\n\n``` pony\nnew tag ip6(\n  auth: (AmbientAuth val | NetAuth val | UDPAuth val),\n  notify: UDPNotify iso,\n  host: String val = \"\",\n  service: String val = \"0\",\n  size: USize val = 1024)\n: UDPSocket tag^\n```\n\n#### Parameters\n\n- auth: ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [UDPAuth](net-udpauth) val)\n- notify: [UDPNotify](net-udpnotify) iso\n- host: [String](builtin-string) val = \"\"\n- service: [String](builtin-string) val = \"0\"\n- size: [USize](builtin-usize) val = 1024\n\n#### Returns\n\n- [UDPSocket](index) tag^\n\n## Public Behaviours\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L152)\n\nWrite a single sequence of bytes.\n\n``` pony\nbe write(\n  data: (String val | Array[U8 val] val),\n  to: NetAddress val)\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n- to: [NetAddress](net-netaddress) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L158)\n\nWrite a sequence of sequences of bytes.\n\n``` pony\nbe writev(\n  data: ByteSeqIter val,\n  to: NetAddress val)\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n- to: [NetAddress](net-netaddress) val\n\n### set_notify\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L166)\n\nChange the notifier.\n\n``` pony\nbe set_notify(\n  notify: UDPNotify iso)\n```\n\n#### Parameters\n\n- notify: [UDPNotify](net-udpnotify) iso\n\n### set_broadcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L172)\n\nEnable or disable broadcasting from this socket.\n\n``` pony\nbe set_broadcast(\n  state: Bool val)\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val\n\n### set_multicast_interface\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L184)\n\nBy default, the OS will choose which address is used to send packets bound for multicast addresses. This can be used to force a specific interface. To revert to allowing the OS to choose, call with an empty string.\n\n``` pony\nbe set_multicast_interface(\n  from: String val = \"\")\n```\n\n#### Parameters\n\n- from: [String](builtin-string) val = \"\"\n\n### set_multicast_loopback\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L194)\n\nBy default, packets sent to a multicast address will be received by the sending system if it has subscribed to that address. Disabling loopback prevents this.\n\n``` pony\nbe set_multicast_loopback(\n  loopback: Bool val)\n```\n\n#### Parameters\n\n- loopback: [Bool](builtin-bool) val\n\n### set_multicast_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L204)\n\nSet the TTL for multicast sends. Defaults to 1.\n\n``` pony\nbe set_multicast_ttl(\n  ttl: U8 val)\n```\n\n#### Parameters\n\n- ttl: [U8](builtin-u8) val\n\n### multicast_join\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L212)\n\nAdd a multicast group. This can be limited to packets arriving on a specific interface.\n\n``` pony\nbe multicast_join(\n  group: String val,\n  to: String val = \"\")\n```\n\n#### Parameters\n\n- group: [String](builtin-string) val\n- to: [String](builtin-string) val = \"\"\n\n### multicast_leave\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L221)\n\nDrop a multicast group. This can be limited to packets arriving on a specific interface. No attempt is made to check that this socket has previously added this group.\n\n``` pony\nbe multicast_leave(\n  group: String val,\n  to: String val = \"\")\n```\n\n#### Parameters\n\n- group: [String](builtin-string) val\n- to: [String](builtin-string) val = \"\"\n\n### dispose\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L231)\n\nStop listening.\n\n``` pony\nbe dispose()\n```\n\n## Public Functions\n\n### local_address\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L239)\n\nReturn the bound IP address.\n\n``` pony\nfun box local_address()\n: NetAddress val\n```\n\n#### Returns\n\n- [NetAddress](net-netaddress) val\n\n### getsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L410)\n\nGeneral wrapper for UDP sockets to the `getsockopt(2)` system call.\n\nThe caller must provide an array that is pre-allocated to be at least as large as the largest data structure that the kernel may return for the requested option.\n\nIn case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. An `Array[U8]` of data returned by the system call's `void *` 4th argument. Its size is specified by the kernel via the system call's `sockopt_len_t *` 5th argument.\n\nIn case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.\n\nUsage example:\n\n``` pony\n// listening() is a callback function for class UDPNotify\nfun ref listening(sock: UDPSocket ref) =>\n  match sock.getsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), 4)\n    | (0, let gbytes: Array[U8] iso) =>\n      try\n        let br = Reader.create().>append(consume gbytes)\n        ifdef littleendian then\n          let buffer_size = br.u32_le()?\n        else\n          let buffer_size = br.u32_be()?\n        end\n      end\n    | (let errno: U32, _) =>\n      // System call failed\n  end\n```\n\n``` pony\nfun ref getsockopt(\n  level: I32 val,\n  option_name: I32 val,\n  option_max_size: USize val = 4)\n: (U32 val , Array[U8 val] iso^)\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option_max_size: [USize](builtin-usize) val = 4\n\n#### Returns\n\n- ([U32](builtin-u32) val , [Array](builtin-array)\\[[U8](builtin-u8) val\\] iso^)\n\n### getsockopt_u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L450)\n\nWrapper for UDP sockets to the `getsockopt(2)` system call where the kernel's returned option value is a C `uint32_t` type / Pony type `U32`.\n\nIn case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. The `*option_value` returned by the kernel converted to a Pony `U32`.\n\nIn case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.\n\n``` pony\nfun ref getsockopt_u32(\n  level: I32 val,\n  option_name: I32 val)\n: (U32 val , U32 val)\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### setsockopt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L466)\n\nGeneral wrapper for UDP sockets to the `setsockopt(2)` system call.\n\nThe caller is responsible for the correct size and byte contents of the `option` array for the requested `level` and `option_name`, including using the appropriate CPU endian byte order.\n\nThis function returns `0` on success, else the value of `errno` on failure.\n\nUsage example:\n\n``` pony\n// listening() is a callback function for class UDPNotify\nfun ref listening(sock: UDPSocket ref) =>\n  let sb = Writer\n\n  sb.u32_le(7744)             // Our desired socket buffer size\n  let sbytes = Array[U8]\n  for bs in sb.done().values() do\n    sbytes.append(bs)\n  end\n  match sock.setsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), sbytes)\n    | 0 =>\n      // System call was successful\n    | let errno: U32 =>\n      // System call failed\n  end\n```\n\n``` pony\nfun ref setsockopt(\n  level: I32 val,\n  option_name: I32 val,\n  option: Array[U8 val] ref)\n: U32 val\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option: [Array](builtin-array)\\[[U8](builtin-u8) val\\] ref\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### setsockopt_u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L499)\n\nWrapper for UDP sockets to the `setsockopt(2)` system call where the kernel expects an option value of a C `uint32_t` type / Pony type `U32`.\n\nThis function returns `0` on success, else the value of `errno` on failure.\n\n``` pony\nfun ref setsockopt_u32(\n  level: I32 val,\n  option_name: I32 val,\n  option: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- level: [I32](builtin-i32) val\n- option_name: [I32](builtin-i32) val\n- option: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### get_so_error\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L511)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_ERROR, ...)`\n\n``` pony\nfun ref get_so_error()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### get_so_rcvbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L517)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`\n\n``` pony\nfun ref get_so_rcvbuf()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### get_so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L523)\n\nWrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`\n\n``` pony\nfun ref get_so_sndbuf()\n: (U32 val , U32 val)\n```\n\n#### Returns\n\n- ([U32](builtin-u32) val , [U32](builtin-u32) val)\n\n### set_ip_multicast_loop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L530)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, IP_MULTICAST_LOOP, ...)`\n\n``` pony\nfun ref set_ip_multicast_loop(\n  loopback: Bool val)\n: U32 val\n```\n\n#### Parameters\n\n- loopback: [Bool](builtin-bool) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_ip_multicast_ttl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L538)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, IP_MULTICAST_TTL, ...)`\n\n``` pony\nfun ref set_ip_multicast_ttl(\n  ttl: U8 val)\n: U32 val\n```\n\n#### Parameters\n\n- ttl: [U8](builtin-u8) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_so_broadcast\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L545)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_BROADCAST, ...)`\n\n``` pony\nfun ref set_so_broadcast(\n  state: Bool val)\n: U32 val\n```\n\n#### Parameters\n\n- state: [Bool](builtin-bool) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_so_rcvbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L553)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`\n\n``` pony\nfun ref set_so_rcvbuf(\n  bufsize: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- bufsize: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### set_so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L559)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`\n\n``` pony\nfun ref set_so_sndbuf(\n  bufsize: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- bufsize: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPSocket](https://stdlib.ponylang.io/net-UDPSocket)"
- name: UDPSocket.create()
  id: net-udpsocket#create
  summary: Listens for both IPv4 and IPv6 datagrams
  belongs_to: UDPSocket
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L89)

    Listens for both IPv4 and IPv6 datagrams.

    ``` pony
    new tag create(
      auth: (AmbientAuth val | NetAuth val | UDPAuth val),
      notify: UDPNotify iso,
      host: String val = "",
      service: String val = "0",
      size: USize val = 1024)
    : UDPSocket tag^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [UDPAuth](net-udpauth) val)
    - notify: [UDPNotify](net-udpnotify) iso
    - host: [String](builtin-string) val = ""
    - service: [String](builtin-string) val = "0"
    - size: [USize](builtin-usize) val = 1024

    #### Returns

    - [UDPSocket](index) tag^
- name: UDPSocket.dispose()
  id: net-udpsocket#dispose
  summary: Stop listening
  belongs_to: UDPSocket
  description: |-
    ### dispose

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L231)

    Stop listening.

    ``` pony
    be dispose()
    ```

    ## Public Functions
- name: UDPSocket.get_so_error()
  id: net-udpsocket#get_so_error
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### get_so_error

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L511)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_ERROR, ...)`

    ``` pony
    fun ref get_so_error()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: UDPSocket.get_so_rcvbuf()
  id: net-udpsocket#get_so_rcvbuf
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### get_so_rcvbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L517)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`

    ``` pony
    fun ref get_so_rcvbuf()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: UDPSocket.get_so_sndbuf()
  id: net-udpsocket#get_so_sndbuf
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### get_so_sndbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L523)

    Wrapper for the FFI call `getsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`

    ``` pony
    fun ref get_so_sndbuf()
    : (U32 val , U32 val)
    ```

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: UDPSocket.getsockopt()
  id: net-udpsocket#getsockopt
  summary: General wrapper for UDP sockets to the getsockopt(2) system call
  belongs_to: UDPSocket
  description: |-
    ### getsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L410)

    General wrapper for UDP sockets to the `getsockopt(2)` system call.

    The caller must provide an array that is pre-allocated to be at least as large as the largest data structure that the kernel may return for the requested option.

    In case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. An `Array[U8]` of data returned by the system call's `void *` 4th argument. Its size is specified by the kernel via the system call's `sockopt_len_t *` 5th argument.

    In case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.

    Usage example:

    ``` pony
    // listening() is a callback function for class UDPNotify
    fun ref listening(sock: UDPSocket ref) =>
      match sock.getsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), 4)
        | (0, let gbytes: Array[U8] iso) =>
          try
            let br = Reader.create().>append(consume gbytes)
            ifdef littleendian then
              let buffer_size = br.u32_le()?
            else
              let buffer_size = br.u32_be()?
            end
          end
        | (let errno: U32, _) =>
          // System call failed
      end
    ```

    ``` pony
    fun ref getsockopt(
      level: I32 val,
      option_name: I32 val,
      option_max_size: USize val = 4)
    : (U32 val , Array[U8 val] iso^)
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option_max_size: [USize](builtin-usize) val = 4

    #### Returns

    - ([U32](builtin-u32) val , [Array](builtin-array)\[[U8](builtin-u8) val\] iso^)

    &nbsp;
- name: UDPSocket.getsockopt_u32()
  id: net-udpsocket#getsockopt_u32
  summary: Wrapper for UDP sockets to the getsockopt(2) system call where the kernel's returned option value is a C uint32_t type / Pony type U32
  belongs_to: UDPSocket
  description: |-
    ### getsockopt_u32

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L450)

    Wrapper for UDP sockets to the `getsockopt(2)` system call where the kernel's returned option value is a C `uint32_t` type / Pony type `U32`.

    In case of system call success, this function returns the 2-tuple: 1. The integer `0`. 2. The `*option_value` returned by the kernel converted to a Pony `U32`.

    In case of system call failure, this function returns the 2-tuple: 1. The value of `errno`. 2. An undefined value that must be ignored.

    ``` pony
    fun ref getsockopt_u32(
      level: I32 val,
      option_name: I32 val)
    : (U32 val , U32 val)
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val

    #### Returns

    - ([U32](builtin-u32) val , [U32](builtin-u32) val)

    &nbsp;
- name: UDPSocket.ip4()
  id: net-udpsocket#ip4
  summary: Listens for IPv4 datagrams
  belongs_to: UDPSocket
  description: |-
    ### ip4

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L110)

    Listens for IPv4 datagrams.

    ``` pony
    new tag ip4(
      auth: (AmbientAuth val | NetAuth val | UDPAuth val),
      notify: UDPNotify iso,
      host: String val = "",
      service: String val = "0",
      size: USize val = 1024)
    : UDPSocket tag^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [UDPAuth](net-udpauth) val)
    - notify: [UDPNotify](net-udpnotify) iso
    - host: [String](builtin-string) val = ""
    - service: [String](builtin-string) val = "0"
    - size: [USize](builtin-usize) val = 1024

    #### Returns

    - [UDPSocket](index) tag^

    &nbsp;
- name: UDPSocket.ip6()
  id: net-udpsocket#ip6
  summary: Listens for IPv6 datagrams
  belongs_to: UDPSocket
  description: |-
    ### ip6

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L131)

    Listens for IPv6 datagrams.

    ``` pony
    new tag ip6(
      auth: (AmbientAuth val | NetAuth val | UDPAuth val),
      notify: UDPNotify iso,
      host: String val = "",
      service: String val = "0",
      size: USize val = 1024)
    : UDPSocket tag^
    ```

    #### Parameters

    - auth: ([AmbientAuth](builtin-ambientauth) val \| [NetAuth](net-netauth) val \| [UDPAuth](net-udpauth) val)
    - notify: [UDPNotify](net-udpnotify) iso
    - host: [String](builtin-string) val = ""
    - service: [String](builtin-string) val = "0"
    - size: [USize](builtin-usize) val = 1024

    #### Returns

    - [UDPSocket](index) tag^

    ## Public Behaviours
- name: UDPSocket.local_address()
  id: net-udpsocket#local_address
  summary: Return the bound IP address
  belongs_to: UDPSocket
  description: |-
    ### local_address

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L239)

    Return the bound IP address.

    ``` pony
    fun box local_address()
    : NetAddress val
    ```

    #### Returns

    - [NetAddress](net-netaddress) val

    &nbsp;
- name: UDPSocket.multicast_join()
  id: net-udpsocket#multicast_join
  summary: Add a multicast group
  belongs_to: UDPSocket
  description: |-
    ### multicast_join

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L212)

    Add a multicast group. This can be limited to packets arriving on a specific interface.

    ``` pony
    be multicast_join(
      group: String val,
      to: String val = "")
    ```

    #### Parameters

    - group: [String](builtin-string) val
    - to: [String](builtin-string) val = ""

    &nbsp;
- name: UDPSocket.multicast_leave()
  id: net-udpsocket#multicast_leave
  summary: Drop a multicast group
  belongs_to: UDPSocket
  description: |-
    ### multicast_leave

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L221)

    Drop a multicast group. This can be limited to packets arriving on a specific interface. No attempt is made to check that this socket has previously added this group.

    ``` pony
    be multicast_leave(
      group: String val,
      to: String val = "")
    ```

    #### Parameters

    - group: [String](builtin-string) val
    - to: [String](builtin-string) val = ""

    &nbsp;
- name: UDPSocket.set_broadcast()
  id: net-udpsocket#set_broadcast
  summary: Enable or disable broadcasting from this socket
  belongs_to: UDPSocket
  description: |-
    ### set_broadcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L172)

    Enable or disable broadcasting from this socket.

    ``` pony
    be set_broadcast(
      state: Bool val)
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val

    &nbsp;
- name: UDPSocket.set_ip_multicast_loop()
  id: net-udpsocket#set_ip_multicast_loop
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### set_ip_multicast_loop

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L530)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, IP_MULTICAST_LOOP, ...)`

    ``` pony
    fun ref set_ip_multicast_loop(
      loopback: Bool val)
    : U32 val
    ```

    #### Parameters

    - loopback: [Bool](builtin-bool) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.set_ip_multicast_ttl()
  id: net-udpsocket#set_ip_multicast_ttl
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### set_ip_multicast_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L538)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, IP_MULTICAST_TTL, ...)`

    ``` pony
    fun ref set_ip_multicast_ttl(
      ttl: U8 val)
    : U32 val
    ```

    #### Parameters

    - ttl: [U8](builtin-u8) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.set_multicast_interface()
  id: net-udpsocket#set_multicast_interface
  summary: By default, the OS will choose which address is used to send packets bound for multicast addresses
  belongs_to: UDPSocket
  description: |-
    ### set_multicast_interface

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L184)

    By default, the OS will choose which address is used to send packets bound for multicast addresses. This can be used to force a specific interface. To revert to allowing the OS to choose, call with an empty string.

    ``` pony
    be set_multicast_interface(
      from: String val = "")
    ```

    #### Parameters

    - from: [String](builtin-string) val = ""

    &nbsp;
- name: UDPSocket.set_multicast_loopback()
  id: net-udpsocket#set_multicast_loopback
  summary: By default, packets sent to a multicast address will be received by the sending system if it has subscribed to that address
  belongs_to: UDPSocket
  description: |-
    ### set_multicast_loopback

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L194)

    By default, packets sent to a multicast address will be received by the sending system if it has subscribed to that address. Disabling loopback prevents this.

    ``` pony
    be set_multicast_loopback(
      loopback: Bool val)
    ```

    #### Parameters

    - loopback: [Bool](builtin-bool) val

    &nbsp;
- name: UDPSocket.set_multicast_ttl()
  id: net-udpsocket#set_multicast_ttl
  summary: Set the TTL for multicast sends
  belongs_to: UDPSocket
  description: |-
    ### set_multicast_ttl

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L204)

    Set the TTL for multicast sends. Defaults to 1.

    ``` pony
    be set_multicast_ttl(
      ttl: U8 val)
    ```

    #### Parameters

    - ttl: [U8](builtin-u8) val

    &nbsp;
- name: UDPSocket.set_notify()
  id: net-udpsocket#set_notify
  summary: Change the notifier
  belongs_to: UDPSocket
  description: |-
    ### set_notify

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L166)

    Change the notifier.

    ``` pony
    be set_notify(
      notify: UDPNotify iso)
    ```

    #### Parameters

    - notify: [UDPNotify](net-udpnotify) iso

    &nbsp;
- name: UDPSocket.set_so_broadcast()
  id: net-udpsocket#set_so_broadcast
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### set_so_broadcast

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L545)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_BROADCAST, ...)`

    ``` pony
    fun ref set_so_broadcast(
      state: Bool val)
    : U32 val
    ```

    #### Parameters

    - state: [Bool](builtin-bool) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.set_so_rcvbuf()
  id: net-udpsocket#set_so_rcvbuf
  summary: null
  belongs_to: UDPSocket
  description: |-
    ### set_so_rcvbuf

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L553)

    Wrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_RCVBUF, ...)`

    ``` pony
    fun ref set_so_rcvbuf(
      bufsize: U32 val)
    : U32 val
    ```

    #### Parameters

    - bufsize: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.set_so_sndbuf()
  id: net-udpsocket#set_so_sndbuf
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: UDPSocket
  description: "### set_so_sndbuf\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L559)\n\nWrapper for the FFI call `setsockopt(fd, SOL_SOCKET, SO_SNDBUF, ...)`\n\n``` pony\nfun ref set_so_sndbuf(\n  bufsize: U32 val)\n: U32 val\n```\n\n#### Parameters\n\n- bufsize: [U32](builtin-u32) val\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPSocket](https://stdlib.ponylang.io/net-UDPSocket)"
- name: UDPSocket.setsockopt()
  id: net-udpsocket#setsockopt
  summary: General wrapper for UDP sockets to the setsockopt(2) system call
  belongs_to: UDPSocket
  description: |-
    ### setsockopt

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L466)

    General wrapper for UDP sockets to the `setsockopt(2)` system call.

    The caller is responsible for the correct size and byte contents of the `option` array for the requested `level` and `option_name`, including using the appropriate CPU endian byte order.

    This function returns `0` on success, else the value of `errno` on failure.

    Usage example:

    ``` pony
    // listening() is a callback function for class UDPNotify
    fun ref listening(sock: UDPSocket ref) =>
      let sb = Writer

      sb.u32_le(7744)             // Our desired socket buffer size
      let sbytes = Array[U8]
      for bs in sb.done().values() do
        sbytes.append(bs)
      end
      match sock.setsockopt(OSSockOpt.sol_socket(), OSSockOpt.so_rcvbuf(), sbytes)
        | 0 =>
          // System call was successful
        | let errno: U32 =>
          // System call failed
      end
    ```

    ``` pony
    fun ref setsockopt(
      level: I32 val,
      option_name: I32 val,
      option: Array[U8 val] ref)
    : U32 val
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option: [Array](builtin-array)\[[U8](builtin-u8) val\] ref

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.setsockopt_u32()
  id: net-udpsocket#setsockopt_u32
  summary: Wrapper for UDP sockets to the setsockopt(2) system call where the kernel expects an option value of a C uint32_t type / Pony type U32
  belongs_to: UDPSocket
  description: |-
    ### setsockopt_u32

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L499)

    Wrapper for UDP sockets to the `setsockopt(2)` system call where the kernel expects an option value of a C `uint32_t` type / Pony type `U32`.

    This function returns `0` on success, else the value of `errno` on failure.

    ``` pony
    fun ref setsockopt_u32(
      level: I32 val,
      option_name: I32 val,
      option: U32 val)
    : U32 val
    ```

    #### Parameters

    - level: [I32](builtin-i32) val
    - option_name: [I32](builtin-i32) val
    - option: [U32](builtin-u32) val

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UDPSocket.write()
  id: net-udpsocket#write
  summary: Write a single sequence of bytes
  belongs_to: UDPSocket
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L152)

    Write a single sequence of bytes.

    ``` pony
    be write(
      data: (String val | Array[U8 val] val),
      to: NetAddress val)
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)
    - to: [NetAddress](net-netaddress) val

    &nbsp;
- name: UDPSocket.writev()
  id: net-udpsocket#writev
  summary: Write a sequence of sequences of bytes
  belongs_to: UDPSocket
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/net/udp_socket/#L158)

    Write a sequence of sequences of bytes.

    ``` pony
    be writev(
      data: ByteSeqIter val,
      to: NetAddress val)
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val
    - to: [NetAddress](net-netaddress) val

    &nbsp;
- name: UDPSocketAuth
  id: net-udpsocketauth
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# UDPSocketAuth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/net/udp_socket/#L3)\n\n``` pony\ntype UDPSocketAuth is\n  (AmbientAuth val | NetAuth val | UDPAuth val)\n```\n\n#### Type Alias For\n\n- ([AmbientAuth](builtin-ambientauth) val \\| [NetAuth](net-netauth) val \\| [UDPAuth](net-udpauth) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/net-UDPSocketAuth](https://stdlib.ponylang.io/net-UDPSocketAuth)"
- name: ULong
  id: builtin-ulong
  summary: Unsafe operation
  description: "# ULong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L296)\n\n``` pony\nprimitive val ULong is\n  UnsignedInteger[ULong val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[ULong](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L297)\n\n``` pony\nnew val create(\n  value: ULong val)\n: ULong val^\n```\n\n#### Parameters\n\n- value: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](index) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L298)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ULong val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ULong](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L300)\n\n``` pony\nnew val min_value()\n: ULong val^\n```\n\n#### Returns\n\n- [ULong](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L302)\n\n``` pony\nnew val max_value()\n: ULong val^\n```\n\n#### Returns\n\n- [ULong](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L309)\n\n``` pony\nfun box next_pow2()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L313)\n\n``` pony\nfun box abs()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L315)\n\n``` pony\nfun box bit_reverse()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L322)\n\n``` pony\nfun box bswap()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L329)\n\n``` pony\nfun box popcount()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L336)\n\n``` pony\nfun box clz()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L343)\n\n``` pony\nfun box ctz()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L350)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L361)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L372)\n\n``` pony\nfun box bitwidth()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L374)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L376)\n\n``` pony\nfun box min(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L377)\n\n``` pony\nfun box max(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L379)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L386)\n\n``` pony\nfun box addc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L393)\n\n``` pony\nfun box subc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L400)\n\n``` pony\nfun box mulc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L407)\n\n``` pony\nfun box divc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L410)\n\n``` pony\nfun box remc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L413)\n\n``` pony\nfun box add_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L416)\n\n``` pony\nfun box sub_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L419)\n\n``` pony\nfun box mul_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L422)\n\n``` pony\nfun box div_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L425)\n\n``` pony\nfun box rem_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L428)\n\n``` pony\nfun box divrem_partial(\n  y: ULong val)\n: (ULong val , ULong val) ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [ULong](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: ULong val)\n: (ULong val , Bool val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: ULong val)\n: ULong val ?\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: ULong val)\n: (ULong val , ULong val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [ULong](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: ULong val)\n: (ULong val , ULong val)\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- ([ULong](index) val , [ULong](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: ULong val)\n: ULong val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [ULong](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: ULong val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [ULong](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](index) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: ULong val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ULong](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ULong](https://stdlib.ponylang.io/builtin-ULong)"
- name: ULong.abs()
  id: builtin-ulong#abs
  summary: null
  belongs_to: ULong
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L313)

    ``` pony
    fun box abs()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.add()
  id: builtin-ulong#add
  summary: null
  belongs_to: ULong
  description: |-
    ### add

    ``` pony
    fun box add(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.add_partial()
  id: builtin-ulong#add_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L413)

    ``` pony
    fun box add_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.add_unsafe()
  id: builtin-ulong#add_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.addc()
  id: builtin-ulong#addc
  summary: null
  belongs_to: ULong
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L386)

    ``` pony
    fun box addc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.bit_reverse()
  id: builtin-ulong#bit_reverse
  summary: null
  belongs_to: ULong
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L315)

    ``` pony
    fun box bit_reverse()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.bitwidth()
  id: builtin-ulong#bitwidth
  summary: null
  belongs_to: ULong
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L372)

    ``` pony
    fun box bitwidth()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.bswap()
  id: builtin-ulong#bswap
  summary: null
  belongs_to: ULong
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L322)

    ``` pony
    fun box bswap()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.bytewidth()
  id: builtin-ulong#bytewidth
  summary: null
  belongs_to: ULong
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L374)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ULong.clz()
  id: builtin-ulong#clz
  summary: null
  belongs_to: ULong
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L336)

    ``` pony
    fun box clz()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.clz_unsafe()
  id: builtin-ulong#clz_unsafe
  summary: Unsafe operation
  belongs_to: ULong
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L350)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.compare()
  id: builtin-ulong#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: ULong
  description: "### compare\n\n``` pony\nfun box compare(\n  that: ULong val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [ULong](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-ULong](https://stdlib.ponylang.io/builtin-ULong)"
- name: ULong.create()
  id: builtin-ulong#create
  summary: null
  belongs_to: ULong
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L297)

    ``` pony
    new val create(
      value: ULong val)
    : ULong val^
    ```

    #### Parameters

    - value: [ULong](index) val

    #### Returns

    - [ULong](index) val^
- name: ULong.ctz()
  id: builtin-ulong#ctz
  summary: null
  belongs_to: ULong
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L343)

    ``` pony
    fun box ctz()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.ctz_unsafe()
  id: builtin-ulong#ctz_unsafe
  summary: Unsafe operation
  belongs_to: ULong
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L361)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.div()
  id: builtin-ulong#div
  summary: null
  belongs_to: ULong
  description: |-
    ### div

    ``` pony
    fun box div(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.div_partial()
  id: builtin-ulong#div_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L422)

    ``` pony
    fun box div_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.div_unsafe()
  id: builtin-ulong#div_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.divc()
  id: builtin-ulong#divc
  summary: null
  belongs_to: ULong
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L407)

    ``` pony
    fun box divc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.divrem()
  id: builtin-ulong#divrem
  summary: null
  belongs_to: ULong
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: ULong val)
    : (ULong val , ULong val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [ULong](index) val)

    &nbsp;
- name: ULong.divrem_partial()
  id: builtin-ulong#divrem_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L428)

    ``` pony
    fun box divrem_partial(
      y: ULong val)
    : (ULong val , ULong val) ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [ULong](index) val) ?

    &nbsp;
- name: ULong.divrem_unsafe()
  id: builtin-ulong#divrem_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: ULong val)
    : (ULong val , ULong val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [ULong](index) val)

    &nbsp;
- name: ULong.eq()
  id: builtin-ulong#eq
  summary: null
  belongs_to: ULong
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.f32()
  id: builtin-ulong#f32
  summary: null
  belongs_to: ULong
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ULong.f32_unsafe()
  id: builtin-ulong#f32_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: ULong.f64()
  id: builtin-ulong#f64
  summary: null
  belongs_to: ULong
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ULong.f64_unsafe()
  id: builtin-ulong#f64_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: ULong.fld()
  id: builtin-ulong#fld
  summary: null
  belongs_to: ULong
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.fld_partial()
  id: builtin-ulong#fld_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.fld_unsafe()
  id: builtin-ulong#fld_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.fldc()
  id: builtin-ulong#fldc
  summary: null
  belongs_to: ULong
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.from()
  id: builtin-ulong#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: ULong
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](index) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L298)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: ULong val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [ULong](index) val^\n\n&nbsp;"
- name: ULong.ge()
  id: builtin-ulong#ge
  summary: null
  belongs_to: ULong
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.gt()
  id: builtin-ulong#gt
  summary: null
  belongs_to: ULong
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.hash()
  id: builtin-ulong#hash
  summary: null
  belongs_to: ULong
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L379)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ULong.hash64()
  id: builtin-ulong#hash64
  summary: null
  belongs_to: ULong
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ULong.i128()
  id: builtin-ulong#i128
  summary: null
  belongs_to: ULong
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ULong.i128_unsafe()
  id: builtin-ulong#i128_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: ULong.i16()
  id: builtin-ulong#i16
  summary: null
  belongs_to: ULong
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ULong.i16_unsafe()
  id: builtin-ulong#i16_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: ULong.i32()
  id: builtin-ulong#i32
  summary: null
  belongs_to: ULong
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ULong.i32_unsafe()
  id: builtin-ulong#i32_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: ULong.i64()
  id: builtin-ulong#i64
  summary: null
  belongs_to: ULong
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ULong.i64_unsafe()
  id: builtin-ulong#i64_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: ULong.i8()
  id: builtin-ulong#i8
  summary: null
  belongs_to: ULong
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ULong.i8_unsafe()
  id: builtin-ulong#i8_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: ULong.ilong()
  id: builtin-ulong#ilong
  summary: null
  belongs_to: ULong
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: ULong.ilong_unsafe()
  id: builtin-ulong#ilong_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: ULong.isize()
  id: builtin-ulong#isize
  summary: null
  belongs_to: ULong
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: ULong.isize_unsafe()
  id: builtin-ulong#isize_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: ULong.le()
  id: builtin-ulong#le
  summary: null
  belongs_to: ULong
  description: |-
    ### le

    ``` pony
    fun box le(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.lt()
  id: builtin-ulong#lt
  summary: null
  belongs_to: ULong
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.max()
  id: builtin-ulong#max
  summary: null
  belongs_to: ULong
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L377)

    ``` pony
    fun box max(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.max_value()
  id: builtin-ulong#max_value
  summary: null
  belongs_to: ULong
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L302)

    ``` pony
    new val max_value()
    : ULong val^
    ```

    #### Returns

    - [ULong](index) val^

    ## Public Functions
- name: ULong.min()
  id: builtin-ulong#min
  summary: null
  belongs_to: ULong
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L376)

    ``` pony
    fun box min(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.min_value()
  id: builtin-ulong#min_value
  summary: null
  belongs_to: ULong
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L300)

    ``` pony
    new val min_value()
    : ULong val^
    ```

    #### Returns

    - [ULong](index) val^

    &nbsp;
- name: ULong.mod()
  id: builtin-ulong#mod
  summary: null
  belongs_to: ULong
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.mod_partial()
  id: builtin-ulong#mod_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.mod_unsafe()
  id: builtin-ulong#mod_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.modc()
  id: builtin-ulong#modc
  summary: null
  belongs_to: ULong
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.mul()
  id: builtin-ulong#mul
  summary: null
  belongs_to: ULong
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.mul_partial()
  id: builtin-ulong#mul_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L419)

    ``` pony
    fun box mul_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.mul_unsafe()
  id: builtin-ulong#mul_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.mulc()
  id: builtin-ulong#mulc
  summary: null
  belongs_to: ULong
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L400)

    ``` pony
    fun box mulc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.ne()
  id: builtin-ulong#ne
  summary: null
  belongs_to: ULong
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: ULong val)
    : Bool val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: ULong.neg()
  id: builtin-ulong#neg
  summary: null
  belongs_to: ULong
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.neg_unsafe()
  id: builtin-ulong#neg_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.next_pow2()
  id: builtin-ulong#next_pow2
  summary: null
  belongs_to: ULong
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L309)

    ``` pony
    fun box next_pow2()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.op_and()
  id: builtin-ulong#op_and
  summary: null
  belongs_to: ULong
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.op_not()
  id: builtin-ulong#op_not
  summary: null
  belongs_to: ULong
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.op_or()
  id: builtin-ulong#op_or
  summary: null
  belongs_to: ULong
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.op_xor()
  id: builtin-ulong#op_xor
  summary: null
  belongs_to: ULong
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.popcount()
  id: builtin-ulong#popcount
  summary: null
  belongs_to: ULong
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L329)

    ``` pony
    fun box popcount()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.rem()
  id: builtin-ulong#rem
  summary: null
  belongs_to: ULong
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.rem_partial()
  id: builtin-ulong#rem_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L425)

    ``` pony
    fun box rem_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.rem_unsafe()
  id: builtin-ulong#rem_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.remc()
  id: builtin-ulong#remc
  summary: null
  belongs_to: ULong
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L410)

    ``` pony
    fun box remc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.rotl()
  id: builtin-ulong#rotl
  summary: null
  belongs_to: ULong
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.rotr()
  id: builtin-ulong#rotr
  summary: null
  belongs_to: ULong
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.shl()
  id: builtin-ulong#shl
  summary: null
  belongs_to: ULong
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.shl_unsafe()
  id: builtin-ulong#shl_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.shr()
  id: builtin-ulong#shr
  summary: null
  belongs_to: ULong
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.shr_unsafe()
  id: builtin-ulong#shr_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.string()
  id: builtin-ulong#string
  summary: null
  belongs_to: ULong
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: ULong.sub()
  id: builtin-ulong#sub
  summary: null
  belongs_to: ULong
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.sub_partial()
  id: builtin-ulong#sub_partial
  summary: null
  belongs_to: ULong
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L416)

    ``` pony
    fun box sub_partial(
      y: ULong val)
    : ULong val ?
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val ?

    &nbsp;
- name: ULong.sub_unsafe()
  id: builtin-ulong#sub_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: ULong val)
    : ULong val
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.subc()
  id: builtin-ulong#subc
  summary: null
  belongs_to: ULong
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L393)

    ``` pony
    fun box subc(
      y: ULong val)
    : (ULong val , Bool val)
    ```

    #### Parameters

    - y: [ULong](index) val

    #### Returns

    - ([ULong](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: ULong.u128()
  id: builtin-ulong#u128
  summary: null
  belongs_to: ULong
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ULong.u128_unsafe()
  id: builtin-ulong#u128_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: ULong.u16()
  id: builtin-ulong#u16
  summary: null
  belongs_to: ULong
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ULong.u16_unsafe()
  id: builtin-ulong#u16_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: ULong.u32()
  id: builtin-ulong#u32
  summary: null
  belongs_to: ULong
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ULong.u32_unsafe()
  id: builtin-ulong#u32_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: ULong.u64()
  id: builtin-ulong#u64
  summary: null
  belongs_to: ULong
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ULong.u64_unsafe()
  id: builtin-ulong#u64_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: ULong.u8()
  id: builtin-ulong#u8
  summary: null
  belongs_to: ULong
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ULong.u8_unsafe()
  id: builtin-ulong#u8_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: ULong.ulong()
  id: builtin-ulong#ulong_1
  summary: null
  belongs_to: ULong
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.ulong_unsafe()
  id: builtin-ulong#ulong_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](index) val

    &nbsp;
- name: ULong.usize()
  id: builtin-ulong#usize
  summary: null
  belongs_to: ULong
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: ULong.usize_unsafe()
  id: builtin-ulong#usize_unsafe
  summary: null
  belongs_to: ULong
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: UnitTest
  id: ponytest-unittest
  summary: Each unit test class must provide this trait
  description: "# UnitTest\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L1)\n\nEach unit test class must provide this trait. Simple tests only need to define the name() and apply() functions. The remaining functions specify additional test options.\n\n``` pony\ntrait ref UnitTest\n```\n\n## Public Functions\n\n### name\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L8)\n\nReport the test name, which is used when printing test results and on the command line to select tests to run.\n\n``` pony\nfun box name()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### exclusion_group\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L14)\n\nReport the test exclusion group, returning an empty string for none. The default body returns an empty string.\n\n``` pony\nfun box exclusion_group()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L21)\n\nRun the test. Raising an error is interpreted as a test failure.\n\n``` pony\nfun ref apply(\n  h: TestHelper val)\n: None val ?\n```\n\n#### Parameters\n\n- h: [TestHelper](ponytest-testhelper) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### timed_out\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L27)\n\nTear down a possibly hanging test. Called when the timeout specified by to long_test() expires. There is no need for this function to call complete(false). tear_down() will still be called after this completes. The default is to do nothing.\n\n``` pony\nfun ref timed_out(\n  h: TestHelper val)\n: None val\n```\n\n#### Parameters\n\n- h: [TestHelper](ponytest-testhelper) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### set_up\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L37)\n\nSet up the testing environment before a test method is called. Default is to do nothing.\n\n``` pony\nfun ref set_up(\n  h: TestHelper val)\n: None val ?\n```\n\n#### Parameters\n\n- h: [TestHelper](ponytest-testhelper) val\n\n#### Returns\n\n- [None](builtin-none) val ?\n\n### tear_down\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L44)\n\nTidy up after the test has completed. Called for each run test, whether that test passed, succeeded or timed out. The default is to do nothing.\n\n``` pony\nfun ref tear_down(\n  h: TestHelper val)\n: None val\n```\n\n#### Parameters\n\n- h: [TestHelper](ponytest-testhelper) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### label\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L52)\n\nReport the test label, returning an empty string for none. It can be later use to filter tests which we want to run, by labels.\n\n``` pony\nfun box label()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-UnitTest](https://stdlib.ponylang.io/ponytest-UnitTest)"
- name: UnitTest.apply()
  id: ponytest-unittest#apply
  summary: Run the test
  belongs_to: UnitTest
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L21)

    Run the test. Raising an error is interpreted as a test failure.

    ``` pony
    fun ref apply(
      h: TestHelper val)
    : None val ?
    ```

    #### Parameters

    - h: [TestHelper](ponytest-testhelper) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: UnitTest.exclusion_group()
  id: ponytest-unittest#exclusion_group
  summary: Report the test exclusion group, returning an empty string for none
  belongs_to: UnitTest
  description: |-
    ### exclusion_group

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L14)

    Report the test exclusion group, returning an empty string for none. The default body returns an empty string.

    ``` pony
    fun box exclusion_group()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val

    &nbsp;
- name: UnitTest.label()
  id: ponytest-unittest#label
  summary: Report the test label, returning an empty string for none
  belongs_to: UnitTest
  description: "### label\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L52)\n\nReport the test label, returning an empty string for none. It can be later use to filter tests which we want to run, by labels.\n\n``` pony\nfun box label()\n: String val\n```\n\n#### Returns\n\n- [String](builtin-string) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/ponytest-UnitTest](https://stdlib.ponylang.io/ponytest-UnitTest)"
- name: UnitTest.name()
  id: ponytest-unittest#name
  summary: Report the test name, which is used when printing test results and on the command line to select tests to run
  belongs_to: UnitTest
  description: |-
    ### name

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L8)

    Report the test name, which is used when printing test results and on the command line to select tests to run.

    ``` pony
    fun box name()
    : String val
    ```

    #### Returns

    - [String](builtin-string) val
- name: UnitTest.set_up()
  id: ponytest-unittest#set_up
  summary: Set up the testing environment before a test method is called
  belongs_to: UnitTest
  description: |-
    ### set_up

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L37)

    Set up the testing environment before a test method is called. Default is to do nothing.

    ``` pony
    fun ref set_up(
      h: TestHelper val)
    : None val ?
    ```

    #### Parameters

    - h: [TestHelper](ponytest-testhelper) val

    #### Returns

    - [None](builtin-none) val ?

    &nbsp;
- name: UnitTest.tear_down()
  id: ponytest-unittest#tear_down
  summary: Tidy up after the test has completed
  belongs_to: UnitTest
  description: |-
    ### tear_down

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L44)

    Tidy up after the test has completed. Called for each run test, whether that test passed, succeeded or timed out. The default is to do nothing.

    ``` pony
    fun ref tear_down(
      h: TestHelper val)
    : None val
    ```

    #### Parameters

    - h: [TestHelper](ponytest-testhelper) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: UnitTest.timed_out()
  id: ponytest-unittest#timed_out
  summary: Tear down a possibly hanging test
  belongs_to: UnitTest
  description: |-
    ### timed_out

    [\[Source\]](https://stdlib.ponylang.io/src/ponytest/unit_test/#L27)

    Tear down a possibly hanging test. Called when the timeout specified by to long_test() expires. There is no need for this function to call complete(false). tear_down() will still be called after this completes. The default is to do nothing.

    ``` pony
    fun ref timed_out(
      h: TestHelper val)
    : None val
    ```

    #### Parameters

    - h: [TestHelper](ponytest-testhelper) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: UnknownError
  id: process-unknownerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# UnknownError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L62)\n\n``` pony\nprimitive val UnknownError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L62)\n\n``` pony\nnew val create()\n: UnknownError val^\n```\n\n#### Returns\n\n- [UnknownError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L63)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L63)\n\n``` pony\nfun box eq(\n  that: UnknownError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnknownError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L63)\n\n``` pony\nfun box ne(\n  that: UnknownError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnknownError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-UnknownError](https://stdlib.ponylang.io/process-UnknownError)"
- name: UnknownError.create()
  id: process-unknownerror#create
  summary: null
  belongs_to: UnknownError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L62)

    ``` pony
    new val create()
    : UnknownError val^
    ```

    #### Returns

    - [UnknownError](index) val^

    ## Public Functions
- name: UnknownError.eq()
  id: process-unknownerror#eq
  summary: null
  belongs_to: UnknownError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L63)

    ``` pony
    fun box eq(
      that: UnknownError val)
    : Bool val
    ```

    #### Parameters

    - that: [UnknownError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnknownError.ne()
  id: process-unknownerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: UnknownError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L63)\n\n``` pony\nfun box ne(\n  that: UnknownError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnknownError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-UnknownError](https://stdlib.ponylang.io/process-UnknownError)"
- name: UnknownError.string()
  id: process-unknownerror#string
  summary: null
  belongs_to: UnknownError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L63)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: UnrecognisedOption
  id: options-unrecognisedoption
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# UnrecognisedOption\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L76)\n\n``` pony\nprimitive val UnrecognisedOption\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L76)\n\n``` pony\nnew val create()\n: UnrecognisedOption val^\n```\n\n#### Returns\n\n- [UnrecognisedOption](index) val^\n\n## Public Functions\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L77)\n\n``` pony\nfun box eq(\n  that: UnrecognisedOption val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnrecognisedOption](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L77)\n\n``` pony\nfun box ne(\n  that: UnrecognisedOption val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnrecognisedOption](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-UnrecognisedOption](https://stdlib.ponylang.io/options-UnrecognisedOption)"
- name: UnrecognisedOption.create()
  id: options-unrecognisedoption#create
  summary: null
  belongs_to: UnrecognisedOption
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L76)

    ``` pony
    new val create()
    : UnrecognisedOption val^
    ```

    #### Returns

    - [UnrecognisedOption](index) val^

    ## Public Functions
- name: UnrecognisedOption.eq()
  id: options-unrecognisedoption#eq
  summary: null
  belongs_to: UnrecognisedOption
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/options/options/#L77)

    ``` pony
    fun box eq(
      that: UnrecognisedOption val)
    : Bool val
    ```

    #### Parameters

    - that: [UnrecognisedOption](index) val

    #### Returns

    - [Bool](builtin-bool) val
- name: UnrecognisedOption.ne()
  id: options-unrecognisedoption#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: UnrecognisedOption
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/options/options/#L77)\n\n``` pony\nfun box ne(\n  that: UnrecognisedOption val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [UnrecognisedOption](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/options-UnrecognisedOption](https://stdlib.ponylang.io/options-UnrecognisedOption)"
- name: Unsigned
  id: builtin-unsigned
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Unsigned\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L841)\n\n``` pony\ntype Unsigned is\n  (U8 val | U16 val | U32 val | U64 val | U128 val | ULong val | USize val)\n```\n\n#### Type Alias For\n\n- ([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-Unsigned](https://stdlib.ponylang.io/builtin-Unsigned)"
- name: UnsignedInteger
  id: builtin-unsignedinteger
  summary: Unsafe operation
  description: "# UnsignedInteger\\[A: [UnsignedInteger](index)\\[A\\] val\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L442)\n\n``` pony\ntrait val UnsignedInteger[A: UnsignedInteger[A] val] is\n  Integer[A] val\n```\n\n#### Implements\n\n- [Integer](builtin-integer)\\[A\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L135)\n\n``` pony\nnew val create(\n  value: A)\n: Real[A] val^\n```\n\n#### Parameters\n\n- value: A\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L138)\n\n``` pony\nnew val min_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L139)\n\n``` pony\nnew val max_value()\n: Real[A] val^\n```\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n## Public Functions\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L443)\n\n``` pony\nfun box abs()\n: A\n```\n\n#### Returns\n\n- A\n\n### shl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L445)\n\n``` pony\nfun box shl(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### shr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L446)\n\n``` pony\nfun box shr(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### fld\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L449)\n\n``` pony\nfun box fld(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### fldc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L450)\n\n``` pony\nfun box fldc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### fld_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L451)\n\n``` pony\nfun box fld_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### fld_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L452)\n\n``` pony\nfun box fld_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mod\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L454)\n\n``` pony\nfun box mod(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### modc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L455)\n\n``` pony\nfun box modc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### mod_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L456)\n\n``` pony\nfun box mod_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mod_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L457)\n\n``` pony\nfun box mod_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### shl_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L459)\n\nUnsafe operation. If non-zero bits are shifted-out, the result is undefined.\n\n``` pony\nfun box shl_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### shr_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L466)\n\nUnsafe operation. If non-zero bits are shifted-out, the result is undefined.\n\n``` pony\nfun box shr_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### rotl\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L473)\n\n``` pony\nfun box rotl(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### rotr\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L481)\n\n``` pony\nfun box rotr(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L489)\n\n``` pony\nfun box popcount()\n: A\n```\n\n#### Returns\n\n- A\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L490)\n\n``` pony\nfun box clz()\n: A\n```\n\n#### Returns\n\n- A\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L491)\n\n``` pony\nfun box ctz()\n: A\n```\n\n#### Returns\n\n- A\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L493)\n\nCount leading zeroes.\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L501)\n\nCount trailing zeroes.\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L509)\n\n``` pony\nfun box bitwidth()\n: A\n```\n\n#### Returns\n\n- A\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L511)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L513)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L214)\n\n``` pony\nfun box add_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L221)\n\n``` pony\nfun box sub_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L228)\n\n``` pony\nfun box mul_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L235)\n\n``` pony\nfun box div_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L245)\n\n``` pony\nfun box divrem_unsafe(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L255)\n\n``` pony\nfun box rem_unsafe(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L286)\n\n``` pony\nfun box add_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L293)\n\n``` pony\nfun box sub_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L300)\n\n``` pony\nfun box mul_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L307)\n\n``` pony\nfun box div_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L314)\n\n``` pony\nfun box rem_partial(\n  y: A)\n: A ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L322)\n\n``` pony\nfun box divrem_partial(\n  y: A)\n: (A , A) ?\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A) ?\n\n### neg_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L344)\n\n``` pony\nfun box neg_unsafe()\n: A\n```\n\n#### Returns\n\n- A\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L351)\n\n``` pony\nfun box addc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L355)\n\n``` pony\nfun box subc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L359)\n\n``` pony\nfun box mulc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L363)\n\n``` pony\nfun box divc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L367)\n\n``` pony\nfun box remc(\n  y: A)\n: (A , Bool val)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , [Bool](builtin-bool) val)\n\n### op_and\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L384)\n\n``` pony\nfun box op_and(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_or\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L385)\n\n``` pony\nfun box op_or(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_xor\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L386)\n\n``` pony\nfun box op_xor(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### op_not\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L387)\n\n``` pony\nfun box op_not()\n: A\n```\n\n#### Returns\n\n- A\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L389)\n\n``` pony\nfun box bit_reverse()\n: A\n```\n\n#### Returns\n\n- A\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L395)\n\n``` pony\nfun box bswap()\n: A\n```\n\n#### Returns\n\n- A\n\n### add\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L141)\n\n``` pony\nfun box add(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### sub\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L142)\n\n``` pony\nfun box sub(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### mul\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L143)\n\n``` pony\nfun box mul(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### div\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L144)\n\n``` pony\nfun box div(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### divrem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L150)\n\n``` pony\nfun box divrem(\n  y: A)\n: (A , A)\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- (A , A)\n\n### rem\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L151)\n\n``` pony\nfun box rem(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### neg\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L159)\n\n``` pony\nfun box neg()\n: A\n```\n\n#### Returns\n\n- A\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L172)\n\n``` pony\nfun box eq(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L173)\n\n``` pony\nfun box ne(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L174)\n\n``` pony\nfun box lt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L175)\n\n``` pony\nfun box le(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L176)\n\n``` pony\nfun box ge(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L177)\n\n``` pony\nfun box gt(\n  y: box->A)\n: Bool val\n```\n\n#### Parameters\n\n- y: box-\\>A\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L179)\n\n``` pony\nfun box min(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L180)\n\n``` pony\nfun box max(\n  y: A)\n: A\n```\n\n#### Parameters\n\n- y: A\n\n#### Returns\n\n- A\n\n### hash\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L182)\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### hash64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L198)\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L2)\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L3)\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L4)\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L5)\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L6)\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L7)\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L8)\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L10)\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L11)\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L12)\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L13)\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L14)\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L15)\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L16)\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L18)\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L19)\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L21)\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L28)\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L35)\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L42)\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L49)\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L56)\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L63)\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L70)\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L77)\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L84)\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L91)\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L98)\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L105)\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L112)\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### f32_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L119)\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L126)\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-UnsignedInteger](https://stdlib.ponylang.io/builtin-UnsignedInteger)"
- name: UnsignedInteger.abs()
  id: builtin-unsignedinteger#abs
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L443)

    ``` pony
    fun box abs()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.add()
  id: builtin-unsignedinteger#add
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### add

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L141)

    ``` pony
    fun box add(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.add_partial()
  id: builtin-unsignedinteger#add_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L286)

    ``` pony
    fun box add_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.add_unsafe()
  id: builtin-unsignedinteger#add_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### add_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L214)

    ``` pony
    fun box add_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.addc()
  id: builtin-unsignedinteger#addc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L351)

    ``` pony
    fun box addc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.bit_reverse()
  id: builtin-unsignedinteger#bit_reverse
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L389)

    ``` pony
    fun box bit_reverse()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.bitwidth()
  id: builtin-unsignedinteger#bitwidth
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L509)

    ``` pony
    fun box bitwidth()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.bswap()
  id: builtin-unsignedinteger#bswap
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L395)

    ``` pony
    fun box bswap()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.bytewidth()
  id: builtin-unsignedinteger#bytewidth
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L511)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: UnsignedInteger.clz()
  id: builtin-unsignedinteger#clz
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L490)

    ``` pony
    fun box clz()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.clz_unsafe()
  id: builtin-unsignedinteger#clz_unsafe
  summary: Count leading zeroes
  belongs_to: UnsignedInteger
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L493)

    Count leading zeroes.

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.compare()
  id: builtin-unsignedinteger#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: UnsignedInteger
  description: "### compare\n\n``` pony\nfun box compare(\n  that: box->A)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: box-\\>A\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-UnsignedInteger](https://stdlib.ponylang.io/builtin-UnsignedInteger)"
- name: UnsignedInteger.create()
  id: builtin-unsignedinteger#create
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L135)

    ``` pony
    new val create(
      value: A)
    : Real[A] val^
    ```

    #### Parameters

    - value: A

    #### Returns

    - [Real](builtin-real)\[A\] val^
- name: UnsignedInteger.ctz()
  id: builtin-unsignedinteger#ctz
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L491)

    ``` pony
    fun box ctz()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.ctz_unsafe()
  id: builtin-unsignedinteger#ctz_unsafe
  summary: Count trailing zeroes
  belongs_to: UnsignedInteger
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L501)

    Count trailing zeroes.

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.div()
  id: builtin-unsignedinteger#div
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### div

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L144)

    ``` pony
    fun box div(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.div_partial()
  id: builtin-unsignedinteger#div_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L307)

    ``` pony
    fun box div_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.div_unsafe()
  id: builtin-unsignedinteger#div_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### div_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L235)

    ``` pony
    fun box div_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.divc()
  id: builtin-unsignedinteger#divc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L363)

    ``` pony
    fun box divc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.divrem()
  id: builtin-unsignedinteger#divrem
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### divrem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L150)

    ``` pony
    fun box divrem(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: UnsignedInteger.divrem_partial()
  id: builtin-unsignedinteger#divrem_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L322)

    ``` pony
    fun box divrem_partial(
      y: A)
    : (A , A) ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A) ?

    &nbsp;
- name: UnsignedInteger.divrem_unsafe()
  id: builtin-unsignedinteger#divrem_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### divrem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L245)

    ``` pony
    fun box divrem_unsafe(
      y: A)
    : (A , A)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , A)

    &nbsp;
- name: UnsignedInteger.eq()
  id: builtin-unsignedinteger#eq
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L172)

    ``` pony
    fun box eq(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.f32()
  id: builtin-unsignedinteger#f32
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### f32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L18)

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: UnsignedInteger.f32_unsafe()
  id: builtin-unsignedinteger#f32_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### f32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L119)

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: UnsignedInteger.f64()
  id: builtin-unsignedinteger#f64
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### f64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L19)

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: UnsignedInteger.f64_unsafe()
  id: builtin-unsignedinteger#f64_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### f64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L126)

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: UnsignedInteger.fld()
  id: builtin-unsignedinteger#fld
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### fld

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L449)

    ``` pony
    fun box fld(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.fld_partial()
  id: builtin-unsignedinteger#fld_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### fld_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L451)

    ``` pony
    fun box fld_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.fld_unsafe()
  id: builtin-unsignedinteger#fld_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### fld_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L452)

    ``` pony
    fun box fld_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.fldc()
  id: builtin-unsignedinteger#fldc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### fldc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L450)

    ``` pony
    fun box fldc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.from()
  id: builtin-unsignedinteger#fromb-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-realb-val
  summary: null
  belongs_to: UnsignedInteger
  description: "### from\\[B: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[B\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/real/#L137)\n\n``` pony\nnew val from[B: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[B] val)](\n  a: B)\n: Real[A] val^\n```\n\n#### Parameters\n\n- a: B\n\n#### Returns\n\n- [Real](builtin-real)\\[A\\] val^\n\n&nbsp;"
- name: UnsignedInteger.ge()
  id: builtin-unsignedinteger#ge
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ge

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L176)

    ``` pony
    fun box ge(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.gt()
  id: builtin-unsignedinteger#gt
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### gt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L177)

    ``` pony
    fun box gt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.hash()
  id: builtin-unsignedinteger#hash
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### hash

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L182)

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: UnsignedInteger.hash64()
  id: builtin-unsignedinteger#hash64
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### hash64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L198)

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: UnsignedInteger.i128()
  id: builtin-unsignedinteger#i128
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L6)

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: UnsignedInteger.i128_unsafe()
  id: builtin-unsignedinteger#i128_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L49)

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: UnsignedInteger.i16()
  id: builtin-unsignedinteger#i16
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L3)

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: UnsignedInteger.i16_unsafe()
  id: builtin-unsignedinteger#i16_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L28)

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: UnsignedInteger.i32()
  id: builtin-unsignedinteger#i32
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L4)

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: UnsignedInteger.i32_unsafe()
  id: builtin-unsignedinteger#i32_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L35)

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: UnsignedInteger.i64()
  id: builtin-unsignedinteger#i64
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L5)

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: UnsignedInteger.i64_unsafe()
  id: builtin-unsignedinteger#i64_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L42)

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: UnsignedInteger.i8()
  id: builtin-unsignedinteger#i8
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L2)

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: UnsignedInteger.i8_unsafe()
  id: builtin-unsignedinteger#i8_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### i8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L21)

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: UnsignedInteger.ilong()
  id: builtin-unsignedinteger#ilong
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ilong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L7)

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: UnsignedInteger.ilong_unsafe()
  id: builtin-unsignedinteger#ilong_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ilong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L56)

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: UnsignedInteger.isize()
  id: builtin-unsignedinteger#isize
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### isize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L8)

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: UnsignedInteger.isize_unsafe()
  id: builtin-unsignedinteger#isize_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### isize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L63)

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: UnsignedInteger.le()
  id: builtin-unsignedinteger#le
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### le

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L175)

    ``` pony
    fun box le(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.lt()
  id: builtin-unsignedinteger#lt
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### lt

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L174)

    ``` pony
    fun box lt(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.max()
  id: builtin-unsignedinteger#max
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L180)

    ``` pony
    fun box max(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.max_value()
  id: builtin-unsignedinteger#max_value
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L139)

    ``` pony
    new val max_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    ## Public Functions
- name: UnsignedInteger.min()
  id: builtin-unsignedinteger#min
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L179)

    ``` pony
    fun box min(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.min_value()
  id: builtin-unsignedinteger#min_value
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L138)

    ``` pony
    new val min_value()
    : Real[A] val^
    ```

    #### Returns

    - [Real](builtin-real)\[A\] val^

    &nbsp;
- name: UnsignedInteger.mod()
  id: builtin-unsignedinteger#mod
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mod

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L454)

    ``` pony
    fun box mod(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.mod_partial()
  id: builtin-unsignedinteger#mod_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mod_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L456)

    ``` pony
    fun box mod_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.mod_unsafe()
  id: builtin-unsignedinteger#mod_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mod_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L457)

    ``` pony
    fun box mod_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.modc()
  id: builtin-unsignedinteger#modc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### modc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L455)

    ``` pony
    fun box modc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.mul()
  id: builtin-unsignedinteger#mul
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mul

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L143)

    ``` pony
    fun box mul(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.mul_partial()
  id: builtin-unsignedinteger#mul_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L300)

    ``` pony
    fun box mul_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.mul_unsafe()
  id: builtin-unsignedinteger#mul_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mul_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L228)

    ``` pony
    fun box mul_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.mulc()
  id: builtin-unsignedinteger#mulc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L359)

    ``` pony
    fun box mulc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.ne()
  id: builtin-unsignedinteger#ne
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ne

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L173)

    ``` pony
    fun box ne(
      y: box->A)
    : Bool val
    ```

    #### Parameters

    - y: box-\>A

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: UnsignedInteger.neg()
  id: builtin-unsignedinteger#neg
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### neg

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L159)

    ``` pony
    fun box neg()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.neg_unsafe()
  id: builtin-unsignedinteger#neg_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### neg_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L344)

    ``` pony
    fun box neg_unsafe()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.op_and()
  id: builtin-unsignedinteger#op_and
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### op_and

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L384)

    ``` pony
    fun box op_and(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.op_not()
  id: builtin-unsignedinteger#op_not
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### op_not

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L387)

    ``` pony
    fun box op_not()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.op_or()
  id: builtin-unsignedinteger#op_or
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### op_or

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L385)

    ``` pony
    fun box op_or(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.op_xor()
  id: builtin-unsignedinteger#op_xor
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### op_xor

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L386)

    ``` pony
    fun box op_xor(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.popcount()
  id: builtin-unsignedinteger#popcount
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L489)

    ``` pony
    fun box popcount()
    : A
    ```

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.rem()
  id: builtin-unsignedinteger#rem
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### rem

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L151)

    ``` pony
    fun box rem(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.rem_partial()
  id: builtin-unsignedinteger#rem_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L314)

    ``` pony
    fun box rem_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.rem_unsafe()
  id: builtin-unsignedinteger#rem_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### rem_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L255)

    ``` pony
    fun box rem_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.remc()
  id: builtin-unsignedinteger#remc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L367)

    ``` pony
    fun box remc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.rotl()
  id: builtin-unsignedinteger#rotl
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### rotl

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L473)

    ``` pony
    fun box rotl(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.rotr()
  id: builtin-unsignedinteger#rotr
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### rotr

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L481)

    ``` pony
    fun box rotr(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.shl()
  id: builtin-unsignedinteger#shl
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### shl

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L445)

    ``` pony
    fun box shl(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.shl_unsafe()
  id: builtin-unsignedinteger#shl_unsafe
  summary: Unsafe operation
  belongs_to: UnsignedInteger
  description: |-
    ### shl_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L459)

    Unsafe operation. If non-zero bits are shifted-out, the result is undefined.

    ``` pony
    fun box shl_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.shr()
  id: builtin-unsignedinteger#shr
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### shr

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L446)

    ``` pony
    fun box shr(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.shr_unsafe()
  id: builtin-unsignedinteger#shr_unsafe
  summary: Unsafe operation
  belongs_to: UnsignedInteger
  description: |-
    ### shr_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L466)

    Unsafe operation. If non-zero bits are shifted-out, the result is undefined.

    ``` pony
    fun box shr_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.string()
  id: builtin-unsignedinteger#string
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L513)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: UnsignedInteger.sub()
  id: builtin-unsignedinteger#sub
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### sub

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L142)

    ``` pony
    fun box sub(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.sub_partial()
  id: builtin-unsignedinteger#sub_partial
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L293)

    ``` pony
    fun box sub_partial(
      y: A)
    : A ?
    ```

    #### Parameters

    - y: A

    #### Returns

    - A ?

    &nbsp;
- name: UnsignedInteger.sub_unsafe()
  id: builtin-unsignedinteger#sub_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### sub_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L221)

    ``` pony
    fun box sub_unsafe(
      y: A)
    : A
    ```

    #### Parameters

    - y: A

    #### Returns

    - A

    &nbsp;
- name: UnsignedInteger.subc()
  id: builtin-unsignedinteger#subc
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L355)

    ``` pony
    fun box subc(
      y: A)
    : (A , Bool val)
    ```

    #### Parameters

    - y: A

    #### Returns

    - (A , [Bool](builtin-bool) val)

    &nbsp;
- name: UnsignedInteger.u128()
  id: builtin-unsignedinteger#u128
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u128

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L14)

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: UnsignedInteger.u128_unsafe()
  id: builtin-unsignedinteger#u128_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u128_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L98)

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: UnsignedInteger.u16()
  id: builtin-unsignedinteger#u16
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u16

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L11)

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: UnsignedInteger.u16_unsafe()
  id: builtin-unsignedinteger#u16_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u16_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L77)

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: UnsignedInteger.u32()
  id: builtin-unsignedinteger#u32
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u32

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L12)

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UnsignedInteger.u32_unsafe()
  id: builtin-unsignedinteger#u32_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u32_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L84)

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: UnsignedInteger.u64()
  id: builtin-unsignedinteger#u64
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u64

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L13)

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: UnsignedInteger.u64_unsafe()
  id: builtin-unsignedinteger#u64_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u64_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L91)

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: UnsignedInteger.u8()
  id: builtin-unsignedinteger#u8
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L10)

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: UnsignedInteger.u8_unsafe()
  id: builtin-unsignedinteger#u8_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### u8_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L70)

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: UnsignedInteger.ulong()
  id: builtin-unsignedinteger#ulong
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ulong

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L15)

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: UnsignedInteger.ulong_unsafe()
  id: builtin-unsignedinteger#ulong_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### ulong_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L105)

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: UnsignedInteger.usize()
  id: builtin-unsignedinteger#usize
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### usize

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L16)

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: UnsignedInteger.usize_unsafe()
  id: builtin-unsignedinteger#usize_unsafe
  summary: null
  belongs_to: UnsignedInteger
  description: |-
    ### usize_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/real/#L112)

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: USize
  id: builtin-usize
  summary: Unsafe operation
  description: "# USize\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L431)\n\n``` pony\nprimitive val USize is\n  UnsignedInteger[USize val] val\n```\n\n#### Implements\n\n- [UnsignedInteger](builtin-unsignedinteger)\\[[USize](index) val\\] val\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L432)\n\n``` pony\nnew val create(\n  value: USize val)\n: USize val^\n```\n\n#### Parameters\n\n- value: [USize](index) val\n\n#### Returns\n\n- [USize](index) val^\n\n### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](index) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L433)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: USize val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [USize](index) val^\n\n### min_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L435)\n\n``` pony\nnew val min_value()\n: USize val^\n```\n\n#### Returns\n\n- [USize](index) val^\n\n### max_value\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L437)\n\n``` pony\nnew val max_value()\n: USize val^\n```\n\n#### Returns\n\n- [USize](index) val^\n\n## Public Functions\n\n### next_pow2\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L444)\n\n``` pony\nfun box next_pow2()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### abs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L448)\n\n``` pony\nfun box abs()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### bit_reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L450)\n\n``` pony\nfun box bit_reverse()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### bswap\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L457)\n\n``` pony\nfun box bswap()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### popcount\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L464)\n\n``` pony\nfun box popcount()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### clz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L471)\n\n``` pony\nfun box clz()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### ctz\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L478)\n\n``` pony\nfun box ctz()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### clz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L485)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box clz_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### ctz_unsafe\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L496)\n\nUnsafe operation. If this is 0, the result is undefined.\n\n``` pony\nfun box ctz_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### bitwidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L507)\n\n``` pony\nfun box bitwidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### bytewidth\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L509)\n\n``` pony\nfun box bytewidth()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### min\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L511)\n\n``` pony\nfun box min(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### max\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L512)\n\n``` pony\nfun box max(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### addc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L514)\n\n``` pony\nfun box addc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### subc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L521)\n\n``` pony\nfun box subc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### mulc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L528)\n\n``` pony\nfun box mulc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### divc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L535)\n\n``` pony\nfun box divc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### remc\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L538)\n\n``` pony\nfun box remc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### add_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L541)\n\n``` pony\nfun box add_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### sub_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L544)\n\n``` pony\nfun box sub_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### mul_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L547)\n\n``` pony\nfun box mul_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### div_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L550)\n\n``` pony\nfun box div_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### rem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L553)\n\n``` pony\nfun box rem_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### divrem_partial\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L556)\n\n``` pony\nfun box divrem_partial(\n  y: USize val)\n: (USize val , USize val) ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [USize](index) val) ?\n\n### shl\n\n``` pony\nfun box shl(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### shr\n\n``` pony\nfun box shr(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### fld\n\n``` pony\nfun box fld(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### fldc\n\n``` pony\nfun box fldc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### fld_partial\n\n``` pony\nfun box fld_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### fld_unsafe\n\n``` pony\nfun box fld_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### mod\n\n``` pony\nfun box mod(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### modc\n\n``` pony\nfun box modc(\n  y: USize val)\n: (USize val , Bool val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [Bool](builtin-bool) val)\n\n### mod_partial\n\n``` pony\nfun box mod_partial(\n  y: USize val)\n: USize val ?\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val ?\n\n### mod_unsafe\n\n``` pony\nfun box mod_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### shl_unsafe\n\n``` pony\nfun box shl_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### shr_unsafe\n\n``` pony\nfun box shr_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### rotl\n\n``` pony\nfun box rotl(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### rotr\n\n``` pony\nfun box rotr(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### string\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### add_unsafe\n\n``` pony\nfun box add_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### sub_unsafe\n\n``` pony\nfun box sub_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### mul_unsafe\n\n``` pony\nfun box mul_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### div_unsafe\n\n``` pony\nfun box div_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### divrem_unsafe\n\n``` pony\nfun box divrem_unsafe(\n  y: USize val)\n: (USize val , USize val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [USize](index) val)\n\n### rem_unsafe\n\n``` pony\nfun box rem_unsafe(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### neg_unsafe\n\n``` pony\nfun box neg_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### op_and\n\n``` pony\nfun box op_and(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### op_or\n\n``` pony\nfun box op_or(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### op_xor\n\n``` pony\nfun box op_xor(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### op_not\n\n``` pony\nfun box op_not()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### add\n\n``` pony\nfun box add(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### sub\n\n``` pony\nfun box sub(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### mul\n\n``` pony\nfun box mul(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### div\n\n``` pony\nfun box div(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### divrem\n\n``` pony\nfun box divrem(\n  y: USize val)\n: (USize val , USize val)\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- ([USize](index) val , [USize](index) val)\n\n### rem\n\n``` pony\nfun box rem(\n  y: USize val)\n: USize val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [USize](index) val\n\n### neg\n\n``` pony\nfun box neg()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### eq\n\n``` pony\nfun box eq(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n``` pony\nfun box ne(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### lt\n\n``` pony\nfun box lt(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### le\n\n``` pony\nfun box le(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ge\n\n``` pony\nfun box ge(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### gt\n\n``` pony\nfun box gt(\n  y: USize val)\n: Bool val\n```\n\n#### Parameters\n\n- y: [USize](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### hash\n\n``` pony\nfun box hash()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### hash64\n\n``` pony\nfun box hash64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### i8\n\n``` pony\nfun box i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun box i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun box i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun box i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun box i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun box ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun box isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8\n\n``` pony\nfun box u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun box u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun box u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun box u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun box u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun box ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun box usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### f32\n\n``` pony\nfun box f32()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64\n\n``` pony\nfun box f64()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### i8_unsafe\n\n``` pony\nfun box i8_unsafe()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16_unsafe\n\n``` pony\nfun box i16_unsafe()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32_unsafe\n\n``` pony\nfun box i32_unsafe()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64_unsafe\n\n``` pony\nfun box i64_unsafe()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128_unsafe\n\n``` pony\nfun box i128_unsafe()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong_unsafe\n\n``` pony\nfun box ilong_unsafe()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize_unsafe\n\n``` pony\nfun box isize_unsafe()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### u8_unsafe\n\n``` pony\nfun box u8_unsafe()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16_unsafe\n\n``` pony\nfun box u16_unsafe()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32_unsafe\n\n``` pony\nfun box u32_unsafe()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64_unsafe\n\n``` pony\nfun box u64_unsafe()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128_unsafe\n\n``` pony\nfun box u128_unsafe()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong_unsafe\n\n``` pony\nfun box ulong_unsafe()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize_unsafe\n\n``` pony\nfun box usize_unsafe()\n: USize val\n```\n\n#### Returns\n\n- [USize](index) val\n\n### f32_unsafe\n\n``` pony\nfun box f32_unsafe()\n: F32 val\n```\n\n#### Returns\n\n- [F32](builtin-f32) val\n\n### f64_unsafe\n\n``` pony\nfun box f64_unsafe()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### compare\n\n``` pony\nfun box compare(\n  that: USize val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [USize](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-USize](https://stdlib.ponylang.io/builtin-USize)"
- name: USize.abs()
  id: builtin-usize#abs
  summary: null
  belongs_to: USize
  description: |-
    ### abs

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L448)

    ``` pony
    fun box abs()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.add()
  id: builtin-usize#add
  summary: null
  belongs_to: USize
  description: |-
    ### add

    ``` pony
    fun box add(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.add_partial()
  id: builtin-usize#add_partial
  summary: null
  belongs_to: USize
  description: |-
    ### add_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L541)

    ``` pony
    fun box add_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.add_unsafe()
  id: builtin-usize#add_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### add_unsafe

    ``` pony
    fun box add_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.addc()
  id: builtin-usize#addc
  summary: null
  belongs_to: USize
  description: |-
    ### addc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L514)

    ``` pony
    fun box addc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.bit_reverse()
  id: builtin-usize#bit_reverse
  summary: null
  belongs_to: USize
  description: |-
    ### bit_reverse

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L450)

    ``` pony
    fun box bit_reverse()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.bitwidth()
  id: builtin-usize#bitwidth
  summary: null
  belongs_to: USize
  description: |-
    ### bitwidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L507)

    ``` pony
    fun box bitwidth()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.bswap()
  id: builtin-usize#bswap
  summary: null
  belongs_to: USize
  description: |-
    ### bswap

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L457)

    ``` pony
    fun box bswap()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.bytewidth()
  id: builtin-usize#bytewidth
  summary: null
  belongs_to: USize
  description: |-
    ### bytewidth

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L509)

    ``` pony
    fun box bytewidth()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.clz()
  id: builtin-usize#clz
  summary: null
  belongs_to: USize
  description: |-
    ### clz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L471)

    ``` pony
    fun box clz()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.clz_unsafe()
  id: builtin-usize#clz_unsafe
  summary: Unsafe operation
  belongs_to: USize
  description: |-
    ### clz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L485)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box clz_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.compare()
  id: builtin-usize#compare
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: USize
  description: "### compare\n\n``` pony\nfun box compare(\n  that: USize val)\n: (Less val | Equal val | Greater val)\n```\n\n#### Parameters\n\n- that: [USize](index) val\n\n#### Returns\n\n- ([Less](builtin-less) val \\| [Equal](builtin-equal) val \\| [Greater](builtin-greater) val)\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/builtin-USize](https://stdlib.ponylang.io/builtin-USize)"
- name: USize.create()
  id: builtin-usize#create
  summary: null
  belongs_to: USize
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L432)

    ``` pony
    new val create(
      value: USize val)
    : USize val^
    ```

    #### Parameters

    - value: [USize](index) val

    #### Returns

    - [USize](index) val^
- name: USize.ctz()
  id: builtin-usize#ctz
  summary: null
  belongs_to: USize
  description: |-
    ### ctz

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L478)

    ``` pony
    fun box ctz()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.ctz_unsafe()
  id: builtin-usize#ctz_unsafe
  summary: Unsafe operation
  belongs_to: USize
  description: |-
    ### ctz_unsafe

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L496)

    Unsafe operation. If this is 0, the result is undefined.

    ``` pony
    fun box ctz_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.div()
  id: builtin-usize#div
  summary: null
  belongs_to: USize
  description: |-
    ### div

    ``` pony
    fun box div(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.div_partial()
  id: builtin-usize#div_partial
  summary: null
  belongs_to: USize
  description: |-
    ### div_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L550)

    ``` pony
    fun box div_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.div_unsafe()
  id: builtin-usize#div_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### div_unsafe

    ``` pony
    fun box div_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.divc()
  id: builtin-usize#divc
  summary: null
  belongs_to: USize
  description: |-
    ### divc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L535)

    ``` pony
    fun box divc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.divrem()
  id: builtin-usize#divrem
  summary: null
  belongs_to: USize
  description: |-
    ### divrem

    ``` pony
    fun box divrem(
      y: USize val)
    : (USize val , USize val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [USize](index) val)

    &nbsp;
- name: USize.divrem_partial()
  id: builtin-usize#divrem_partial
  summary: null
  belongs_to: USize
  description: |-
    ### divrem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L556)

    ``` pony
    fun box divrem_partial(
      y: USize val)
    : (USize val , USize val) ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [USize](index) val) ?

    &nbsp;
- name: USize.divrem_unsafe()
  id: builtin-usize#divrem_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### divrem_unsafe

    ``` pony
    fun box divrem_unsafe(
      y: USize val)
    : (USize val , USize val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [USize](index) val)

    &nbsp;
- name: USize.eq()
  id: builtin-usize#eq
  summary: null
  belongs_to: USize
  description: |-
    ### eq

    ``` pony
    fun box eq(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.f32()
  id: builtin-usize#f32
  summary: null
  belongs_to: USize
  description: |-
    ### f32

    ``` pony
    fun box f32()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: USize.f32_unsafe()
  id: builtin-usize#f32_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### f32_unsafe

    ``` pony
    fun box f32_unsafe()
    : F32 val
    ```

    #### Returns

    - [F32](builtin-f32) val

    &nbsp;
- name: USize.f64()
  id: builtin-usize#f64
  summary: null
  belongs_to: USize
  description: |-
    ### f64

    ``` pony
    fun box f64()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: USize.f64_unsafe()
  id: builtin-usize#f64_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### f64_unsafe

    ``` pony
    fun box f64_unsafe()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: USize.fld()
  id: builtin-usize#fld
  summary: null
  belongs_to: USize
  description: |-
    ### fld

    ``` pony
    fun box fld(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.fld_partial()
  id: builtin-usize#fld_partial
  summary: null
  belongs_to: USize
  description: |-
    ### fld_partial

    ``` pony
    fun box fld_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.fld_unsafe()
  id: builtin-usize#fld_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### fld_unsafe

    ``` pony
    fun box fld_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.fldc()
  id: builtin-usize#fldc
  summary: null
  belongs_to: USize
  description: |-
    ### fldc

    ``` pony
    fun box fldc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.from()
  id: builtin-usize#froma-i8-val-i16-val-i32-val-i64-val-i128-val-ilong-val-isize-val-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-f32-val-f64-val-reala-val
  summary: null
  belongs_to: USize
  description: "### from\\[A: (([I8](builtin-i8) val \\| [I16](builtin-i16) val \\| [I32](builtin-i32) val \\| [I64](builtin-i64) val \\| [I128](builtin-i128) val \\| [ILong](builtin-ilong) val \\| [ISize](builtin-isize) val \\| [U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](index) val \\| [F32](builtin-f32) val \\| [F64](builtin-f64) val) & [Real](builtin-real)\\[A\\] val)\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L433)\n\n``` pony\nnew val from[A: ((I8 val | I16 val | I32 val | \n    I64 val | I128 val | ILong val | \n    ISize val | U8 val | U16 val | \n    U32 val | U64 val | U128 val | \n    ULong val | USize val | F32 val | \n    F64 val) & Real[A] val)](\n  a: A)\n: USize val^\n```\n\n#### Parameters\n\n- a: A\n\n#### Returns\n\n- [USize](index) val^\n\n&nbsp;"
- name: USize.ge()
  id: builtin-usize#ge
  summary: null
  belongs_to: USize
  description: |-
    ### ge

    ``` pony
    fun box ge(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.gt()
  id: builtin-usize#gt
  summary: null
  belongs_to: USize
  description: |-
    ### gt

    ``` pony
    fun box gt(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.hash()
  id: builtin-usize#hash
  summary: null
  belongs_to: USize
  description: |-
    ### hash

    ``` pony
    fun box hash()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.hash64()
  id: builtin-usize#hash64
  summary: null
  belongs_to: USize
  description: |-
    ### hash64

    ``` pony
    fun box hash64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: USize.i128()
  id: builtin-usize#i128
  summary: null
  belongs_to: USize
  description: |-
    ### i128

    ``` pony
    fun box i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: USize.i128_unsafe()
  id: builtin-usize#i128_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### i128_unsafe

    ``` pony
    fun box i128_unsafe()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: USize.i16()
  id: builtin-usize#i16
  summary: null
  belongs_to: USize
  description: |-
    ### i16

    ``` pony
    fun box i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: USize.i16_unsafe()
  id: builtin-usize#i16_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### i16_unsafe

    ``` pony
    fun box i16_unsafe()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: USize.i32()
  id: builtin-usize#i32
  summary: null
  belongs_to: USize
  description: |-
    ### i32

    ``` pony
    fun box i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: USize.i32_unsafe()
  id: builtin-usize#i32_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### i32_unsafe

    ``` pony
    fun box i32_unsafe()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: USize.i64()
  id: builtin-usize#i64
  summary: null
  belongs_to: USize
  description: |-
    ### i64

    ``` pony
    fun box i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: USize.i64_unsafe()
  id: builtin-usize#i64_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### i64_unsafe

    ``` pony
    fun box i64_unsafe()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: USize.i8()
  id: builtin-usize#i8
  summary: null
  belongs_to: USize
  description: |-
    ### i8

    ``` pony
    fun box i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: USize.i8_unsafe()
  id: builtin-usize#i8_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### i8_unsafe

    ``` pony
    fun box i8_unsafe()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: USize.ilong()
  id: builtin-usize#ilong
  summary: null
  belongs_to: USize
  description: |-
    ### ilong

    ``` pony
    fun box ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: USize.ilong_unsafe()
  id: builtin-usize#ilong_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### ilong_unsafe

    ``` pony
    fun box ilong_unsafe()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: USize.isize()
  id: builtin-usize#isize
  summary: null
  belongs_to: USize
  description: |-
    ### isize

    ``` pony
    fun box isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: USize.isize_unsafe()
  id: builtin-usize#isize_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### isize_unsafe

    ``` pony
    fun box isize_unsafe()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: USize.le()
  id: builtin-usize#le
  summary: null
  belongs_to: USize
  description: |-
    ### le

    ``` pony
    fun box le(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.lt()
  id: builtin-usize#lt
  summary: null
  belongs_to: USize
  description: |-
    ### lt

    ``` pony
    fun box lt(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.max()
  id: builtin-usize#max
  summary: null
  belongs_to: USize
  description: |-
    ### max

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L512)

    ``` pony
    fun box max(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.max_value()
  id: builtin-usize#max_value
  summary: null
  belongs_to: USize
  description: |-
    ### max_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L437)

    ``` pony
    new val max_value()
    : USize val^
    ```

    #### Returns

    - [USize](index) val^

    ## Public Functions
- name: USize.min()
  id: builtin-usize#min
  summary: null
  belongs_to: USize
  description: |-
    ### min

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L511)

    ``` pony
    fun box min(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.min_value()
  id: builtin-usize#min_value
  summary: null
  belongs_to: USize
  description: |-
    ### min_value

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L435)

    ``` pony
    new val min_value()
    : USize val^
    ```

    #### Returns

    - [USize](index) val^

    &nbsp;
- name: USize.mod()
  id: builtin-usize#mod
  summary: null
  belongs_to: USize
  description: |-
    ### mod

    ``` pony
    fun box mod(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.mod_partial()
  id: builtin-usize#mod_partial
  summary: null
  belongs_to: USize
  description: |-
    ### mod_partial

    ``` pony
    fun box mod_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.mod_unsafe()
  id: builtin-usize#mod_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### mod_unsafe

    ``` pony
    fun box mod_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.modc()
  id: builtin-usize#modc
  summary: null
  belongs_to: USize
  description: |-
    ### modc

    ``` pony
    fun box modc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.mul()
  id: builtin-usize#mul
  summary: null
  belongs_to: USize
  description: |-
    ### mul

    ``` pony
    fun box mul(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.mul_partial()
  id: builtin-usize#mul_partial
  summary: null
  belongs_to: USize
  description: |-
    ### mul_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L547)

    ``` pony
    fun box mul_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.mul_unsafe()
  id: builtin-usize#mul_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### mul_unsafe

    ``` pony
    fun box mul_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.mulc()
  id: builtin-usize#mulc
  summary: null
  belongs_to: USize
  description: |-
    ### mulc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L528)

    ``` pony
    fun box mulc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.ne()
  id: builtin-usize#ne
  summary: null
  belongs_to: USize
  description: |-
    ### ne

    ``` pony
    fun box ne(
      y: USize val)
    : Bool val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: USize.neg()
  id: builtin-usize#neg
  summary: null
  belongs_to: USize
  description: |-
    ### neg

    ``` pony
    fun box neg()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.neg_unsafe()
  id: builtin-usize#neg_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### neg_unsafe

    ``` pony
    fun box neg_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.next_pow2()
  id: builtin-usize#next_pow2
  summary: null
  belongs_to: USize
  description: |-
    ### next_pow2

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L444)

    ``` pony
    fun box next_pow2()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.op_and()
  id: builtin-usize#op_and
  summary: null
  belongs_to: USize
  description: |-
    ### op_and

    ``` pony
    fun box op_and(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.op_not()
  id: builtin-usize#op_not
  summary: null
  belongs_to: USize
  description: |-
    ### op_not

    ``` pony
    fun box op_not()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.op_or()
  id: builtin-usize#op_or
  summary: null
  belongs_to: USize
  description: |-
    ### op_or

    ``` pony
    fun box op_or(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.op_xor()
  id: builtin-usize#op_xor
  summary: null
  belongs_to: USize
  description: |-
    ### op_xor

    ``` pony
    fun box op_xor(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.popcount()
  id: builtin-usize#popcount
  summary: null
  belongs_to: USize
  description: |-
    ### popcount

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L464)

    ``` pony
    fun box popcount()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.rem()
  id: builtin-usize#rem
  summary: null
  belongs_to: USize
  description: |-
    ### rem

    ``` pony
    fun box rem(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.rem_partial()
  id: builtin-usize#rem_partial
  summary: null
  belongs_to: USize
  description: |-
    ### rem_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L553)

    ``` pony
    fun box rem_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.rem_unsafe()
  id: builtin-usize#rem_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### rem_unsafe

    ``` pony
    fun box rem_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.remc()
  id: builtin-usize#remc
  summary: null
  belongs_to: USize
  description: |-
    ### remc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L538)

    ``` pony
    fun box remc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.rotl()
  id: builtin-usize#rotl
  summary: null
  belongs_to: USize
  description: |-
    ### rotl

    ``` pony
    fun box rotl(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.rotr()
  id: builtin-usize#rotr
  summary: null
  belongs_to: USize
  description: |-
    ### rotr

    ``` pony
    fun box rotr(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.shl()
  id: builtin-usize#shl
  summary: null
  belongs_to: USize
  description: |-
    ### shl

    ``` pony
    fun box shl(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.shl_unsafe()
  id: builtin-usize#shl_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### shl_unsafe

    ``` pony
    fun box shl_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.shr()
  id: builtin-usize#shr
  summary: null
  belongs_to: USize
  description: |-
    ### shr

    ``` pony
    fun box shr(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.shr_unsafe()
  id: builtin-usize#shr_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### shr_unsafe

    ``` pony
    fun box shr_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.string()
  id: builtin-usize#string
  summary: null
  belongs_to: USize
  description: |-
    ### string

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^

    &nbsp;
- name: USize.sub()
  id: builtin-usize#sub
  summary: null
  belongs_to: USize
  description: |-
    ### sub

    ``` pony
    fun box sub(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.sub_partial()
  id: builtin-usize#sub_partial
  summary: null
  belongs_to: USize
  description: |-
    ### sub_partial

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L544)

    ``` pony
    fun box sub_partial(
      y: USize val)
    : USize val ?
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val ?

    &nbsp;
- name: USize.sub_unsafe()
  id: builtin-usize#sub_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### sub_unsafe

    ``` pony
    fun box sub_unsafe(
      y: USize val)
    : USize val
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.subc()
  id: builtin-usize#subc
  summary: null
  belongs_to: USize
  description: |-
    ### subc

    [\[Source\]](https://stdlib.ponylang.io/src/builtin/unsigned/#L521)

    ``` pony
    fun box subc(
      y: USize val)
    : (USize val , Bool val)
    ```

    #### Parameters

    - y: [USize](index) val

    #### Returns

    - ([USize](index) val , [Bool](builtin-bool) val)

    &nbsp;
- name: USize.u128()
  id: builtin-usize#u128
  summary: null
  belongs_to: USize
  description: |-
    ### u128

    ``` pony
    fun box u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: USize.u128_unsafe()
  id: builtin-usize#u128_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### u128_unsafe

    ``` pony
    fun box u128_unsafe()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: USize.u16()
  id: builtin-usize#u16
  summary: null
  belongs_to: USize
  description: |-
    ### u16

    ``` pony
    fun box u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: USize.u16_unsafe()
  id: builtin-usize#u16_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### u16_unsafe

    ``` pony
    fun box u16_unsafe()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: USize.u32()
  id: builtin-usize#u32
  summary: null
  belongs_to: USize
  description: |-
    ### u32

    ``` pony
    fun box u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: USize.u32_unsafe()
  id: builtin-usize#u32_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### u32_unsafe

    ``` pony
    fun box u32_unsafe()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: USize.u64()
  id: builtin-usize#u64
  summary: null
  belongs_to: USize
  description: |-
    ### u64

    ``` pony
    fun box u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: USize.u64_unsafe()
  id: builtin-usize#u64_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### u64_unsafe

    ``` pony
    fun box u64_unsafe()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: USize.u8()
  id: builtin-usize#u8
  summary: null
  belongs_to: USize
  description: |-
    ### u8

    ``` pony
    fun box u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: USize.u8_unsafe()
  id: builtin-usize#u8_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### u8_unsafe

    ``` pony
    fun box u8_unsafe()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: USize.ulong()
  id: builtin-usize#ulong
  summary: null
  belongs_to: USize
  description: |-
    ### ulong

    ``` pony
    fun box ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: USize.ulong_unsafe()
  id: builtin-usize#ulong_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### ulong_unsafe

    ``` pony
    fun box ulong_unsafe()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: USize.usize()
  id: builtin-usize#usize_1
  summary: null
  belongs_to: USize
  description: |-
    ### usize

    ``` pony
    fun box usize()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: USize.usize_unsafe()
  id: builtin-usize#usize_unsafe
  summary: null
  belongs_to: USize
  description: |-
    ### usize_unsafe

    ``` pony
    fun box usize_unsafe()
    : USize val
    ```

    #### Returns

    - [USize](index) val

    &nbsp;
- name: Vec
  id: collections-persistent-vec
  summary: A persistent vector based on the Hash Array Mapped Trie from 'Ideal Hash Trees' by Phil Bagwell
  description: "# Vec\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L3)\n\nA persistent vector based on the Hash Array Mapped Trie from 'Ideal Hash Trees' by Phil Bagwell.\n\n``` pony\nclass val Vec[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L14)\n\n``` pony\nnew val create()\n: Vec[A] val^\n```\n\n#### Returns\n\n- [Vec](index)\\[A\\] val^\n\n## Public Functions\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L31)\n\nReturn the amount of values in the vector.\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L43)\n\nGet the i-th element, raising an error if the index is out of bounds.\n\n``` pony\nfun box apply(\n  i: USize val)\n: val->A ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- val-\\>A ?\n\n### update\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L53)\n\nReturn a vector with the i-th element changed, raising an error if the index is out of bounds.\n\n``` pony\nfun val update(\n  i: USize val,\n  value: val->A)\n: Vec[A] val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: val-\\>A\n\n#### Returns\n\n- [Vec](index)\\[A\\] val ?\n\n### insert\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L67)\n\nReturn a vector with an element inserted. Elements after this are moved up by one index, extending the vector. An out of bounds index raises an error.\n\n``` pony\nfun val insert(\n  i: USize val,\n  value: val->A)\n: Vec[A] val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- value: val-\\>A\n\n#### Returns\n\n- [Vec](index)\\[A\\] val ?\n\n### delete\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L81)\n\nReturn a vector with an element deleted. Elements after this are moved down by one index, compacting the vector. An out of bounds index raises an error.\n\n``` pony\nfun val delete(\n  i: USize val)\n: Vec[A] val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n\n#### Returns\n\n- [Vec](index)\\[A\\] val ?\n\n### remove\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L94)\n\nReturn a vector with n elements removed, beginning at index i.\n\n``` pony\nfun val remove(\n  i: USize val,\n  n: USize val)\n: Vec[A] val ?\n```\n\n#### Parameters\n\n- i: [USize](builtin-usize) val\n- n: [USize](builtin-usize) val\n\n#### Returns\n\n- [Vec](index)\\[A\\] val ?\n\n### push\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L106)\n\nReturn a vector with the value added to the end.\n\n``` pony\nfun val push(\n  value: val->A)\n: Vec[A] val\n```\n\n#### Parameters\n\n- value: val-\\>A\n\n#### Returns\n\n- [Vec](index)\\[A\\] val\n\n### pop\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L138)\n\nReturn a vector with the value at the end removed.\n\n``` pony\nfun val pop()\n: Vec[A] val ?\n```\n\n#### Returns\n\n- [Vec](index)\\[A\\] val ?\n\n### concat\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L156)\n\nReturn a vector with the values of the given iterator added to the end.\n\n``` pony\nfun val concat(\n  iter: Iterator[val->A] ref)\n: Vec[A] val\n```\n\n#### Parameters\n\n- iter: [Iterator](builtin-iterator)\\[val-\\>A\\] ref\n\n#### Returns\n\n- [Vec](index)\\[A\\] val\n\n### find\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L166)\n\nFind the `nth` appearance of `value` from the beginning of the vector, starting at `offset` and examining higher indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.\n\nBy default, the search starts at the first element of the vector, returns the first instance of `value` found, and uses object identity for comparison.\n\n``` pony\nfun val find(\n  value: val->A,\n  offset: USize val = 0,\n  nth: USize val = 0,\n  predicate: {(A, A): Bool}[A] val = lambda)\n: USize val ?\n```\n\n#### Parameters\n\n- value: val-\\>A\n- offset: [USize](builtin-usize) val = 0\n- nth: [USize](builtin-usize) val = 0\n- predicate: {(A, A): Bool}\\[A\\] val = lambda\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n### contains\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L192)\n\nReturns true if the vector contains `value`, false otherwise.\n\n``` pony\nfun val contains(\n  value: val->A,\n  predicate: {(A, A): Bool}[A] val = lambda)\n: Bool val\n```\n\n#### Parameters\n\n- value: val-\\>A\n- predicate: {(A, A): Bool}\\[A\\] val = lambda\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### slice\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L205)\n\nReturn a vector that is a clone of a portion of this vector. The range is exclusive and saturated.\n\n``` pony\nfun val slice(\n  from: USize val = 0,\n  to: USize val = call,\n  step: USize val = 1)\n: Vec[A] val\n```\n\n#### Parameters\n\n- from: [USize](builtin-usize) val = 0\n- to: [USize](builtin-usize) val = call\n- step: [USize](builtin-usize) val = 1\n\n#### Returns\n\n- [Vec](index)\\[A\\] val\n\n### reverse\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L216)\n\nReturn a vector with the elements in reverse order.\n\n``` pony\nfun val reverse()\n: Vec[A] val\n```\n\n#### Returns\n\n- [Vec](index)\\[A\\] val\n\n### keys\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L226)\n\nReturn an iterator over the indices in the vector.\n\n``` pony\nfun val keys()\n: VecKeys[A] ref^\n```\n\n#### Returns\n\n- [VecKeys](collections-persistent-veckeys)\\[A\\] ref^\n\n### values\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L232)\n\nReturn an iterator over the values in the vector.\n\n``` pony\nfun val values()\n: VecValues[A] ref^\n```\n\n#### Returns\n\n- [VecValues](collections-persistent-vecvalues)\\[A\\] ref^\n\n### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L238)\n\nReturn an iterator over the (index, value) pairs in the vector.\n\n``` pony\nfun val pairs()\n: VecPairs[A] ref^\n```\n\n#### Returns\n\n- [VecPairs](collections-persistent-vecpairs)\\[A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Vec](https://stdlib.ponylang.io/collections-persistent-Vec)"
- name: Vec.apply()
  id: collections-persistent-vec#apply
  summary: Get the i-th element, raising an error if the index is out of bounds
  belongs_to: Vec
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L43)

    Get the i-th element, raising an error if the index is out of bounds.

    ``` pony
    fun box apply(
      i: USize val)
    : val->A ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - val-\>A ?

    &nbsp;
- name: Vec.concat()
  id: collections-persistent-vec#concat
  summary: Return a vector with the values of the given iterator added to the end
  belongs_to: Vec
  description: |-
    ### concat

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L156)

    Return a vector with the values of the given iterator added to the end.

    ``` pony
    fun val concat(
      iter: Iterator[val->A] ref)
    : Vec[A] val
    ```

    #### Parameters

    - iter: [Iterator](builtin-iterator)\[val-\>A\] ref

    #### Returns

    - [Vec](index)\[A\] val

    &nbsp;
- name: Vec.contains()
  id: collections-persistent-vec#contains
  summary: Returns true if the vector contains value, false otherwise
  belongs_to: Vec
  description: |-
    ### contains

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L192)

    Returns true if the vector contains `value`, false otherwise.

    ``` pony
    fun val contains(
      value: val->A,
      predicate: {(A, A): Bool}[A] val = lambda)
    : Bool val
    ```

    #### Parameters

    - value: val-\>A
    - predicate: {(A, A): Bool}\[A\] val = lambda

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Vec.create()
  id: collections-persistent-vec#create
  summary: null
  belongs_to: Vec
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L14)

    ``` pony
    new val create()
    : Vec[A] val^
    ```

    #### Returns

    - [Vec](index)\[A\] val^

    ## Public Functions
- name: Vec.delete()
  id: collections-persistent-vec#delete
  summary: Return a vector with an element deleted
  belongs_to: Vec
  description: |-
    ### delete

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L81)

    Return a vector with an element deleted. Elements after this are moved down by one index, compacting the vector. An out of bounds index raises an error.

    ``` pony
    fun val delete(
      i: USize val)
    : Vec[A] val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val

    #### Returns

    - [Vec](index)\[A\] val ?

    &nbsp;
- name: Vec.find()
  id: collections-persistent-vec#find
  summary: Find the nth appearance of value from the beginning of the vector, starting at offset and examining higher indices, and using the supplied predicate for comparisons
  belongs_to: Vec
  description: |-
    ### find

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L166)

    Find the `nth` appearance of `value` from the beginning of the vector, starting at `offset` and examining higher indices, and using the supplied `predicate` for comparisons. Returns the index of the value, or raise an error if the value isn't present.

    By default, the search starts at the first element of the vector, returns the first instance of `value` found, and uses object identity for comparison.

    ``` pony
    fun val find(
      value: val->A,
      offset: USize val = 0,
      nth: USize val = 0,
      predicate: {(A, A): Bool}[A] val = lambda)
    : USize val ?
    ```

    #### Parameters

    - value: val-\>A
    - offset: [USize](builtin-usize) val = 0
    - nth: [USize](builtin-usize) val = 0
    - predicate: {(A, A): Bool}\[A\] val = lambda

    #### Returns

    - [USize](builtin-usize) val ?

    &nbsp;
- name: Vec.insert()
  id: collections-persistent-vec#insert
  summary: Return a vector with an element inserted
  belongs_to: Vec
  description: |-
    ### insert

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L67)

    Return a vector with an element inserted. Elements after this are moved up by one index, extending the vector. An out of bounds index raises an error.

    ``` pony
    fun val insert(
      i: USize val,
      value: val->A)
    : Vec[A] val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: val-\>A

    #### Returns

    - [Vec](index)\[A\] val ?

    &nbsp;
- name: Vec.keys()
  id: collections-persistent-vec#keys
  summary: Return an iterator over the indices in the vector
  belongs_to: Vec
  description: |-
    ### keys

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L226)

    Return an iterator over the indices in the vector.

    ``` pony
    fun val keys()
    : VecKeys[A] ref^
    ```

    #### Returns

    - [VecKeys](collections-persistent-veckeys)\[A\] ref^

    &nbsp;
- name: Vec.pairs()
  id: collections-persistent-vec#pairs
  summary: Return an iterator over the (index, value) pairs in the vector
  belongs_to: Vec
  description: "### pairs\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L238)\n\nReturn an iterator over the (index, value) pairs in the vector.\n\n``` pony\nfun val pairs()\n: VecPairs[A] ref^\n```\n\n#### Returns\n\n- [VecPairs](collections-persistent-vecpairs)\\[A\\] ref^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-Vec](https://stdlib.ponylang.io/collections-persistent-Vec)"
- name: Vec.pop()
  id: collections-persistent-vec#pop
  summary: Return a vector with the value at the end removed
  belongs_to: Vec
  description: |-
    ### pop

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L138)

    Return a vector with the value at the end removed.

    ``` pony
    fun val pop()
    : Vec[A] val ?
    ```

    #### Returns

    - [Vec](index)\[A\] val ?

    &nbsp;
- name: Vec.push()
  id: collections-persistent-vec#push
  summary: Return a vector with the value added to the end
  belongs_to: Vec
  description: |-
    ### push

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L106)

    Return a vector with the value added to the end.

    ``` pony
    fun val push(
      value: val->A)
    : Vec[A] val
    ```

    #### Parameters

    - value: val-\>A

    #### Returns

    - [Vec](index)\[A\] val

    &nbsp;
- name: Vec.remove()
  id: collections-persistent-vec#remove
  summary: Return a vector with n elements removed, beginning at index i
  belongs_to: Vec
  description: |-
    ### remove

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L94)

    Return a vector with n elements removed, beginning at index i.

    ``` pony
    fun val remove(
      i: USize val,
      n: USize val)
    : Vec[A] val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - n: [USize](builtin-usize) val

    #### Returns

    - [Vec](index)\[A\] val ?

    &nbsp;
- name: Vec.reverse()
  id: collections-persistent-vec#reverse
  summary: Return a vector with the elements in reverse order
  belongs_to: Vec
  description: |-
    ### reverse

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L216)

    Return a vector with the elements in reverse order.

    ``` pony
    fun val reverse()
    : Vec[A] val
    ```

    #### Returns

    - [Vec](index)\[A\] val

    &nbsp;
- name: Vec.size()
  id: collections-persistent-vec#size
  summary: Return the amount of values in the vector
  belongs_to: Vec
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L31)

    Return the amount of values in the vector.

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val
- name: Vec.slice()
  id: collections-persistent-vec#slice
  summary: Return a vector that is a clone of a portion of this vector
  belongs_to: Vec
  description: |-
    ### slice

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L205)

    Return a vector that is a clone of a portion of this vector. The range is exclusive and saturated.

    ``` pony
    fun val slice(
      from: USize val = 0,
      to: USize val = call,
      step: USize val = 1)
    : Vec[A] val
    ```

    #### Parameters

    - from: [USize](builtin-usize) val = 0
    - to: [USize](builtin-usize) val = call
    - step: [USize](builtin-usize) val = 1

    #### Returns

    - [Vec](index)\[A\] val

    &nbsp;
- name: Vec.update()
  id: collections-persistent-vec#update
  summary: Return a vector with the i-th element changed, raising an error if the index is out of bounds
  belongs_to: Vec
  description: |-
    ### update

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L53)

    Return a vector with the i-th element changed, raising an error if the index is out of bounds.

    ``` pony
    fun val update(
      i: USize val,
      value: val->A)
    : Vec[A] val ?
    ```

    #### Parameters

    - i: [USize](builtin-usize) val
    - value: val-\>A

    #### Returns

    - [Vec](index)\[A\] val ?

    &nbsp;
- name: Vec.values()
  id: collections-persistent-vec#values
  summary: Return an iterator over the values in the vector
  belongs_to: Vec
  description: |-
    ### values

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L232)

    Return an iterator over the values in the vector.

    ``` pony
    fun val values()
    : VecValues[A] ref^
    ```

    #### Returns

    - [VecValues](collections-persistent-vecvalues)\[A\] ref^

    &nbsp;
- name: VecKeys
  id: collections-persistent-veckeys
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# VecKeys\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L262)\n\n``` pony\nclass ref VecKeys[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L265)\n\n``` pony\nnew ref create(\n  v: Vec[A] val)\n: VecKeys[A] ref^\n```\n\n#### Parameters\n\n- v: [Vec](collections-persistent-vec)\\[A\\] val\n\n#### Returns\n\n- [VecKeys](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L267)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L269)\n\n``` pony\nfun ref next()\n: USize val ?\n```\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecKeys](https://stdlib.ponylang.io/collections-persistent-VecKeys)"
- name: VecKeys.create()
  id: collections-persistent-veckeys#create
  summary: null
  belongs_to: VecKeys
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L265)

    ``` pony
    new ref create(
      v: Vec[A] val)
    : VecKeys[A] ref^
    ```

    #### Parameters

    - v: [Vec](collections-persistent-vec)\[A\] val

    #### Returns

    - [VecKeys](index)\[A\] ref^

    ## Public Functions
- name: VecKeys.has_next()
  id: collections-persistent-veckeys#has_next
  summary: null
  belongs_to: VecKeys
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L267)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: VecKeys.next()
  id: collections-persistent-veckeys#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: VecKeys
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L269)\n\n``` pony\nfun ref next()\n: USize val ?\n```\n\n#### Returns\n\n- [USize](builtin-usize) val ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecKeys](https://stdlib.ponylang.io/collections-persistent-VecKeys)"
- name: VecPairs
  id: collections-persistent-vecpairs
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# VecPairs\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L280)\n\n``` pony\nclass ref VecPairs[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L285)\n\n``` pony\nnew ref create(\n  v: Vec[A] val)\n: VecPairs[A] ref^\n```\n\n#### Parameters\n\n- v: [Vec](collections-persistent-vec)\\[A\\] val\n\n#### Returns\n\n- [VecPairs](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L288)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L291)\n\n``` pony\nfun ref next()\n: (USize val , A) ?\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , A) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecPairs](https://stdlib.ponylang.io/collections-persistent-VecPairs)"
- name: VecPairs.create()
  id: collections-persistent-vecpairs#create
  summary: null
  belongs_to: VecPairs
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L285)

    ``` pony
    new ref create(
      v: Vec[A] val)
    : VecPairs[A] ref^
    ```

    #### Parameters

    - v: [Vec](collections-persistent-vec)\[A\] val

    #### Returns

    - [VecPairs](index)\[A\] ref^

    ## Public Functions
- name: VecPairs.has_next()
  id: collections-persistent-vecpairs#has_next
  summary: null
  belongs_to: VecPairs
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L288)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: VecPairs.next()
  id: collections-persistent-vecpairs#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: VecPairs
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L291)\n\n``` pony\nfun ref next()\n: (USize val , A) ?\n```\n\n#### Returns\n\n- ([USize](builtin-usize) val , A) ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecPairs](https://stdlib.ponylang.io/collections-persistent-VecPairs)"
- name: VecValues
  id: collections-persistent-vecvalues
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# VecValues\\[A: [Any](builtin-any) \\#share\\]\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L271)\n\n``` pony\nclass ref VecValues[A: Any #share]\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L274)\n\n``` pony\nnew ref create(\n  v: Vec[A] val)\n: VecValues[A] ref^\n```\n\n#### Parameters\n\n- v: [Vec](collections-persistent-vec)\\[A\\] val\n\n#### Returns\n\n- [VecValues](index)\\[A\\] ref^\n\n## Public Functions\n\n### has_next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L276)\n\n``` pony\nfun box has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L278)\n\n``` pony\nfun ref next()\n: val->A ?\n```\n\n#### Returns\n\n- val-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecValues](https://stdlib.ponylang.io/collections-persistent-VecValues)"
- name: VecValues.create()
  id: collections-persistent-vecvalues#create
  summary: null
  belongs_to: VecValues
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L274)

    ``` pony
    new ref create(
      v: Vec[A] val)
    : VecValues[A] ref^
    ```

    #### Parameters

    - v: [Vec](collections-persistent-vec)\[A\] val

    #### Returns

    - [VecValues](index)\[A\] ref^

    ## Public Functions
- name: VecValues.has_next()
  id: collections-persistent-vecvalues#has_next
  summary: null
  belongs_to: VecValues
  description: |-
    ### has_next

    [\[Source\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L276)

    ``` pony
    fun box has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val
- name: VecValues.next()
  id: collections-persistent-vecvalues#next
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: VecValues
  description: "### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/collections-persistent/vec/#L278)\n\n``` pony\nfun ref next()\n: val->A ?\n```\n\n#### Returns\n\n- val-\\>A ?\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/collections-persistent-VecValues](https://stdlib.ponylang.io/collections-persistent-VecValues)"
- name: WaitpidError
  id: process-waitpiderror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# WaitpidError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L47)\n\n``` pony\nprimitive val WaitpidError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L47)\n\n``` pony\nnew val create()\n: WaitpidError val^\n```\n\n#### Returns\n\n- [WaitpidError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L48)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L48)\n\n``` pony\nfun box eq(\n  that: WaitpidError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WaitpidError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L48)\n\n``` pony\nfun box ne(\n  that: WaitpidError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WaitpidError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-WaitpidError](https://stdlib.ponylang.io/process-WaitpidError)"
- name: WaitpidError.create()
  id: process-waitpiderror#create
  summary: null
  belongs_to: WaitpidError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L47)

    ``` pony
    new val create()
    : WaitpidError val^
    ```

    #### Returns

    - [WaitpidError](index) val^

    ## Public Functions
- name: WaitpidError.eq()
  id: process-waitpiderror#eq
  summary: null
  belongs_to: WaitpidError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L48)

    ``` pony
    fun box eq(
      that: WaitpidError val)
    : Bool val
    ```

    #### Parameters

    - that: [WaitpidError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: WaitpidError.ne()
  id: process-waitpiderror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: WaitpidError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L48)\n\n``` pony\nfun box ne(\n  that: WaitpidError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WaitpidError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-WaitpidError](https://stdlib.ponylang.io/process-WaitpidError)"
- name: WaitpidError.string()
  id: process-waitpiderror#string
  summary: null
  belongs_to: WaitpidError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L48)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: WalkHandler
  id: files-walkhandler
  summary: A handler for FilePath.walk
  description: "# WalkHandler\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L3)\n\nA handler for `FilePath.walk`.\n\n``` pony\ninterface ref WalkHandler\n```\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L7)\n\n``` pony\nfun ref apply(\n  dir_path: FilePath val,\n  dir_entries: Array[String val] ref)\n: None val\n```\n\n#### Parameters\n\n- dir_path: [FilePath](files-filepath) val\n- dir_entries: [Array](builtin-array)\\[[String](builtin-string) val\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-WalkHandler](https://stdlib.ponylang.io/files-WalkHandler)"
- name: WalkHandler.apply()
  id: files-walkhandler#apply
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: WalkHandler
  description: "### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/files/file_path/#L7)\n\n``` pony\nfun ref apply(\n  dir_path: FilePath val,\n  dir_entries: Array[String val] ref)\n: None val\n```\n\n#### Parameters\n\n- dir_path: [FilePath](files-filepath) val\n- dir_entries: [Array](builtin-array)\\[[String](builtin-string) val\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/files-WalkHandler](https://stdlib.ponylang.io/files-WalkHandler)"
- name: Warn
  id: logger-warn
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# Warn\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L104)\n\n``` pony\nprimitive val Warn\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L104)\n\n``` pony\nnew val create()\n: Warn val^\n```\n\n#### Returns\n\n- [Warn](index) val^\n\n## Public Functions\n\n### apply\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L105)\n\n``` pony\nfun box apply()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L105)\n\n``` pony\nfun box eq(\n  that: Warn val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Warn](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L105)\n\n``` pony\nfun box ne(\n  that: Warn val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Warn](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Warn](https://stdlib.ponylang.io/logger-Warn)"
- name: Warn.apply()
  id: logger-warn#apply
  summary: null
  belongs_to: Warn
  description: |-
    ### apply

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L105)

    ``` pony
    fun box apply()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val
- name: Warn.create()
  id: logger-warn#create
  summary: null
  belongs_to: Warn
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L104)

    ``` pony
    new val create()
    : Warn val^
    ```

    #### Returns

    - [Warn](index) val^

    ## Public Functions
- name: Warn.eq()
  id: logger-warn#eq
  summary: null
  belongs_to: Warn
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/logger/logger/#L105)

    ``` pony
    fun box eq(
      that: Warn val)
    : Bool val
    ```

    #### Parameters

    - that: [Warn](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: Warn.ne()
  id: logger-warn#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: Warn
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/logger/logger/#L105)\n\n``` pony\nfun box ne(\n  that: Warn val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [Warn](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/logger-Warn](https://stdlib.ponylang.io/logger-Warn)"
- name: WriteError
  id: process-writeerror
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  description: "# WriteError\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L50)\n\n``` pony\nprimitive val WriteError\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L50)\n\n``` pony\nnew val create()\n: WriteError val^\n```\n\n#### Returns\n\n- [WriteError](index) val^\n\n## Public Functions\n\n### string\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L51)\n\n``` pony\nfun box string()\n: String iso^\n```\n\n#### Returns\n\n- [String](builtin-string) iso^\n\n### eq\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L51)\n\n``` pony\nfun box eq(\n  that: WriteError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WriteError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L51)\n\n``` pony\nfun box ne(\n  that: WriteError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WriteError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-WriteError](https://stdlib.ponylang.io/process-WriteError)"
- name: WriteError.create()
  id: process-writeerror#create
  summary: null
  belongs_to: WriteError
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L50)

    ``` pony
    new val create()
    : WriteError val^
    ```

    #### Returns

    - [WriteError](index) val^

    ## Public Functions
- name: WriteError.eq()
  id: process-writeerror#eq
  summary: null
  belongs_to: WriteError
  description: |-
    ### eq

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L51)

    ``` pony
    fun box eq(
      that: WriteError val)
    : Bool val
    ```

    #### Parameters

    - that: [WriteError](index) val

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: WriteError.ne()
  id: process-writeerror#ne
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: WriteError
  description: "### ne\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/process/process_error/#L51)\n\n``` pony\nfun box ne(\n  that: WriteError val)\n: Bool val\n```\n\n#### Parameters\n\n- that: [WriteError](index) val\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/process-WriteError](https://stdlib.ponylang.io/process-WriteError)"
- name: WriteError.string()
  id: process-writeerror#string
  summary: null
  belongs_to: WriteError
  description: |-
    ### string

    [\[Source\]](https://stdlib.ponylang.io/src/process/process_error/#L51)

    ``` pony
    fun box string()
    : String iso^
    ```

    #### Returns

    - [String](builtin-string) iso^
- name: Writer
  id: buffered-writer
  summary: A buffer for building messages
  description: "# Writer\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L1)\n\nA buffer for building messages.\n\n`Writer` provides an way to create byte sequences using common data encodings. The `Writer` manages the underlying arrays and sizes. It is useful for encoding data to send over a network or store in a file. Once a message has been built you can call `done()` to get the message's `ByteSeq`s, and you can then reuse the `Writer` for creating a new message.\n\nFor example, suppose we have a TCP-based network data protocol where messages consist of the following:\n\n- `message_length` - the number of bytes in the message as a big-endian 32-bit integer\n- `list_size` - the number of items in the following list of items as a big-endian 32-bit integer\n- zero or more items of the following data:\n- a big-endian 64-bit floating point number\n- a string that starts with a big-endian 32-bit integer that specifies the length of the string, followed by a number of bytes that represent the string\n\nA message would be something like this:\n\n``` pony\n[message_length][list_size][float1][string1][float2][string2]...\n```\n\nThe following program uses a write buffer to encode an array of tuples as a message of this type:\n\n``` pony\nuse \"buffered\"\n\nactor Main\n  new create(env: Env) =>\n    let wb = Writer\n    let messages = [[(F32(3597.82), \"Anderson\"); (F32(-7979.3), \"Graham\")]\n                    [(F32(3.14159), \"Hopper\"); (F32(-83.83), \"Jones\")]]\n    for items in messages.values() do\n      wb.i32_be((items.size() / 2).i32())\n      for (f, s) in items.values() do\n        wb.f32_be(f)\n        wb.i32_be(s.size().i32())\n        wb.write(s.array())\n      end\n      let wb_msg = Writer\n      wb_msg.i32_be(wb.size().i32())\n      wb_msg.writev(wb.done())\n      env.out.writev(wb_msg.done())\n    end\n```\n\n``` pony\nclass ref Writer\n```\n\n## Constructors\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L1)\n\n``` pony\nnew iso create()\n: Writer iso^\n```\n\n#### Returns\n\n- [Writer](index) iso^\n\n## Public Functions\n\n### reserve_chunks\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L60)\n\nReserve space for size' chunks.\n\nThis needs to be recalled after every call to `done` as `done` resets the chunks.\n\n``` pony\nfun ref reserve_chunks(\n  size': USize val)\n: None val\n```\n\n#### Parameters\n\n- size': [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### reserve_current\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L69)\n\nReserve space for size bytes in `_current`.\n\n``` pony\nfun ref reserve_current(\n  size': USize val)\n: None val\n```\n\n#### Parameters\n\n- size': [USize](builtin-usize) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### size\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L75)\n\n``` pony\nfun box size()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### u8\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L78)\n\nWrite a byte to the buffer.\n\n``` pony\nfun ref u8(\n  data: U8 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U8](builtin-u8) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L86)\n\nWrite a U16 to the buffer in little-endian byte order.\n\n``` pony\nfun ref u16_le(\n  data: U16 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L98)\n\nWrite a U16 to the buffer in big-endian byte order.\n\n``` pony\nfun ref u16_be(\n  data: U16 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U16](builtin-u16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i16_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L110)\n\nWrite an I16 to the buffer in little-endian byte order.\n\n``` pony\nfun ref i16_le(\n  data: I16 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I16](builtin-i16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i16_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L116)\n\nWrite an I16 to the buffer in big-endian byte order.\n\n``` pony\nfun ref i16_be(\n  data: I16 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I16](builtin-i16) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L122)\n\nWrite a U32 to the buffer in little-endian byte order.\n\n``` pony\nfun ref u32_le(\n  data: U32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L134)\n\nWrite a U32 to the buffer in big-endian byte order.\n\n``` pony\nfun ref u32_be(\n  data: U32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U32](builtin-u32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L146)\n\nWrite an I32 to the buffer in little-endian byte order.\n\n``` pony\nfun ref i32_le(\n  data: I32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I32](builtin-i32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L152)\n\nWrite an I32 to the buffer in big-endian byte order.\n\n``` pony\nfun ref i32_be(\n  data: I32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I32](builtin-i32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### f32_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L158)\n\nWrite an F32 to the buffer in little-endian byte order.\n\n``` pony\nfun ref f32_le(\n  data: F32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [F32](builtin-f32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### f32_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L164)\n\nWrite an F32 to the buffer in big-endian byte order.\n\n``` pony\nfun ref f32_be(\n  data: F32 val)\n: None val\n```\n\n#### Parameters\n\n- data: [F32](builtin-f32) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L170)\n\nWrite a U64 to the buffer in little-endian byte order.\n\n``` pony\nfun ref u64_le(\n  data: U64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L182)\n\nWrite a U64 to the buffer in big-endian byte order.\n\n``` pony\nfun ref u64_be(\n  data: U64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U64](builtin-u64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L194)\n\nWrite an I64 to the buffer in little-endian byte order.\n\n``` pony\nfun ref i64_le(\n  data: I64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I64](builtin-i64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L200)\n\nWrite an I64 to the buffer in big-endian byte order.\n\n``` pony\nfun ref i64_be(\n  data: I64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I64](builtin-i64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### f64_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L206)\n\nWrite an F64 to the buffer in little-endian byte order.\n\n``` pony\nfun ref f64_le(\n  data: F64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [F64](builtin-f64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### f64_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L212)\n\nWrite an F64 to the buffer in big-endian byte order.\n\n``` pony\nfun ref f64_be(\n  data: F64 val)\n: None val\n```\n\n#### Parameters\n\n- data: [F64](builtin-f64) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L218)\n\nWrite a U128 to the buffer in little-endian byte order.\n\n``` pony\nfun ref u128_le(\n  data: U128 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U128](builtin-u128) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### u128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L230)\n\nWrite a U128 to the buffer in big-endian byte order.\n\n``` pony\nfun ref u128_be(\n  data: U128 val)\n: None val\n```\n\n#### Parameters\n\n- data: [U128](builtin-u128) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i128_le\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L242)\n\nWrite an I128 to the buffer in little-endian byte order.\n\n``` pony\nfun ref i128_le(\n  data: I128 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I128](builtin-i128) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### i128_be\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L248)\n\nWrite an I128 to the buffer in big-endian byte order.\n\n``` pony\nfun ref i128_be(\n  data: I128 val)\n: None val\n```\n\n#### Parameters\n\n- data: [I128](builtin-i128) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### write\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L254)\n\nWrite a ByteSeq to the buffer.\n\n``` pony\nfun ref write(\n  data: (String val | Array[U8 val] val))\n: None val\n```\n\n#### Parameters\n\n- data: ([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\n\n#### Returns\n\n- [None](builtin-none) val\n\n### writev\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L277)\n\nWrite ByteSeqs to the buffer.\n\n``` pony\nfun ref writev(\n  data: ByteSeqIter val)\n: None val\n```\n\n#### Parameters\n\n- data: [ByteSeqIter](builtin-byteseqiter) val\n\n#### Returns\n\n- [None](builtin-none) val\n\n### done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L285)\n\nReturn an array of buffered ByteSeqs and reset the Writer's buffer.\n\n``` pony\nfun ref done()\n: Array[(String val | Array[U8 val] val)] iso^\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\\] iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/buffered-Writer](https://stdlib.ponylang.io/buffered-Writer)"
- name: Writer.create()
  id: buffered-writer#create
  summary: null
  belongs_to: Writer
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L1)

    ``` pony
    new iso create()
    : Writer iso^
    ```

    #### Returns

    - [Writer](index) iso^

    ## Public Functions
- name: Writer.done()
  id: buffered-writer#done
  summary: Return an array of buffered ByteSeqs and reset the Writer's buffer
  belongs_to: Writer
  description: "### done\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/buffered/writer/#L285)\n\nReturn an array of buffered ByteSeqs and reset the Writer's buffer.\n\n``` pony\nfun ref done()\n: Array[(String val | Array[U8 val] val)] iso^\n```\n\n#### Returns\n\n- [Array](builtin-array)\\[([String](builtin-string) val \\| [Array](builtin-array)\\[[U8](builtin-u8) val\\] val)\\] iso^\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/buffered-Writer](https://stdlib.ponylang.io/buffered-Writer)"
- name: Writer.f32_be()
  id: buffered-writer#f32_be
  summary: Write an F32 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### f32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L164)

    Write an F32 to the buffer in big-endian byte order.

    ``` pony
    fun ref f32_be(
      data: F32 val)
    : None val
    ```

    #### Parameters

    - data: [F32](builtin-f32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.f32_le()
  id: buffered-writer#f32_le
  summary: Write an F32 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### f32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L158)

    Write an F32 to the buffer in little-endian byte order.

    ``` pony
    fun ref f32_le(
      data: F32 val)
    : None val
    ```

    #### Parameters

    - data: [F32](builtin-f32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.f64_be()
  id: buffered-writer#f64_be
  summary: Write an F64 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### f64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L212)

    Write an F64 to the buffer in big-endian byte order.

    ``` pony
    fun ref f64_be(
      data: F64 val)
    : None val
    ```

    #### Parameters

    - data: [F64](builtin-f64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.f64_le()
  id: buffered-writer#f64_le
  summary: Write an F64 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### f64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L206)

    Write an F64 to the buffer in little-endian byte order.

    ``` pony
    fun ref f64_le(
      data: F64 val)
    : None val
    ```

    #### Parameters

    - data: [F64](builtin-f64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i128_be()
  id: buffered-writer#i128_be
  summary: Write an I128 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### i128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L248)

    Write an I128 to the buffer in big-endian byte order.

    ``` pony
    fun ref i128_be(
      data: I128 val)
    : None val
    ```

    #### Parameters

    - data: [I128](builtin-i128) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i128_le()
  id: buffered-writer#i128_le
  summary: Write an I128 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### i128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L242)

    Write an I128 to the buffer in little-endian byte order.

    ``` pony
    fun ref i128_le(
      data: I128 val)
    : None val
    ```

    #### Parameters

    - data: [I128](builtin-i128) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i16_be()
  id: buffered-writer#i16_be
  summary: Write an I16 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### i16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L116)

    Write an I16 to the buffer in big-endian byte order.

    ``` pony
    fun ref i16_be(
      data: I16 val)
    : None val
    ```

    #### Parameters

    - data: [I16](builtin-i16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i16_le()
  id: buffered-writer#i16_le
  summary: Write an I16 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### i16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L110)

    Write an I16 to the buffer in little-endian byte order.

    ``` pony
    fun ref i16_le(
      data: I16 val)
    : None val
    ```

    #### Parameters

    - data: [I16](builtin-i16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i32_be()
  id: buffered-writer#i32_be
  summary: Write an I32 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### i32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L152)

    Write an I32 to the buffer in big-endian byte order.

    ``` pony
    fun ref i32_be(
      data: I32 val)
    : None val
    ```

    #### Parameters

    - data: [I32](builtin-i32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i32_le()
  id: buffered-writer#i32_le
  summary: Write an I32 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### i32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L146)

    Write an I32 to the buffer in little-endian byte order.

    ``` pony
    fun ref i32_le(
      data: I32 val)
    : None val
    ```

    #### Parameters

    - data: [I32](builtin-i32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i64_be()
  id: buffered-writer#i64_be
  summary: Write an I64 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### i64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L200)

    Write an I64 to the buffer in big-endian byte order.

    ``` pony
    fun ref i64_be(
      data: I64 val)
    : None val
    ```

    #### Parameters

    - data: [I64](builtin-i64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.i64_le()
  id: buffered-writer#i64_le
  summary: Write an I64 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### i64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L194)

    Write an I64 to the buffer in little-endian byte order.

    ``` pony
    fun ref i64_le(
      data: I64 val)
    : None val
    ```

    #### Parameters

    - data: [I64](builtin-i64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.reserve_chunks()
  id: buffered-writer#reserve_chunks
  summary: Reserve space for size' chunks
  belongs_to: Writer
  description: |-
    ### reserve_chunks

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L60)

    Reserve space for size' chunks.

    This needs to be recalled after every call to `done` as `done` resets the chunks.

    ``` pony
    fun ref reserve_chunks(
      size': USize val)
    : None val
    ```

    #### Parameters

    - size': [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val
- name: Writer.reserve_current()
  id: buffered-writer#reserve_current
  summary: Reserve space for size bytes in _current
  belongs_to: Writer
  description: |-
    ### reserve_current

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L69)

    Reserve space for size bytes in `_current`.

    ``` pony
    fun ref reserve_current(
      size': USize val)
    : None val
    ```

    #### Parameters

    - size': [USize](builtin-usize) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.size()
  id: buffered-writer#size
  summary: null
  belongs_to: Writer
  description: |-
    ### size

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L75)

    ``` pony
    fun box size()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: Writer.u128_be()
  id: buffered-writer#u128_be
  summary: Write a U128 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### u128_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L230)

    Write a U128 to the buffer in big-endian byte order.

    ``` pony
    fun ref u128_be(
      data: U128 val)
    : None val
    ```

    #### Parameters

    - data: [U128](builtin-u128) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u128_le()
  id: buffered-writer#u128_le
  summary: Write a U128 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### u128_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L218)

    Write a U128 to the buffer in little-endian byte order.

    ``` pony
    fun ref u128_le(
      data: U128 val)
    : None val
    ```

    #### Parameters

    - data: [U128](builtin-u128) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u16_be()
  id: buffered-writer#u16_be
  summary: Write a U16 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### u16_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L98)

    Write a U16 to the buffer in big-endian byte order.

    ``` pony
    fun ref u16_be(
      data: U16 val)
    : None val
    ```

    #### Parameters

    - data: [U16](builtin-u16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u16_le()
  id: buffered-writer#u16_le
  summary: Write a U16 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### u16_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L86)

    Write a U16 to the buffer in little-endian byte order.

    ``` pony
    fun ref u16_le(
      data: U16 val)
    : None val
    ```

    #### Parameters

    - data: [U16](builtin-u16) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u32_be()
  id: buffered-writer#u32_be
  summary: Write a U32 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### u32_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L134)

    Write a U32 to the buffer in big-endian byte order.

    ``` pony
    fun ref u32_be(
      data: U32 val)
    : None val
    ```

    #### Parameters

    - data: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u32_le()
  id: buffered-writer#u32_le
  summary: Write a U32 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### u32_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L122)

    Write a U32 to the buffer in little-endian byte order.

    ``` pony
    fun ref u32_le(
      data: U32 val)
    : None val
    ```

    #### Parameters

    - data: [U32](builtin-u32) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u64_be()
  id: buffered-writer#u64_be
  summary: Write a U64 to the buffer in big-endian byte order
  belongs_to: Writer
  description: |-
    ### u64_be

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L182)

    Write a U64 to the buffer in big-endian byte order.

    ``` pony
    fun ref u64_be(
      data: U64 val)
    : None val
    ```

    #### Parameters

    - data: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u64_le()
  id: buffered-writer#u64_le
  summary: Write a U64 to the buffer in little-endian byte order
  belongs_to: Writer
  description: |-
    ### u64_le

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L170)

    Write a U64 to the buffer in little-endian byte order.

    ``` pony
    fun ref u64_le(
      data: U64 val)
    : None val
    ```

    #### Parameters

    - data: [U64](builtin-u64) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.u8()
  id: buffered-writer#u8
  summary: Write a byte to the buffer
  belongs_to: Writer
  description: |-
    ### u8

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L78)

    Write a byte to the buffer.

    ``` pony
    fun ref u8(
      data: U8 val)
    : None val
    ```

    #### Parameters

    - data: [U8](builtin-u8) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.write()
  id: buffered-writer#write
  summary: Write a ByteSeq to the buffer
  belongs_to: Writer
  description: |-
    ### write

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L254)

    Write a ByteSeq to the buffer.

    ``` pony
    fun ref write(
      data: (String val | Array[U8 val] val))
    : None val
    ```

    #### Parameters

    - data: ([String](builtin-string) val \| [Array](builtin-array)\[[U8](builtin-u8) val\] val)

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: Writer.writev()
  id: buffered-writer#writev
  summary: Write ByteSeqs to the buffer
  belongs_to: Writer
  description: |-
    ### writev

    [\[Source\]](https://stdlib.ponylang.io/src/buffered/writer/#L277)

    Write ByteSeqs to the buffer.

    ``` pony
    fun ref writev(
      data: ByteSeqIter val)
    : None val
    ```

    #### Parameters

    - data: [ByteSeqIter](builtin-byteseqiter) val

    #### Returns

    - [None](builtin-none) val

    &nbsp;
- name: XorOshiro128Plus
  id: random-xoroshiro128plus
  summary: This is currently the default Rand implementation
  description: "# XorOshiro128Plus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L1)\n\nThis is an implementation of xoroshiro128+, as detailed at:\n\nhttp://xoroshiro.di.unimi.it\n\nThis is currently the default Rand implementation.\n\n``` pony\nclass ref XorOshiro128Plus is\n  Random ref\n```\n\n#### Implements\n\n- [Random](random-random) ref\n\n## Constructors\n\n### from_u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L13)\n\nUse seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.\n\n``` pony\nnew ref from_u64(\n  x: U64 val = 5489)\n: XorOshiro128Plus ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n\n#### Returns\n\n- [XorOshiro128Plus](index) ref^\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L22)\n\nCreate with the specified seed. Returned values are deterministic for a given seed.\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: XorOshiro128Plus ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [XorOshiro128Plus](index) ref^\n\n## Public Functions\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L31)\n\nA random integer in \\[0, 2^64)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### has_next\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### u8\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorOshiro128Plus](https://stdlib.ponylang.io/random-XorOshiro128Plus)"
- name: XorOshiro128Plus.create()
  id: random-xoroshiro128plus#create
  summary: Create with the specified seed
  belongs_to: XorOshiro128Plus
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L22)

    Create with the specified seed. Returned values are deterministic for a given seed.

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : XorOshiro128Plus ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [XorOshiro128Plus](index) ref^

    ## Public Functions
- name: XorOshiro128Plus.from_u64()
  id: random-xoroshiro128plus#from_u64
  summary: Use seed x to seed a SplitMix64 and use this to initialize the 128 bits of state
  belongs_to: XorOshiro128Plus
  description: |-
    ### from_u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L13)

    Use seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.

    ``` pony
    new ref from_u64(
      x: U64 val = 5489)
    : XorOshiro128Plus ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489

    #### Returns

    - [XorOshiro128Plus](index) ref^
- name: XorOshiro128Plus.has_next()
  id: random-xoroshiro128plus#has_next
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### has_next

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: XorOshiro128Plus.i128()
  id: random-xoroshiro128plus#i128
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### i128

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: XorOshiro128Plus.i16()
  id: random-xoroshiro128plus#i16
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### i16

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: XorOshiro128Plus.i32()
  id: random-xoroshiro128plus#i32
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### i32

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: XorOshiro128Plus.i64()
  id: random-xoroshiro128plus#i64
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### i64

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: XorOshiro128Plus.i8()
  id: random-xoroshiro128plus#i8
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### i8

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: XorOshiro128Plus.ilong()
  id: random-xoroshiro128plus#ilong
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### ilong

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: XorOshiro128Plus.int()
  id: random-xoroshiro128plus#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128Plus
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128Plus.int_fp_mult()
  id: random-xoroshiro128plus#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128Plus
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128Plus.int_unbiased()
  id: random-xoroshiro128plus#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128Plus
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128Plus.isize()
  id: random-xoroshiro128plus#isize
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### isize

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: XorOshiro128Plus.next()
  id: random-xoroshiro128plus#next
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L31)

    A random integer in \[0, 2^64)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorOshiro128Plus.real()
  id: random-xoroshiro128plus#real
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### real

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: XorOshiro128Plus.shuffle()
  id: random-xoroshiro128plus#shufflea-a
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: XorOshiro128Plus
  description: "### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorOshiro128Plus](https://stdlib.ponylang.io/random-XorOshiro128Plus)"
- name: XorOshiro128Plus.u128()
  id: random-xoroshiro128plus#u128
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### u128

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: XorOshiro128Plus.u16()
  id: random-xoroshiro128plus#u16
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### u16

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: XorOshiro128Plus.u32()
  id: random-xoroshiro128plus#u32
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### u32

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: XorOshiro128Plus.u64()
  id: random-xoroshiro128plus#u64
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### u64

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorOshiro128Plus.u8()
  id: random-xoroshiro128plus#u8
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### u8

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: XorOshiro128Plus.ulong()
  id: random-xoroshiro128plus#ulong
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### ulong

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: XorOshiro128Plus.usize()
  id: random-xoroshiro128plus#usize
  summary: null
  belongs_to: XorOshiro128Plus
  description: |-
    ### usize

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: XorOshiro128StarStar
  id: random-xoroshiro128starstar
  summary: This Rand implementation is slightly slower than XorOshiro128Plus but does not exhibit "mild dependencies in Hamming weights" (the lower four bits might fail linearity tests)
  description: "# XorOshiro128StarStar\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L44)\n\nThis is an implementation of xoroshiro128\\*\\*, as detailed at:\n\nhttp://xoshiro.di.unimi.it/\n\nThis Rand implementation is slightly slower than [XorOshiro128Plus](random-xoroshiro128plus) but does not exhibit \"mild dependencies in Hamming weights\" (the lower four bits might fail linearity tests).\n\n``` pony\nclass ref XorOshiro128StarStar is\n  Random ref\n```\n\n#### Implements\n\n- [Random](random-random) ref\n\n## Constructors\n\n### from_u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L57)\n\nUse seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.\n\n``` pony\nnew ref from_u64(\n  x: U64 val = 5489)\n: XorOshiro128StarStar ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n\n#### Returns\n\n- [XorOshiro128StarStar](index) ref^\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L66)\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: XorOshiro128StarStar ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [XorOshiro128StarStar](index) ref^\n\n## Public Functions\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L71)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### has_next\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### u8\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorOshiro128StarStar](https://stdlib.ponylang.io/random-XorOshiro128StarStar)"
- name: XorOshiro128StarStar.create()
  id: random-xoroshiro128starstar#create
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L66)

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : XorOshiro128StarStar ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [XorOshiro128StarStar](index) ref^

    ## Public Functions
- name: XorOshiro128StarStar.from_u64()
  id: random-xoroshiro128starstar#from_u64
  summary: Use seed x to seed a SplitMix64 and use this to initialize the 128 bits of state
  belongs_to: XorOshiro128StarStar
  description: |-
    ### from_u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L57)

    Use seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.

    ``` pony
    new ref from_u64(
      x: U64 val = 5489)
    : XorOshiro128StarStar ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489

    #### Returns

    - [XorOshiro128StarStar](index) ref^
- name: XorOshiro128StarStar.has_next()
  id: random-xoroshiro128starstar#has_next
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### has_next

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: XorOshiro128StarStar.i128()
  id: random-xoroshiro128starstar#i128
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### i128

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: XorOshiro128StarStar.i16()
  id: random-xoroshiro128starstar#i16
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### i16

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: XorOshiro128StarStar.i32()
  id: random-xoroshiro128starstar#i32
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### i32

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: XorOshiro128StarStar.i64()
  id: random-xoroshiro128starstar#i64
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### i64

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: XorOshiro128StarStar.i8()
  id: random-xoroshiro128starstar#i8
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### i8

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: XorOshiro128StarStar.ilong()
  id: random-xoroshiro128starstar#ilong
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### ilong

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: XorOshiro128StarStar.int()
  id: random-xoroshiro128starstar#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128StarStar
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128StarStar.int_fp_mult()
  id: random-xoroshiro128starstar#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128StarStar
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128StarStar.int_unbiased()
  id: random-xoroshiro128starstar#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorOshiro128StarStar
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorOshiro128StarStar.isize()
  id: random-xoroshiro128starstar#isize
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### isize

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: XorOshiro128StarStar.next()
  id: random-xoroshiro128starstar#next
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/xoroshiro/#L71)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorOshiro128StarStar.real()
  id: random-xoroshiro128starstar#real
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### real

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: XorOshiro128StarStar.shuffle()
  id: random-xoroshiro128starstar#shufflea-a
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: XorOshiro128StarStar
  description: "### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorOshiro128StarStar](https://stdlib.ponylang.io/random-XorOshiro128StarStar)"
- name: XorOshiro128StarStar.u128()
  id: random-xoroshiro128starstar#u128
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### u128

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: XorOshiro128StarStar.u16()
  id: random-xoroshiro128starstar#u16
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### u16

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: XorOshiro128StarStar.u32()
  id: random-xoroshiro128starstar#u32
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### u32

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: XorOshiro128StarStar.u64()
  id: random-xoroshiro128starstar#u64
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### u64

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorOshiro128StarStar.u8()
  id: random-xoroshiro128starstar#u8
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### u8

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: XorOshiro128StarStar.ulong()
  id: random-xoroshiro128starstar#ulong
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### ulong

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: XorOshiro128StarStar.usize()
  id: random-xoroshiro128starstar#usize
  summary: null
  belongs_to: XorOshiro128StarStar
  description: |-
    ### usize

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
- name: XorShift128Plus
  id: random-xorshift128plus
  summary: This should only be used for legacy applications that specifically require XorShift128Plus, otherwise use Rand
  description: "# XorShift128Plus\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xorshift/#L1)\n\nThis is an implementation of xorshift+, as detailed at:\n\nhttp://xoroshiro.di.unimi.it\n\nThis should only be used for legacy applications that specifically require XorShift128Plus, otherwise use Rand.\n\n``` pony\nclass ref XorShift128Plus is\n  Random ref\n```\n\n#### Implements\n\n- [Random](random-random) ref\n\n## Constructors\n\n### from_u64\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xorshift/#L13)\n\nUse seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.\n\n``` pony\nnew ref from_u64(\n  x: U64 val = 5489)\n: XorShift128Plus ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n\n#### Returns\n\n- [XorShift128Plus](index) ref^\n\n### create\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xorshift/#L22)\n\nCreate with the specified seed. Returned values are deterministic for a given seed.\n\n``` pony\nnew ref create(\n  x: U64 val = 5489,\n  y: U64 val = 0)\n: XorShift128Plus ref^\n```\n\n#### Parameters\n\n- x: [U64](builtin-u64) val = 5489\n- y: [U64](builtin-u64) val = 0\n\n#### Returns\n\n- [XorShift128Plus](index) ref^\n\n## Public Functions\n\n### next\n\n[\\[Source\\]](https://stdlib.ponylang.io/src/random/xorshift/#L31)\n\nA random integer in \\[0, 2^64)\n\n``` pony\nfun ref next()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### has_next\n\n``` pony\nfun tag has_next()\n: Bool val\n```\n\n#### Returns\n\n- [Bool](builtin-bool) val\n\n### u8\n\n``` pony\nfun ref u8()\n: U8 val\n```\n\n#### Returns\n\n- [U8](builtin-u8) val\n\n### u16\n\n``` pony\nfun ref u16()\n: U16 val\n```\n\n#### Returns\n\n- [U16](builtin-u16) val\n\n### u32\n\n``` pony\nfun ref u32()\n: U32 val\n```\n\n#### Returns\n\n- [U32](builtin-u32) val\n\n### u64\n\n``` pony\nfun ref u64()\n: U64 val\n```\n\n#### Returns\n\n- [U64](builtin-u64) val\n\n### u128\n\n``` pony\nfun ref u128()\n: U128 val\n```\n\n#### Returns\n\n- [U128](builtin-u128) val\n\n### ulong\n\n``` pony\nfun ref ulong()\n: ULong val\n```\n\n#### Returns\n\n- [ULong](builtin-ulong) val\n\n### usize\n\n``` pony\nfun ref usize()\n: USize val\n```\n\n#### Returns\n\n- [USize](builtin-usize) val\n\n### i8\n\n``` pony\nfun ref i8()\n: I8 val\n```\n\n#### Returns\n\n- [I8](builtin-i8) val\n\n### i16\n\n``` pony\nfun ref i16()\n: I16 val\n```\n\n#### Returns\n\n- [I16](builtin-i16) val\n\n### i32\n\n``` pony\nfun ref i32()\n: I32 val\n```\n\n#### Returns\n\n- [I32](builtin-i32) val\n\n### i64\n\n``` pony\nfun ref i64()\n: I64 val\n```\n\n#### Returns\n\n- [I64](builtin-i64) val\n\n### i128\n\n``` pony\nfun ref i128()\n: I128 val\n```\n\n#### Returns\n\n- [I128](builtin-i128) val\n\n### ilong\n\n``` pony\nfun ref ilong()\n: ILong val\n```\n\n#### Returns\n\n- [ILong](builtin-ilong) val\n\n### isize\n\n``` pony\nfun ref isize()\n: ISize val\n```\n\n#### Returns\n\n- [ISize](builtin-isize) val\n\n### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n### real\n\n``` pony\nfun ref real()\n: F64 val\n```\n\n#### Returns\n\n- [F64](builtin-f64) val\n\n### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorShift128Plus](https://stdlib.ponylang.io/random-XorShift128Plus)"
- name: XorShift128Plus.create()
  id: random-xorshift128plus#create
  summary: Create with the specified seed
  belongs_to: XorShift128Plus
  description: |-
    ### create

    [\[Source\]](https://stdlib.ponylang.io/src/random/xorshift/#L22)

    Create with the specified seed. Returned values are deterministic for a given seed.

    ``` pony
    new ref create(
      x: U64 val = 5489,
      y: U64 val = 0)
    : XorShift128Plus ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489
    - y: [U64](builtin-u64) val = 0

    #### Returns

    - [XorShift128Plus](index) ref^

    ## Public Functions
- name: XorShift128Plus.from_u64()
  id: random-xorshift128plus#from_u64
  summary: Use seed x to seed a SplitMix64 and use this to initialize the 128 bits of state
  belongs_to: XorShift128Plus
  description: |-
    ### from_u64

    [\[Source\]](https://stdlib.ponylang.io/src/random/xorshift/#L13)

    Use seed x to seed a [SplitMix64](random-splitmix64) and use this to initialize the 128 bits of state.

    ``` pony
    new ref from_u64(
      x: U64 val = 5489)
    : XorShift128Plus ref^
    ```

    #### Parameters

    - x: [U64](builtin-u64) val = 5489

    #### Returns

    - [XorShift128Plus](index) ref^
- name: XorShift128Plus.has_next()
  id: random-xorshift128plus#has_next
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### has_next

    ``` pony
    fun tag has_next()
    : Bool val
    ```

    #### Returns

    - [Bool](builtin-bool) val

    &nbsp;
- name: XorShift128Plus.i128()
  id: random-xorshift128plus#i128
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### i128

    ``` pony
    fun ref i128()
    : I128 val
    ```

    #### Returns

    - [I128](builtin-i128) val

    &nbsp;
- name: XorShift128Plus.i16()
  id: random-xorshift128plus#i16
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### i16

    ``` pony
    fun ref i16()
    : I16 val
    ```

    #### Returns

    - [I16](builtin-i16) val

    &nbsp;
- name: XorShift128Plus.i32()
  id: random-xorshift128plus#i32
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### i32

    ``` pony
    fun ref i32()
    : I32 val
    ```

    #### Returns

    - [I32](builtin-i32) val

    &nbsp;
- name: XorShift128Plus.i64()
  id: random-xorshift128plus#i64
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### i64

    ``` pony
    fun ref i64()
    : I64 val
    ```

    #### Returns

    - [I64](builtin-i64) val

    &nbsp;
- name: XorShift128Plus.i8()
  id: random-xorshift128plus#i8
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### i8

    ``` pony
    fun ref i8()
    : I8 val
    ```

    #### Returns

    - [I8](builtin-i8) val

    &nbsp;
- name: XorShift128Plus.ilong()
  id: random-xorshift128plus#ilong
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### ilong

    ``` pony
    fun ref ilong()
    : ILong val
    ```

    #### Returns

    - [ILong](builtin-ilong) val

    &nbsp;
- name: XorShift128Plus.int()
  id: random-xorshift128plus#intoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorShift128Plus
  description: "### int\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorShift128Plus.int_fp_mult()
  id: random-xorshift128plus#int_fp_multoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorShift128Plus
  description: "### int_fp_mult\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_fp_mult[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorShift128Plus.int_unbiased()
  id: random-xorshift128plus#int_unbiasedoptional-n-u8-val-u16-val-u32-val-u64-val-u128-val-ulong-val-usize-val-realn-val
  summary: null
  belongs_to: XorShift128Plus
  description: "### int_unbiased\\[optional N: (([U8](builtin-u8) val \\| [U16](builtin-u16) val \\| [U32](builtin-u32) val \\| [U64](builtin-u64) val \\| [U128](builtin-u128) val \\| [ULong](builtin-ulong) val \\| [USize](builtin-usize) val) & [Real](builtin-real)\\[N\\] val)\\]\n\n``` pony\nfun ref int_unbiased[optional N: ((U8 val | U16 val | U32 val | \n    U64 val | U128 val | ULong val | \n    USize val) & Real[N] val)](\n  n: N)\n: N\n```\n\n#### Parameters\n\n- n: N\n\n#### Returns\n\n- N\n\n&nbsp;"
- name: XorShift128Plus.isize()
  id: random-xorshift128plus#isize
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### isize

    ``` pony
    fun ref isize()
    : ISize val
    ```

    #### Returns

    - [ISize](builtin-isize) val

    &nbsp;
- name: XorShift128Plus.next()
  id: random-xorshift128plus#next
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### next

    [\[Source\]](https://stdlib.ponylang.io/src/random/xorshift/#L31)

    A random integer in \[0, 2^64)

    ``` pony
    fun ref next()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorShift128Plus.real()
  id: random-xorshift128plus#real
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### real

    ``` pony
    fun ref real()
    : F64 val
    ```

    #### Returns

    - [F64](builtin-f64) val

    &nbsp;
- name: XorShift128Plus.shuffle()
  id: random-xorshift128plus#shufflea-a
  summary: © 2016-2020, The Pony Developers © 2014-2015, Causality Ltd
  belongs_to: XorShift128Plus
  description: "### shuffle\\[A: A\\]\n\n``` pony\nfun ref shuffle[A: A](\n  array: Array[A] ref)\n: None val\n```\n\n#### Parameters\n\n- array: [Array](builtin-array)\\[A\\] ref\n\n#### Returns\n\n- [None](builtin-none) val\n\n© 2016-2020, The Pony Developers  \n© 2014-2015, Causality Ltd.  \nLicensed under the BSD 2-Clause License.  \n[https://stdlib.ponylang.io/random-XorShift128Plus](https://stdlib.ponylang.io/random-XorShift128Plus)"
- name: XorShift128Plus.u128()
  id: random-xorshift128plus#u128
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### u128

    ``` pony
    fun ref u128()
    : U128 val
    ```

    #### Returns

    - [U128](builtin-u128) val

    &nbsp;
- name: XorShift128Plus.u16()
  id: random-xorshift128plus#u16
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### u16

    ``` pony
    fun ref u16()
    : U16 val
    ```

    #### Returns

    - [U16](builtin-u16) val

    &nbsp;
- name: XorShift128Plus.u32()
  id: random-xorshift128plus#u32
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### u32

    ``` pony
    fun ref u32()
    : U32 val
    ```

    #### Returns

    - [U32](builtin-u32) val

    &nbsp;
- name: XorShift128Plus.u64()
  id: random-xorshift128plus#u64
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### u64

    ``` pony
    fun ref u64()
    : U64 val
    ```

    #### Returns

    - [U64](builtin-u64) val

    &nbsp;
- name: XorShift128Plus.u8()
  id: random-xorshift128plus#u8
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### u8

    ``` pony
    fun ref u8()
    : U8 val
    ```

    #### Returns

    - [U8](builtin-u8) val

    &nbsp;
- name: XorShift128Plus.ulong()
  id: random-xorshift128plus#ulong
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### ulong

    ``` pony
    fun ref ulong()
    : ULong val
    ```

    #### Returns

    - [ULong](builtin-ulong) val

    &nbsp;
- name: XorShift128Plus.usize()
  id: random-xorshift128plus#usize
  summary: null
  belongs_to: XorShift128Plus
  description: |-
    ### usize

    ``` pony
    fun ref usize()
    : USize val
    ```

    #### Returns

    - [USize](builtin-usize) val

    &nbsp;
